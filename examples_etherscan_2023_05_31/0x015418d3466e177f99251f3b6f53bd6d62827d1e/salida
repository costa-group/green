incomplete push instruction at 65
incomplete push instruction at 7446
Green Main
*************************************************************
Compilation time: 0.34457655902951956s
*************************************************************
File: Ownable
Build CFG: 0.008877181040588766s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 6
Memory read accesses ContractOwnable: 14
Memory write accesses ContractOwnable: 15
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 310
310Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
310-Stack size: 3 
310-Equals Mem:<< []>> 
310-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
310-Equals Sto:<< []>> 
310-NonEquals Sto: << []>> 
310-Useless: []
310-Constancy: []
310-ContextAliasing: []

.....
-----
Block: 396
396Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
396-Stack size: 3 
396-Equals Mem:<< []>> 
396-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
396-Equals Sto:<< []>> 
396-NonEquals Sto: << []>> 
396-Useless: []
396-Constancy: []
396-ContextAliasing: []

.....
-----
Block: 77
77Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
77-Stack size: 1 
77-Equals Mem:<< [<5,16>]>> 
77-NonEquals Mem: << [<15,5>, <15,16>]>> 
77-Equals Sto:<< []>> 
77-NonEquals Sto: << []>> 
77-Useless: []
77-Constancy: []
77-ContextAliasing: []

.....
-----
Block: 144
144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD']>> 
144-Stack size: 2 
144-Equals Mem:<< []>> 
144-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
144-Equals Sto:<< []>> 
144-NonEquals Sto: << []>> 
144-Useless: []
144-Constancy: []
144-ContextAliasing: []

.....
-----
Block: 211_0
211_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211_0-Stack size: 4 
211_0-Equals Mem:<< []>> 
211_0-NonEquals Mem: << []>> 
211_0-Equals Sto:<< []>> 
211_0-NonEquals Sto: << []>> 
211_0-Useless: []
211_0-Constancy: []
211_0-ContextAliasing: []

.....
-----
Block: 211
211Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211-Stack size: 3 
211-Equals Mem:<< []>> 
211-NonEquals Mem: << []>> 
211-Equals Sto:<< []>> 
211-NonEquals Sto: << []>> 
211-Useless: []
211-Constancy: []
211-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.0037306190351955593s

*************************************************************
File: SafeMath
Build CFG: 0.000658339005894959s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.00020172103540971875s

*************************************************************
File: synagogue
Build CFG: 1.124651133955922s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis synagogue
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract synagogue: 171
Memory read accesses Contractsynagogue: 529
Memory write accesses Contractsynagogue: 956
********************************** INIT
CONTEXT: Detected context equality 26 <slot14,0> 28 <slot14,0>
CONTEXT: Detected context equality 26 <slot14,0> 29 <slot14,0>
CONTEXT: Detected context equality 26 <slot14,0> 29 <slot14,0>
CONTEXT: Detected context equality 21 <slot16,0> 23 <slot16,0>
CONTEXT: Detected context equality 21 <slot16,0> 24 <slot16,0>
CONTEXT: Detected context equality 21 <slot16,0> 24 <slot16,0>
CONTEXT: Detected context equality 17 <slot18,0> 19 <slot18,0>
CONTEXT: Detected context equality 17 <slot18,0> 20 <slot18,0>
CONTEXT: Detected context equality 17 <slot18,0> 20 <slot18,0>
CONTEXT: Detected context equality 5 <slot20,0> 7 <slot20,0>
CONTEXT: Detected context equality 5 <slot20,0> 7 <slot20,0>
CONTEXT: Detected context equality 5 <slot20,0> 11 <slot20,0>
CONTEXT: Detected context equality 5 <slot20,0> 11 <slot20,0>
CONTEXT: Detected context equality 34 <slot33,0> 36 <slot33,0>
CONTEXT: Detected context equality 34 <slot33,0> 37 <slot33,0>
CONTEXT: Detected context equality 34 <slot33,0> 37 <slot33,0>
CONTEXT: Detected context equality 29 <slot35,0> 31 <slot35,0>
CONTEXT: Detected context equality 29 <slot35,0> 32 <slot35,0>
CONTEXT: Detected context equality 29 <slot35,0> 32 <slot35,0>
CONTEXT: Detected context equality 25 <slot37,0> 27 <slot37,0>
CONTEXT: Detected context equality 25 <slot37,0> 28 <slot37,0>
CONTEXT: Detected context equality 25 <slot37,0> 28 <slot37,0>
CONTEXT: Detected context equality 33 <slot41,0> 35 <slot41,0>
CONTEXT: Detected context equality 33 <slot41,0> 36 <slot41,0>
CONTEXT: Detected context equality 33 <slot41,0> 36 <slot41,0>
CONTEXT: Detected context equality 28 <slot43,0> 30 <slot43,0>
CONTEXT: Detected context equality 28 <slot43,0> 31 <slot43,0>
CONTEXT: Detected context equality 28 <slot43,0> 31 <slot43,0>
CONTEXT: Detected context equality 24 <slot45,0> 26 <slot45,0>
CONTEXT: Detected context equality 24 <slot45,0> 27 <slot45,0>
CONTEXT: Detected context equality 24 <slot45,0> 27 <slot45,0>
CONTEXT: Detected context equality 13 <slot47,0> 15 <slot47,0>
CONTEXT: Detected context equality 13 <slot47,0> 15 <slot47,0>
CONTEXT: Detected context equality 13 <slot47,0> 19 <slot47,0>
CONTEXT: Detected context equality 13 <slot47,0> 19 <slot47,0>
CONTEXT: Detected context equality 51 <slot52,0> 53 <slot52,0>
CONTEXT: Detected context equality 51 <slot52,0> 54 <slot52,0>
CONTEXT: Detected context equality 51 <slot52,0> 54 <slot52,0>
CONTEXT: Detected context equality 52 <slot54,0> 54 <slot54,0>
CONTEXT: Detected context equality 52 <slot54,0> 55 <slot54,0>
CONTEXT: Detected context equality 52 <slot54,0> 55 <slot54,0>
CONTEXT: Detected context equality 55 <slot56,0> 57 <slot56,0>
CONTEXT: Detected context equality 55 <slot56,0> 58 <slot56,0>
CONTEXT: Detected context equality 55 <slot56,0> 58 <slot56,0>
CONTEXT: Detected context equality 53 <slot58,0> 55 <slot58,0>
CONTEXT: Detected context equality 53 <slot58,0> 56 <slot58,0>
CONTEXT: Detected context equality 53 <slot58,0> 56 <slot58,0>
CONTEXT: Detected context equality 53 <slot60,0> 55 <slot60,0>
CONTEXT: Detected context equality 53 <slot60,0> 56 <slot60,0>
CONTEXT: Detected context equality 53 <slot60,0> 56 <slot60,0>
CONTEXT: Detected context equality 48 <slot62,0> 50 <slot62,0>
CONTEXT: Detected context equality 48 <slot62,0> 51 <slot62,0>
CONTEXT: Detected context equality 48 <slot62,0> 51 <slot62,0>
CONTEXT: Detected context equality 61 <slot64,0> 63 <slot64,0>
CONTEXT: Detected context equality 61 <slot64,0> 64 <slot64,0>
CONTEXT: Detected context equality 61 <slot64,0> 64 <slot64,0>
CONTEXT: Detected context equality 59 <slot66,0> 61 <slot66,0>
CONTEXT: Detected context equality 59 <slot66,0> 62 <slot66,0>
CONTEXT: Detected context equality 59 <slot66,0> 62 <slot66,0>
CONTEXT: Detected context equality 32 <slot68,0> 34 <slot68,0>
CONTEXT: Detected context equality 32 <slot68,0> 35 <slot68,0>
CONTEXT: Detected context equality 32 <slot68,0> 35 <slot68,0>
CONTEXT: Detected context equality 44 <slot71,0> 46 <slot71,0>
CONTEXT: Detected context equality 44 <slot71,0> 47 <slot71,0>
CONTEXT: Detected context equality 44 <slot71,0> 47 <slot71,0>
CONTEXT: Detected context equality 39 <slot73,0> 41 <slot73,0>
CONTEXT: Detected context equality 39 <slot73,0> 42 <slot73,0>
CONTEXT: Detected context equality 39 <slot73,0> 42 <slot73,0>
CONTEXT: Detected context equality 35 <slot76,0> 37 <slot76,0>
CONTEXT: Detected context equality 35 <slot76,0> 38 <slot76,0>
CONTEXT: Detected context equality 35 <slot76,0> 38 <slot76,0>
CONTEXT: Detected context equality 24 <slot97,0> 26 <slot97,0>
CONTEXT: Detected context equality 24 <slot97,0> 27 <slot97,0>
CONTEXT: Detected context equality 24 <slot97,0> 27 <slot97,0>
CONTEXT: Detected context equality 19 <slot99,0> 21 <slot99,0>
CONTEXT: Detected context equality 19 <slot99,0> 22 <slot99,0>
CONTEXT: Detected context equality 19 <slot99,0> 22 <slot99,0>
CONTEXT: Detected context equality 15 <slot101,0> 17 <slot101,0>
CONTEXT: Detected context equality 15 <slot101,0> 18 <slot101,0>
CONTEXT: Detected context equality 15 <slot101,0> 18 <slot101,0>
CONTEXT: Detected context equality 35 <slot115,0> 37 <slot115,0>
CONTEXT: Detected context equality 35 <slot115,0> 38 <slot115,0>
CONTEXT: Detected context equality 35 <slot115,0> 38 <slot115,0>
CONTEXT: Detected context equality 30 <slot117,0> 32 <slot117,0>
CONTEXT: Detected context equality 30 <slot117,0> 33 <slot117,0>
CONTEXT: Detected context equality 30 <slot117,0> 33 <slot117,0>
CONTEXT: Detected context equality 26 <slot119,0> 28 <slot119,0>
CONTEXT: Detected context equality 26 <slot119,0> 29 <slot119,0>
CONTEXT: Detected context equality 26 <slot119,0> 29 <slot119,0>
CONTEXT: Detected context equality 34 <slot123,0> 36 <slot123,0>
CONTEXT: Detected context equality 34 <slot123,0> 37 <slot123,0>
CONTEXT: Detected context equality 34 <slot123,0> 37 <slot123,0>
CONTEXT: Detected context equality 29 <slot125,0> 31 <slot125,0>
CONTEXT: Detected context equality 29 <slot125,0> 32 <slot125,0>
CONTEXT: Detected context equality 29 <slot125,0> 32 <slot125,0>
CONTEXT: Detected context equality 25 <slot127,0> 27 <slot127,0>
CONTEXT: Detected context equality 25 <slot127,0> 28 <slot127,0>
CONTEXT: Detected context equality 25 <slot127,0> 28 <slot127,0>
CONTEXT: Detected context equality 14 <slot129,0> 16 <slot129,0>
CONTEXT: Detected context equality 14 <slot129,0> 16 <slot129,0>
CONTEXT: Detected context equality 14 <slot129,0> 20 <slot129,0>
CONTEXT: Detected context equality 14 <slot129,0> 20 <slot129,0>
CONTEXT: Detected context equality 52 <slot134,0> 54 <slot134,0>
CONTEXT: Detected context equality 52 <slot134,0> 55 <slot134,0>
CONTEXT: Detected context equality 52 <slot134,0> 55 <slot134,0>
CONTEXT: Detected context equality 53 <slot136,0> 55 <slot136,0>
CONTEXT: Detected context equality 53 <slot136,0> 56 <slot136,0>
CONTEXT: Detected context equality 53 <slot136,0> 56 <slot136,0>
CONTEXT: Detected context equality 56 <slot138,0> 58 <slot138,0>
CONTEXT: Detected context equality 56 <slot138,0> 59 <slot138,0>
CONTEXT: Detected context equality 56 <slot138,0> 59 <slot138,0>
CONTEXT: Detected context equality 54 <slot140,0> 56 <slot140,0>
CONTEXT: Detected context equality 54 <slot140,0> 57 <slot140,0>
CONTEXT: Detected context equality 54 <slot140,0> 57 <slot140,0>
CONTEXT: Detected context equality 54 <slot142,0> 56 <slot142,0>
CONTEXT: Detected context equality 54 <slot142,0> 57 <slot142,0>
CONTEXT: Detected context equality 54 <slot142,0> 57 <slot142,0>
CONTEXT: Detected context equality 49 <slot144,0> 51 <slot144,0>
CONTEXT: Detected context equality 49 <slot144,0> 52 <slot144,0>
CONTEXT: Detected context equality 49 <slot144,0> 52 <slot144,0>
CONTEXT: Detected context equality 62 <slot146,0> 64 <slot146,0>
CONTEXT: Detected context equality 62 <slot146,0> 65 <slot146,0>
CONTEXT: Detected context equality 62 <slot146,0> 65 <slot146,0>
CONTEXT: Detected context equality 60 <slot148,0> 62 <slot148,0>
CONTEXT: Detected context equality 60 <slot148,0> 63 <slot148,0>
CONTEXT: Detected context equality 60 <slot148,0> 63 <slot148,0>
CONTEXT: Detected context equality 33 <slot150,0> 35 <slot150,0>
CONTEXT: Detected context equality 33 <slot150,0> 36 <slot150,0>
CONTEXT: Detected context equality 33 <slot150,0> 36 <slot150,0>
CONTEXT: Detected context equality 45 <slot153,0> 47 <slot153,0>
CONTEXT: Detected context equality 45 <slot153,0> 48 <slot153,0>
CONTEXT: Detected context equality 45 <slot153,0> 48 <slot153,0>
CONTEXT: Detected context equality 40 <slot155,0> 42 <slot155,0>
CONTEXT: Detected context equality 40 <slot155,0> 43 <slot155,0>
CONTEXT: Detected context equality 40 <slot155,0> 43 <slot155,0>
CONTEXT: Detected context equality 36 <slot158,0> 38 <slot158,0>
CONTEXT: Detected context equality 36 <slot158,0> 39 <slot158,0>
CONTEXT: Detected context equality 36 <slot158,0> 39 <slot158,0>
CONTEXT: Detected context equality 12 <slot161,0> 14 <slot161,0>
CONTEXT: Detected context equality 12 <slot161,0> 15 <slot161,0>
CONTEXT: Detected context equality 12 <slot161,0> 15 <slot161,0>
CONTEXT: Detected context equality 2 <slot176,0> 7 <slot176,0>
CONTEXT: Detected context equality 2 <slot176,0> 7 <slot176,0>
COMPACT CLONES: True
CONTRACT: synagogue
-----
Block: 2674
2674Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2674-Stack size: 3 
2674-Equals Mem:<< []>> 
2674-NonEquals Mem: << [<6,1>]>> 
2674-Equals Sto:<< []>> 
2674-NonEquals Sto: << []>> 
2674-Useless: []
2674-Constancy: []
2674-ContextAliasing: []

.....
-----
Block: 2712
2712Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2712-Stack size: 3 
2712-Equals Mem:<< []>> 
2712-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2712-Equals Sto:<< []>> 
2712-NonEquals Sto: << []>> 
2712-Useless: []
2712-Constancy: []
2712-ContextAliasing: []

.....
-----
Block: 2628
2628Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2628-Stack size: 3 
2628-Equals Mem:<< []>> 
2628-NonEquals Mem: << [<6,1>]>> 
2628-Equals Sto:<< []>> 
2628-NonEquals Sto: << []>> 
2628-Useless: []
2628-Constancy: []
2628-ContextAliasing: []

.....
-----
Block: 1387
1387Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1387-Stack size: 4 
1387-Equals Mem:<< [<12,27>, <17,31>]>> 
1387-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
1387-Equals Sto:<< []>> 
1387-NonEquals Sto: << []>> 
1387-Useless: []
1387-Constancy: []
1387-ContextAliasing: []

.....
-----
Block: 690
690Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
690-Stack size: 2 
690-Equals Mem:<< []>> 
690-NonEquals Mem: << [<5,2>]>> 
690-Equals Sto:<< []>> 
690-NonEquals Sto: << []>> 
690-Useless: []
690-Constancy: []
690-ContextAliasing: []

.....
-----
Block: 2471
2471Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2471-Stack size: 5 
2471-Equals Mem:<< []>> 
2471-NonEquals Mem: << [<6,1>]>> 
2471-Equals Sto:<< []>> 
2471-NonEquals Sto: << []>> 
2471-Useless: []
2471-Constancy: []
2471-ContextAliasing: []

.....
-----
Block: 7083_6
7083_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083_6-Stack size: 13 
7083_6-Equals Mem:<< []>> 
7083_6-NonEquals Mem: << [<5,8>]>> 
7083_6-Equals Sto:<< []>> 
7083_6-NonEquals Sto: << []>> 
7083_6-Useless: []
7083_6-Constancy: [(4, 0)]
7083_6-ContextAliasing: []

.....
-----
Block: 2547
2547Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x0a24', 'DUP2', 'PUSH2 0x1bd3', 'JUMP']>> 
2547-Stack size: 10 
2547-Equals Mem:<< []>> 
2547-NonEquals Mem: << [<8,15>]>> 
2547-Equals Sto:<< [<21,33>]>> 
2547-NonEquals Sto: << []>> 
2547-Useless: []
2547-Constancy: [(1, 0)]
2547-ContextAliasing: []

.....
-----
Block: 7103_33
7103_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_33-Stack size: 11 
7103_33-Equals Mem:<< []>> 
7103_33-NonEquals Mem: << [<5,8>]>> 
7103_33-Equals Sto:<< []>> 
7103_33-NonEquals Sto: << []>> 
7103_33-Useless: []
7103_33-Constancy: [(1, 0)]
7103_33-ContextAliasing: []

.....
-----
Block: 1989_4
1989_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x067e', 'SWAP1', 'PUSH2 0x1209', 'JUMP']>> 
1989_4-Stack size: 5 
1989_4-Equals Mem:<< []>> 
1989_4-NonEquals Mem: << [<11,14>]>> 
1989_4-Equals Sto:<< []>> 
1989_4-NonEquals Sto: << []>> 
1989_4-Useless: []
1989_4-Constancy: [(2, 0)]
1989_4-ContextAliasing: []

.....
-----
Block: 4629_4
4629_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
4629_4-Stack size: 9 
4629_4-Equals Mem:<< []>> 
4629_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4629_4-Equals Sto:<< []>> 
4629_4-NonEquals Sto: << []>> 
4629_4-Useless: []
4629_4-Constancy: [(6, 0), (3, 0), (0, 0)]
4629_4-ContextAliasing: []

.....
-----
Block: 5194_26
5194_26Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_26-Stack size: 22 
5194_26-Equals Mem:<< [<11,6>]>> 
5194_26-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_26-Equals Sto:<< []>> 
5194_26-NonEquals Sto: << []>> 
5194_26-Useless: []
5194_26-Constancy: [(19, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_26-ContextAliasing: []

.....
-----
Block: 5616_28
5616_28Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_28-Stack size: 29 
5616_28-Equals Mem:<< []>> 
5616_28-NonEquals Mem: << [<6,1>]>> 
5616_28-Equals Sto:<< []>> 
5616_28-NonEquals Sto: << []>> 
5616_28-Useless: []
5616_28-Constancy: [(26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_28-ContextAliasing: [(2, 28)]

.....
-----
Block: 6534_42
6534_42Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_42-Stack size: 31 
6534_42-Equals Mem:<< []>> 
6534_42-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_42-Equals Sto:<< []>> 
6534_42-NonEquals Sto: << []>> 
6534_42-Useless: []
6534_42-Constancy: [(28, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_42-ContextAliasing: [(4, 29)]

.....
-----
Block: 6558_42
6558_42Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_42-Stack size: 35 
6558_42-Equals Mem:<< []>> 
6558_42-NonEquals Mem: << [<11,5>]>> 
6558_42-Equals Sto:<< []>> 
6558_42-NonEquals Sto: << []>> 
6558_42-Useless: []
6558_42-Constancy: [(32, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_42-ContextAliasing: [(8, 29)]

.....
-----
Block: 7330_40
7330_40Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_40-Stack size: 33 
7330_40-Equals Mem:<< []>> 
7330_40-NonEquals Mem: << [<4,7>]>> 
7330_40-Equals Sto:<< []>> 
7330_40-NonEquals Sto: << []>> 
7330_40-Useless: []
7330_40-Constancy: [(30, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_40-ContextAliasing: []

.....
-----
Block: 5194_27
5194_27Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_27-Stack size: 17 
5194_27-Equals Mem:<< [<11,6>]>> 
5194_27-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_27-Equals Sto:<< []>> 
5194_27-NonEquals Sto: << []>> 
5194_27-Useless: []
5194_27-Constancy: [(14, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
5194_27-ContextAliasing: []

.....
-----
Block: 5616_27
5616_27Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_27-Stack size: 24 
5616_27-Equals Mem:<< []>> 
5616_27-NonEquals Mem: << [<6,1>]>> 
5616_27-Equals Sto:<< []>> 
5616_27-NonEquals Sto: << []>> 
5616_27-Useless: []
5616_27-Constancy: [(21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_27-ContextAliasing: [(2, 23)]

.....
-----
Block: 6534_41
6534_41Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_41-Stack size: 26 
6534_41-Equals Mem:<< []>> 
6534_41-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_41-Equals Sto:<< []>> 
6534_41-NonEquals Sto: << []>> 
6534_41-Useless: []
6534_41-Constancy: [(23, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_41-ContextAliasing: [(4, 24)]

.....
-----
Block: 6558_41
6558_41Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_41-Stack size: 30 
6558_41-Equals Mem:<< []>> 
6558_41-NonEquals Mem: << [<11,5>]>> 
6558_41-Equals Sto:<< []>> 
6558_41-NonEquals Sto: << []>> 
6558_41-Useless: []
6558_41-Constancy: [(27, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_41-ContextAliasing: [(8, 24)]

.....
-----
Block: 7330_39
7330_39Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_39-Stack size: 28 
7330_39-Equals Mem:<< []>> 
7330_39-NonEquals Mem: << [<4,7>]>> 
7330_39-Equals Sto:<< []>> 
7330_39-NonEquals Sto: << []>> 
7330_39-Useless: []
7330_39-Constancy: [(25, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_39-ContextAliasing: []

.....
-----
Block: 5194_28
5194_28Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_28-Stack size: 13 
5194_28-Equals Mem:<< [<11,6>]>> 
5194_28-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_28-Equals Sto:<< []>> 
5194_28-NonEquals Sto: << []>> 
5194_28-Useless: []
5194_28-Constancy: [(10, 0), (7, 0), (4, 0)]
5194_28-ContextAliasing: []

.....
-----
Block: 5616_26
5616_26Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_26-Stack size: 20 
5616_26-Equals Mem:<< []>> 
5616_26-NonEquals Mem: << [<6,1>]>> 
5616_26-Equals Sto:<< []>> 
5616_26-NonEquals Sto: << []>> 
5616_26-Useless: []
5616_26-Constancy: [(17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
5616_26-ContextAliasing: [(2, 19)]

.....
-----
Block: 6534_40
6534_40Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_40-Stack size: 22 
6534_40-Equals Mem:<< []>> 
6534_40-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_40-Equals Sto:<< []>> 
6534_40-NonEquals Sto: << []>> 
6534_40-Useless: []
6534_40-Constancy: [(19, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
6534_40-ContextAliasing: [(4, 20)]

.....
-----
Block: 6558_40
6558_40Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_40-Stack size: 26 
6558_40-Equals Mem:<< []>> 
6558_40-NonEquals Mem: << [<11,5>]>> 
6558_40-Equals Sto:<< []>> 
6558_40-NonEquals Sto: << []>> 
6558_40-Useless: []
6558_40-Constancy: [(23, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_40-ContextAliasing: [(8, 20)]

.....
-----
Block: 7330_38
7330_38Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_38-Stack size: 24 
7330_38-Equals Mem:<< []>> 
7330_38-NonEquals Mem: << [<4,7>]>> 
7330_38-Equals Sto:<< []>> 
7330_38-NonEquals Sto: << []>> 
7330_38-Useless: []
7330_38-Constancy: [(21, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_38-ContextAliasing: []

.....
-----
Block: 7083_5
7083_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083_5-Stack size: 10 
7083_5-Equals Mem:<< []>> 
7083_5-NonEquals Mem: << [<5,8>]>> 
7083_5-Equals Sto:<< []>> 
7083_5-NonEquals Sto: << []>> 
7083_5-Useless: []
7083_5-Constancy: [(1, 0)]
7083_5-ContextAliasing: [(4, 7)]

.....
-----
Block: 4904_1
4904_1Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x134c', 'SWAP2', 'SWAP1', 'PUSH2 0x1c11', 'JUMP']>> 
4904_1-Stack size: 10 
4904_1-Equals Mem:<< [<18,6>]>> 
4904_1-NonEquals Mem: << []>> 
4904_1-Equals Sto:<< []>> 
4904_1-NonEquals Sto: << []>> 
4904_1-Useless: []
4904_1-Constancy: []
4904_1-ContextAliasing: []

.....
-----
Block: 7083_4
7083_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083_4-Stack size: 10 
7083_4-Equals Mem:<< []>> 
7083_4-NonEquals Mem: << [<5,8>]>> 
7083_4-Equals Sto:<< []>> 
7083_4-NonEquals Sto: << []>> 
7083_4-Useless: []
7083_4-Constancy: []
7083_4-ContextAliasing: [(4, 7)]

.....
-----
Block: 2902_3
2902_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2902_3-Stack size: 10 
2902_3-Equals Mem:<< []>> 
2902_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2902_3-Equals Sto:<< []>> 
2902_3-NonEquals Sto: << []>> 
2902_3-Useless: []
2902_3-Constancy: []
2902_3-ContextAliasing: []

.....
-----
Block: 3000_3
3000_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3000_3-Stack size: 10 
3000_3-Equals Mem:<< []>> 
3000_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3000_3-Equals Sto:<< []>> 
3000_3-NonEquals Sto: << []>> 
3000_3-Useless: []
3000_3-Constancy: []
3000_3-ContextAliasing: []

.....
-----
Block: 4997_1
4997_1Instr:<<['JUMPDEST', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x13bd', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1c2c', 'JUMP']>> 
4997_1-Stack size: 6 
4997_1-Equals Mem:<< []>> 
4997_1-NonEquals Mem: << [<9,4>]>> 
4997_1-Equals Sto:<< []>> 
4997_1-NonEquals Sto: << []>> 
4997_1-Useless: []
4997_1-Constancy: []
4997_1-ContextAliasing: []

.....
-----
Block: 7212_1
7212_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
7212_1-Stack size: 15 
7212_1-Equals Mem:<< []>> 
7212_1-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
7212_1-Equals Sto:<< []>> 
7212_1-NonEquals Sto: << []>> 
7212_1-Useless: []
7212_1-Constancy: [(4, 0)]
7212_1-ContextAliasing: [(9, 11)]

.....
-----
Block: 7262_1
7262_1Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1c55', 'JUMP']>> 
7262_1-Stack size: 21 
7262_1-Equals Mem:<< []>> 
7262_1-NonEquals Mem: << [<9,1>]>> 
7262_1-Equals Sto:<< []>> 
7262_1-NonEquals Sto: << []>> 
7262_1-Useless: []
7262_1-Constancy: [(10, 0), (5, 0), (3, 32)]
7262_1-ContextAliasing: [(15, 11)]

.....
-----
Block: 1290
1290Instr:<<['JUMPDEST', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1290-Stack size: 3 
1290-Equals Mem:<< []>> 
1290-NonEquals Mem: << [<3,7>]>> 
1290-Equals Sto:<< []>> 
1290-NonEquals Sto: << []>> 
1290-Useless: []
1290-Constancy: []
1290-ContextAliasing: []

.....
-----
Block: 597_0
597_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
597_0-Stack size: 3 
597_0-Equals Mem:<< []>> 
597_0-NonEquals Mem: << [<7,2>]>> 
597_0-Equals Sto:<< []>> 
597_0-NonEquals Sto: << []>> 
597_0-Useless: []
597_0-Constancy: []
597_0-ContextAliasing: []

.....
-----
Block: 3193_0
3193_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3193_0-Stack size: 9 
3193_0-Equals Mem:<< []>> 
3193_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3193_0-Equals Sto:<< []>> 
3193_0-NonEquals Sto: << []>> 
3193_0-Useless: []
3193_0-Constancy: [(4, 0)]
3193_0-ContextAliasing: []

.....
-----
Block: 3293_0
3293_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3293_0-Stack size: 9 
3293_0-Equals Mem:<< []>> 
3293_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3293_0-Equals Sto:<< []>> 
3293_0-NonEquals Sto: << []>> 
3293_0-Useless: []
3293_0-Constancy: [(4, 0)]
3293_0-ContextAliasing: []

.....
-----
Block: 3384_0
3384_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3384_0-Stack size: 9 
3384_0-Equals Mem:<< []>> 
3384_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3384_0-Equals Sto:<< []>> 
3384_0-NonEquals Sto: << []>> 
3384_0-Useless: []
3384_0-Constancy: [(4, 0)]
3384_0-ContextAliasing: []

.....
-----
Block: 3558_0
3558_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3558_0-Stack size: 9 
3558_0-Equals Mem:<< []>> 
3558_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
3558_0-Equals Sto:<< []>> 
3558_0-NonEquals Sto: << []>> 
3558_0-Useless: []
3558_0-Constancy: [(4, 0)]
3558_0-ContextAliasing: []

.....
-----
Block: 3678_0
3678_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3678_0-Stack size: 9 
3678_0-Equals Mem:<< []>> 
3678_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3678_0-Equals Sto:<< []>> 
3678_0-NonEquals Sto: << []>> 
3678_0-Useless: []
3678_0-Constancy: [(4, 0)]
3678_0-ContextAliasing: []

.....
-----
Block: 3749_0
3749_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0ee5', 'JUMPI']>> 
3749_0-Stack size: 9 
3749_0-Equals Mem:<< []>> 
3749_0-NonEquals Mem: << [<11,14>]>> 
3749_0-Equals Sto:<< []>> 
3749_0-NonEquals Sto: << []>> 
3749_0-Useless: []
3749_0-Constancy: [(4, 0)]
3749_0-ContextAliasing: []

.....
-----
Block: 3784_0
3784_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3784_0-Stack size: 10 
3784_0-Equals Mem:<< []>> 
3784_0-NonEquals Mem: << [<11,14>]>> 
3784_0-Equals Sto:<< []>> 
3784_0-NonEquals Sto: << []>> 
3784_0-Useless: []
3784_0-Constancy: [(5, 0)]
3784_0-ContextAliasing: []

.....
-----
Block: 3818_0
3818_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x656421', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3818_0-Stack size: 9 
3818_0-Equals Mem:<< []>> 
3818_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3818_0-Equals Sto:<< []>> 
3818_0-NonEquals Sto: << []>> 
3818_0-Useless: []
3818_0-Constancy: [(4, 0)]
3818_0-ContextAliasing: []

.....
-----
Block: 1989_3
1989_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x067e', 'SWAP1', 'PUSH2 0x1209', 'JUMP']>> 
1989_3-Stack size: 13 
1989_3-Equals Mem:<< []>> 
1989_3-NonEquals Mem: << [<11,14>]>> 
1989_3-Equals Sto:<< []>> 
1989_3-NonEquals Sto: << []>> 
1989_3-Useless: []
1989_3-Constancy: [(8, 0)]
1989_3-ContextAliasing: []

.....
-----
Block: 4629_3
4629_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
4629_3-Stack size: 17 
4629_3-Equals Mem:<< []>> 
4629_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4629_3-Equals Sto:<< []>> 
4629_3-NonEquals Sto: << []>> 
4629_3-Useless: []
4629_3-Constancy: [(12, 0), (3, 0), (0, 0)]
4629_3-ContextAliasing: []

.....
-----
Block: 5194_23
5194_23Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_23-Stack size: 30 
5194_23-Equals Mem:<< [<11,6>]>> 
5194_23-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_23-Equals Sto:<< []>> 
5194_23-NonEquals Sto: << []>> 
5194_23-Useless: []
5194_23-Constancy: [(25, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_23-ContextAliasing: []

.....
-----
Block: 5616_25
5616_25Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_25-Stack size: 37 
5616_25-Equals Mem:<< []>> 
5616_25-NonEquals Mem: << [<6,1>]>> 
5616_25-Equals Sto:<< []>> 
5616_25-NonEquals Sto: << []>> 
5616_25-Useless: []
5616_25-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_25-ContextAliasing: [(2, 36)]

.....
-----
Block: 6534_39
6534_39Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_39-Stack size: 39 
6534_39-Equals Mem:<< []>> 
6534_39-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_39-Equals Sto:<< []>> 
6534_39-NonEquals Sto: << []>> 
6534_39-Useless: []
6534_39-Constancy: [(34, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_39-ContextAliasing: [(4, 37)]

.....
-----
Block: 6558_39
6558_39Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_39-Stack size: 43 
6558_39-Equals Mem:<< []>> 
6558_39-NonEquals Mem: << [<11,5>]>> 
6558_39-Equals Sto:<< []>> 
6558_39-NonEquals Sto: << []>> 
6558_39-Useless: []
6558_39-Constancy: [(38, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_39-ContextAliasing: [(8, 37)]

.....
-----
Block: 7330_37
7330_37Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_37-Stack size: 41 
7330_37-Equals Mem:<< []>> 
7330_37-NonEquals Mem: << [<4,7>]>> 
7330_37-Equals Sto:<< []>> 
7330_37-NonEquals Sto: << []>> 
7330_37-Useless: []
7330_37-Constancy: [(36, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_37-ContextAliasing: []

.....
-----
Block: 5194_24
5194_24Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_24-Stack size: 25 
5194_24-Equals Mem:<< [<11,6>]>> 
5194_24-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_24-Equals Sto:<< []>> 
5194_24-NonEquals Sto: << []>> 
5194_24-Useless: []
5194_24-Constancy: [(20, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
5194_24-ContextAliasing: []

.....
-----
Block: 5616_24
5616_24Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_24-Stack size: 32 
5616_24-Equals Mem:<< []>> 
5616_24-NonEquals Mem: << [<6,1>]>> 
5616_24-Equals Sto:<< []>> 
5616_24-NonEquals Sto: << []>> 
5616_24-Useless: []
5616_24-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_24-ContextAliasing: [(2, 31)]

.....
-----
Block: 6534_38
6534_38Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_38-Stack size: 34 
6534_38-Equals Mem:<< []>> 
6534_38-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_38-Equals Sto:<< []>> 
6534_38-NonEquals Sto: << []>> 
6534_38-Useless: []
6534_38-Constancy: [(29, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_38-ContextAliasing: [(4, 32)]

.....
-----
Block: 6558_38
6558_38Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_38-Stack size: 38 
6558_38-Equals Mem:<< []>> 
6558_38-NonEquals Mem: << [<11,5>]>> 
6558_38-Equals Sto:<< []>> 
6558_38-NonEquals Sto: << []>> 
6558_38-Useless: []
6558_38-Constancy: [(33, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_38-ContextAliasing: [(8, 32)]

.....
-----
Block: 7330_36
7330_36Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_36-Stack size: 36 
7330_36-Equals Mem:<< []>> 
7330_36-NonEquals Mem: << [<4,7>]>> 
7330_36-Equals Sto:<< []>> 
7330_36-NonEquals Sto: << []>> 
7330_36-Useless: []
7330_36-Constancy: [(31, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_36-ContextAliasing: []

.....
-----
Block: 5194_25
5194_25Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_25-Stack size: 21 
5194_25-Equals Mem:<< [<11,6>]>> 
5194_25-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_25-Equals Sto:<< []>> 
5194_25-NonEquals Sto: << []>> 
5194_25-Useless: []
5194_25-Constancy: [(16, 0), (7, 0), (4, 0)]
5194_25-ContextAliasing: []

.....
-----
Block: 5616_23
5616_23Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_23-Stack size: 28 
5616_23-Equals Mem:<< []>> 
5616_23-NonEquals Mem: << [<6,1>]>> 
5616_23-Equals Sto:<< []>> 
5616_23-NonEquals Sto: << []>> 
5616_23-Useless: []
5616_23-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
5616_23-ContextAliasing: [(2, 27)]

.....
-----
Block: 6534_37
6534_37Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_37-Stack size: 30 
6534_37-Equals Mem:<< []>> 
6534_37-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_37-Equals Sto:<< []>> 
6534_37-NonEquals Sto: << []>> 
6534_37-Useless: []
6534_37-Constancy: [(25, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
6534_37-ContextAliasing: [(4, 28)]

.....
-----
Block: 6558_37
6558_37Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_37-Stack size: 34 
6558_37-Equals Mem:<< []>> 
6558_37-NonEquals Mem: << [<11,5>]>> 
6558_37-Equals Sto:<< []>> 
6558_37-NonEquals Sto: << []>> 
6558_37-Useless: []
6558_37-Constancy: [(29, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_37-ContextAliasing: [(8, 28)]

.....
-----
Block: 7330_35
7330_35Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_35-Stack size: 32 
7330_35-Equals Mem:<< []>> 
7330_35-NonEquals Mem: << [<4,7>]>> 
7330_35-Equals Sto:<< []>> 
7330_35-NonEquals Sto: << []>> 
7330_35-Useless: []
7330_35-Constancy: [(27, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_35-ContextAliasing: []

.....
-----
Block: 7103_32
7103_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_32-Stack size: 15 
7103_32-Equals Mem:<< []>> 
7103_32-NonEquals Mem: << [<5,8>]>> 
7103_32-Equals Sto:<< []>> 
7103_32-NonEquals Sto: << []>> 
7103_32-Useless: []
7103_32-Constancy: [(10, 0)]
7103_32-ContextAliasing: []

.....
-----
Block: 3951_0
3951_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x7a6521', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3951_0-Stack size: 9 
3951_0-Equals Mem:<< []>> 
3951_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3951_0-Equals Sto:<< []>> 
3951_0-NonEquals Sto: << []>> 
3951_0-Useless: []
3951_0-Constancy: [(4, 0)]
3951_0-ContextAliasing: []

.....
-----
Block: 1989_2
1989_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x067e', 'SWAP1', 'PUSH2 0x1209', 'JUMP']>> 
1989_2-Stack size: 12 
1989_2-Equals Mem:<< []>> 
1989_2-NonEquals Mem: << [<11,14>]>> 
1989_2-Equals Sto:<< []>> 
1989_2-NonEquals Sto: << []>> 
1989_2-Useless: []
1989_2-Constancy: [(7, 0), (2, 0)]
1989_2-ContextAliasing: []

.....
-----
Block: 4629_2
4629_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
4629_2-Stack size: 16 
4629_2-Equals Mem:<< []>> 
4629_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4629_2-Equals Sto:<< []>> 
4629_2-NonEquals Sto: << []>> 
4629_2-Useless: []
4629_2-Constancy: [(11, 0), (6, 0), (3, 0), (0, 0)]
4629_2-ContextAliasing: []

.....
-----
Block: 5194_20
5194_20Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_20-Stack size: 29 
5194_20-Equals Mem:<< [<11,6>]>> 
5194_20-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_20-Equals Sto:<< []>> 
5194_20-NonEquals Sto: << []>> 
5194_20-Useless: []
5194_20-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_20-ContextAliasing: []

.....
-----
Block: 5616_22
5616_22Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_22-Stack size: 36 
5616_22-Equals Mem:<< []>> 
5616_22-NonEquals Mem: << [<6,1>]>> 
5616_22-Equals Sto:<< []>> 
5616_22-NonEquals Sto: << []>> 
5616_22-Useless: []
5616_22-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_22-ContextAliasing: [(2, 35)]

.....
-----
Block: 6534_36
6534_36Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_36-Stack size: 38 
6534_36-Equals Mem:<< []>> 
6534_36-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_36-Equals Sto:<< []>> 
6534_36-NonEquals Sto: << []>> 
6534_36-Useless: []
6534_36-Constancy: [(33, 0), (28, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_36-ContextAliasing: [(4, 36)]

.....
-----
Block: 6558_36
6558_36Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_36-Stack size: 42 
6558_36-Equals Mem:<< []>> 
6558_36-NonEquals Mem: << [<11,5>]>> 
6558_36-Equals Sto:<< []>> 
6558_36-NonEquals Sto: << []>> 
6558_36-Useless: []
6558_36-Constancy: [(37, 0), (32, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_36-ContextAliasing: [(8, 36)]

.....
-----
Block: 7330_34
7330_34Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_34-Stack size: 40 
7330_34-Equals Mem:<< []>> 
7330_34-NonEquals Mem: << [<4,7>]>> 
7330_34-Equals Sto:<< []>> 
7330_34-NonEquals Sto: << []>> 
7330_34-Useless: []
7330_34-Constancy: [(35, 0), (30, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_34-ContextAliasing: []

.....
-----
Block: 5194_21
5194_21Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_21-Stack size: 24 
5194_21-Equals Mem:<< [<11,6>]>> 
5194_21-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_21-Equals Sto:<< []>> 
5194_21-NonEquals Sto: << []>> 
5194_21-Useless: []
5194_21-Constancy: [(19, 0), (14, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
5194_21-ContextAliasing: []

.....
-----
Block: 5616_21
5616_21Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_21-Stack size: 31 
5616_21-Equals Mem:<< []>> 
5616_21-NonEquals Mem: << [<6,1>]>> 
5616_21-Equals Sto:<< []>> 
5616_21-NonEquals Sto: << []>> 
5616_21-Useless: []
5616_21-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_21-ContextAliasing: [(2, 30)]

.....
-----
Block: 6534_35
6534_35Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_35-Stack size: 33 
6534_35-Equals Mem:<< []>> 
6534_35-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_35-Equals Sto:<< []>> 
6534_35-NonEquals Sto: << []>> 
6534_35-Useless: []
6534_35-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_35-ContextAliasing: [(4, 31)]

.....
-----
Block: 6558_35
6558_35Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_35-Stack size: 37 
6558_35-Equals Mem:<< []>> 
6558_35-NonEquals Mem: << [<11,5>]>> 
6558_35-Equals Sto:<< []>> 
6558_35-NonEquals Sto: << []>> 
6558_35-Useless: []
6558_35-Constancy: [(32, 0), (27, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_35-ContextAliasing: [(8, 31)]

.....
-----
Block: 7330_33
7330_33Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_33-Stack size: 35 
7330_33-Equals Mem:<< []>> 
7330_33-NonEquals Mem: << [<4,7>]>> 
7330_33-Equals Sto:<< []>> 
7330_33-NonEquals Sto: << []>> 
7330_33-Useless: []
7330_33-Constancy: [(30, 0), (25, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_33-ContextAliasing: []

.....
-----
Block: 5194_22
5194_22Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_22-Stack size: 20 
5194_22-Equals Mem:<< [<11,6>]>> 
5194_22-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_22-Equals Sto:<< []>> 
5194_22-NonEquals Sto: << []>> 
5194_22-Useless: []
5194_22-Constancy: [(15, 0), (10, 0), (7, 0), (4, 0)]
5194_22-ContextAliasing: []

.....
-----
Block: 5616_20
5616_20Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_20-Stack size: 27 
5616_20-Equals Mem:<< []>> 
5616_20-NonEquals Mem: << [<6,1>]>> 
5616_20-Equals Sto:<< []>> 
5616_20-NonEquals Sto: << []>> 
5616_20-Useless: []
5616_20-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
5616_20-ContextAliasing: [(2, 26)]

.....
-----
Block: 6534_34
6534_34Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_34-Stack size: 29 
6534_34-Equals Mem:<< []>> 
6534_34-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_34-Equals Sto:<< []>> 
6534_34-NonEquals Sto: << []>> 
6534_34-Useless: []
6534_34-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
6534_34-ContextAliasing: [(4, 27)]

.....
-----
Block: 6558_34
6558_34Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_34-Stack size: 33 
6558_34-Equals Mem:<< []>> 
6558_34-NonEquals Mem: << [<11,5>]>> 
6558_34-Equals Sto:<< []>> 
6558_34-NonEquals Sto: << []>> 
6558_34-Useless: []
6558_34-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_34-ContextAliasing: [(8, 27)]

.....
-----
Block: 7330_32
7330_32Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_32-Stack size: 31 
7330_32-Equals Mem:<< []>> 
7330_32-NonEquals Mem: << [<4,7>]>> 
7330_32-Equals Sto:<< []>> 
7330_32-NonEquals Sto: << []>> 
7330_32-Useless: []
7330_32-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_32-ContextAliasing: []

.....
-----
Block: 4146_0
4146_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
4146_0-Stack size: 12 
4146_0-Equals Mem:<< []>> 
4146_0-NonEquals Mem: << [<11,14>]>> 
4146_0-Equals Sto:<< []>> 
4146_0-NonEquals Sto: << []>> 
4146_0-Useless: []
4146_0-Constancy: [(7, 0)]
4146_0-ContextAliasing: []

.....
-----
Block: 4182_0
4182_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
4182_0-Stack size: 12 
4182_0-Equals Mem:<< []>> 
4182_0-NonEquals Mem: << [<11,14>]>> 
4182_0-Equals Sto:<< []>> 
4182_0-NonEquals Sto: << []>> 
4182_0-Useless: []
4182_0-Constancy: [(7, 0)]
4182_0-ContextAliasing: []

.....
-----
Block: 7083_3
7083_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083_3-Stack size: 18 
7083_3-Equals Mem:<< []>> 
7083_3-NonEquals Mem: << [<5,8>]>> 
7083_3-Equals Sto:<< []>> 
7083_3-NonEquals Sto: << []>> 
7083_3-Useless: []
7083_3-Constancy: [(13, 0), (1, 0)]
7083_3-ContextAliasing: [(4, 15)]

.....
-----
Block: 4904_0
4904_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x134c', 'SWAP2', 'SWAP1', 'PUSH2 0x1c11', 'JUMP']>> 
4904_0-Stack size: 18 
4904_0-Equals Mem:<< [<18,6>]>> 
4904_0-NonEquals Mem: << []>> 
4904_0-Equals Sto:<< []>> 
4904_0-NonEquals Sto: << []>> 
4904_0-Useless: []
4904_0-Constancy: [(13, 0)]
4904_0-ContextAliasing: []

.....
-----
Block: 7083_2
7083_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083_2-Stack size: 18 
7083_2-Equals Mem:<< []>> 
7083_2-NonEquals Mem: << [<5,8>]>> 
7083_2-Equals Sto:<< []>> 
7083_2-NonEquals Sto: << []>> 
7083_2-Useless: []
7083_2-Constancy: [(13, 0)]
7083_2-ContextAliasing: [(4, 15)]

.....
-----
Block: 2902_2
2902_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2902_2-Stack size: 18 
2902_2-Equals Mem:<< []>> 
2902_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2902_2-Equals Sto:<< []>> 
2902_2-NonEquals Sto: << []>> 
2902_2-Useless: []
2902_2-Constancy: [(13, 0)]
2902_2-ContextAliasing: []

.....
-----
Block: 3000_2
3000_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3000_2-Stack size: 18 
3000_2-Equals Mem:<< []>> 
3000_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3000_2-Equals Sto:<< []>> 
3000_2-NonEquals Sto: << []>> 
3000_2-Useless: []
3000_2-Constancy: [(13, 0)]
3000_2-ContextAliasing: []

.....
-----
Block: 4997_0
4997_0Instr:<<['JUMPDEST', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x13bd', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1c2c', 'JUMP']>> 
4997_0-Stack size: 14 
4997_0-Equals Mem:<< []>> 
4997_0-NonEquals Mem: << [<9,4>]>> 
4997_0-Equals Sto:<< []>> 
4997_0-NonEquals Sto: << []>> 
4997_0-Useless: []
4997_0-Constancy: [(9, 0)]
4997_0-ContextAliasing: []

.....
-----
Block: 7212_0
7212_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
7212_0-Stack size: 23 
7212_0-Equals Mem:<< []>> 
7212_0-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
7212_0-Equals Sto:<< []>> 
7212_0-NonEquals Sto: << []>> 
7212_0-Useless: []
7212_0-Constancy: [(18, 0), (4, 0)]
7212_0-ContextAliasing: [(9, 19)]

.....
-----
Block: 7262_0
7262_0Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1c55', 'JUMP']>> 
7262_0-Stack size: 29 
7262_0-Equals Mem:<< []>> 
7262_0-NonEquals Mem: << [<9,1>]>> 
7262_0-Equals Sto:<< []>> 
7262_0-NonEquals Sto: << []>> 
7262_0-Useless: []
7262_0-Constancy: [(24, 0), (10, 0), (5, 0), (3, 32)]
7262_0-ContextAliasing: [(15, 19)]

.....
-----
Block: 4246_0
4246_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x01', 'SWAP1', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x10d6', 'JUMPI']>> 
4246_0-Stack size: 9 
4246_0-Equals Mem:<< []>> 
4246_0-NonEquals Mem: << [<11,14>]>> 
4246_0-Equals Sto:<< []>> 
4246_0-NonEquals Sto: << []>> 
4246_0-Useless: []
4246_0-Constancy: [(4, 0)]
4246_0-ContextAliasing: []

.....
-----
Block: 4282_0
4282_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
4282_0-Stack size: 11 
4282_0-Equals Mem:<< []>> 
4282_0-NonEquals Mem: << [<11,14>]>> 
4282_0-Equals Sto:<< []>> 
4282_0-NonEquals Sto: << []>> 
4282_0-Useless: []
4282_0-Constancy: [(6, 0)]
4282_0-ContextAliasing: []

.....
-----
Block: 5194_14
5194_14Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_14-Stack size: 47 
5194_14-Equals Mem:<< [<11,6>]>> 
5194_14-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_14-Equals Sto:<< []>> 
5194_14-NonEquals Sto: << []>> 
5194_14-Useless: []
5194_14-Constancy: [(42, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (6, 0), (5, 0), (4, 0), (3, 0)]
5194_14-ContextAliasing: []

.....
-----
Block: 5616_19
5616_19Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_19-Stack size: 54 
5616_19-Equals Mem:<< []>> 
5616_19-NonEquals Mem: << [<6,1>]>> 
5616_19-Equals Sto:<< []>> 
5616_19-NonEquals Sto: << []>> 
5616_19-Useless: []
5616_19-Constancy: [(49, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
5616_19-ContextAliasing: [(2, 53)]

.....
-----
Block: 6534_33
6534_33Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_33-Stack size: 56 
6534_33-Equals Mem:<< []>> 
6534_33-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_33-Equals Sto:<< []>> 
6534_33-NonEquals Sto: << []>> 
6534_33-Useless: []
6534_33-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (8, 0), (3, 0)]
6534_33-ContextAliasing: [(4, 54)]

.....
-----
Block: 6558_33
6558_33Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_33-Stack size: 60 
6558_33-Equals Mem:<< []>> 
6558_33-NonEquals Mem: << [<11,5>]>> 
6558_33-Equals Sto:<< []>> 
6558_33-NonEquals Sto: << []>> 
6558_33-Useless: []
6558_33-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_33-ContextAliasing: [(8, 54)]

.....
-----
Block: 7330_30
7330_30Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_30-Stack size: 58 
7330_30-Equals Mem:<< []>> 
7330_30-NonEquals Mem: << [<4,7>]>> 
7330_30-Equals Sto:<< []>> 
7330_30-NonEquals Sto: << []>> 
7330_30-Useless: []
7330_30-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_30-ContextAliasing: []

.....
-----
Block: 5194_15
5194_15Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_15-Stack size: 48 
5194_15-Equals Mem:<< [<11,6>]>> 
5194_15-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_15-Equals Sto:<< []>> 
5194_15-NonEquals Sto: << []>> 
5194_15-Useless: []
5194_15-Constancy: [(43, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
5194_15-ContextAliasing: []

.....
-----
Block: 5616_18
5616_18Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_18-Stack size: 55 
5616_18-Equals Mem:<< []>> 
5616_18-NonEquals Mem: << [<6,1>]>> 
5616_18-Equals Sto:<< []>> 
5616_18-NonEquals Sto: << []>> 
5616_18-Useless: []
5616_18-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
5616_18-ContextAliasing: [(2, 54)]

.....
-----
Block: 6534_32
6534_32Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_32-Stack size: 57 
6534_32-Equals Mem:<< []>> 
6534_32-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_32-Equals Sto:<< []>> 
6534_32-NonEquals Sto: << []>> 
6534_32-Useless: []
6534_32-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
6534_32-ContextAliasing: [(4, 55)]

.....
-----
Block: 6558_32
6558_32Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_32-Stack size: 61 
6558_32-Equals Mem:<< []>> 
6558_32-NonEquals Mem: << [<11,5>]>> 
6558_32-Equals Sto:<< []>> 
6558_32-NonEquals Sto: << []>> 
6558_32-Useless: []
6558_32-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_32-ContextAliasing: [(8, 55)]

.....
-----
Block: 7330_28
7330_28Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_28-Stack size: 59 
7330_28-Equals Mem:<< []>> 
7330_28-NonEquals Mem: << [<4,7>]>> 
7330_28-Equals Sto:<< []>> 
7330_28-NonEquals Sto: << []>> 
7330_28-Useless: []
7330_28-Constancy: [(54, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_28-ContextAliasing: []

.....
-----
Block: 5737_5
5737_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_5-Stack size: 51 
5737_5-Equals Mem:<< [<11,6>]>> 
5737_5-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_5-Equals Sto:<< []>> 
5737_5-NonEquals Sto: << []>> 
5737_5-Useless: []
5737_5-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (5, 0)]
5737_5-ContextAliasing: []

.....
-----
Block: 4517_11
4517_11Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_11-Stack size: 58 
4517_11-Equals Mem:<< []>> 
4517_11-NonEquals Mem: << [<6,1>]>> 
4517_11-Equals Sto:<< []>> 
4517_11-NonEquals Sto: << []>> 
4517_11-Useless: []
4517_11-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
4517_11-ContextAliasing: [(2, 57)]

.....
-----
Block: 6534_31
6534_31Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_31-Stack size: 60 
6534_31-Equals Mem:<< []>> 
6534_31-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_31-Equals Sto:<< []>> 
6534_31-NonEquals Sto: << []>> 
6534_31-Useless: []
6534_31-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (14, 0), (8, 0), (3, 0)]
6534_31-ContextAliasing: [(4, 58)]

.....
-----
Block: 6558_31
6558_31Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_31-Stack size: 64 
6558_31-Equals Mem:<< []>> 
6558_31-NonEquals Mem: << [<11,5>]>> 
6558_31-Equals Sto:<< []>> 
6558_31-NonEquals Sto: << []>> 
6558_31-Useless: []
6558_31-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_31-ContextAliasing: [(8, 58)]

.....
-----
Block: 7103_29
7103_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_29-Stack size: 63 
7103_29-Equals Mem:<< []>> 
7103_29-NonEquals Mem: << [<5,8>]>> 
7103_29-Equals Sto:<< []>> 
7103_29-NonEquals Sto: << []>> 
7103_29-Useless: []
7103_29-Constancy: [(58, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
7103_29-ContextAliasing: []

.....
-----
Block: 5737_6
5737_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_6-Stack size: 49 
5737_6-Equals Mem:<< [<11,6>]>> 
5737_6-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_6-Equals Sto:<< []>> 
5737_6-NonEquals Sto: << []>> 
5737_6-Useless: []
5737_6-Constancy: [(44, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (8, 0), (7, 0), (6, 0), (3, 0)]
5737_6-ContextAliasing: []

.....
-----
Block: 4517_10
4517_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_10-Stack size: 56 
4517_10-Equals Mem:<< []>> 
4517_10-NonEquals Mem: << [<6,1>]>> 
4517_10-Equals Sto:<< []>> 
4517_10-NonEquals Sto: << []>> 
4517_10-Useless: []
4517_10-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
4517_10-ContextAliasing: [(2, 55)]

.....
-----
Block: 6534_30
6534_30Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_30-Stack size: 58 
6534_30-Equals Mem:<< []>> 
6534_30-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_30-Equals Sto:<< []>> 
6534_30-NonEquals Sto: << []>> 
6534_30-Useless: []
6534_30-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (8, 0), (3, 0)]
6534_30-ContextAliasing: [(4, 56)]

.....
-----
Block: 6558_30
6558_30Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_30-Stack size: 62 
6558_30-Equals Mem:<< []>> 
6558_30-NonEquals Mem: << [<11,5>]>> 
6558_30-Equals Sto:<< []>> 
6558_30-NonEquals Sto: << []>> 
6558_30-Useless: []
6558_30-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_30-ContextAliasing: [(8, 56)]

.....
-----
Block: 7103_28
7103_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_28-Stack size: 61 
7103_28-Equals Mem:<< []>> 
7103_28-NonEquals Mem: << [<5,8>]>> 
7103_28-Equals Sto:<< []>> 
7103_28-NonEquals Sto: << []>> 
7103_28-Useless: []
7103_28-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
7103_28-ContextAliasing: []

.....
-----
Block: 5194_16
5194_16Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_16-Stack size: 49 
5194_16-Equals Mem:<< [<11,6>]>> 
5194_16-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_16-Equals Sto:<< []>> 
5194_16-NonEquals Sto: << []>> 
5194_16-Useless: []
5194_16-Constancy: [(44, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_16-ContextAliasing: []

.....
-----
Block: 5616_17
5616_17Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_17-Stack size: 56 
5616_17-Equals Mem:<< []>> 
5616_17-NonEquals Mem: << [<6,1>]>> 
5616_17-Equals Sto:<< []>> 
5616_17-NonEquals Sto: << []>> 
5616_17-Useless: []
5616_17-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_17-ContextAliasing: [(2, 55)]

.....
-----
Block: 6534_29
6534_29Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_29-Stack size: 58 
6534_29-Equals Mem:<< []>> 
6534_29-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_29-Equals Sto:<< []>> 
6534_29-NonEquals Sto: << []>> 
6534_29-Useless: []
6534_29-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_29-ContextAliasing: [(4, 56)]

.....
-----
Block: 6558_29
6558_29Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_29-Stack size: 62 
6558_29-Equals Mem:<< []>> 
6558_29-NonEquals Mem: << [<11,5>]>> 
6558_29-Equals Sto:<< []>> 
6558_29-NonEquals Sto: << []>> 
6558_29-Useless: []
6558_29-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_29-ContextAliasing: [(8, 56)]

.....
-----
Block: 7330_27
7330_27Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_27-Stack size: 60 
7330_27-Equals Mem:<< []>> 
7330_27-NonEquals Mem: << [<4,7>]>> 
7330_27-Equals Sto:<< []>> 
7330_27-NonEquals Sto: << []>> 
7330_27-Useless: []
7330_27-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_27-ContextAliasing: []

.....
-----
Block: 5194_17
5194_17Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_17-Stack size: 44 
5194_17-Equals Mem:<< [<11,6>]>> 
5194_17-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_17-Equals Sto:<< []>> 
5194_17-NonEquals Sto: << []>> 
5194_17-Useless: []
5194_17-Constancy: [(39, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (7, 0), (5, 0)]
5194_17-ContextAliasing: []

.....
-----
Block: 5616_16
5616_16Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_16-Stack size: 51 
5616_16-Equals Mem:<< []>> 
5616_16-NonEquals Mem: << [<6,1>]>> 
5616_16-Equals Sto:<< []>> 
5616_16-NonEquals Sto: << []>> 
5616_16-Useless: []
5616_16-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_16-ContextAliasing: [(2, 50)]

.....
-----
Block: 6534_28
6534_28Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_28-Stack size: 53 
6534_28-Equals Mem:<< []>> 
6534_28-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_28-Equals Sto:<< []>> 
6534_28-NonEquals Sto: << []>> 
6534_28-Useless: []
6534_28-Constancy: [(48, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_28-ContextAliasing: [(4, 51)]

.....
-----
Block: 6558_28
6558_28Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_28-Stack size: 57 
6558_28-Equals Mem:<< []>> 
6558_28-NonEquals Mem: << [<11,5>]>> 
6558_28-Equals Sto:<< []>> 
6558_28-NonEquals Sto: << []>> 
6558_28-Useless: []
6558_28-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_28-ContextAliasing: [(8, 51)]

.....
-----
Block: 7330_26
7330_26Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_26-Stack size: 55 
7330_26-Equals Mem:<< []>> 
7330_26-NonEquals Mem: << [<4,7>]>> 
7330_26-Equals Sto:<< []>> 
7330_26-NonEquals Sto: << []>> 
7330_26-Useless: []
7330_26-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_26-ContextAliasing: []

.....
-----
Block: 5737_7
5737_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_7-Stack size: 57 
5737_7-Equals Mem:<< [<11,6>]>> 
5737_7-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_7-Equals Sto:<< []>> 
5737_7-NonEquals Sto: << []>> 
5737_7-Useless: []
5737_7-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (5, 0)]
5737_7-ContextAliasing: []

.....
-----
Block: 4517_9
4517_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_9-Stack size: 64 
4517_9-Equals Mem:<< []>> 
4517_9-NonEquals Mem: << [<6,1>]>> 
4517_9-Equals Sto:<< []>> 
4517_9-NonEquals Sto: << []>> 
4517_9-Useless: []
4517_9-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
4517_9-ContextAliasing: [(2, 63)]

.....
-----
Block: 6534_27
6534_27Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_27-Stack size: 66 
6534_27-Equals Mem:<< []>> 
6534_27-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_27-Equals Sto:<< []>> 
6534_27-NonEquals Sto: << []>> 
6534_27-Useless: []
6534_27-Constancy: [(61, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (28, 0), (27, 0), (26, 0), (20, 0), (19, 0), (18, 0), (14, 0), (8, 0), (3, 0)]
6534_27-ContextAliasing: [(4, 64)]

.....
-----
Block: 6558_27
6558_27Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_27-Stack size: 70 
6558_27-Equals Mem:<< []>> 
6558_27-NonEquals Mem: << [<11,5>]>> 
6558_27-Equals Sto:<< []>> 
6558_27-NonEquals Sto: << []>> 
6558_27-Useless: []
6558_27-Constancy: [(65, 0), (50, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (32, 0), (31, 0), (30, 0), (24, 0), (23, 0), (22, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_27-ContextAliasing: [(8, 64)]

.....
-----
Block: 7103_24
7103_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_24-Stack size: 69 
7103_24-Equals Mem:<< []>> 
7103_24-NonEquals Mem: << [<5,8>]>> 
7103_24-Equals Sto:<< []>> 
7103_24-NonEquals Sto: << []>> 
7103_24-Useless: []
7103_24-Constancy: [(64, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (31, 0), (30, 0), (29, 0), (23, 0), (22, 0), (21, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
7103_24-ContextAliasing: []

.....
-----
Block: 5737_8
5737_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_8-Stack size: 55 
5737_8-Equals Mem:<< [<11,6>]>> 
5737_8-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_8-Equals Sto:<< []>> 
5737_8-NonEquals Sto: << []>> 
5737_8-Useless: []
5737_8-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (3, 0)]
5737_8-ContextAliasing: []

.....
-----
Block: 4517_8
4517_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_8-Stack size: 62 
4517_8-Equals Mem:<< []>> 
4517_8-NonEquals Mem: << [<6,1>]>> 
4517_8-Equals Sto:<< []>> 
4517_8-NonEquals Sto: << []>> 
4517_8-Useless: []
4517_8-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
4517_8-ContextAliasing: [(2, 61)]

.....
-----
Block: 6534_26
6534_26Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_26-Stack size: 64 
6534_26-Equals Mem:<< []>> 
6534_26-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_26-Equals Sto:<< []>> 
6534_26-NonEquals Sto: << []>> 
6534_26-Useless: []
6534_26-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (8, 0), (3, 0)]
6534_26-ContextAliasing: [(4, 62)]

.....
-----
Block: 6558_26
6558_26Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_26-Stack size: 68 
6558_26-Equals Mem:<< []>> 
6558_26-NonEquals Mem: << [<11,5>]>> 
6558_26-Equals Sto:<< []>> 
6558_26-NonEquals Sto: << []>> 
6558_26-Useless: []
6558_26-Constancy: [(63, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (30, 0), (29, 0), (28, 0), (22, 0), (21, 0), (20, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_26-ContextAliasing: [(8, 62)]

.....
-----
Block: 7103_23
7103_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_23-Stack size: 67 
7103_23-Equals Mem:<< []>> 
7103_23-NonEquals Mem: << [<5,8>]>> 
7103_23-Equals Sto:<< []>> 
7103_23-NonEquals Sto: << []>> 
7103_23-Useless: []
7103_23-Constancy: [(62, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (29, 0), (28, 0), (27, 0), (21, 0), (20, 0), (19, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
7103_23-ContextAliasing: []

.....
-----
Block: 5319_0
5319_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP16', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP6', 'SWAP12', 'POP', 'SWAP4', 'SWAP10', 'POP', 'SWAP2', 'SWAP8', 'POP', 'SWAP6', 'POP', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x14f8', 'SWAP1', 'DUP8', 'PUSH2 0x1669', 'JUMP']>> 
5319_0-Stack size: 31 
5319_0-Equals Mem:<< []>> 
5319_0-NonEquals Mem: << [<11,14>]>> 
5319_0-Equals Sto:<< []>> 
5319_0-NonEquals Sto: << []>> 
5319_0-Useless: []
5319_0-Constancy: [(26, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0)]
5319_0-ContextAliasing: []

.....
-----
Block: 5737_9
5737_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_9-Stack size: 28 
5737_9-Equals Mem:<< [<11,6>]>> 
5737_9-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_9-Equals Sto:<< []>> 
5737_9-NonEquals Sto: << []>> 
5737_9-Useless: []
5737_9-Constancy: [(23, 0)]
5737_9-ContextAliasing: []

.....
-----
Block: 4517_7
4517_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_7-Stack size: 35 
4517_7-Equals Mem:<< []>> 
4517_7-NonEquals Mem: << [<6,1>]>> 
4517_7-Equals Sto:<< []>> 
4517_7-NonEquals Sto: << []>> 
4517_7-Useless: []
4517_7-Constancy: [(30, 0), (6, 0), (1, 0)]
4517_7-ContextAliasing: [(2, 34)]

.....
-----
Block: 6534_25
6534_25Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_25-Stack size: 37 
6534_25-Equals Mem:<< []>> 
6534_25-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_25-Equals Sto:<< []>> 
6534_25-NonEquals Sto: << []>> 
6534_25-Useless: []
6534_25-Constancy: [(32, 0), (8, 0), (3, 0)]
6534_25-ContextAliasing: [(4, 35)]

.....
-----
Block: 6558_25
6558_25Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_25-Stack size: 41 
6558_25-Equals Mem:<< []>> 
6558_25-NonEquals Mem: << [<11,5>]>> 
6558_25-Equals Sto:<< []>> 
6558_25-NonEquals Sto: << []>> 
6558_25-Useless: []
6558_25-Constancy: [(36, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_25-ContextAliasing: [(8, 35)]

.....
-----
Block: 7103_22
7103_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_22-Stack size: 40 
7103_22-Equals Mem:<< []>> 
7103_22-NonEquals Mem: << [<5,8>]>> 
7103_22-Equals Sto:<< []>> 
7103_22-NonEquals Sto: << []>> 
7103_22-Useless: []
7103_22-Constancy: [(35, 0), (11, 0), (6, 0), (5, 0)]
7103_22-ContextAliasing: []

.....
-----
Block: 5368_0
5368_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP12', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP11', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1526', 'SWAP1', 'DUP7', 'PUSH2 0x16aa', 'JUMP']>> 
5368_0-Stack size: 26 
5368_0-Equals Mem:<< [<12,28>]>> 
5368_0-NonEquals Mem: << [<12,15>, <15,28>]>> 
5368_0-Equals Sto:<< [<23,30>]>> 
5368_0-NonEquals Sto: << []>> 
5368_0-Useless: []
5368_0-Constancy: [(21, 0)]
5368_0-ContextAliasing: []

.....
-----
Block: 7103_21
7103_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_21-Stack size: 35 
7103_21-Equals Mem:<< []>> 
7103_21-NonEquals Mem: << [<5,8>]>> 
7103_21-Equals Sto:<< []>> 
7103_21-NonEquals Sto: << []>> 
7103_21-Useless: []
7103_21-Constancy: [(30, 0), (6, 0), (5, 0)]
7103_21-ContextAliasing: []

.....
-----
Block: 5825_4
5825_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
5825_4-Stack size: 30 
5825_4-Equals Mem:<< []>> 
5825_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5825_4-Equals Sto:<< []>> 
5825_4-NonEquals Sto: << []>> 
5825_4-Useless: []
5825_4-Constancy: [(25, 0), (1, 0)]
5825_4-ContextAliasing: []

.....
-----
Block: 5414_0
5414_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP10', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1547', 'DUP2', 'PUSH2 0x1708', 'JUMP']>> 
5414_0-Stack size: 26 
5414_0-Equals Mem:<< []>> 
5414_0-NonEquals Mem: << [<11,14>]>> 
5414_0-Equals Sto:<< []>> 
5414_0-NonEquals Sto: << []>> 
5414_0-Useless: []
5414_0-Constancy: [(21, 0)]
5414_0-ContextAliasing: []

.....
-----
Block: 5194_18
5194_18Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_18-Stack size: 40 
5194_18-Equals Mem:<< [<11,6>]>> 
5194_18-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_18-Equals Sto:<< []>> 
5194_18-NonEquals Sto: << []>> 
5194_18-Useless: []
5194_18-Constancy: [(35, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_18-ContextAliasing: []

.....
-----
Block: 5616_15
5616_15Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_15-Stack size: 47 
5616_15-Equals Mem:<< []>> 
5616_15-NonEquals Mem: << [<6,1>]>> 
5616_15-Equals Sto:<< []>> 
5616_15-NonEquals Sto: << []>> 
5616_15-Useless: []
5616_15-Constancy: [(42, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_15-ContextAliasing: [(2, 46)]

.....
-----
Block: 6534_24
6534_24Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_24-Stack size: 49 
6534_24-Equals Mem:<< []>> 
6534_24-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_24-Equals Sto:<< []>> 
6534_24-NonEquals Sto: << []>> 
6534_24-Useless: []
6534_24-Constancy: [(44, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_24-ContextAliasing: [(4, 47)]

.....
-----
Block: 6558_24
6558_24Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_24-Stack size: 53 
6558_24-Equals Mem:<< []>> 
6558_24-NonEquals Mem: << [<11,5>]>> 
6558_24-Equals Sto:<< []>> 
6558_24-NonEquals Sto: << []>> 
6558_24-Useless: []
6558_24-Constancy: [(48, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_24-ContextAliasing: [(8, 47)]

.....
-----
Block: 7330_22
7330_22Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_22-Stack size: 51 
7330_22-Equals Mem:<< []>> 
7330_22-NonEquals Mem: << [<4,7>]>> 
7330_22-Equals Sto:<< []>> 
7330_22-NonEquals Sto: << []>> 
7330_22-Useless: []
7330_22-Constancy: [(46, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_22-ContextAliasing: []

.....
-----
Block: 5194_19
5194_19Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_19-Stack size: 35 
5194_19-Equals Mem:<< [<11,6>]>> 
5194_19-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_19-Equals Sto:<< []>> 
5194_19-NonEquals Sto: << []>> 
5194_19-Useless: []
5194_19-Constancy: [(30, 0), (7, 0), (5, 0)]
5194_19-ContextAliasing: []

.....
-----
Block: 5616_14
5616_14Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_14-Stack size: 42 
5616_14-Equals Mem:<< []>> 
5616_14-NonEquals Mem: << [<6,1>]>> 
5616_14-Equals Sto:<< []>> 
5616_14-NonEquals Sto: << []>> 
5616_14-Useless: []
5616_14-Constancy: [(37, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_14-ContextAliasing: [(2, 41)]

.....
-----
Block: 6534_23
6534_23Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_23-Stack size: 44 
6534_23-Equals Mem:<< []>> 
6534_23-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_23-Equals Sto:<< []>> 
6534_23-NonEquals Sto: << []>> 
6534_23-Useless: []
6534_23-Constancy: [(39, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_23-ContextAliasing: [(4, 42)]

.....
-----
Block: 6558_23
6558_23Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_23-Stack size: 48 
6558_23-Equals Mem:<< []>> 
6558_23-NonEquals Mem: << [<11,5>]>> 
6558_23-Equals Sto:<< []>> 
6558_23-NonEquals Sto: << []>> 
6558_23-Useless: []
6558_23-Constancy: [(43, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_23-ContextAliasing: [(8, 42)]

.....
-----
Block: 7330_21
7330_21Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_21-Stack size: 46 
7330_21-Equals Mem:<< []>> 
7330_21-NonEquals Mem: << [<4,7>]>> 
7330_21-Equals Sto:<< []>> 
7330_21-NonEquals Sto: << []>> 
7330_21-Useless: []
7330_21-Constancy: [(41, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_21-ContextAliasing: []

.....
-----
Block: 5918_0
5918_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH2 0x173a', 'SWAP1', 'DUP3', 'PUSH2 0x16aa', 'JUMP']>> 
5918_0-Stack size: 30 
5918_0-Equals Mem:<< []>> 
5918_0-NonEquals Mem: << [<5,8>]>> 
5918_0-Equals Sto:<< []>> 
5918_0-NonEquals Sto: << []>> 
5918_0-Useless: []
5918_0-Constancy: [(25, 0), (1, 0)]
5918_0-ContextAliasing: []

.....
-----
Block: 7103_19
7103_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_19-Stack size: 39 
7103_19-Equals Mem:<< []>> 
7103_19-NonEquals Mem: << [<5,8>]>> 
7103_19-Equals Sto:<< []>> 
7103_19-NonEquals Sto: << []>> 
7103_19-Useless: []
7103_19-Constancy: [(34, 0), (6, 0), (5, 0)]
7103_19-ContextAliasing: []

.....
-----
Block: 5825_3
5825_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
5825_3-Stack size: 34 
5825_3-Equals Mem:<< []>> 
5825_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5825_3-Equals Sto:<< []>> 
5825_3-NonEquals Sto: << []>> 
5825_3-Useless: []
5825_3-Constancy: [(29, 0), (1, 0)]
5825_3-ContextAliasing: []

.....
-----
Block: 5946_0
5946_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'POP', 'POP', 'POP', 'JUMP']>> 
5946_0-Stack size: 30 
5946_0-Equals Mem:<< []>> 
5946_0-NonEquals Mem: << [<5,8>]>> 
5946_0-Equals Sto:<< []>> 
5946_0-NonEquals Sto: << []>> 
5946_0-Useless: []
5946_0-Constancy: [(25, 0)]
5946_0-ContextAliasing: []

.....
-----
Block: 5737_10
5737_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_10-Stack size: 31 
5737_10-Equals Mem:<< [<11,6>]>> 
5737_10-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_10-Equals Sto:<< []>> 
5737_10-NonEquals Sto: << []>> 
5737_10-Useless: []
5737_10-Constancy: [(26, 0)]
5737_10-ContextAliasing: []

.....
-----
Block: 4517_6
4517_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_6-Stack size: 38 
4517_6-Equals Mem:<< []>> 
4517_6-NonEquals Mem: << [<6,1>]>> 
4517_6-Equals Sto:<< []>> 
4517_6-NonEquals Sto: << []>> 
4517_6-Useless: []
4517_6-Constancy: [(33, 0), (6, 0), (1, 0)]
4517_6-ContextAliasing: [(2, 37)]

.....
-----
Block: 6534_22
6534_22Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_22-Stack size: 40 
6534_22-Equals Mem:<< []>> 
6534_22-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_22-Equals Sto:<< []>> 
6534_22-NonEquals Sto: << []>> 
6534_22-Useless: []
6534_22-Constancy: [(35, 0), (8, 0), (3, 0)]
6534_22-ContextAliasing: [(4, 38)]

.....
-----
Block: 6558_22
6558_22Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_22-Stack size: 44 
6558_22-Equals Mem:<< []>> 
6558_22-NonEquals Mem: << [<11,5>]>> 
6558_22-Equals Sto:<< []>> 
6558_22-NonEquals Sto: << []>> 
6558_22-Useless: []
6558_22-Constancy: [(39, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_22-ContextAliasing: [(8, 38)]

.....
-----
Block: 7103_18
7103_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_18-Stack size: 43 
7103_18-Equals Mem:<< []>> 
7103_18-NonEquals Mem: << [<5,8>]>> 
7103_18-Equals Sto:<< []>> 
7103_18-NonEquals Sto: << []>> 
7103_18-Useless: []
7103_18-Constancy: [(38, 0), (11, 0), (6, 0), (5, 0)]
7103_18-ContextAliasing: []

.....
-----
Block: 7103_17
7103_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_17-Stack size: 38 
7103_17-Equals Mem:<< []>> 
7103_17-NonEquals Mem: << [<5,8>]>> 
7103_17-Equals Sto:<< []>> 
7103_17-NonEquals Sto: << []>> 
7103_17-Useless: []
7103_17-Constancy: [(33, 0), (6, 0), (5, 0)]
7103_17-ContextAliasing: []

.....
-----
Block: 5825_2
5825_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
5825_2-Stack size: 33 
5825_2-Equals Mem:<< []>> 
5825_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5825_2-Equals Sto:<< []>> 
5825_2-NonEquals Sto: << []>> 
5825_2-Useless: []
5825_2-Constancy: [(28, 0), (1, 0)]
5825_2-ContextAliasing: []

.....
-----
Block: 5457_0
5457_0Instr:<<['JUMPDEST', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP10', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP6', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x1596', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
5457_0-Stack size: 25 
5457_0-Equals Mem:<< []>> 
5457_0-NonEquals Mem: << [<22,18>]>> 
5457_0-Equals Sto:<< []>> 
5457_0-NonEquals Sto: << []>> 
5457_0-Useless: []
5457_0-Constancy: [(20, 0)]
5457_0-ContextAliasing: []

.....
-----
Block: 597
597Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
597-Stack size: 2 
597-Equals Mem:<< []>> 
597-NonEquals Mem: << [<7,2>]>> 
597-Equals Sto:<< []>> 
597-NonEquals Sto: << []>> 
597-Useless: []
597-Constancy: []
597-ContextAliasing: []

.....
-----
Block: 7103_20
7103_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_20-Stack size: 39 
7103_20-Equals Mem:<< []>> 
7103_20-NonEquals Mem: << [<5,8>]>> 
7103_20-Equals Sto:<< []>> 
7103_20-NonEquals Sto: << []>> 
7103_20-Useless: []
7103_20-Constancy: [(34, 0), (10, 0), (6, 0), (5, 0)]
7103_20-ContextAliasing: []

.....
-----
Block: 7330_20
7330_20Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_20-Stack size: 39 
7330_20-Equals Mem:<< []>> 
7330_20-NonEquals Mem: << [<4,7>]>> 
7330_20-Equals Sto:<< []>> 
7330_20-NonEquals Sto: << []>> 
7330_20-Useless: []
7330_20-Constancy: [(34, 0), (10, 0), (6, 0), (0, 0)]
7330_20-ContextAliasing: []

.....
-----
Block: 6205_5
6205_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_5-Stack size: 34 
6205_5-Equals Mem:<< []>> 
6205_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_5-Equals Sto:<< []>> 
6205_5-NonEquals Sto: << []>> 
6205_5-Useless: []
6205_5-Constancy: [(29, 0), (5, 0), (1, 0)]
6205_5-ContextAliasing: []

.....
-----
Block: 7103_25
7103_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_25-Stack size: 61 
7103_25-Equals Mem:<< []>> 
7103_25-NonEquals Mem: << [<5,8>]>> 
7103_25-Equals Sto:<< []>> 
7103_25-NonEquals Sto: << []>> 
7103_25-Useless: []
7103_25-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (5, 0)]
7103_25-ContextAliasing: []

.....
-----
Block: 7330_23
7330_23Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_23-Stack size: 61 
7330_23-Equals Mem:<< []>> 
7330_23-NonEquals Mem: << [<4,7>]>> 
7330_23-Equals Sto:<< []>> 
7330_23-NonEquals Sto: << []>> 
7330_23-Useless: []
7330_23-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (0, 0)]
7330_23-ContextAliasing: []

.....
-----
Block: 6205_6
6205_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_6-Stack size: 56 
6205_6-Equals Mem:<< []>> 
6205_6-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_6-Equals Sto:<< []>> 
6205_6-NonEquals Sto: << []>> 
6205_6-Useless: []
6205_6-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (5, 0), (1, 0)]
6205_6-ContextAliasing: []

.....
-----
Block: 7103_26
7103_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_26-Stack size: 60 
7103_26-Equals Mem:<< []>> 
7103_26-NonEquals Mem: << [<5,8>]>> 
7103_26-Equals Sto:<< []>> 
7103_26-NonEquals Sto: << []>> 
7103_26-Useless: []
7103_26-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (5, 0)]
7103_26-ContextAliasing: []

.....
-----
Block: 7330_24
7330_24Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_24-Stack size: 60 
7330_24-Equals Mem:<< []>> 
7330_24-NonEquals Mem: << [<4,7>]>> 
7330_24-Equals Sto:<< []>> 
7330_24-NonEquals Sto: << []>> 
7330_24-Useless: []
7330_24-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (0, 0)]
7330_24-ContextAliasing: []

.....
-----
Block: 6205_7
6205_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_7-Stack size: 55 
6205_7-Equals Mem:<< []>> 
6205_7-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_7-Equals Sto:<< []>> 
6205_7-NonEquals Sto: << []>> 
6205_7-Useless: []
6205_7-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (5, 0), (1, 0)]
6205_7-ContextAliasing: []

.....
-----
Block: 7103_27
7103_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_27-Stack size: 59 
7103_27-Equals Mem:<< []>> 
7103_27-NonEquals Mem: << [<5,8>]>> 
7103_27-Equals Sto:<< []>> 
7103_27-NonEquals Sto: << []>> 
7103_27-Useless: []
7103_27-Constancy: [(54, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (5, 0)]
7103_27-ContextAliasing: []

.....
-----
Block: 7330_25
7330_25Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_25-Stack size: 59 
7330_25-Equals Mem:<< []>> 
7330_25-NonEquals Mem: << [<4,7>]>> 
7330_25-Equals Sto:<< []>> 
7330_25-NonEquals Sto: << []>> 
7330_25-Useless: []
7330_25-Constancy: [(54, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (0, 0)]
7330_25-ContextAliasing: []

.....
-----
Block: 6205_8
6205_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_8-Stack size: 54 
6205_8-Equals Mem:<< []>> 
6205_8-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_8-Equals Sto:<< []>> 
6205_8-NonEquals Sto: << []>> 
6205_8-Useless: []
6205_8-Constancy: [(49, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (8, 0), (7, 0), (6, 0), (5, 0), (1, 0)]
6205_8-ContextAliasing: []

.....
-----
Block: 7103_30
7103_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_30-Stack size: 57 
7103_30-Equals Mem:<< []>> 
7103_30-NonEquals Mem: << [<5,8>]>> 
7103_30-Equals Sto:<< []>> 
7103_30-NonEquals Sto: << []>> 
7103_30-Useless: []
7103_30-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (5, 0)]
7103_30-ContextAliasing: []

.....
-----
Block: 7330_29
7330_29Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_29-Stack size: 57 
7330_29-Equals Mem:<< []>> 
7330_29-NonEquals Mem: << [<4,7>]>> 
7330_29-Equals Sto:<< []>> 
7330_29-NonEquals Sto: << []>> 
7330_29-Useless: []
7330_29-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (0, 0)]
7330_29-ContextAliasing: []

.....
-----
Block: 6205_9
6205_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_9-Stack size: 52 
6205_9-Equals Mem:<< []>> 
6205_9-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_9-Equals Sto:<< []>> 
6205_9-NonEquals Sto: << []>> 
6205_9-Useless: []
6205_9-Constancy: [(47, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (7, 0), (1, 0)]
6205_9-ContextAliasing: []

.....
-----
Block: 7103_31
7103_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_31-Stack size: 56 
7103_31-Equals Mem:<< []>> 
7103_31-NonEquals Mem: << [<5,8>]>> 
7103_31-Equals Sto:<< []>> 
7103_31-NonEquals Sto: << []>> 
7103_31-Useless: []
7103_31-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (5, 0)]
7103_31-ContextAliasing: []

.....
-----
Block: 7330_31
7330_31Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_31-Stack size: 56 
7330_31-Equals Mem:<< []>> 
7330_31-NonEquals Mem: << [<4,7>]>> 
7330_31-Equals Sto:<< []>> 
7330_31-NonEquals Sto: << []>> 
7330_31-Useless: []
7330_31-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (0, 0)]
7330_31-ContextAliasing: []

.....
-----
Block: 6205_10
6205_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_10-Stack size: 51 
6205_10-Equals Mem:<< []>> 
6205_10-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_10-Equals Sto:<< []>> 
6205_10-NonEquals Sto: << []>> 
6205_10-Useless: []
6205_10-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (7, 0), (1, 0)]
6205_10-ContextAliasing: []

.....
-----
Block: 2316
2316Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2316-Stack size: 6 
2316-Equals Mem:<< []>> 
2316-NonEquals Mem: << [<6,1>]>> 
2316-Equals Sto:<< []>> 
2316-NonEquals Sto: << []>> 
2316-Useless: []
2316-Constancy: []
2316-ContextAliasing: []

.....
-----
Block: 2270
2270Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2270-Stack size: 3 
2270-Equals Mem:<< []>> 
2270-NonEquals Mem: << [<6,1>]>> 
2270-Equals Sto:<< []>> 
2270-NonEquals Sto: << []>> 
2270-Useless: []
2270-Constancy: []
2270-ContextAliasing: []

.....
-----
Block: 1133
1133Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH9 0x53594e41474f475545', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x0220', 'JUMP']>> 
1133-Stack size: 2 
1133-Equals Mem:<< [<10,4>]>> 
1133-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
1133-Equals Sto:<< []>> 
1133-NonEquals Sto: << []>> 
1133-Useless: []
1133-Constancy: []
1133-ContextAliasing: []

.....
-----
Block: 6534
6534Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534-Stack size: 4 
6534-Equals Mem:<< []>> 
6534-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
6534-Equals Sto:<< []>> 
6534-NonEquals Sto: << []>> 
6534-Useless: []
6534-Constancy: []
6534-ContextAliasing: []

.....
-----
Block: 6558
6558Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558-Stack size: 8 
6558-Equals Mem:<< []>> 
6558-NonEquals Mem: << [<11,5>]>> 
6558-Equals Sto:<< []>> 
6558-NonEquals Sto: << []>> 
6558-Useless: []
6558-Constancy: [(3, 0), (2, 32)]
6558-ContextAliasing: []

.....
-----
Block: 690_0
690_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
690_0-Stack size: 3 
690_0-Equals Mem:<< []>> 
690_0-NonEquals Mem: << [<5,2>]>> 
690_0-Equals Sto:<< []>> 
690_0-NonEquals Sto: << []>> 
690_0-Useless: []
690_0-Constancy: []
690_0-ContextAliasing: []

.....
-----
Block: 2199
2199Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2199-Stack size: 3 
2199-Equals Mem:<< []>> 
2199-NonEquals Mem: << [<6,1>]>> 
2199-Equals Sto:<< []>> 
2199-NonEquals Sto: << []>> 
2199-Useless: []
2199-Constancy: []
2199-ContextAliasing: []

.....
-----
Block: 644_0
644_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
644_0-Stack size: 2 
644_0-Equals Mem:<< []>> 
644_0-NonEquals Mem: << [<12,2>]>> 
644_0-Equals Sto:<< []>> 
644_0-NonEquals Sto: << []>> 
644_0-Useless: []
644_0-Constancy: []
644_0-ContextAliasing: []

.....
-----
Block: 1025
1025Instr:<<['JUMPDEST', 'PUSH1 0x11', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP2', 'JUMP']>> 
1025-Stack size: 3 
1025-Equals Mem:<< []>> 
1025-NonEquals Mem: << [<3,7>]>> 
1025-Equals Sto:<< []>> 
1025-NonEquals Sto: << []>> 
1025-Useless: []
1025-Constancy: []
1025-ContextAliasing: []

.....
-----
Block: 2153
2153Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2153-Stack size: 3 
2153-Equals Mem:<< []>> 
2153-NonEquals Mem: << [<6,1>]>> 
2153-Equals Sto:<< []>> 
2153-NonEquals Sto: << []>> 
2153-Useless: []
2153-Constancy: []
2153-ContextAliasing: []

.....
-----
Block: 2040
2040Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2040-Stack size: 2 
2040-Equals Mem:<< []>> 
2040-NonEquals Mem: << [<6,1>]>> 
2040-Equals Sto:<< []>> 
2040-NonEquals Sto: << []>> 
2040-Useless: []
2040-Constancy: []
2040-ContextAliasing: []

.....
-----
Block: 1989_1
1989_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x067e', 'SWAP1', 'PUSH2 0x1209', 'JUMP']>> 
1989_1-Stack size: 3 
1989_1-Equals Mem:<< []>> 
1989_1-NonEquals Mem: << [<11,14>]>> 
1989_1-Equals Sto:<< []>> 
1989_1-NonEquals Sto: << []>> 
1989_1-Useless: []
1989_1-Constancy: []
1989_1-ContextAliasing: []

.....
-----
Block: 4629_1
4629_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
4629_1-Stack size: 7 
4629_1-Equals Mem:<< []>> 
4629_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4629_1-Equals Sto:<< []>> 
4629_1-NonEquals Sto: << []>> 
4629_1-Useless: []
4629_1-Constancy: [(3, 0), (0, 0)]
4629_1-ContextAliasing: []

.....
-----
Block: 5194_11
5194_11Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_11-Stack size: 20 
5194_11-Equals Mem:<< [<11,6>]>> 
5194_11-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_11-Equals Sto:<< []>> 
5194_11-NonEquals Sto: << []>> 
5194_11-Useless: []
5194_11-Constancy: [(16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_11-ContextAliasing: []

.....
-----
Block: 5616_13
5616_13Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_13-Stack size: 27 
5616_13-Equals Mem:<< []>> 
5616_13-NonEquals Mem: << [<6,1>]>> 
5616_13-Equals Sto:<< []>> 
5616_13-NonEquals Sto: << []>> 
5616_13-Useless: []
5616_13-Constancy: [(23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_13-ContextAliasing: [(2, 26)]

.....
-----
Block: 6534_21
6534_21Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_21-Stack size: 29 
6534_21-Equals Mem:<< []>> 
6534_21-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_21-Equals Sto:<< []>> 
6534_21-NonEquals Sto: << []>> 
6534_21-Useless: []
6534_21-Constancy: [(25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_21-ContextAliasing: [(4, 27)]

.....
-----
Block: 6558_21
6558_21Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_21-Stack size: 33 
6558_21-Equals Mem:<< []>> 
6558_21-NonEquals Mem: << [<11,5>]>> 
6558_21-Equals Sto:<< []>> 
6558_21-NonEquals Sto: << []>> 
6558_21-Useless: []
6558_21-Constancy: [(29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_21-ContextAliasing: [(8, 27)]

.....
-----
Block: 7330_19
7330_19Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_19-Stack size: 31 
7330_19-Equals Mem:<< []>> 
7330_19-NonEquals Mem: << [<4,7>]>> 
7330_19-Equals Sto:<< []>> 
7330_19-NonEquals Sto: << []>> 
7330_19-Useless: []
7330_19-Constancy: [(27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_19-ContextAliasing: []

.....
-----
Block: 5194_12
5194_12Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_12-Stack size: 15 
5194_12-Equals Mem:<< [<11,6>]>> 
5194_12-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_12-Equals Sto:<< []>> 
5194_12-NonEquals Sto: << []>> 
5194_12-Useless: []
5194_12-Constancy: [(11, 0), (8, 0), (7, 0), (5, 0)]
5194_12-ContextAliasing: []

.....
-----
Block: 5616_12
5616_12Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_12-Stack size: 22 
5616_12-Equals Mem:<< []>> 
5616_12-NonEquals Mem: << [<6,1>]>> 
5616_12-Equals Sto:<< []>> 
5616_12-NonEquals Sto: << []>> 
5616_12-Useless: []
5616_12-Constancy: [(18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_12-ContextAliasing: [(2, 21)]

.....
-----
Block: 6534_20
6534_20Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_20-Stack size: 24 
6534_20-Equals Mem:<< []>> 
6534_20-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_20-Equals Sto:<< []>> 
6534_20-NonEquals Sto: << []>> 
6534_20-Useless: []
6534_20-Constancy: [(20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_20-ContextAliasing: [(4, 22)]

.....
-----
Block: 6558_20
6558_20Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_20-Stack size: 28 
6558_20-Equals Mem:<< []>> 
6558_20-NonEquals Mem: << [<11,5>]>> 
6558_20-Equals Sto:<< []>> 
6558_20-NonEquals Sto: << []>> 
6558_20-Useless: []
6558_20-Constancy: [(24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_20-ContextAliasing: [(8, 22)]

.....
-----
Block: 7330_18
7330_18Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_18-Stack size: 26 
7330_18-Equals Mem:<< []>> 
7330_18-NonEquals Mem: << [<4,7>]>> 
7330_18-Equals Sto:<< []>> 
7330_18-NonEquals Sto: << []>> 
7330_18-Useless: []
7330_18-Constancy: [(22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_18-ContextAliasing: []

.....
-----
Block: 5194_13
5194_13Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_13-Stack size: 11 
5194_13-Equals Mem:<< [<11,6>]>> 
5194_13-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_13-Equals Sto:<< []>> 
5194_13-NonEquals Sto: << []>> 
5194_13-Useless: []
5194_13-Constancy: [(7, 0), (4, 0)]
5194_13-ContextAliasing: []

.....
-----
Block: 5616_11
5616_11Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_11-Stack size: 18 
5616_11-Equals Mem:<< []>> 
5616_11-NonEquals Mem: << [<6,1>]>> 
5616_11-Equals Sto:<< []>> 
5616_11-NonEquals Sto: << []>> 
5616_11-Useless: []
5616_11-Constancy: [(14, 0), (11, 0), (6, 0), (1, 0)]
5616_11-ContextAliasing: [(2, 17)]

.....
-----
Block: 6534_19
6534_19Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_19-Stack size: 20 
6534_19-Equals Mem:<< []>> 
6534_19-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_19-Equals Sto:<< []>> 
6534_19-NonEquals Sto: << []>> 
6534_19-Useless: []
6534_19-Constancy: [(16, 0), (13, 0), (8, 0), (3, 0)]
6534_19-ContextAliasing: [(4, 18)]

.....
-----
Block: 6558_19
6558_19Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_19-Stack size: 24 
6558_19-Equals Mem:<< []>> 
6558_19-NonEquals Mem: << [<11,5>]>> 
6558_19-Equals Sto:<< []>> 
6558_19-NonEquals Sto: << []>> 
6558_19-Useless: []
6558_19-Constancy: [(20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_19-ContextAliasing: [(8, 18)]

.....
-----
Block: 7330_17
7330_17Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_17-Stack size: 22 
7330_17-Equals Mem:<< []>> 
7330_17-NonEquals Mem: << [<4,7>]>> 
7330_17-Equals Sto:<< []>> 
7330_17-NonEquals Sto: << []>> 
7330_17-Useless: []
7330_17-Constancy: [(18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_17-ContextAliasing: []

.....
-----
Block: 1862
1862Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
1862-Stack size: 3 
1862-Equals Mem:<< []>> 
1862-NonEquals Mem: << [<6,1>]>> 
1862-Equals Sto:<< []>> 
1862-NonEquals Sto: << []>> 
1862-Useless: []
1862-Constancy: []
1862-ContextAliasing: []

.....
-----
Block: 1789
1789Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
1789-Stack size: 3 
1789-Equals Mem:<< []>> 
1789-NonEquals Mem: << [<6,1>]>> 
1789-Equals Sto:<< []>> 
1789-NonEquals Sto: << []>> 
1789-Useless: []
1789-Constancy: []
1789-ContextAliasing: []

.....
-----
Block: 1812
1812Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
1812-Stack size: 3 
1812-Equals Mem:<< []>> 
1812-NonEquals Mem: << [<10,13>]>> 
1812-Equals Sto:<< [<18,23>]>> 
1812-NonEquals Sto: << []>> 
1812-Useless: []
1812-Constancy: []
1812-ContextAliasing: []

.....
-----
Block: 644
644Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
644-Stack size: 3 
644-Equals Mem:<< []>> 
644-NonEquals Mem: << [<12,2>]>> 
644-Equals Sto:<< []>> 
644-NonEquals Sto: << []>> 
644-Useless: []
644-Constancy: []
644-ContextAliasing: []

.....
-----
Block: 767
767Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
767-Stack size: 2 
767-Equals Mem:<< []>> 
767-NonEquals Mem: << [<6,3>]>> 
767-Equals Sto:<< []>> 
767-NonEquals Sto: << []>> 
767-Useless: []
767-Constancy: []
767-ContextAliasing: []

.....
-----
Block: 3193
3193Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3193-Stack size: 10 
3193-Equals Mem:<< []>> 
3193-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3193-Equals Sto:<< []>> 
3193-NonEquals Sto: << []>> 
3193-Useless: []
3193-Constancy: [(4, 0)]
3193-ContextAliasing: []

.....
-----
Block: 3293
3293Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3293-Stack size: 10 
3293-Equals Mem:<< []>> 
3293-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3293-Equals Sto:<< []>> 
3293-NonEquals Sto: << []>> 
3293-Useless: []
3293-Constancy: [(4, 0)]
3293-ContextAliasing: []

.....
-----
Block: 3384
3384Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3384-Stack size: 10 
3384-Equals Mem:<< []>> 
3384-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3384-Equals Sto:<< []>> 
3384-NonEquals Sto: << []>> 
3384-Useless: []
3384-Constancy: [(4, 0)]
3384-ContextAliasing: []

.....
-----
Block: 3558
3558Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3558-Stack size: 10 
3558-Equals Mem:<< []>> 
3558-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
3558-Equals Sto:<< []>> 
3558-NonEquals Sto: << []>> 
3558-Useless: []
3558-Constancy: [(4, 0)]
3558-ContextAliasing: []

.....
-----
Block: 3678
3678Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3678-Stack size: 10 
3678-Equals Mem:<< []>> 
3678-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3678-Equals Sto:<< []>> 
3678-NonEquals Sto: << []>> 
3678-Useless: []
3678-Constancy: [(4, 0)]
3678-ContextAliasing: []

.....
-----
Block: 3749
3749Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0ee5', 'JUMPI']>> 
3749-Stack size: 10 
3749-Equals Mem:<< []>> 
3749-NonEquals Mem: << [<11,14>]>> 
3749-Equals Sto:<< []>> 
3749-NonEquals Sto: << []>> 
3749-Useless: []
3749-Constancy: [(4, 0)]
3749-ContextAliasing: []

.....
-----
Block: 3784
3784Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3784-Stack size: 11 
3784-Equals Mem:<< []>> 
3784-NonEquals Mem: << [<11,14>]>> 
3784-Equals Sto:<< []>> 
3784-NonEquals Sto: << []>> 
3784-Useless: []
3784-Constancy: [(5, 0)]
3784-ContextAliasing: []

.....
-----
Block: 3818
3818Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x656421', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3818-Stack size: 10 
3818-Equals Mem:<< []>> 
3818-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3818-Equals Sto:<< []>> 
3818-NonEquals Sto: << []>> 
3818-Useless: []
3818-Constancy: [(4, 0)]
3818-ContextAliasing: []

.....
-----
Block: 1989_0
1989_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x067e', 'SWAP1', 'PUSH2 0x1209', 'JUMP']>> 
1989_0-Stack size: 14 
1989_0-Equals Mem:<< []>> 
1989_0-NonEquals Mem: << [<11,14>]>> 
1989_0-Equals Sto:<< []>> 
1989_0-NonEquals Sto: << []>> 
1989_0-Useless: []
1989_0-Constancy: [(8, 0)]
1989_0-ContextAliasing: []

.....
-----
Block: 4629_0
4629_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
4629_0-Stack size: 18 
4629_0-Equals Mem:<< []>> 
4629_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4629_0-Equals Sto:<< []>> 
4629_0-NonEquals Sto: << []>> 
4629_0-Useless: []
4629_0-Constancy: [(12, 0), (3, 0), (0, 0)]
4629_0-ContextAliasing: []

.....
-----
Block: 5194_8
5194_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_8-Stack size: 31 
5194_8-Equals Mem:<< [<11,6>]>> 
5194_8-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_8-Equals Sto:<< []>> 
5194_8-NonEquals Sto: << []>> 
5194_8-Useless: []
5194_8-Constancy: [(25, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_8-ContextAliasing: []

.....
-----
Block: 5616_10
5616_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_10-Stack size: 38 
5616_10-Equals Mem:<< []>> 
5616_10-NonEquals Mem: << [<6,1>]>> 
5616_10-Equals Sto:<< []>> 
5616_10-NonEquals Sto: << []>> 
5616_10-Useless: []
5616_10-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_10-ContextAliasing: [(2, 37)]

.....
-----
Block: 6534_18
6534_18Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_18-Stack size: 40 
6534_18-Equals Mem:<< []>> 
6534_18-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_18-Equals Sto:<< []>> 
6534_18-NonEquals Sto: << []>> 
6534_18-Useless: []
6534_18-Constancy: [(34, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_18-ContextAliasing: [(4, 38)]

.....
-----
Block: 6558_18
6558_18Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_18-Stack size: 44 
6558_18-Equals Mem:<< []>> 
6558_18-NonEquals Mem: << [<11,5>]>> 
6558_18-Equals Sto:<< []>> 
6558_18-NonEquals Sto: << []>> 
6558_18-Useless: []
6558_18-Constancy: [(38, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_18-ContextAliasing: [(8, 38)]

.....
-----
Block: 7330_16
7330_16Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_16-Stack size: 42 
7330_16-Equals Mem:<< []>> 
7330_16-NonEquals Mem: << [<4,7>]>> 
7330_16-Equals Sto:<< []>> 
7330_16-NonEquals Sto: << []>> 
7330_16-Useless: []
7330_16-Constancy: [(36, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_16-ContextAliasing: []

.....
-----
Block: 5194_9
5194_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_9-Stack size: 26 
5194_9-Equals Mem:<< [<11,6>]>> 
5194_9-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_9-Equals Sto:<< []>> 
5194_9-NonEquals Sto: << []>> 
5194_9-Useless: []
5194_9-Constancy: [(20, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
5194_9-ContextAliasing: []

.....
-----
Block: 5616_9
5616_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_9-Stack size: 33 
5616_9-Equals Mem:<< []>> 
5616_9-NonEquals Mem: << [<6,1>]>> 
5616_9-Equals Sto:<< []>> 
5616_9-NonEquals Sto: << []>> 
5616_9-Useless: []
5616_9-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_9-ContextAliasing: [(2, 32)]

.....
-----
Block: 6534_17
6534_17Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_17-Stack size: 35 
6534_17-Equals Mem:<< []>> 
6534_17-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_17-Equals Sto:<< []>> 
6534_17-NonEquals Sto: << []>> 
6534_17-Useless: []
6534_17-Constancy: [(29, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_17-ContextAliasing: [(4, 33)]

.....
-----
Block: 6558_17
6558_17Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_17-Stack size: 39 
6558_17-Equals Mem:<< []>> 
6558_17-NonEquals Mem: << [<11,5>]>> 
6558_17-Equals Sto:<< []>> 
6558_17-NonEquals Sto: << []>> 
6558_17-Useless: []
6558_17-Constancy: [(33, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_17-ContextAliasing: [(8, 33)]

.....
-----
Block: 7330_15
7330_15Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_15-Stack size: 37 
7330_15-Equals Mem:<< []>> 
7330_15-NonEquals Mem: << [<4,7>]>> 
7330_15-Equals Sto:<< []>> 
7330_15-NonEquals Sto: << []>> 
7330_15-Useless: []
7330_15-Constancy: [(31, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_15-ContextAliasing: []

.....
-----
Block: 5194_10
5194_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_10-Stack size: 22 
5194_10-Equals Mem:<< [<11,6>]>> 
5194_10-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_10-Equals Sto:<< []>> 
5194_10-NonEquals Sto: << []>> 
5194_10-Useless: []
5194_10-Constancy: [(16, 0), (7, 0), (4, 0)]
5194_10-ContextAliasing: []

.....
-----
Block: 5616_8
5616_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_8-Stack size: 29 
5616_8-Equals Mem:<< []>> 
5616_8-NonEquals Mem: << [<6,1>]>> 
5616_8-Equals Sto:<< []>> 
5616_8-NonEquals Sto: << []>> 
5616_8-Useless: []
5616_8-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
5616_8-ContextAliasing: [(2, 28)]

.....
-----
Block: 6534_16
6534_16Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_16-Stack size: 31 
6534_16-Equals Mem:<< []>> 
6534_16-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_16-Equals Sto:<< []>> 
6534_16-NonEquals Sto: << []>> 
6534_16-Useless: []
6534_16-Constancy: [(25, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
6534_16-ContextAliasing: [(4, 29)]

.....
-----
Block: 6558_16
6558_16Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_16-Stack size: 35 
6558_16-Equals Mem:<< []>> 
6558_16-NonEquals Mem: << [<11,5>]>> 
6558_16-Equals Sto:<< []>> 
6558_16-NonEquals Sto: << []>> 
6558_16-Useless: []
6558_16-Constancy: [(29, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_16-ContextAliasing: [(8, 29)]

.....
-----
Block: 7330_14
7330_14Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_14-Stack size: 33 
7330_14-Equals Mem:<< []>> 
7330_14-NonEquals Mem: << [<4,7>]>> 
7330_14-Equals Sto:<< []>> 
7330_14-NonEquals Sto: << []>> 
7330_14-Useless: []
7330_14-Constancy: [(27, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_14-ContextAliasing: []

.....
-----
Block: 7103_16
7103_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_16-Stack size: 16 
7103_16-Equals Mem:<< []>> 
7103_16-NonEquals Mem: << [<5,8>]>> 
7103_16-Equals Sto:<< []>> 
7103_16-NonEquals Sto: << []>> 
7103_16-Useless: []
7103_16-Constancy: [(10, 0)]
7103_16-ContextAliasing: []

.....
-----
Block: 3951
3951Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x7a6521', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3951-Stack size: 10 
3951-Equals Mem:<< []>> 
3951-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3951-Equals Sto:<< []>> 
3951-NonEquals Sto: << []>> 
3951-Useless: []
3951-Constancy: [(4, 0)]
3951-ContextAliasing: []

.....
-----
Block: 1989
1989Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x067e', 'SWAP1', 'PUSH2 0x1209', 'JUMP']>> 
1989-Stack size: 13 
1989-Equals Mem:<< []>> 
1989-NonEquals Mem: << [<11,14>]>> 
1989-Equals Sto:<< []>> 
1989-NonEquals Sto: << []>> 
1989-Useless: []
1989-Constancy: [(7, 0), (2, 0)]
1989-ContextAliasing: []

.....
-----
Block: 4629
4629Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
4629-Stack size: 17 
4629-Equals Mem:<< []>> 
4629-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4629-Equals Sto:<< []>> 
4629-NonEquals Sto: << []>> 
4629-Useless: []
4629-Constancy: [(11, 0), (6, 0), (3, 0), (0, 0)]
4629-ContextAliasing: []

.....
-----
Block: 5194_5
5194_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_5-Stack size: 30 
5194_5-Equals Mem:<< [<11,6>]>> 
5194_5-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_5-Equals Sto:<< []>> 
5194_5-NonEquals Sto: << []>> 
5194_5-Useless: []
5194_5-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_5-ContextAliasing: []

.....
-----
Block: 5616_7
5616_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_7-Stack size: 37 
5616_7-Equals Mem:<< []>> 
5616_7-NonEquals Mem: << [<6,1>]>> 
5616_7-Equals Sto:<< []>> 
5616_7-NonEquals Sto: << []>> 
5616_7-Useless: []
5616_7-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_7-ContextAliasing: [(2, 36)]

.....
-----
Block: 6534_15
6534_15Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_15-Stack size: 39 
6534_15-Equals Mem:<< []>> 
6534_15-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_15-Equals Sto:<< []>> 
6534_15-NonEquals Sto: << []>> 
6534_15-Useless: []
6534_15-Constancy: [(33, 0), (28, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_15-ContextAliasing: [(4, 37)]

.....
-----
Block: 6558_15
6558_15Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_15-Stack size: 43 
6558_15-Equals Mem:<< []>> 
6558_15-NonEquals Mem: << [<11,5>]>> 
6558_15-Equals Sto:<< []>> 
6558_15-NonEquals Sto: << []>> 
6558_15-Useless: []
6558_15-Constancy: [(37, 0), (32, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_15-ContextAliasing: [(8, 37)]

.....
-----
Block: 7330_13
7330_13Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_13-Stack size: 41 
7330_13-Equals Mem:<< []>> 
7330_13-NonEquals Mem: << [<4,7>]>> 
7330_13-Equals Sto:<< []>> 
7330_13-NonEquals Sto: << []>> 
7330_13-Useless: []
7330_13-Constancy: [(35, 0), (30, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_13-ContextAliasing: []

.....
-----
Block: 5194_6
5194_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_6-Stack size: 25 
5194_6-Equals Mem:<< [<11,6>]>> 
5194_6-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_6-Equals Sto:<< []>> 
5194_6-NonEquals Sto: << []>> 
5194_6-Useless: []
5194_6-Constancy: [(19, 0), (14, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
5194_6-ContextAliasing: []

.....
-----
Block: 5616_6
5616_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_6-Stack size: 32 
5616_6-Equals Mem:<< []>> 
5616_6-NonEquals Mem: << [<6,1>]>> 
5616_6-Equals Sto:<< []>> 
5616_6-NonEquals Sto: << []>> 
5616_6-Useless: []
5616_6-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_6-ContextAliasing: [(2, 31)]

.....
-----
Block: 6534_14
6534_14Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_14-Stack size: 34 
6534_14-Equals Mem:<< []>> 
6534_14-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_14-Equals Sto:<< []>> 
6534_14-NonEquals Sto: << []>> 
6534_14-Useless: []
6534_14-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_14-ContextAliasing: [(4, 32)]

.....
-----
Block: 6558_14
6558_14Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_14-Stack size: 38 
6558_14-Equals Mem:<< []>> 
6558_14-NonEquals Mem: << [<11,5>]>> 
6558_14-Equals Sto:<< []>> 
6558_14-NonEquals Sto: << []>> 
6558_14-Useless: []
6558_14-Constancy: [(32, 0), (27, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_14-ContextAliasing: [(8, 32)]

.....
-----
Block: 7330_12
7330_12Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_12-Stack size: 36 
7330_12-Equals Mem:<< []>> 
7330_12-NonEquals Mem: << [<4,7>]>> 
7330_12-Equals Sto:<< []>> 
7330_12-NonEquals Sto: << []>> 
7330_12-Useless: []
7330_12-Constancy: [(30, 0), (25, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_12-ContextAliasing: []

.....
-----
Block: 5194_7
5194_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_7-Stack size: 21 
5194_7-Equals Mem:<< [<11,6>]>> 
5194_7-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_7-Equals Sto:<< []>> 
5194_7-NonEquals Sto: << []>> 
5194_7-Useless: []
5194_7-Constancy: [(15, 0), (10, 0), (7, 0), (4, 0)]
5194_7-ContextAliasing: []

.....
-----
Block: 5616_5
5616_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_5-Stack size: 28 
5616_5-Equals Mem:<< []>> 
5616_5-NonEquals Mem: << [<6,1>]>> 
5616_5-Equals Sto:<< []>> 
5616_5-NonEquals Sto: << []>> 
5616_5-Useless: []
5616_5-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
5616_5-ContextAliasing: [(2, 27)]

.....
-----
Block: 6534_13
6534_13Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_13-Stack size: 30 
6534_13-Equals Mem:<< []>> 
6534_13-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_13-Equals Sto:<< []>> 
6534_13-NonEquals Sto: << []>> 
6534_13-Useless: []
6534_13-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
6534_13-ContextAliasing: [(4, 28)]

.....
-----
Block: 6558_13
6558_13Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_13-Stack size: 34 
6558_13-Equals Mem:<< []>> 
6558_13-NonEquals Mem: << [<11,5>]>> 
6558_13-Equals Sto:<< []>> 
6558_13-NonEquals Sto: << []>> 
6558_13-Useless: []
6558_13-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_13-ContextAliasing: [(8, 28)]

.....
-----
Block: 7330_11
7330_11Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_11-Stack size: 32 
7330_11-Equals Mem:<< []>> 
7330_11-NonEquals Mem: << [<4,7>]>> 
7330_11-Equals Sto:<< []>> 
7330_11-NonEquals Sto: << []>> 
7330_11-Useless: []
7330_11-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_11-ContextAliasing: []

.....
-----
Block: 4146
4146Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
4146-Stack size: 13 
4146-Equals Mem:<< []>> 
4146-NonEquals Mem: << [<11,14>]>> 
4146-Equals Sto:<< []>> 
4146-NonEquals Sto: << []>> 
4146-Useless: []
4146-Constancy: [(7, 0)]
4146-ContextAliasing: []

.....
-----
Block: 4182
4182Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
4182-Stack size: 13 
4182-Equals Mem:<< []>> 
4182-NonEquals Mem: << [<11,14>]>> 
4182-Equals Sto:<< []>> 
4182-NonEquals Sto: << []>> 
4182-Useless: []
4182-Constancy: [(7, 0)]
4182-ContextAliasing: []

.....
-----
Block: 7083_1
7083_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083_1-Stack size: 19 
7083_1-Equals Mem:<< []>> 
7083_1-NonEquals Mem: << [<5,8>]>> 
7083_1-Equals Sto:<< []>> 
7083_1-NonEquals Sto: << []>> 
7083_1-Useless: []
7083_1-Constancy: [(13, 0), (1, 0)]
7083_1-ContextAliasing: [(4, 16)]

.....
-----
Block: 4904
4904Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x134c', 'SWAP2', 'SWAP1', 'PUSH2 0x1c11', 'JUMP']>> 
4904-Stack size: 19 
4904-Equals Mem:<< [<18,6>]>> 
4904-NonEquals Mem: << []>> 
4904-Equals Sto:<< []>> 
4904-NonEquals Sto: << []>> 
4904-Useless: []
4904-Constancy: [(13, 0)]
4904-ContextAliasing: []

.....
-----
Block: 7083_0
7083_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083_0-Stack size: 19 
7083_0-Equals Mem:<< []>> 
7083_0-NonEquals Mem: << [<5,8>]>> 
7083_0-Equals Sto:<< []>> 
7083_0-NonEquals Sto: << []>> 
7083_0-Useless: []
7083_0-Constancy: [(13, 0)]
7083_0-ContextAliasing: [(4, 16)]

.....
-----
Block: 2902_1
2902_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2902_1-Stack size: 19 
2902_1-Equals Mem:<< []>> 
2902_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2902_1-Equals Sto:<< []>> 
2902_1-NonEquals Sto: << []>> 
2902_1-Useless: []
2902_1-Constancy: [(13, 0)]
2902_1-ContextAliasing: []

.....
-----
Block: 3000_1
3000_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3000_1-Stack size: 19 
3000_1-Equals Mem:<< []>> 
3000_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3000_1-Equals Sto:<< []>> 
3000_1-NonEquals Sto: << []>> 
3000_1-Useless: []
3000_1-Constancy: [(13, 0)]
3000_1-ContextAliasing: []

.....
-----
Block: 4997
4997Instr:<<['JUMPDEST', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x13bd', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1c2c', 'JUMP']>> 
4997-Stack size: 15 
4997-Equals Mem:<< []>> 
4997-NonEquals Mem: << [<9,4>]>> 
4997-Equals Sto:<< []>> 
4997-NonEquals Sto: << []>> 
4997-Useless: []
4997-Constancy: [(9, 0)]
4997-ContextAliasing: []

.....
-----
Block: 7212
7212Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
7212-Stack size: 24 
7212-Equals Mem:<< []>> 
7212-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
7212-Equals Sto:<< []>> 
7212-NonEquals Sto: << []>> 
7212-Useless: []
7212-Constancy: [(18, 0), (4, 0)]
7212-ContextAliasing: [(9, 20)]

.....
-----
Block: 7262
7262Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1c55', 'JUMP']>> 
7262-Stack size: 30 
7262-Equals Mem:<< []>> 
7262-NonEquals Mem: << [<9,1>]>> 
7262-Equals Sto:<< []>> 
7262-NonEquals Sto: << []>> 
7262-Useless: []
7262-Constancy: [(24, 0), (10, 0), (5, 0), (3, 32)]
7262-ContextAliasing: [(15, 20)]

.....
-----
Block: 4246
4246Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x01', 'SWAP1', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x10d6', 'JUMPI']>> 
4246-Stack size: 10 
4246-Equals Mem:<< []>> 
4246-NonEquals Mem: << [<11,14>]>> 
4246-Equals Sto:<< []>> 
4246-NonEquals Sto: << []>> 
4246-Useless: []
4246-Constancy: [(4, 0)]
4246-ContextAliasing: []

.....
-----
Block: 4282
4282Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
4282-Stack size: 12 
4282-Equals Mem:<< []>> 
4282-NonEquals Mem: << [<11,14>]>> 
4282-Equals Sto:<< []>> 
4282-NonEquals Sto: << []>> 
4282-Useless: []
4282-Constancy: [(6, 0)]
4282-ContextAliasing: []

.....
-----
Block: 5194
5194Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194-Stack size: 48 
5194-Equals Mem:<< [<11,6>]>> 
5194-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194-Equals Sto:<< []>> 
5194-NonEquals Sto: << []>> 
5194-Useless: []
5194-Constancy: [(42, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (6, 0), (5, 0), (4, 0), (3, 0)]
5194-ContextAliasing: []

.....
-----
Block: 5616_4
5616_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_4-Stack size: 55 
5616_4-Equals Mem:<< []>> 
5616_4-NonEquals Mem: << [<6,1>]>> 
5616_4-Equals Sto:<< []>> 
5616_4-NonEquals Sto: << []>> 
5616_4-Useless: []
5616_4-Constancy: [(49, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
5616_4-ContextAliasing: [(2, 54)]

.....
-----
Block: 6534_12
6534_12Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_12-Stack size: 57 
6534_12-Equals Mem:<< []>> 
6534_12-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_12-Equals Sto:<< []>> 
6534_12-NonEquals Sto: << []>> 
6534_12-Useless: []
6534_12-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (8, 0), (3, 0)]
6534_12-ContextAliasing: [(4, 55)]

.....
-----
Block: 6558_12
6558_12Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_12-Stack size: 61 
6558_12-Equals Mem:<< []>> 
6558_12-NonEquals Mem: << [<11,5>]>> 
6558_12-Equals Sto:<< []>> 
6558_12-NonEquals Sto: << []>> 
6558_12-Useless: []
6558_12-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_12-ContextAliasing: [(8, 55)]

.....
-----
Block: 7330_9
7330_9Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_9-Stack size: 59 
7330_9-Equals Mem:<< []>> 
7330_9-NonEquals Mem: << [<4,7>]>> 
7330_9-Equals Sto:<< []>> 
7330_9-NonEquals Sto: << []>> 
7330_9-Useless: []
7330_9-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_9-ContextAliasing: []

.....
-----
Block: 5194_0
5194_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_0-Stack size: 49 
5194_0-Equals Mem:<< [<11,6>]>> 
5194_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_0-Equals Sto:<< []>> 
5194_0-NonEquals Sto: << []>> 
5194_0-Useless: []
5194_0-Constancy: [(43, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
5194_0-ContextAliasing: []

.....
-----
Block: 5616_3
5616_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_3-Stack size: 56 
5616_3-Equals Mem:<< []>> 
5616_3-NonEquals Mem: << [<6,1>]>> 
5616_3-Equals Sto:<< []>> 
5616_3-NonEquals Sto: << []>> 
5616_3-Useless: []
5616_3-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
5616_3-ContextAliasing: [(2, 55)]

.....
-----
Block: 6534_11
6534_11Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_11-Stack size: 58 
6534_11-Equals Mem:<< []>> 
6534_11-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_11-Equals Sto:<< []>> 
6534_11-NonEquals Sto: << []>> 
6534_11-Useless: []
6534_11-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
6534_11-ContextAliasing: [(4, 56)]

.....
-----
Block: 6558_11
6558_11Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_11-Stack size: 62 
6558_11-Equals Mem:<< []>> 
6558_11-NonEquals Mem: << [<11,5>]>> 
6558_11-Equals Sto:<< []>> 
6558_11-NonEquals Sto: << []>> 
6558_11-Useless: []
6558_11-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_11-ContextAliasing: [(8, 56)]

.....
-----
Block: 7330_7
7330_7Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_7-Stack size: 60 
7330_7-Equals Mem:<< []>> 
7330_7-NonEquals Mem: << [<4,7>]>> 
7330_7-Equals Sto:<< []>> 
7330_7-NonEquals Sto: << []>> 
7330_7-Useless: []
7330_7-Constancy: [(54, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_7-ContextAliasing: []

.....
-----
Block: 5737
5737Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737-Stack size: 52 
5737-Equals Mem:<< [<11,6>]>> 
5737-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737-Equals Sto:<< []>> 
5737-NonEquals Sto: << []>> 
5737-Useless: []
5737-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (5, 0)]
5737-ContextAliasing: []

.....
-----
Block: 4517_5
4517_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_5-Stack size: 59 
4517_5-Equals Mem:<< []>> 
4517_5-NonEquals Mem: << [<6,1>]>> 
4517_5-Equals Sto:<< []>> 
4517_5-NonEquals Sto: << []>> 
4517_5-Useless: []
4517_5-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
4517_5-ContextAliasing: [(2, 58)]

.....
-----
Block: 6534_10
6534_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_10-Stack size: 61 
6534_10-Equals Mem:<< []>> 
6534_10-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_10-Equals Sto:<< []>> 
6534_10-NonEquals Sto: << []>> 
6534_10-Useless: []
6534_10-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (14, 0), (8, 0), (3, 0)]
6534_10-ContextAliasing: [(4, 59)]

.....
-----
Block: 6558_10
6558_10Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_10-Stack size: 65 
6558_10-Equals Mem:<< []>> 
6558_10-NonEquals Mem: << [<11,5>]>> 
6558_10-Equals Sto:<< []>> 
6558_10-NonEquals Sto: << []>> 
6558_10-Useless: []
6558_10-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_10-ContextAliasing: [(8, 59)]

.....
-----
Block: 7103_13
7103_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_13-Stack size: 64 
7103_13-Equals Mem:<< []>> 
7103_13-NonEquals Mem: << [<5,8>]>> 
7103_13-Equals Sto:<< []>> 
7103_13-NonEquals Sto: << []>> 
7103_13-Useless: []
7103_13-Constancy: [(58, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
7103_13-ContextAliasing: []

.....
-----
Block: 5737_0
5737_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_0-Stack size: 50 
5737_0-Equals Mem:<< [<11,6>]>> 
5737_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_0-Equals Sto:<< []>> 
5737_0-NonEquals Sto: << []>> 
5737_0-Useless: []
5737_0-Constancy: [(44, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (8, 0), (7, 0), (6, 0), (3, 0)]
5737_0-ContextAliasing: []

.....
-----
Block: 4517_4
4517_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_4-Stack size: 57 
4517_4-Equals Mem:<< []>> 
4517_4-NonEquals Mem: << [<6,1>]>> 
4517_4-Equals Sto:<< []>> 
4517_4-NonEquals Sto: << []>> 
4517_4-Useless: []
4517_4-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
4517_4-ContextAliasing: [(2, 56)]

.....
-----
Block: 6534_9
6534_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_9-Stack size: 59 
6534_9-Equals Mem:<< []>> 
6534_9-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_9-Equals Sto:<< []>> 
6534_9-NonEquals Sto: << []>> 
6534_9-Useless: []
6534_9-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (8, 0), (3, 0)]
6534_9-ContextAliasing: [(4, 57)]

.....
-----
Block: 6558_9
6558_9Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_9-Stack size: 63 
6558_9-Equals Mem:<< []>> 
6558_9-NonEquals Mem: << [<11,5>]>> 
6558_9-Equals Sto:<< []>> 
6558_9-NonEquals Sto: << []>> 
6558_9-Useless: []
6558_9-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_9-ContextAliasing: [(8, 57)]

.....
-----
Block: 7103_12
7103_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_12-Stack size: 62 
7103_12-Equals Mem:<< []>> 
7103_12-NonEquals Mem: << [<5,8>]>> 
7103_12-Equals Sto:<< []>> 
7103_12-NonEquals Sto: << []>> 
7103_12-Useless: []
7103_12-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
7103_12-ContextAliasing: []

.....
-----
Block: 5194_1
5194_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_1-Stack size: 50 
5194_1-Equals Mem:<< [<11,6>]>> 
5194_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_1-Equals Sto:<< []>> 
5194_1-NonEquals Sto: << []>> 
5194_1-Useless: []
5194_1-Constancy: [(44, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_1-ContextAliasing: []

.....
-----
Block: 5616_2
5616_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_2-Stack size: 57 
5616_2-Equals Mem:<< []>> 
5616_2-NonEquals Mem: << [<6,1>]>> 
5616_2-Equals Sto:<< []>> 
5616_2-NonEquals Sto: << []>> 
5616_2-Useless: []
5616_2-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_2-ContextAliasing: [(2, 56)]

.....
-----
Block: 6534_8
6534_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_8-Stack size: 59 
6534_8-Equals Mem:<< []>> 
6534_8-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_8-Equals Sto:<< []>> 
6534_8-NonEquals Sto: << []>> 
6534_8-Useless: []
6534_8-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_8-ContextAliasing: [(4, 57)]

.....
-----
Block: 6558_8
6558_8Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_8-Stack size: 63 
6558_8-Equals Mem:<< []>> 
6558_8-NonEquals Mem: << [<11,5>]>> 
6558_8-Equals Sto:<< []>> 
6558_8-NonEquals Sto: << []>> 
6558_8-Useless: []
6558_8-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_8-ContextAliasing: [(8, 57)]

.....
-----
Block: 7330_6
7330_6Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_6-Stack size: 61 
7330_6-Equals Mem:<< []>> 
7330_6-NonEquals Mem: << [<4,7>]>> 
7330_6-Equals Sto:<< []>> 
7330_6-NonEquals Sto: << []>> 
7330_6-Useless: []
7330_6-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_6-ContextAliasing: []

.....
-----
Block: 5194_2
5194_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_2-Stack size: 45 
5194_2-Equals Mem:<< [<11,6>]>> 
5194_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_2-Equals Sto:<< []>> 
5194_2-NonEquals Sto: << []>> 
5194_2-Useless: []
5194_2-Constancy: [(39, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (7, 0), (5, 0)]
5194_2-ContextAliasing: []

.....
-----
Block: 5616_1
5616_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_1-Stack size: 52 
5616_1-Equals Mem:<< []>> 
5616_1-NonEquals Mem: << [<6,1>]>> 
5616_1-Equals Sto:<< []>> 
5616_1-NonEquals Sto: << []>> 
5616_1-Useless: []
5616_1-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616_1-ContextAliasing: [(2, 51)]

.....
-----
Block: 6534_7
6534_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_7-Stack size: 54 
6534_7-Equals Mem:<< []>> 
6534_7-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_7-Equals Sto:<< []>> 
6534_7-NonEquals Sto: << []>> 
6534_7-Useless: []
6534_7-Constancy: [(48, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_7-ContextAliasing: [(4, 52)]

.....
-----
Block: 6558_7
6558_7Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_7-Stack size: 58 
6558_7-Equals Mem:<< []>> 
6558_7-NonEquals Mem: << [<11,5>]>> 
6558_7-Equals Sto:<< []>> 
6558_7-NonEquals Sto: << []>> 
6558_7-Useless: []
6558_7-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_7-ContextAliasing: [(8, 52)]

.....
-----
Block: 7330_5
7330_5Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_5-Stack size: 56 
7330_5-Equals Mem:<< []>> 
7330_5-NonEquals Mem: << [<4,7>]>> 
7330_5-Equals Sto:<< []>> 
7330_5-NonEquals Sto: << []>> 
7330_5-Useless: []
7330_5-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_5-ContextAliasing: []

.....
-----
Block: 5737_1
5737_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_1-Stack size: 58 
5737_1-Equals Mem:<< [<11,6>]>> 
5737_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_1-Equals Sto:<< []>> 
5737_1-NonEquals Sto: << []>> 
5737_1-Useless: []
5737_1-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (5, 0)]
5737_1-ContextAliasing: []

.....
-----
Block: 4517_3
4517_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_3-Stack size: 65 
4517_3-Equals Mem:<< []>> 
4517_3-NonEquals Mem: << [<6,1>]>> 
4517_3-Equals Sto:<< []>> 
4517_3-NonEquals Sto: << []>> 
4517_3-Useless: []
4517_3-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
4517_3-ContextAliasing: [(2, 64)]

.....
-----
Block: 6534_6
6534_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_6-Stack size: 67 
6534_6-Equals Mem:<< []>> 
6534_6-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_6-Equals Sto:<< []>> 
6534_6-NonEquals Sto: << []>> 
6534_6-Useless: []
6534_6-Constancy: [(61, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (28, 0), (27, 0), (26, 0), (20, 0), (19, 0), (18, 0), (14, 0), (8, 0), (3, 0)]
6534_6-ContextAliasing: [(4, 65)]

.....
-----
Block: 6558_6
6558_6Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_6-Stack size: 71 
6558_6-Equals Mem:<< []>> 
6558_6-NonEquals Mem: << [<11,5>]>> 
6558_6-Equals Sto:<< []>> 
6558_6-NonEquals Sto: << []>> 
6558_6-Useless: []
6558_6-Constancy: [(65, 0), (50, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (32, 0), (31, 0), (30, 0), (24, 0), (23, 0), (22, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_6-ContextAliasing: [(8, 65)]

.....
-----
Block: 7103_8
7103_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_8-Stack size: 70 
7103_8-Equals Mem:<< []>> 
7103_8-NonEquals Mem: << [<5,8>]>> 
7103_8-Equals Sto:<< []>> 
7103_8-NonEquals Sto: << []>> 
7103_8-Useless: []
7103_8-Constancy: [(64, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (31, 0), (30, 0), (29, 0), (23, 0), (22, 0), (21, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
7103_8-ContextAliasing: []

.....
-----
Block: 5737_2
5737_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_2-Stack size: 56 
5737_2-Equals Mem:<< [<11,6>]>> 
5737_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_2-Equals Sto:<< []>> 
5737_2-NonEquals Sto: << []>> 
5737_2-Useless: []
5737_2-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (3, 0)]
5737_2-ContextAliasing: []

.....
-----
Block: 4517_2
4517_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_2-Stack size: 63 
4517_2-Equals Mem:<< []>> 
4517_2-NonEquals Mem: << [<6,1>]>> 
4517_2-Equals Sto:<< []>> 
4517_2-NonEquals Sto: << []>> 
4517_2-Useless: []
4517_2-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
4517_2-ContextAliasing: [(2, 62)]

.....
-----
Block: 6534_5
6534_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_5-Stack size: 65 
6534_5-Equals Mem:<< []>> 
6534_5-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_5-Equals Sto:<< []>> 
6534_5-NonEquals Sto: << []>> 
6534_5-Useless: []
6534_5-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (8, 0), (3, 0)]
6534_5-ContextAliasing: [(4, 63)]

.....
-----
Block: 6558_5
6558_5Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_5-Stack size: 69 
6558_5-Equals Mem:<< []>> 
6558_5-NonEquals Mem: << [<11,5>]>> 
6558_5-Equals Sto:<< []>> 
6558_5-NonEquals Sto: << []>> 
6558_5-Useless: []
6558_5-Constancy: [(63, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (30, 0), (29, 0), (28, 0), (22, 0), (21, 0), (20, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_5-ContextAliasing: [(8, 63)]

.....
-----
Block: 7103_7
7103_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_7-Stack size: 68 
7103_7-Equals Mem:<< []>> 
7103_7-NonEquals Mem: << [<5,8>]>> 
7103_7-Equals Sto:<< []>> 
7103_7-NonEquals Sto: << []>> 
7103_7-Useless: []
7103_7-Constancy: [(62, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (29, 0), (28, 0), (27, 0), (21, 0), (20, 0), (19, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
7103_7-ContextAliasing: []

.....
-----
Block: 5319
5319Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP16', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP6', 'SWAP12', 'POP', 'SWAP4', 'SWAP10', 'POP', 'SWAP2', 'SWAP8', 'POP', 'SWAP6', 'POP', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x14f8', 'SWAP1', 'DUP8', 'PUSH2 0x1669', 'JUMP']>> 
5319-Stack size: 32 
5319-Equals Mem:<< []>> 
5319-NonEquals Mem: << [<11,14>]>> 
5319-Equals Sto:<< []>> 
5319-NonEquals Sto: << []>> 
5319-Useless: []
5319-Constancy: [(26, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0)]
5319-ContextAliasing: []

.....
-----
Block: 5737_3
5737_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_3-Stack size: 29 
5737_3-Equals Mem:<< [<11,6>]>> 
5737_3-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_3-Equals Sto:<< []>> 
5737_3-NonEquals Sto: << []>> 
5737_3-Useless: []
5737_3-Constancy: [(23, 0)]
5737_3-ContextAliasing: []

.....
-----
Block: 4517_1
4517_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_1-Stack size: 36 
4517_1-Equals Mem:<< []>> 
4517_1-NonEquals Mem: << [<6,1>]>> 
4517_1-Equals Sto:<< []>> 
4517_1-NonEquals Sto: << []>> 
4517_1-Useless: []
4517_1-Constancy: [(30, 0), (6, 0), (1, 0)]
4517_1-ContextAliasing: [(2, 35)]

.....
-----
Block: 6534_4
6534_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_4-Stack size: 38 
6534_4-Equals Mem:<< []>> 
6534_4-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_4-Equals Sto:<< []>> 
6534_4-NonEquals Sto: << []>> 
6534_4-Useless: []
6534_4-Constancy: [(32, 0), (8, 0), (3, 0)]
6534_4-ContextAliasing: [(4, 36)]

.....
-----
Block: 6558_4
6558_4Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_4-Stack size: 42 
6558_4-Equals Mem:<< []>> 
6558_4-NonEquals Mem: << [<11,5>]>> 
6558_4-Equals Sto:<< []>> 
6558_4-NonEquals Sto: << []>> 
6558_4-Useless: []
6558_4-Constancy: [(36, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_4-ContextAliasing: [(8, 36)]

.....
-----
Block: 7103_6
7103_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_6-Stack size: 41 
7103_6-Equals Mem:<< []>> 
7103_6-NonEquals Mem: << [<5,8>]>> 
7103_6-Equals Sto:<< []>> 
7103_6-NonEquals Sto: << []>> 
7103_6-Useless: []
7103_6-Constancy: [(35, 0), (11, 0), (6, 0), (5, 0)]
7103_6-ContextAliasing: []

.....
-----
Block: 5368
5368Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP12', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP11', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1526', 'SWAP1', 'DUP7', 'PUSH2 0x16aa', 'JUMP']>> 
5368-Stack size: 27 
5368-Equals Mem:<< [<12,28>]>> 
5368-NonEquals Mem: << [<12,15>, <15,28>]>> 
5368-Equals Sto:<< [<23,30>]>> 
5368-NonEquals Sto: << []>> 
5368-Useless: []
5368-Constancy: [(21, 0)]
5368-ContextAliasing: []

.....
-----
Block: 7103_5
7103_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_5-Stack size: 36 
7103_5-Equals Mem:<< []>> 
7103_5-NonEquals Mem: << [<5,8>]>> 
7103_5-Equals Sto:<< []>> 
7103_5-NonEquals Sto: << []>> 
7103_5-Useless: []
7103_5-Constancy: [(30, 0), (6, 0), (5, 0)]
7103_5-ContextAliasing: []

.....
-----
Block: 5825_1
5825_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
5825_1-Stack size: 31 
5825_1-Equals Mem:<< []>> 
5825_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5825_1-Equals Sto:<< []>> 
5825_1-NonEquals Sto: << []>> 
5825_1-Useless: []
5825_1-Constancy: [(25, 0), (1, 0)]
5825_1-ContextAliasing: []

.....
-----
Block: 5414
5414Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP10', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1547', 'DUP2', 'PUSH2 0x1708', 'JUMP']>> 
5414-Stack size: 27 
5414-Equals Mem:<< []>> 
5414-NonEquals Mem: << [<11,14>]>> 
5414-Equals Sto:<< []>> 
5414-NonEquals Sto: << []>> 
5414-Useless: []
5414-Constancy: [(21, 0)]
5414-ContextAliasing: []

.....
-----
Block: 5194_3
5194_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_3-Stack size: 41 
5194_3-Equals Mem:<< [<11,6>]>> 
5194_3-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_3-Equals Sto:<< []>> 
5194_3-NonEquals Sto: << []>> 
5194_3-Useless: []
5194_3-Constancy: [(35, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
5194_3-ContextAliasing: []

.....
-----
Block: 5616_0
5616_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616_0-Stack size: 48 
5616_0-Equals Mem:<< []>> 
5616_0-NonEquals Mem: << [<6,1>]>> 
5616_0-Equals Sto:<< []>> 
5616_0-NonEquals Sto: << []>> 
5616_0-Useless: []
5616_0-Constancy: [(42, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
5616_0-ContextAliasing: [(2, 47)]

.....
-----
Block: 6534_3
6534_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_3-Stack size: 50 
6534_3-Equals Mem:<< []>> 
6534_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_3-Equals Sto:<< []>> 
6534_3-NonEquals Sto: << []>> 
6534_3-Useless: []
6534_3-Constancy: [(44, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
6534_3-ContextAliasing: [(4, 48)]

.....
-----
Block: 6558_3
6558_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_3-Stack size: 54 
6558_3-Equals Mem:<< []>> 
6558_3-NonEquals Mem: << [<11,5>]>> 
6558_3-Equals Sto:<< []>> 
6558_3-NonEquals Sto: << []>> 
6558_3-Useless: []
6558_3-Constancy: [(48, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_3-ContextAliasing: [(8, 48)]

.....
-----
Block: 7330_1
7330_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_1-Stack size: 52 
7330_1-Equals Mem:<< []>> 
7330_1-NonEquals Mem: << [<4,7>]>> 
7330_1-Equals Sto:<< []>> 
7330_1-NonEquals Sto: << []>> 
7330_1-Useless: []
7330_1-Constancy: [(46, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_1-ContextAliasing: []

.....
-----
Block: 5194_4
5194_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194_4-Stack size: 36 
5194_4-Equals Mem:<< [<11,6>]>> 
5194_4-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5194_4-Equals Sto:<< []>> 
5194_4-NonEquals Sto: << []>> 
5194_4-Useless: []
5194_4-Constancy: [(30, 0), (7, 0), (5, 0)]
5194_4-ContextAliasing: []

.....
-----
Block: 5616
5616Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616-Stack size: 43 
5616-Equals Mem:<< []>> 
5616-NonEquals Mem: << [<6,1>]>> 
5616-Equals Sto:<< []>> 
5616-NonEquals Sto: << []>> 
5616-Useless: []
5616-Constancy: [(37, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
5616-ContextAliasing: [(2, 42)]

.....
-----
Block: 6534_2
6534_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_2-Stack size: 45 
6534_2-Equals Mem:<< []>> 
6534_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_2-Equals Sto:<< []>> 
6534_2-NonEquals Sto: << []>> 
6534_2-Useless: []
6534_2-Constancy: [(39, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
6534_2-ContextAliasing: [(4, 43)]

.....
-----
Block: 6558_2
6558_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_2-Stack size: 49 
6558_2-Equals Mem:<< []>> 
6558_2-NonEquals Mem: << [<11,5>]>> 
6558_2-Equals Sto:<< []>> 
6558_2-NonEquals Sto: << []>> 
6558_2-Useless: []
6558_2-Constancy: [(43, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_2-ContextAliasing: [(8, 43)]

.....
-----
Block: 7330_0
7330_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_0-Stack size: 47 
7330_0-Equals Mem:<< []>> 
7330_0-NonEquals Mem: << [<4,7>]>> 
7330_0-Equals Sto:<< []>> 
7330_0-NonEquals Sto: << []>> 
7330_0-Useless: []
7330_0-Constancy: [(41, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
7330_0-ContextAliasing: []

.....
-----
Block: 5918
5918Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH2 0x173a', 'SWAP1', 'DUP3', 'PUSH2 0x16aa', 'JUMP']>> 
5918-Stack size: 31 
5918-Equals Mem:<< []>> 
5918-NonEquals Mem: << [<5,8>]>> 
5918-Equals Sto:<< []>> 
5918-NonEquals Sto: << []>> 
5918-Useless: []
5918-Constancy: [(25, 0), (1, 0)]
5918-ContextAliasing: []

.....
-----
Block: 7103_3
7103_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_3-Stack size: 40 
7103_3-Equals Mem:<< []>> 
7103_3-NonEquals Mem: << [<5,8>]>> 
7103_3-Equals Sto:<< []>> 
7103_3-NonEquals Sto: << []>> 
7103_3-Useless: []
7103_3-Constancy: [(34, 0), (6, 0), (5, 0)]
7103_3-ContextAliasing: []

.....
-----
Block: 5825_0
5825_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
5825_0-Stack size: 35 
5825_0-Equals Mem:<< []>> 
5825_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5825_0-Equals Sto:<< []>> 
5825_0-NonEquals Sto: << []>> 
5825_0-Useless: []
5825_0-Constancy: [(29, 0), (1, 0)]
5825_0-ContextAliasing: []

.....
-----
Block: 5946
5946Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'POP', 'POP', 'POP', 'JUMP']>> 
5946-Stack size: 31 
5946-Equals Mem:<< []>> 
5946-NonEquals Mem: << [<5,8>]>> 
5946-Equals Sto:<< []>> 
5946-NonEquals Sto: << []>> 
5946-Useless: []
5946-Constancy: [(25, 0)]
5946-ContextAliasing: []

.....
-----
Block: 5737_4
5737_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737_4-Stack size: 32 
5737_4-Equals Mem:<< [<11,6>]>> 
5737_4-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5737_4-Equals Sto:<< []>> 
5737_4-NonEquals Sto: << []>> 
5737_4-Useless: []
5737_4-Constancy: [(26, 0)]
5737_4-ContextAliasing: []

.....
-----
Block: 4517_0
4517_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517_0-Stack size: 39 
4517_0-Equals Mem:<< []>> 
4517_0-NonEquals Mem: << [<6,1>]>> 
4517_0-Equals Sto:<< []>> 
4517_0-NonEquals Sto: << []>> 
4517_0-Useless: []
4517_0-Constancy: [(33, 0), (6, 0), (1, 0)]
4517_0-ContextAliasing: [(2, 38)]

.....
-----
Block: 6534_1
6534_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_1-Stack size: 41 
6534_1-Equals Mem:<< []>> 
6534_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_1-Equals Sto:<< []>> 
6534_1-NonEquals Sto: << []>> 
6534_1-Useless: []
6534_1-Constancy: [(35, 0), (8, 0), (3, 0)]
6534_1-ContextAliasing: [(4, 39)]

.....
-----
Block: 6558_1
6558_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_1-Stack size: 45 
6558_1-Equals Mem:<< []>> 
6558_1-NonEquals Mem: << [<11,5>]>> 
6558_1-Equals Sto:<< []>> 
6558_1-NonEquals Sto: << []>> 
6558_1-Useless: []
6558_1-Constancy: [(39, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
6558_1-ContextAliasing: [(8, 39)]

.....
-----
Block: 7103_2
7103_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_2-Stack size: 44 
7103_2-Equals Mem:<< []>> 
7103_2-NonEquals Mem: << [<5,8>]>> 
7103_2-Equals Sto:<< []>> 
7103_2-NonEquals Sto: << []>> 
7103_2-Useless: []
7103_2-Constancy: [(38, 0), (11, 0), (6, 0), (5, 0)]
7103_2-ContextAliasing: []

.....
-----
Block: 7103_1
7103_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_1-Stack size: 39 
7103_1-Equals Mem:<< []>> 
7103_1-NonEquals Mem: << [<5,8>]>> 
7103_1-Equals Sto:<< []>> 
7103_1-NonEquals Sto: << []>> 
7103_1-Useless: []
7103_1-Constancy: [(33, 0), (6, 0), (5, 0)]
7103_1-ContextAliasing: []

.....
-----
Block: 5825
5825Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
5825-Stack size: 34 
5825-Equals Mem:<< []>> 
5825-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5825-Equals Sto:<< []>> 
5825-NonEquals Sto: << []>> 
5825-Useless: []
5825-Constancy: [(28, 0), (1, 0)]
5825-ContextAliasing: []

.....
-----
Block: 5457
5457Instr:<<['JUMPDEST', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP10', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP6', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x1596', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
5457-Stack size: 26 
5457-Equals Mem:<< []>> 
5457-NonEquals Mem: << [<22,18>]>> 
5457-Equals Sto:<< []>> 
5457-NonEquals Sto: << []>> 
5457-Useless: []
5457-Constancy: [(20, 0)]
5457-ContextAliasing: []

.....
-----
Block: 4517
4517Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517-Stack size: 15 
4517-Equals Mem:<< []>> 
4517-NonEquals Mem: << [<6,1>]>> 
4517-Equals Sto:<< []>> 
4517-NonEquals Sto: << []>> 
4517-Useless: []
4517-Constancy: [(9, 0), (1, 0)]
4517-ContextAliasing: [(2, 14)]

.....
-----
Block: 6534_0
6534_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534_0-Stack size: 17 
6534_0-Equals Mem:<< []>> 
6534_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
6534_0-Equals Sto:<< []>> 
6534_0-NonEquals Sto: << []>> 
6534_0-Useless: []
6534_0-Constancy: [(11, 0), (3, 0)]
6534_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 6558_0
6558_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558_0-Stack size: 21 
6558_0-Equals Mem:<< []>> 
6558_0-NonEquals Mem: << [<11,5>]>> 
6558_0-Equals Sto:<< []>> 
6558_0-NonEquals Sto: << []>> 
6558_0-Useless: []
6558_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
6558_0-ContextAliasing: [(8, 15)]

.....
-----
Block: 7103_0
7103_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_0-Stack size: 20 
7103_0-Equals Mem:<< []>> 
7103_0-NonEquals Mem: << [<5,8>]>> 
7103_0-Equals Sto:<< []>> 
7103_0-NonEquals Sto: << []>> 
7103_0-Useless: []
7103_0-Constancy: [(14, 0), (6, 0), (5, 0)]
7103_0-ContextAliasing: []

.....
-----
Block: 2902_0
2902_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2902_0-Stack size: 10 
2902_0-Equals Mem:<< []>> 
2902_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2902_0-Equals Sto:<< []>> 
2902_0-NonEquals Sto: << []>> 
2902_0-Useless: []
2902_0-Constancy: [(4, 0)]
2902_0-ContextAliasing: []

.....
-----
Block: 3000_0
3000_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3000_0-Stack size: 10 
3000_0-Equals Mem:<< []>> 
3000_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3000_0-Equals Sto:<< []>> 
3000_0-NonEquals Sto: << []>> 
3000_0-Useless: []
3000_0-Constancy: [(4, 0)]
3000_0-ContextAliasing: []

.....
-----
Block: 7103_4
7103_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_4-Stack size: 40 
7103_4-Equals Mem:<< []>> 
7103_4-NonEquals Mem: << [<5,8>]>> 
7103_4-Equals Sto:<< []>> 
7103_4-NonEquals Sto: << []>> 
7103_4-Useless: []
7103_4-Constancy: [(34, 0), (10, 0), (6, 0), (5, 0)]
7103_4-ContextAliasing: []

.....
-----
Block: 7330
7330Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330-Stack size: 40 
7330-Equals Mem:<< []>> 
7330-NonEquals Mem: << [<4,7>]>> 
7330-Equals Sto:<< []>> 
7330-NonEquals Sto: << []>> 
7330-Useless: []
7330-Constancy: [(34, 0), (10, 0), (6, 0), (0, 0)]
7330-ContextAliasing: []

.....
-----
Block: 6205
6205Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205-Stack size: 35 
6205-Equals Mem:<< []>> 
6205-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205-Equals Sto:<< []>> 
6205-NonEquals Sto: << []>> 
6205-Useless: []
6205-Constancy: [(29, 0), (5, 0), (1, 0)]
6205-ContextAliasing: []

.....
-----
Block: 7103_9
7103_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_9-Stack size: 62 
7103_9-Equals Mem:<< []>> 
7103_9-NonEquals Mem: << [<5,8>]>> 
7103_9-Equals Sto:<< []>> 
7103_9-NonEquals Sto: << []>> 
7103_9-Useless: []
7103_9-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (5, 0)]
7103_9-ContextAliasing: []

.....
-----
Block: 7330_2
7330_2Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_2-Stack size: 62 
7330_2-Equals Mem:<< []>> 
7330_2-NonEquals Mem: << [<4,7>]>> 
7330_2-Equals Sto:<< []>> 
7330_2-NonEquals Sto: << []>> 
7330_2-Useless: []
7330_2-Constancy: [(56, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (0, 0)]
7330_2-ContextAliasing: []

.....
-----
Block: 6205_0
6205_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_0-Stack size: 57 
6205_0-Equals Mem:<< []>> 
6205_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_0-Equals Sto:<< []>> 
6205_0-NonEquals Sto: << []>> 
6205_0-Useless: []
6205_0-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (5, 0), (1, 0)]
6205_0-ContextAliasing: []

.....
-----
Block: 7103_10
7103_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_10-Stack size: 61 
7103_10-Equals Mem:<< []>> 
7103_10-NonEquals Mem: << [<5,8>]>> 
7103_10-Equals Sto:<< []>> 
7103_10-NonEquals Sto: << []>> 
7103_10-Useless: []
7103_10-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (5, 0)]
7103_10-ContextAliasing: []

.....
-----
Block: 7330_3
7330_3Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_3-Stack size: 61 
7330_3-Equals Mem:<< []>> 
7330_3-NonEquals Mem: << [<4,7>]>> 
7330_3-Equals Sto:<< []>> 
7330_3-NonEquals Sto: << []>> 
7330_3-Useless: []
7330_3-Constancy: [(55, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (0, 0)]
7330_3-ContextAliasing: []

.....
-----
Block: 6205_1
6205_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_1-Stack size: 56 
6205_1-Equals Mem:<< []>> 
6205_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_1-Equals Sto:<< []>> 
6205_1-NonEquals Sto: << []>> 
6205_1-Useless: []
6205_1-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (5, 0), (1, 0)]
6205_1-ContextAliasing: []

.....
-----
Block: 7103_11
7103_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_11-Stack size: 60 
7103_11-Equals Mem:<< []>> 
7103_11-NonEquals Mem: << [<5,8>]>> 
7103_11-Equals Sto:<< []>> 
7103_11-NonEquals Sto: << []>> 
7103_11-Useless: []
7103_11-Constancy: [(54, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (5, 0)]
7103_11-ContextAliasing: []

.....
-----
Block: 7330_4
7330_4Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_4-Stack size: 60 
7330_4-Equals Mem:<< []>> 
7330_4-NonEquals Mem: << [<4,7>]>> 
7330_4-Equals Sto:<< []>> 
7330_4-NonEquals Sto: << []>> 
7330_4-Useless: []
7330_4-Constancy: [(54, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (0, 0)]
7330_4-ContextAliasing: []

.....
-----
Block: 6205_2
6205_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_2-Stack size: 55 
6205_2-Equals Mem:<< []>> 
6205_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_2-Equals Sto:<< []>> 
6205_2-NonEquals Sto: << []>> 
6205_2-Useless: []
6205_2-Constancy: [(49, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (8, 0), (7, 0), (6, 0), (5, 0), (1, 0)]
6205_2-ContextAliasing: []

.....
-----
Block: 7103_14
7103_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_14-Stack size: 58 
7103_14-Equals Mem:<< []>> 
7103_14-NonEquals Mem: << [<5,8>]>> 
7103_14-Equals Sto:<< []>> 
7103_14-NonEquals Sto: << []>> 
7103_14-Useless: []
7103_14-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (5, 0)]
7103_14-ContextAliasing: []

.....
-----
Block: 7330_8
7330_8Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_8-Stack size: 58 
7330_8-Equals Mem:<< []>> 
7330_8-NonEquals Mem: << [<4,7>]>> 
7330_8-Equals Sto:<< []>> 
7330_8-NonEquals Sto: << []>> 
7330_8-Useless: []
7330_8-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (0, 0)]
7330_8-ContextAliasing: []

.....
-----
Block: 6205_3
6205_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_3-Stack size: 53 
6205_3-Equals Mem:<< []>> 
6205_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_3-Equals Sto:<< []>> 
6205_3-NonEquals Sto: << []>> 
6205_3-Useless: []
6205_3-Constancy: [(47, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (7, 0), (1, 0)]
6205_3-ContextAliasing: []

.....
-----
Block: 7103_15
7103_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103_15-Stack size: 57 
7103_15-Equals Mem:<< []>> 
7103_15-NonEquals Mem: << [<5,8>]>> 
7103_15-Equals Sto:<< []>> 
7103_15-NonEquals Sto: << []>> 
7103_15-Useless: []
7103_15-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (5, 0)]
7103_15-ContextAliasing: []

.....
-----
Block: 7330_10
7330_10Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330_10-Stack size: 57 
7330_10-Equals Mem:<< []>> 
7330_10-NonEquals Mem: << [<4,7>]>> 
7330_10-Equals Sto:<< []>> 
7330_10-NonEquals Sto: << []>> 
7330_10-Useless: []
7330_10-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (0, 0)]
7330_10-ContextAliasing: []

.....
-----
Block: 6205_4
6205_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205_4-Stack size: 52 
6205_4-Equals Mem:<< []>> 
6205_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205_4-Equals Sto:<< []>> 
6205_4-NonEquals Sto: << []>> 
6205_4-Useless: []
6205_4-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (7, 0), (1, 0)]
6205_4-ContextAliasing: []

.....
-----
Block: 2902
2902Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2902-Stack size: 9 
2902-Equals Mem:<< []>> 
2902-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2902-Equals Sto:<< []>> 
2902-NonEquals Sto: << []>> 
2902-Useless: []
2902-Constancy: [(4, 0)]
2902-ContextAliasing: []

.....
-----
Block: 3000
3000Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3000-Stack size: 9 
3000-Equals Mem:<< []>> 
3000-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3000-Equals Sto:<< []>> 
3000-NonEquals Sto: << []>> 
3000-Useless: []
3000-Constancy: [(4, 0)]
3000-ContextAliasing: []

.....
-----
Block: 510
510Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH9 0x53796e61676f677565', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
510-Stack size: 2 
510-Equals Mem:<< [<10,4>]>> 
510-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
510-Equals Sto:<< []>> 
510-NonEquals Sto: << []>> 
510-Useless: []
510-Constancy: []
510-ContextAliasing: []

.....
-----
Block: 6286_0
6286_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6286_0-Stack size: 11 
6286_0-Equals Mem:<< []>> 
6286_0-NonEquals Mem: << [<5,8>]>> 
6286_0-Equals Sto:<< []>> 
6286_0-NonEquals Sto: << []>> 
6286_0-Useless: []
6286_0-Constancy: [(5, 0), (4, 32)]
6286_0-ContextAliasing: []

.....
-----
Block: 6286
6286Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6286-Stack size: 14 
6286-Equals Mem:<< []>> 
6286-NonEquals Mem: << [<5,8>]>> 
6286-Equals Sto:<< []>> 
6286-NonEquals Sto: << []>> 
6286-Useless: []
6286-Constancy: [(8, 0), (7, 32)]
6286-ContextAliasing: []

.....
-----
Block: 6456
6456Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MSTORE', 'SWAP2', 'DUP3', 'MSTORE', 'DUP5', 'DUP3', 'ADD', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'ADD', 'DUP6', 'ADD', 'SWAP2', 'DUP9', 'DUP4', 'GT', 'ISZERO', 'PUSH2 0x1955', 'JUMPI']>> 
6456-Stack size: 13 
6456-Equals Mem:<< []>> 
6456-NonEquals Mem: << [<2,5>]>> 
6456-Equals Sto:<< []>> 
6456-NonEquals Sto: << []>> 
6456-Useless: []
6456-Constancy: [(7, 0), (6, 32)]
6456-ContextAliasing: []

.....
-----
Block: 1509
1509Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
1509-Stack size: 3 
1509-Equals Mem:<< []>> 
1509-NonEquals Mem: << [<6,1>]>> 
1509-Equals Sto:<< []>> 
1509-NonEquals Sto: << []>> 
1509-Useless: []
1509-Constancy: []
1509-ContextAliasing: []

.....
-----
Block: 7083
7083Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083-Stack size: 10 
7083-Equals Mem:<< []>> 
7083-NonEquals Mem: << [<5,8>]>> 
7083-Equals Sto:<< []>> 
7083-NonEquals Sto: << []>> 
7083-Useless: []
7083-Constancy: [(3, 0)]
7083-ContextAliasing: [(7, 7)]

.....
-----
Block: 1575
1575Instr:<<['JUMPDEST', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MUL', 'SWAP2', 'SWAP1', 'SWAP2', 'ADD', 'DUP2', 'ADD', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP3', 'MSTORE', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x0662', 'DUP2', 'PUSH2 0x1bd3', 'JUMP']>> 
1575-Stack size: 9 
1575-Equals Mem:<< []>> 
1575-NonEquals Mem: << [<19,11>, <19,25>, <25,11>, <11,29>]>> 
1575-Equals Sto:<< [<31,43>]>> 
1575-NonEquals Sto: << []>> 
1575-Useless: []
1575-Constancy: [(2, 0)]
1575-ContextAliasing: [(6, 7)]

.....
-----
Block: 7103
7103Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103-Stack size: 9 
7103-Equals Mem:<< []>> 
7103-NonEquals Mem: << [<5,8>]>> 
7103-Equals Sto:<< []>> 
7103-NonEquals Sto: << []>> 
7103-Useless: []
7103-Constancy: [(1, 0)]
7103-ContextAliasing: []

.....
-----
Block: 1532
1532Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532-Stack size: 4 
1532-Equals Mem:<< []>> 
1532-NonEquals Mem: << []>> 
1532-Equals Sto:<< []>> 
1532-NonEquals Sto: << []>> 
1532-Useless: []
1532-Constancy: []
1532-ContextAliasing: []

.....
-----
Block: 557
557Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
557-Stack size: 2 
557-Equals Mem:<< []>> 
557-NonEquals Mem: << []>> 
557-Equals Sto:<< []>> 
557-NonEquals Sto: << []>> 
557-Useless: []
557-Constancy: []
557-ContextAliasing: []

.....
-----
Block: 1532_75
1532_75Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_75-Stack size: 6 
1532_75-Equals Mem:<< []>> 
1532_75-NonEquals Mem: << []>> 
1532_75-Equals Sto:<< []>> 
1532_75-NonEquals Sto: << []>> 
1532_75-Useless: []
1532_75-Constancy: []
1532_75-ContextAliasing: []

.....
-----
Block: 1532_74
1532_74Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_74-Stack size: 10 
1532_74-Equals Mem:<< []>> 
1532_74-NonEquals Mem: << []>> 
1532_74-Equals Sto:<< []>> 
1532_74-NonEquals Sto: << []>> 
1532_74-Useless: []
1532_74-Constancy: [(7, 0), (4, 0), (1, 0)]
1532_74-ContextAliasing: []

.....
-----
Block: 1532_73
1532_73Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_73-Stack size: 29 
1532_73-Equals Mem:<< []>> 
1532_73-NonEquals Mem: << []>> 
1532_73-Equals Sto:<< []>> 
1532_73-NonEquals Sto: << []>> 
1532_73-Useless: []
1532_73-Constancy: [(26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_73-ContextAliasing: []

.....
-----
Block: 1532_72
1532_72Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_72-Stack size: 24 
1532_72-Equals Mem:<< []>> 
1532_72-NonEquals Mem: << []>> 
1532_72-Equals Sto:<< []>> 
1532_72-NonEquals Sto: << []>> 
1532_72-Useless: []
1532_72-Constancy: [(21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_72-ContextAliasing: []

.....
-----
Block: 1532_71
1532_71Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_71-Stack size: 20 
1532_71-Equals Mem:<< []>> 
1532_71-NonEquals Mem: << []>> 
1532_71-Equals Sto:<< []>> 
1532_71-NonEquals Sto: << []>> 
1532_71-Useless: []
1532_71-Constancy: [(17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1532_71-ContextAliasing: []

.....
-----
Block: 1532_70
1532_70Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_70-Stack size: 11 
1532_70-Equals Mem:<< []>> 
1532_70-NonEquals Mem: << []>> 
1532_70-Equals Sto:<< []>> 
1532_70-NonEquals Sto: << []>> 
1532_70-Useless: []
1532_70-Constancy: []
1532_70-ContextAliasing: []

.....
-----
Block: 557_2
557_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
557_2-Stack size: 3 
557_2-Equals Mem:<< []>> 
557_2-NonEquals Mem: << []>> 
557_2-Equals Sto:<< []>> 
557_2-NonEquals Sto: << []>> 
557_2-Useless: []
557_2-Constancy: []
557_2-ContextAliasing: []

.....
-----
Block: 1532_0
1532_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_0-Stack size: 10 
1532_0-Equals Mem:<< []>> 
1532_0-NonEquals Mem: << []>> 
1532_0-Equals Sto:<< []>> 
1532_0-NonEquals Sto: << []>> 
1532_0-Useless: []
1532_0-Constancy: [(5, 0)]
1532_0-ContextAliasing: []

.....
-----
Block: 1532_69
1532_69Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_69-Stack size: 18 
1532_69-Equals Mem:<< []>> 
1532_69-NonEquals Mem: << []>> 
1532_69-Equals Sto:<< []>> 
1532_69-NonEquals Sto: << []>> 
1532_69-Useless: []
1532_69-Constancy: [(13, 0), (4, 0), (1, 0)]
1532_69-ContextAliasing: []

.....
-----
Block: 1532_68
1532_68Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_68-Stack size: 37 
1532_68-Equals Mem:<< []>> 
1532_68-NonEquals Mem: << []>> 
1532_68-Equals Sto:<< []>> 
1532_68-NonEquals Sto: << []>> 
1532_68-Useless: []
1532_68-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_68-ContextAliasing: []

.....
-----
Block: 1532_67
1532_67Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_67-Stack size: 32 
1532_67-Equals Mem:<< []>> 
1532_67-NonEquals Mem: << []>> 
1532_67-Equals Sto:<< []>> 
1532_67-NonEquals Sto: << []>> 
1532_67-Useless: []
1532_67-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_67-ContextAliasing: []

.....
-----
Block: 1532_66
1532_66Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_66-Stack size: 28 
1532_66-Equals Mem:<< []>> 
1532_66-NonEquals Mem: << []>> 
1532_66-Equals Sto:<< []>> 
1532_66-NonEquals Sto: << []>> 
1532_66-Useless: []
1532_66-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1532_66-ContextAliasing: []

.....
-----
Block: 1532_65
1532_65Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_65-Stack size: 17 
1532_65-Equals Mem:<< []>> 
1532_65-NonEquals Mem: << []>> 
1532_65-Equals Sto:<< []>> 
1532_65-NonEquals Sto: << []>> 
1532_65-Useless: []
1532_65-Constancy: [(12, 0), (7, 0), (4, 0), (1, 0)]
1532_65-ContextAliasing: []

.....
-----
Block: 1532_64
1532_64Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_64-Stack size: 36 
1532_64-Equals Mem:<< []>> 
1532_64-NonEquals Mem: << []>> 
1532_64-Equals Sto:<< []>> 
1532_64-NonEquals Sto: << []>> 
1532_64-Useless: []
1532_64-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_64-ContextAliasing: []

.....
-----
Block: 1532_63
1532_63Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_63-Stack size: 31 
1532_63-Equals Mem:<< []>> 
1532_63-NonEquals Mem: << []>> 
1532_63-Equals Sto:<< []>> 
1532_63-NonEquals Sto: << []>> 
1532_63-Useless: []
1532_63-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_63-ContextAliasing: []

.....
-----
Block: 1532_62
1532_62Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_62-Stack size: 27 
1532_62-Equals Mem:<< []>> 
1532_62-NonEquals Mem: << []>> 
1532_62-Equals Sto:<< []>> 
1532_62-NonEquals Sto: << []>> 
1532_62-Useless: []
1532_62-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1532_62-ContextAliasing: []

.....
-----
Block: 1532_61
1532_61Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_61-Stack size: 19 
1532_61-Equals Mem:<< []>> 
1532_61-NonEquals Mem: << []>> 
1532_61-Equals Sto:<< []>> 
1532_61-NonEquals Sto: << []>> 
1532_61-Useless: []
1532_61-Constancy: [(14, 0)]
1532_61-ContextAliasing: []

.....
-----
Block: 1532_59
1532_59Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_59-Stack size: 54 
1532_59-Equals Mem:<< []>> 
1532_59-NonEquals Mem: << []>> 
1532_59-Equals Sto:<< []>> 
1532_59-NonEquals Sto: << []>> 
1532_59-Useless: []
1532_59-Constancy: [(49, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
1532_59-ContextAliasing: []

.....
-----
Block: 1532_57
1532_57Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_57-Stack size: 55 
1532_57-Equals Mem:<< []>> 
1532_57-NonEquals Mem: << []>> 
1532_57-Equals Sto:<< []>> 
1532_57-NonEquals Sto: << []>> 
1532_57-Useless: []
1532_57-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
1532_57-ContextAliasing: []

.....
-----
Block: 1532_56
1532_56Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_56-Stack size: 58 
1532_56-Equals Mem:<< []>> 
1532_56-NonEquals Mem: << []>> 
1532_56-Equals Sto:<< []>> 
1532_56-NonEquals Sto: << []>> 
1532_56-Useless: []
1532_56-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
1532_56-ContextAliasing: []

.....
-----
Block: 1532_55
1532_55Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_55-Stack size: 56 
1532_55-Equals Mem:<< []>> 
1532_55-NonEquals Mem: << []>> 
1532_55-Equals Sto:<< []>> 
1532_55-NonEquals Sto: << []>> 
1532_55-Useless: []
1532_55-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
1532_55-ContextAliasing: []

.....
-----
Block: 1532_54
1532_54Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_54-Stack size: 56 
1532_54-Equals Mem:<< []>> 
1532_54-NonEquals Mem: << []>> 
1532_54-Equals Sto:<< []>> 
1532_54-NonEquals Sto: << []>> 
1532_54-Useless: []
1532_54-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_54-ContextAliasing: []

.....
-----
Block: 1532_53
1532_53Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_53-Stack size: 51 
1532_53-Equals Mem:<< []>> 
1532_53-NonEquals Mem: << []>> 
1532_53-Equals Sto:<< []>> 
1532_53-NonEquals Sto: << []>> 
1532_53-Useless: []
1532_53-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_53-ContextAliasing: []

.....
-----
Block: 1532_49
1532_49Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_49-Stack size: 64 
1532_49-Equals Mem:<< []>> 
1532_49-NonEquals Mem: << []>> 
1532_49-Equals Sto:<< []>> 
1532_49-NonEquals Sto: << []>> 
1532_49-Useless: []
1532_49-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
1532_49-ContextAliasing: []

.....
-----
Block: 1532_48
1532_48Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_48-Stack size: 62 
1532_48-Equals Mem:<< []>> 
1532_48-NonEquals Mem: << []>> 
1532_48-Equals Sto:<< []>> 
1532_48-NonEquals Sto: << []>> 
1532_48-Useless: []
1532_48-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
1532_48-ContextAliasing: []

.....
-----
Block: 1532_47
1532_47Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_47-Stack size: 35 
1532_47-Equals Mem:<< []>> 
1532_47-NonEquals Mem: << []>> 
1532_47-Equals Sto:<< []>> 
1532_47-NonEquals Sto: << []>> 
1532_47-Useless: []
1532_47-Constancy: [(30, 0), (6, 0), (1, 0)]
1532_47-ContextAliasing: []

.....
-----
Block: 1532_46
1532_46Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_46-Stack size: 31 
1532_46-Equals Mem:<< []>> 
1532_46-NonEquals Mem: << []>> 
1532_46-Equals Sto:<< []>> 
1532_46-NonEquals Sto: << []>> 
1532_46-Useless: []
1532_46-Constancy: [(26, 0), (2, 0)]
1532_46-ContextAliasing: []

.....
-----
Block: 1532_45
1532_45Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_45-Stack size: 47 
1532_45-Equals Mem:<< []>> 
1532_45-NonEquals Mem: << []>> 
1532_45-Equals Sto:<< []>> 
1532_45-NonEquals Sto: << []>> 
1532_45-Useless: []
1532_45-Constancy: [(42, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_45-ContextAliasing: []

.....
-----
Block: 1532_44
1532_44Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_44-Stack size: 42 
1532_44-Equals Mem:<< []>> 
1532_44-NonEquals Mem: << []>> 
1532_44-Equals Sto:<< []>> 
1532_44-NonEquals Sto: << []>> 
1532_44-Useless: []
1532_44-Constancy: [(37, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_44-ContextAliasing: []

.....
-----
Block: 1532_42
1532_42Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_42-Stack size: 35 
1532_42-Equals Mem:<< []>> 
1532_42-NonEquals Mem: << []>> 
1532_42-Equals Sto:<< []>> 
1532_42-NonEquals Sto: << []>> 
1532_42-Useless: []
1532_42-Constancy: [(30, 0), (2, 0)]
1532_42-ContextAliasing: []

.....
-----
Block: 1532_41
1532_41Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_41-Stack size: 38 
1532_41-Equals Mem:<< []>> 
1532_41-NonEquals Mem: << []>> 
1532_41-Equals Sto:<< []>> 
1532_41-NonEquals Sto: << []>> 
1532_41-Useless: []
1532_41-Constancy: [(33, 0), (6, 0), (1, 0)]
1532_41-ContextAliasing: []

.....
-----
Block: 1532_40
1532_40Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_40-Stack size: 34 
1532_40-Equals Mem:<< []>> 
1532_40-NonEquals Mem: << []>> 
1532_40-Equals Sto:<< []>> 
1532_40-NonEquals Sto: << []>> 
1532_40-Useless: []
1532_40-Constancy: [(29, 0), (2, 0)]
1532_40-ContextAliasing: []

.....
-----
Block: 1532_43
1532_43Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_43-Stack size: 35 
1532_43-Equals Mem:<< []>> 
1532_43-NonEquals Mem: << []>> 
1532_43-Equals Sto:<< []>> 
1532_43-NonEquals Sto: << []>> 
1532_43-Useless: []
1532_43-Constancy: [(30, 0), (6, 0), (2, 0)]
1532_43-ContextAliasing: []

.....
-----
Block: 1532_50
1532_50Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_50-Stack size: 57 
1532_50-Equals Mem:<< []>> 
1532_50-NonEquals Mem: << []>> 
1532_50-Equals Sto:<< []>> 
1532_50-NonEquals Sto: << []>> 
1532_50-Useless: []
1532_50-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (6, 0), (2, 0)]
1532_50-ContextAliasing: []

.....
-----
Block: 1532_51
1532_51Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_51-Stack size: 56 
1532_51-Equals Mem:<< []>> 
1532_51-NonEquals Mem: << []>> 
1532_51-Equals Sto:<< []>> 
1532_51-NonEquals Sto: << []>> 
1532_51-Useless: []
1532_51-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (6, 0), (2, 0)]
1532_51-ContextAliasing: []

.....
-----
Block: 1532_52
1532_52Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_52-Stack size: 55 
1532_52-Equals Mem:<< []>> 
1532_52-NonEquals Mem: << []>> 
1532_52-Equals Sto:<< []>> 
1532_52-NonEquals Sto: << []>> 
1532_52-Useless: []
1532_52-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (6, 0), (2, 0)]
1532_52-ContextAliasing: []

.....
-----
Block: 1532_58
1532_58Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_58-Stack size: 53 
1532_58-Equals Mem:<< []>> 
1532_58-NonEquals Mem: << []>> 
1532_58-Equals Sto:<< []>> 
1532_58-NonEquals Sto: << []>> 
1532_58-Useless: []
1532_58-Constancy: [(48, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (12, 0), (11, 0), (10, 0), (8, 0), (2, 0)]
1532_58-ContextAliasing: []

.....
-----
Block: 1532_60
1532_60Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_60-Stack size: 52 
1532_60-Equals Mem:<< []>> 
1532_60-NonEquals Mem: << []>> 
1532_60-Equals Sto:<< []>> 
1532_60-NonEquals Sto: << []>> 
1532_60-Useless: []
1532_60-Constancy: [(47, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (8, 0), (2, 0)]
1532_60-ContextAliasing: []

.....
-----
Block: 1532_39
1532_39Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_39-Stack size: 7 
1532_39-Equals Mem:<< []>> 
1532_39-NonEquals Mem: << []>> 
1532_39-Equals Sto:<< []>> 
1532_39-NonEquals Sto: << []>> 
1532_39-Useless: []
1532_39-Constancy: []
1532_39-ContextAliasing: []

.....
-----
Block: 557_1
557_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
557_1-Stack size: 3 
557_1-Equals Mem:<< []>> 
557_1-NonEquals Mem: << []>> 
557_1-Equals Sto:<< []>> 
557_1-NonEquals Sto: << []>> 
557_1-Useless: []
557_1-Constancy: []
557_1-ContextAliasing: []

.....
-----
Block: 1532_38
1532_38Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_38-Stack size: 3 
1532_38-Equals Mem:<< []>> 
1532_38-NonEquals Mem: << []>> 
1532_38-Equals Sto:<< []>> 
1532_38-NonEquals Sto: << []>> 
1532_38-Useless: []
1532_38-Constancy: []
1532_38-ContextAliasing: []

.....
-----
Block: 1532_37
1532_37Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_37-Stack size: 8 
1532_37-Equals Mem:<< []>> 
1532_37-NonEquals Mem: << []>> 
1532_37-Equals Sto:<< []>> 
1532_37-NonEquals Sto: << []>> 
1532_37-Useless: []
1532_37-Constancy: [(4, 0), (1, 0)]
1532_37-ContextAliasing: []

.....
-----
Block: 1532_36
1532_36Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_36-Stack size: 27 
1532_36-Equals Mem:<< []>> 
1532_36-NonEquals Mem: << []>> 
1532_36-Equals Sto:<< []>> 
1532_36-NonEquals Sto: << []>> 
1532_36-Useless: []
1532_36-Constancy: [(23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_36-ContextAliasing: []

.....
-----
Block: 1532_35
1532_35Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_35-Stack size: 22 
1532_35-Equals Mem:<< []>> 
1532_35-NonEquals Mem: << []>> 
1532_35-Equals Sto:<< []>> 
1532_35-NonEquals Sto: << []>> 
1532_35-Useless: []
1532_35-Constancy: [(18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_35-ContextAliasing: []

.....
-----
Block: 1532_34
1532_34Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_34-Stack size: 18 
1532_34-Equals Mem:<< []>> 
1532_34-NonEquals Mem: << []>> 
1532_34-Equals Sto:<< []>> 
1532_34-NonEquals Sto: << []>> 
1532_34-Useless: []
1532_34-Constancy: [(14, 0), (11, 0), (6, 0), (1, 0)]
1532_34-ContextAliasing: []

.....
-----
Block: 557_0
557_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
557_0-Stack size: 3 
557_0-Equals Mem:<< []>> 
557_0-NonEquals Mem: << []>> 
557_0-Equals Sto:<< []>> 
557_0-NonEquals Sto: << []>> 
557_0-Useless: []
557_0-Constancy: []
557_0-ContextAliasing: []

.....
-----
Block: 1532_29
1532_29Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_29-Stack size: 11 
1532_29-Equals Mem:<< []>> 
1532_29-NonEquals Mem: << []>> 
1532_29-Equals Sto:<< []>> 
1532_29-NonEquals Sto: << []>> 
1532_29-Useless: []
1532_29-Constancy: [(5, 0)]
1532_29-ContextAliasing: []

.....
-----
Block: 1532_33
1532_33Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_33-Stack size: 19 
1532_33-Equals Mem:<< []>> 
1532_33-NonEquals Mem: << []>> 
1532_33-Equals Sto:<< []>> 
1532_33-NonEquals Sto: << []>> 
1532_33-Useless: []
1532_33-Constancy: [(13, 0), (4, 0), (1, 0)]
1532_33-ContextAliasing: []

.....
-----
Block: 1532_32
1532_32Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_32-Stack size: 38 
1532_32-Equals Mem:<< []>> 
1532_32-NonEquals Mem: << []>> 
1532_32-Equals Sto:<< []>> 
1532_32-NonEquals Sto: << []>> 
1532_32-Useless: []
1532_32-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_32-ContextAliasing: []

.....
-----
Block: 1532_31
1532_31Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_31-Stack size: 33 
1532_31-Equals Mem:<< []>> 
1532_31-NonEquals Mem: << []>> 
1532_31-Equals Sto:<< []>> 
1532_31-NonEquals Sto: << []>> 
1532_31-Useless: []
1532_31-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_31-ContextAliasing: []

.....
-----
Block: 1532_30
1532_30Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_30-Stack size: 29 
1532_30-Equals Mem:<< []>> 
1532_30-NonEquals Mem: << []>> 
1532_30-Equals Sto:<< []>> 
1532_30-NonEquals Sto: << []>> 
1532_30-Useless: []
1532_30-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1532_30-ContextAliasing: []

.....
-----
Block: 1532_28
1532_28Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_28-Stack size: 18 
1532_28-Equals Mem:<< []>> 
1532_28-NonEquals Mem: << []>> 
1532_28-Equals Sto:<< []>> 
1532_28-NonEquals Sto: << []>> 
1532_28-Useless: []
1532_28-Constancy: [(12, 0), (7, 0), (4, 0), (1, 0)]
1532_28-ContextAliasing: []

.....
-----
Block: 1532_27
1532_27Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_27-Stack size: 37 
1532_27-Equals Mem:<< []>> 
1532_27-NonEquals Mem: << []>> 
1532_27-Equals Sto:<< []>> 
1532_27-NonEquals Sto: << []>> 
1532_27-Useless: []
1532_27-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_27-ContextAliasing: []

.....
-----
Block: 1532_26
1532_26Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_26-Stack size: 32 
1532_26-Equals Mem:<< []>> 
1532_26-NonEquals Mem: << []>> 
1532_26-Equals Sto:<< []>> 
1532_26-NonEquals Sto: << []>> 
1532_26-Useless: []
1532_26-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_26-ContextAliasing: []

.....
-----
Block: 1532_25
1532_25Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_25-Stack size: 28 
1532_25-Equals Mem:<< []>> 
1532_25-NonEquals Mem: << []>> 
1532_25-Equals Sto:<< []>> 
1532_25-NonEquals Sto: << []>> 
1532_25-Useless: []
1532_25-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1532_25-ContextAliasing: []

.....
-----
Block: 1532_24
1532_24Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_24-Stack size: 20 
1532_24-Equals Mem:<< []>> 
1532_24-NonEquals Mem: << []>> 
1532_24-Equals Sto:<< []>> 
1532_24-NonEquals Sto: << []>> 
1532_24-Useless: []
1532_24-Constancy: [(14, 0)]
1532_24-ContextAliasing: []

.....
-----
Block: 1532_22
1532_22Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_22-Stack size: 55 
1532_22-Equals Mem:<< []>> 
1532_22-NonEquals Mem: << []>> 
1532_22-Equals Sto:<< []>> 
1532_22-NonEquals Sto: << []>> 
1532_22-Useless: []
1532_22-Constancy: [(49, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
1532_22-ContextAliasing: []

.....
-----
Block: 1532_20
1532_20Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_20-Stack size: 56 
1532_20-Equals Mem:<< []>> 
1532_20-NonEquals Mem: << []>> 
1532_20-Equals Sto:<< []>> 
1532_20-NonEquals Sto: << []>> 
1532_20-Useless: []
1532_20-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
1532_20-ContextAliasing: []

.....
-----
Block: 1532_19
1532_19Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_19-Stack size: 59 
1532_19-Equals Mem:<< []>> 
1532_19-NonEquals Mem: << []>> 
1532_19-Equals Sto:<< []>> 
1532_19-NonEquals Sto: << []>> 
1532_19-Useless: []
1532_19-Constancy: [(53, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
1532_19-ContextAliasing: []

.....
-----
Block: 1532_18
1532_18Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_18-Stack size: 57 
1532_18-Equals Mem:<< []>> 
1532_18-NonEquals Mem: << []>> 
1532_18-Equals Sto:<< []>> 
1532_18-NonEquals Sto: << []>> 
1532_18-Useless: []
1532_18-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
1532_18-ContextAliasing: []

.....
-----
Block: 1532_17
1532_17Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_17-Stack size: 57 
1532_17-Equals Mem:<< []>> 
1532_17-NonEquals Mem: << []>> 
1532_17-Equals Sto:<< []>> 
1532_17-NonEquals Sto: << []>> 
1532_17-Useless: []
1532_17-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_17-ContextAliasing: []

.....
-----
Block: 1532_16
1532_16Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_16-Stack size: 52 
1532_16-Equals Mem:<< []>> 
1532_16-NonEquals Mem: << []>> 
1532_16-Equals Sto:<< []>> 
1532_16-NonEquals Sto: << []>> 
1532_16-Useless: []
1532_16-Constancy: [(46, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_16-ContextAliasing: []

.....
-----
Block: 1532_12
1532_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_12-Stack size: 65 
1532_12-Equals Mem:<< []>> 
1532_12-NonEquals Mem: << []>> 
1532_12-Equals Sto:<< []>> 
1532_12-NonEquals Sto: << []>> 
1532_12-Useless: []
1532_12-Constancy: [(59, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
1532_12-ContextAliasing: []

.....
-----
Block: 1532_11
1532_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_11-Stack size: 63 
1532_11-Equals Mem:<< []>> 
1532_11-NonEquals Mem: << []>> 
1532_11-Equals Sto:<< []>> 
1532_11-NonEquals Sto: << []>> 
1532_11-Useless: []
1532_11-Constancy: [(57, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
1532_11-ContextAliasing: []

.....
-----
Block: 1532_10
1532_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_10-Stack size: 36 
1532_10-Equals Mem:<< []>> 
1532_10-NonEquals Mem: << []>> 
1532_10-Equals Sto:<< []>> 
1532_10-NonEquals Sto: << []>> 
1532_10-Useless: []
1532_10-Constancy: [(30, 0), (6, 0), (1, 0)]
1532_10-ContextAliasing: []

.....
-----
Block: 1532_9
1532_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_9-Stack size: 32 
1532_9-Equals Mem:<< []>> 
1532_9-NonEquals Mem: << []>> 
1532_9-Equals Sto:<< []>> 
1532_9-NonEquals Sto: << []>> 
1532_9-Useless: []
1532_9-Constancy: [(26, 0), (2, 0)]
1532_9-ContextAliasing: []

.....
-----
Block: 1532_8
1532_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_8-Stack size: 48 
1532_8-Equals Mem:<< []>> 
1532_8-NonEquals Mem: << []>> 
1532_8-Equals Sto:<< []>> 
1532_8-NonEquals Sto: << []>> 
1532_8-Useless: []
1532_8-Constancy: [(42, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1532_8-ContextAliasing: []

.....
-----
Block: 1532_7
1532_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_7-Stack size: 43 
1532_7-Equals Mem:<< []>> 
1532_7-NonEquals Mem: << []>> 
1532_7-Equals Sto:<< []>> 
1532_7-NonEquals Sto: << []>> 
1532_7-Useless: []
1532_7-Constancy: [(37, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1532_7-ContextAliasing: []

.....
-----
Block: 1532_5
1532_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_5-Stack size: 36 
1532_5-Equals Mem:<< []>> 
1532_5-NonEquals Mem: << []>> 
1532_5-Equals Sto:<< []>> 
1532_5-NonEquals Sto: << []>> 
1532_5-Useless: []
1532_5-Constancy: [(30, 0), (2, 0)]
1532_5-ContextAliasing: []

.....
-----
Block: 1532_4
1532_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_4-Stack size: 39 
1532_4-Equals Mem:<< []>> 
1532_4-NonEquals Mem: << []>> 
1532_4-Equals Sto:<< []>> 
1532_4-NonEquals Sto: << []>> 
1532_4-Useless: []
1532_4-Constancy: [(33, 0), (6, 0), (1, 0)]
1532_4-ContextAliasing: []

.....
-----
Block: 1532_3
1532_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_3-Stack size: 35 
1532_3-Equals Mem:<< []>> 
1532_3-NonEquals Mem: << []>> 
1532_3-Equals Sto:<< []>> 
1532_3-NonEquals Sto: << []>> 
1532_3-Useless: []
1532_3-Constancy: [(29, 0), (2, 0)]
1532_3-ContextAliasing: []

.....
-----
Block: 1532_2
1532_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_2-Stack size: 15 
1532_2-Equals Mem:<< []>> 
1532_2-NonEquals Mem: << []>> 
1532_2-Equals Sto:<< []>> 
1532_2-NonEquals Sto: << []>> 
1532_2-Useless: []
1532_2-Constancy: [(9, 0), (1, 0)]
1532_2-ContextAliasing: []

.....
-----
Block: 1532_1
1532_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_1-Stack size: 11 
1532_1-Equals Mem:<< []>> 
1532_1-NonEquals Mem: << []>> 
1532_1-Equals Sto:<< []>> 
1532_1-NonEquals Sto: << []>> 
1532_1-Useless: []
1532_1-Constancy: [(5, 0)]
1532_1-ContextAliasing: []

.....
-----
Block: 1532_6
1532_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_6-Stack size: 36 
1532_6-Equals Mem:<< []>> 
1532_6-NonEquals Mem: << []>> 
1532_6-Equals Sto:<< []>> 
1532_6-NonEquals Sto: << []>> 
1532_6-Useless: []
1532_6-Constancy: [(30, 0), (6, 0), (2, 0)]
1532_6-ContextAliasing: []

.....
-----
Block: 1532_13
1532_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_13-Stack size: 58 
1532_13-Equals Mem:<< []>> 
1532_13-NonEquals Mem: << []>> 
1532_13-Equals Sto:<< []>> 
1532_13-NonEquals Sto: << []>> 
1532_13-Useless: []
1532_13-Constancy: [(52, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (6, 0), (2, 0)]
1532_13-ContextAliasing: []

.....
-----
Block: 1532_14
1532_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_14-Stack size: 57 
1532_14-Equals Mem:<< []>> 
1532_14-NonEquals Mem: << []>> 
1532_14-Equals Sto:<< []>> 
1532_14-NonEquals Sto: << []>> 
1532_14-Useless: []
1532_14-Constancy: [(51, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (6, 0), (2, 0)]
1532_14-ContextAliasing: []

.....
-----
Block: 1532_15
1532_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_15-Stack size: 56 
1532_15-Equals Mem:<< []>> 
1532_15-NonEquals Mem: << []>> 
1532_15-Equals Sto:<< []>> 
1532_15-NonEquals Sto: << []>> 
1532_15-Useless: []
1532_15-Constancy: [(50, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (6, 0), (2, 0)]
1532_15-ContextAliasing: []

.....
-----
Block: 1532_21
1532_21Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_21-Stack size: 54 
1532_21-Equals Mem:<< []>> 
1532_21-NonEquals Mem: << []>> 
1532_21-Equals Sto:<< []>> 
1532_21-NonEquals Sto: << []>> 
1532_21-Useless: []
1532_21-Constancy: [(48, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (12, 0), (11, 0), (10, 0), (8, 0), (2, 0)]
1532_21-ContextAliasing: []

.....
-----
Block: 1532_23
1532_23Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532_23-Stack size: 53 
1532_23-Equals Mem:<< []>> 
1532_23-NonEquals Mem: << []>> 
1532_23-Equals Sto:<< []>> 
1532_23-NonEquals Sto: << []>> 
1532_23-Useless: []
1532_23-Constancy: [(47, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (8, 0), (2, 0)]
1532_23-ContextAliasing: []

.....
-----
Block: 1885
1885Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xb0', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
1885-Stack size: 3 
1885-Equals Mem:<< []>> 
1885-NonEquals Mem: << []>> 
1885-Equals Sto:<< [<3,23>]>> 
1885-NonEquals Sto: << []>> 
1885-Useless: []
1885-Constancy: []
1885-ContextAliasing: []

.....
-----
Block: 2222
2222Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
2222-Stack size: 3 
2222-Equals Mem:<< []>> 
2222-NonEquals Mem: << []>> 
2222-Equals Sto:<< [<3,23>]>> 
2222-NonEquals Sto: << []>> 
2222-Useless: []
2222-Constancy: []
2222-ContextAliasing: []

.....
-----
Block: 2339
2339Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'PUSH1 0x0a', 'SWAP2', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x0b', 'SSTORE', 'JUMP']>> 
2339-Stack size: 6 
2339-Equals Mem:<< []>> 
2339-NonEquals Mem: << []>> 
2339-Equals Sto:<< []>> 
2339-NonEquals Sto: << [<5,10>, <5,12>, <5,14>, <10,12>, <10,14>, <12,14>]>> 
2339-Useless: []
2339-Constancy: []
2339-ContextAliasing: []

.....
-----
Block: 4044
4044Instr:<<['JUMPDEST', 'PUSH1 0x18', 'SLOAD', 'PUSH1 0x16', 'SLOAD', 'SWAP2', 'SWAP3', 'POP', 'DUP3', 'LT', 'ISZERO', 'SWAP1', 'DUP3', 'LT', 'PUSH2 0x0fe5', 'JUMPI']>> 
4044-Stack size: 12 
4044-Equals Mem:<< []>> 
4044-NonEquals Mem: << []>> 
4044-Equals Sto:<< []>> 
4044-NonEquals Sto: << [<2,4>]>> 
4044-Useless: []
4044-Constancy: [(6, 0), (1, 0)]
4044-ContextAliasing: []

.....
-----
Block: 4421
4421Instr:<<['PUSH1 0x08', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH1 0x0d', 'SSTORE']>> 
4421-Stack size: 11 
4421-Equals Mem:<< []>> 
4421-NonEquals Mem: << []>> 
4421-Equals Sto:<< []>> 
4421-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4421-Useless: []
4421-Constancy: [(5, 0)]
4421-ContextAliasing: []

.....
-----
Block: 4482
4482Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0d', 'SSTORE']>> 
4482-Stack size: 11 
4482-Equals Mem:<< []>> 
4482-NonEquals Mem: << []>> 
4482-Equals Sto:<< []>> 
4482-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4482-Useless: []
4482-Constancy: [(5, 0)]
4482-ContextAliasing: []

.....
-----
Block: 5094
5094Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
5094-Stack size: 19 
5094-Equals Mem:<< []>> 
5094-NonEquals Mem: << []>> 
5094-Equals Sto:<< [<5,12>]>> 
5094-NonEquals Sto: << []>> 
5094-Useless: []
5094-Constancy: [(13, 0)]
5094-ContextAliasing: []

.....
-----
Block: 5145
5145Instr:<<['PUSH2 0x0a2c', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
5145-Stack size: 16 
5145-Equals Mem:<< []>> 
5145-NonEquals Mem: << []>> 
5145-Equals Sto:<< []>> 
5145-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
5145-Useless: []
5145-Constancy: [(10, 0)]
5145-ContextAliasing: []

.....
-----
Block: 5282
5282Instr:<<['JUMPDEST', 'PUSH1 0x0c', 'DUP1', 'SLOAD', 'PUSH1 0x0e', 'SSTORE', 'PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH0', 'SWAP2', 'DUP3', 'SWAP1', 'SSTORE', 'SSTORE', 'JUMP']>> 
5282-Stack size: 17 
5282-Equals Mem:<< []>> 
5282-NonEquals Mem: << []>> 
5282-Equals Sto:<< [<3,15>, <8,16>]>> 
5282-NonEquals Sto: << [<3,5>, <3,8>, <3,10>, <3,16>, <5,8>, <5,10>, <5,15>, <5,16>, <8,10>, <8,15>, <10,15>, <10,16>, <15,16>]>> 
5282-Useless: []
5282-Constancy: [(11, 0)]
5282-ContextAliasing: []

.....
-----
Block: 5652
5652Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'PUSH2 0x162c', 'DUP11', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'PUSH2 0x1772', 'JUMP']>> 
5652-Stack size: 28 
5652-Equals Mem:<< []>> 
5652-NonEquals Mem: << []>> 
5652-Equals Sto:<< []>> 
5652-NonEquals Sto: << [<13,15>]>> 
5652-Useless: []
5652-Constancy: [(22, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0)]
5652-ContextAliasing: []

.....
-----
Block: 5979
5979Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SSTORE', 'PUSH1 0x07', 'SLOAD', 'PUSH2 0x176b', 'SWAP1', 'DUP3', 'PUSH2 0x16aa', 'JUMP']>> 
5979-Stack size: 30 
5979-Equals Mem:<< []>> 
5979-NonEquals Mem: << []>> 
5979-Equals Sto:<< []>> 
5979-NonEquals Sto: << [<2,4>]>> 
5979-Useless: []
5979-Constancy: [(24, 0)]
5979-ContextAliasing: []

.....
-----
Block: 5652_0
5652_0Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'PUSH2 0x162c', 'DUP11', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'PUSH2 0x1772', 'JUMP']>> 
5652_0-Stack size: 27 
5652_0-Equals Mem:<< []>> 
5652_0-NonEquals Mem: << []>> 
5652_0-Equals Sto:<< []>> 
5652_0-NonEquals Sto: << [<13,15>]>> 
5652_0-Useless: []
5652_0-Constancy: [(22, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0)]
5652_0-ContextAliasing: []

.....
-----
Block: 5979_0
5979_0Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SSTORE', 'PUSH1 0x07', 'SLOAD', 'PUSH2 0x176b', 'SWAP1', 'DUP3', 'PUSH2 0x16aa', 'JUMP']>> 
5979_0-Stack size: 29 
5979_0-Equals Mem:<< []>> 
5979_0-NonEquals Mem: << []>> 
5979_0-Equals Sto:<< []>> 
5979_0-NonEquals Sto: << [<2,4>]>> 
5979_0-Useless: []
5979_0-Constancy: [(24, 0)]
5979_0-ContextAliasing: []

.....
-----
Block: 5145_0
5145_0Instr:<<['PUSH2 0x0a2c', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
5145_0-Stack size: 15 
5145_0-Equals Mem:<< []>> 
5145_0-NonEquals Mem: << []>> 
5145_0-Equals Sto:<< []>> 
5145_0-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
5145_0-Useless: []
5145_0-Constancy: [(10, 0)]
5145_0-ContextAliasing: []

.....
-----
Block: 5282_0
5282_0Instr:<<['JUMPDEST', 'PUSH1 0x0c', 'DUP1', 'SLOAD', 'PUSH1 0x0e', 'SSTORE', 'PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH0', 'SWAP2', 'DUP3', 'SWAP1', 'SSTORE', 'SSTORE', 'JUMP']>> 
5282_0-Stack size: 16 
5282_0-Equals Mem:<< []>> 
5282_0-NonEquals Mem: << []>> 
5282_0-Equals Sto:<< [<3,15>, <8,16>]>> 
5282_0-NonEquals Sto: << [<3,5>, <3,8>, <3,10>, <3,16>, <5,8>, <5,10>, <5,15>, <5,16>, <8,10>, <8,15>, <10,15>, <10,16>, <15,16>]>> 
5282_0-Useless: []
5282_0-Constancy: [(11, 0)]
5282_0-ContextAliasing: []

.....
-----
Block: 4482_0
4482_0Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0d', 'SSTORE']>> 
4482_0-Stack size: 10 
4482_0-Equals Mem:<< []>> 
4482_0-NonEquals Mem: << []>> 
4482_0-Equals Sto:<< []>> 
4482_0-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4482_0-Useless: []
4482_0-Constancy: [(5, 0)]
4482_0-ContextAliasing: []

.....
-----
Block: 4421_0
4421_0Instr:<<['PUSH1 0x08', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH1 0x0d', 'SSTORE']>> 
4421_0-Stack size: 10 
4421_0-Equals Mem:<< []>> 
4421_0-NonEquals Mem: << []>> 
4421_0-Equals Sto:<< []>> 
4421_0-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4421_0-Useless: []
4421_0-Constancy: [(5, 0)]
4421_0-ContextAliasing: []

.....
-----
Block: 4044_0
4044_0Instr:<<['JUMPDEST', 'PUSH1 0x18', 'SLOAD', 'PUSH1 0x16', 'SLOAD', 'SWAP2', 'SWAP3', 'POP', 'DUP3', 'LT', 'ISZERO', 'SWAP1', 'DUP3', 'LT', 'PUSH2 0x0fe5', 'JUMPI']>> 
4044_0-Stack size: 11 
4044_0-Equals Mem:<< []>> 
4044_0-NonEquals Mem: << []>> 
4044_0-Equals Sto:<< []>> 
4044_0-NonEquals Sto: << [<2,4>]>> 
4044_0-Useless: []
4044_0-Constancy: [(6, 0), (1, 0)]
4044_0-ContextAliasing: []

.....
-----
Block: 5094_0
5094_0Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
5094_0-Stack size: 18 
5094_0-Equals Mem:<< []>> 
5094_0-NonEquals Mem: << []>> 
5094_0-Equals Sto:<< [<5,12>]>> 
5094_0-NonEquals Sto: << []>> 
5094_0-Useless: []
5094_0-Constancy: [(13, 0)]
5094_0-ContextAliasing: []

.....
-----
Block: 5094_1
5094_1Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
5094_1-Stack size: 10 
5094_1-Equals Mem:<< []>> 
5094_1-NonEquals Mem: << []>> 
5094_1-Equals Sto:<< [<5,12>]>> 
5094_1-NonEquals Sto: << []>> 
5094_1-Useless: []
5094_1-Constancy: []
5094_1-ContextAliasing: []

.....
********************************** END
Memory Analysis: 2.1787396789877675s

*************************************************************
FILERES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_Ownable;26;28;5;9;4;2;0.01270544301951304
FILERES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_SafeMath;1;1;0;1;0;0;0.0008741490310057998
FILERES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue;468;1709;77;547;397;30;3.5593309340183623


Aux path: /tmp/0x00//ethir_5576061b0f8446a28899ab9694012590
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 310
310Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
310-Stack size: 3 
310-Equals Mem:<< []>> 
310-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
310-Equals Sto:<< []>> 
310-NonEquals Sto: << []>> 
310-Useless: []
310-Constancy: []
310-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x00d3 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH1 0xd3 JUMP

Optimized code stored in /tmp/0x00/Ownable_310_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_310_statistics.csv

Estimated initial gas: 86
Estimated gas optimized: 77

Estimated initial size in bytes: 70
Estimated size optimized in bytes: 96

Initial number of instructions: 27
Final number of instructions: 24

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_Ownable_310;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;Ownable;310;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x00d3 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH1 0xd3 JUMP;86;70;27;77;96;24;9;-26;3;True;False;False;False;2.2020833779824898;1;3;0;0;2

Block: 396
396Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
396-Stack size: 3 
396-Equals Mem:<< []>> 
396-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
396-Equals Sto:<< []>> 
396-NonEquals Sto: << []>> 
396-Useless: []
396-Constancy: []
396-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP

Optimized code stored in /tmp/0x00/Ownable_396_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_396_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_Ownable_396;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;Ownable;396;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x00d3 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.122062763024587;2;4;0;0;4

Block: 77
77Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
77-Stack size: 1 
77-Equals Mem:<< [<5,16>]>> 
77-NonEquals Mem: << [<15,5>, <15,16>]>> 
77-Equals Sto:<< []>> 
77-NonEquals Sto: << []>> 
77-Useless: []
77-Constancy: []
77-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>]}
{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', 's(8)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
[RULE]: Simplification rule type 1: {'id': 'SUB_0', 'opcode': '03', 'disasm': 'SUB', 'inpt_sk': ['s(5)', 's(5)'], 'outpt_sk': ['s(4)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Simplification rule type 1: {'id': 'ADD_0', 'opcode': '01', 'disasm': 'ADD', 'inpt_sk': [32, 0], 'outpt_sk': ['s(3)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_282c6b8e259e4412ac9b36c39e595b89/jsons/isolated_block_0_0_input.json --- (6, 5)
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_77_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_77_statistics.csv

Estimated initial gas: 2166
Estimated gas optimized: 2125

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 34

Initial number of instructions: 25
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_Ownable_77;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;Ownable;77;2;False;True;True;JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN;JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2166;30;25;2125;34;11;41;-4;14;True;False;False;False;0.1346593530033715;4;0;2100;2100;4

Block: 144
144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD']>> 
144-Stack size: 2 
144-Equals Mem:<< []>> 
144-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
144-Equals Sto:<< []>> 
144-NonEquals Sto: << []>> 
144-Useless: []
144-Constancy: []
144-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH1 0x64 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP3 PUSH1 0x44 ADD MSTORE ADD

Optimized code stored in /tmp/0x00/Ownable_144_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_144_statistics.csv

Estimated initial gas: 75
Estimated gas optimized: 66

Estimated initial size in bytes: 67
Estimated size optimized in bytes: 93

Initial number of instructions: 25
Final number of instructions: 22

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_Ownable_144;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;Ownable;144;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD;PUSH1 0x40 MLOAD PUSH1 0x64 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP3 PUSH1 0x44 ADD MSTORE ADD;75;67;25;66;93;22;9;-26;3;True;False;False;False;2.17200448398944;1;3;0;0;2

Block: 211
211Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211-Stack size: 3 
211-Equals Mem:<< []>> 
211-NonEquals Mem: << []>> 
211-Equals Sto:<< []>> 
211-NonEquals Sto: << []>> 
211-Useless: []
211-Constancy: []
211-ContextAliasing: []

Block: 2674
2674Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2674-Stack size: 3 
2674-Equals Mem:<< []>> 
2674-NonEquals Mem: << [<6,1>]>> 
2674-Equals Sto:<< []>> 
2674-NonEquals Sto: << []>> 
2674-Useless: []
2674-Constancy: []
2674-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2674_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2674_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2674;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2674;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027714420983102173;1;0;0;0;2

Block: 2712
2712Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2712-Stack size: 3 
2712-Equals Mem:<< []>> 
2712-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2712-Equals Sto:<< []>> 
2712-NonEquals Sto: << []>> 
2712-Useless: []
2712-Constancy: []
2712-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_2712_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2712_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 86
Estimated size optimized in bytes: 86

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2712;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2712;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;86;33;104;86;33;0;0;0;True;False;False;False;2.1240221229963936;2;4;0;0;4

Block: 2628
2628Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2628-Stack size: 3 
2628-Equals Mem:<< []>> 
2628-NonEquals Mem: << [<6,1>]>> 
2628-Equals Sto:<< []>> 
2628-NonEquals Sto: << []>> 
2628-Useless: []
2628-Constancy: []
2628-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2628_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2628_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2628;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2628;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.028958766954019666;1;0;0;0;2

Block: 1387
1387Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1387-Stack size: 4 
1387-Equals Mem:<< [<12,27>, <17,31>]>> 
1387-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
1387-Equals Sto:<< []>> 
1387-NonEquals Sto: << []>> 
1387-Useless: []
1387-Constancy: []
1387-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP1 AND DUP2 SWAP2 DUP2 DUP1 SWAP4 SWAP1 PUSH1 0x0 MSTORE SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x4 DUP3 SWAP5 MSTORE POP PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP POP POP JUMP

Optimized code stored in /tmp/0x00/synagogue_1387_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_1387_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2212

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1387;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;1387;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP1 AND DUP2 SWAP2 DUP2 DUP1 SWAP4 SWAP1 PUSH1 0x0 MSTORE SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x4 DUP3 SWAP5 MSTORE POP PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP POP POP JUMP;2261;42;36;2212;55;30;49;-13;6;True;False;False;False;2.1394855339895003;4;2;2100;2100;4

Block: 690
690Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
690-Stack size: 2 
690-Equals Mem:<< []>> 
690-NonEquals Mem: << [<5,2>]>> 
690-Equals Sto:<< []>> 
690-NonEquals Sto: << []>> 
690-Useless: []
690-Constancy: []
690-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP

Optimized code stored in /tmp/0x00/synagogue_690_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_690_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_690;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;690;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.018316411995328963;0;0;0;0;0

Block: 2471
2471Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2471-Stack size: 5 
2471-Equals Mem:<< []>> 
2471-NonEquals Mem: << [<6,1>]>> 
2471-Equals Sto:<< []>> 
2471-NonEquals Sto: << []>> 
2471-Useless: []
2471-Constancy: []
2471-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2471_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2471_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2471;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2471;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027717082004528493;1;0;0;0;2

Block: 2547
2547Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x0a24', 'DUP2', 'PUSH2 0x1bd3', 'JUMP']>> 
2547-Stack size: 10 
2547-Equals Mem:<< []>> 
2547-NonEquals Mem: << [<8,15>]>> 
2547-Equals Sto:<< [<21,33>]>> 
2547-NonEquals Sto: << []>> 
2547-Useless: []
2547-Constancy: [(1, 0)]
2547-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>], 'storage_deps_eqs': [<20,32>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', 's(9)', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('s(10)', 's(12)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(3)', 's(5)', 'mstore'), 2), (('s(8)', 's(2)', 'mstore'), 2), (('0', 's(9)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0a24 DUP2 PUSH2 0x1bd3 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0a24 DUP2 PUSH2 0x1bd3 JUMP

Optimized code stored in /tmp/0x00/synagogue_2547_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2547_statistics.csv

Estimated initial gas: 5140
Estimated gas optimized: 5140

Estimated initial size in bytes: 49
Estimated size optimized in bytes: 49

Initial number of instructions: 39
Final number of instructions: 39

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2547;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2547;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0a24 DUP2 PUSH2 0x1bd3 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0a24 DUP2 PUSH2 0x1bd3 JUMP;5140;49;39;5140;49;39;0;0;0;True;True;False;False;2.2981993890134618;3;2;5000;5000;4

Block: 1290
1290Instr:<<['JUMPDEST', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1290-Stack size: 3 
1290-Equals Mem:<< []>> 
1290-NonEquals Mem: << [<3,7>]>> 
1290-Equals Sto:<< []>> 
1290-NonEquals Sto: << []>> 
1290-Useless: []
1290-Constancy: []
1290-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '16', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1290 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 597
597Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
597-Stack size: 2 
597-Equals Mem:<< []>> 
597-NonEquals Mem: << [<7,2>]>> 
597-Equals Sto:<< []>> 
597-NonEquals Sto: << []>> 
597-Useless: []
597-Constancy: []
597-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP

Optimized code stored in /tmp/0x00/synagogue_597_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_597_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_597;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;597;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP;39;16;12;39;16;12;0;0;0;True;False;False;False;0.050843010016251355;0;0;0;0;0

Block: 2316
2316Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2316-Stack size: 6 
2316-Equals Mem:<< []>> 
2316-NonEquals Mem: << [<6,1>]>> 
2316-Equals Sto:<< []>> 
2316-NonEquals Sto: << []>> 
2316-Useless: []
2316-Constancy: []
2316-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2316_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2316_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2316;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2316;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02721750596538186;1;0;0;0;2

Block: 2270
2270Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2270-Stack size: 3 
2270-Equals Mem:<< []>> 
2270-NonEquals Mem: << [<6,1>]>> 
2270-Equals Sto:<< []>> 
2270-NonEquals Sto: << []>> 
2270-Useless: []
2270-Constancy: []
2270-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2270_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2270_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2270;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2270;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.029408772999886423;1;0;0;0;2

Block: 1133
1133Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH9 0x53594e41474f475545', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x0220', 'JUMP']>> 
1133-Stack size: 2 
1133-Equals Mem:<< [<10,4>]>> 
1133-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
1133-Equals Sto:<< []>> 
1133-NonEquals Sto: << []>> 
1133-Useless: []
1133-Constancy: []
1133-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('184', '1537514910809980360005', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(3)', 'mstore'), 2), (('s(2)', '9', 'mstore'), 2), (('s(6)', '37699755917297755520407144385843000948346689560834625055342334915586901934080', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1133 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6534
6534Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
6534-Stack size: 4 
6534-Equals Mem:<< []>> 
6534-NonEquals Mem: << [<12,7>, <5,7>]>> 
6534-Equals Sto:<< []>> 
6534-NonEquals Sto: << []>> 
6534-Useless: []
6534-Constancy: []
6534-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/synagogue_6534_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_6534_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_6534;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;6534;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.1500434129848145;0;1;0;0;0

Block: 6558
6558Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1995', 'JUMP']>> 
6558-Stack size: 8 
6558-Equals Mem:<< []>> 
6558-NonEquals Mem: << [<11,5>]>> 
6558-Equals Sto:<< []>> 
6558-NonEquals Sto: << []>> 
6558-Useless: []
6558-Constancy: [(2, 32), (3, 0)]
6558-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1995 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1995 JUMP

Optimized code stored in /tmp/0x00/synagogue_6558_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_6558_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_6558;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;6558;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1995 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1995 JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6788112840149552;0;0;0;0;0

Block: 2199
2199Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2199-Stack size: 3 
2199-Equals Mem:<< []>> 
2199-NonEquals Mem: << [<6,1>]>> 
2199-Equals Sto:<< []>> 
2199-NonEquals Sto: << []>> 
2199-Useless: []
2199-Constancy: []
2199-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2199_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2199_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2199;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2199;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.028811045980546623;1;0;0;0;2

Block: 1025
1025Instr:<<['JUMPDEST', 'PUSH1 0x11', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP2', 'JUMP']>> 
1025-Stack size: 3 
1025-Equals Mem:<< []>> 
1025-NonEquals Mem: << [<3,7>]>> 
1025-Equals Sto:<< []>> 
1025-NonEquals Sto: << []>> 
1025-Useless: []
1025-Constancy: []
1025-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '17', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1025 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2153
2153Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2153-Stack size: 3 
2153-Equals Mem:<< []>> 
2153-NonEquals Mem: << [<6,1>]>> 
2153-Equals Sto:<< []>> 
2153-NonEquals Sto: << []>> 
2153-Useless: []
2153-Constancy: []
2153-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2153_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2153_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2153;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2153;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027620808978099376;1;0;0;0;2

Block: 2040
2040Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
2040-Stack size: 2 
2040-Equals Mem:<< []>> 
2040-NonEquals Mem: << [<6,1>]>> 
2040-Equals Sto:<< []>> 
2040-NonEquals Sto: << []>> 
2040-Useless: []
2040-Constancy: []
2040-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_2040_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2040_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2040;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2040;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02765557897510007;1;0;0;0;2

Block: 1862
1862Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
1862-Stack size: 3 
1862-Equals Mem:<< []>> 
1862-NonEquals Mem: << [<6,1>]>> 
1862-Equals Sto:<< []>> 
1862-NonEquals Sto: << []>> 
1862-Useless: []
1862-Constancy: []
1862-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_1862_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_1862_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1862;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;1862;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027529805025551468;1;0;0;0;2

Block: 1789
1789Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
1789-Stack size: 3 
1789-Equals Mem:<< []>> 
1789-NonEquals Mem: << [<6,1>]>> 
1789-Equals Sto:<< []>> 
1789-NonEquals Sto: << []>> 
1789-Useless: []
1789-Constancy: []
1789-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_1789_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_1789_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1789;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;1789;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02768275496782735;1;0;0;0;2

Block: 1812
1812Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
1812-Stack size: 3 
1812-Equals Mem:<< []>> 
1812-NonEquals Mem: << [<10,13>]>> 
1812-Equals Sto:<< [<18,23>]>> 
1812-NonEquals Sto: << []>> 
1812-Useless: []
1812-Constancy: []
1812-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [<17,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(4)', 's(5)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(1)', 'mstore'), 2), (('32', '16', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1812 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 644
644Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
644-Stack size: 2 
644-Equals Mem:<< []>> 
644-NonEquals Mem: << [<12,2>]>> 
644-Equals Sto:<< []>> 
644-NonEquals Sto: << []>> 
644-Useless: []
644-Constancy: []
644-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22d JUMP

Optimized code stored in /tmp/0x00/synagogue_644_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_644_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 39

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 36

Initial number of instructions: 17
Final number of instructions: 12

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_644;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;644;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x022d JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22d JUMP;54;24;17;39;36;12;15;-12;5;True;False;False;False;0.09021399903576821;2;0;0;0;4

Block: 767
767Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x022d', 'JUMP']>> 
767-Stack size: 2 
767-Equals Mem:<< []>> 
767-NonEquals Mem: << [<6,3>]>> 
767-Equals Sto:<< []>> 
767-NonEquals Sto: << []>> 
767-Useless: []
767-Constancy: []
767-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '9', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_767 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3193
3193Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3193-Stack size: 9 
3193-Equals Mem:<< []>> 
3193-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3193-Equals Sto:<< []>> 
3193-NonEquals Sto: << []>> 
3193-Useless: []
3193-Constancy: [(4, 0)]
3193-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3193_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3193_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3193;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3193;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.13195018901024;2;4;0;0;4

Block: 3293
3293Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3293-Stack size: 9 
3293-Equals Mem:<< []>> 
3293-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3293-Equals Sto:<< []>> 
3293-NonEquals Sto: << []>> 
3293-Useless: []
3293-Constancy: [(4, 0)]
3293-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3293_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3293_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3293;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3293;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.130917770031374;2;4;0;0;4

Block: 3384
3384Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3384-Stack size: 9 
3384-Equals Mem:<< []>> 
3384-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3384-Equals Sto:<< []>> 
3384-NonEquals Sto: << []>> 
3384-Useless: []
3384-Constancy: [(4, 0)]
3384-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '41', 'mstore'), 2), (('s(10)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(12)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3384_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3384_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 89
Estimated size optimized in bytes: 89

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3384;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3384;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;89;33;104;89;33;0;0;0;True;False;False;False;2.1269578309729695;2;4;0;0;4

Block: 3558
3558Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3558-Stack size: 9 
3558-Equals Mem:<< []>> 
3558-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
3558-Equals Sto:<< []>> 
3558-NonEquals Sto: << []>> 
3558-Useless: []
3558-Constancy: [(4, 0)]
3558-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '63', 'mstore'), 2), (('s(10)', '38134379698562468829157266163386992238735058556305927349619618234822913057824', 'mstore'), 2), (('s(12)', '52665151681294734183140160111090079679145105358601051293675531338603408221184', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3558_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3558_statistics.csv

Estimated initial gas: 98
Estimated gas optimized: 98

Estimated initial size in bytes: 109
Estimated size optimized in bytes: 109

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3558;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3558;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;98;109;31;98;109;31;0;0;0;True;False;False;False;2.122516577015631;1;4;0;0;2

Block: 3678
3678Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3678-Stack size: 9 
3678-Equals Mem:<< []>> 
3678-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
3678-Equals Sto:<< []>> 
3678-NonEquals Sto: << []>> 
3678-Useless: []
3678-Constancy: [(4, 0)]
3678-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '28', 'mstore'), 2), (('s(10)', '38134379698562468785047320251781113445918095690164057140225611213515220058112', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1c PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1c PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x5fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3678_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3678_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3678;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3678;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1c PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x05fc JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1c PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x5fc JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.096515934972558;1;3;0;0;2

Block: 3749
3749Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0ee5', 'JUMPI']>> 
3749-Stack size: 9 
3749-Equals Mem:<< []>> 
3749-NonEquals Mem: << [<11,14>]>> 
3749-Equals Sto:<< []>> 
3749-NonEquals Sto: << []>> 
3749-Useless: []
3749-Constancy: [(4, 0)]
3749-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(15)', 'mstore'), 2), (('32', '16', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3749 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3784
3784Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3784-Stack size: 10 
3784-Equals Mem:<< []>> 
3784-NonEquals Mem: << [<11,14>]>> 
3784-Equals Sto:<< []>> 
3784-NonEquals Sto: << []>> 
3784-Useless: []
3784-Constancy: [(5, 0)]
3784-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '16', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3784 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3818
3818Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x656421', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3818-Stack size: 9 
3818-Equals Mem:<< []>> 
3818-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3818-Equals Sto:<< []>> 
3818-NonEquals Sto: << []>> 
3818-Useless: []
3818-Constancy: [(4, 0)]
3818-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6644769', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '38134379698562468860715563338408605869982762239514017917373468355097573028724', 'mstore'), 2), (('s(12)', '45860510171017187747269055276226648138658102913899647299760730924050624282624', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656421 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656421 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3818_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3818_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3818;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3818;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656421 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656421 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.123793322010897;2;4;0;0;4

Block: 3951
3951Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x7a6521', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3951-Stack size: 9 
3951-Equals Mem:<< []>> 
3951-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3951-Equals Sto:<< []>> 
3951-NonEquals Sto: << []>> 
3951-Useless: []
3951-Constancy: [(4, 0)]
3951-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '8021281', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '38134379698562468715998076148172710925835430712004076010897878425883314778985', 'mstore'), 2), (('s(12)', '55360846838330560287438445937721320998262483827399850437580607468401040818176', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3951_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3951_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3951;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3951;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1236877770279534;2;4;0;0;4

Block: 1989
1989Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x067e', 'SWAP1', 'PUSH2 0x1209', 'JUMP']>> 
1989-Stack size: 3 
1989-Equals Mem:<< []>> 
1989-NonEquals Mem: << [<11,14>]>> 
1989-Equals Sto:<< []>> 
1989-NonEquals Sto: << []>> 
1989-Useless: []
1989-Constancy: []
1989-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1989 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4629
4629Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
4629-Stack size: 7 
4629-Equals Mem:<< []>> 
4629-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4629-Equals Sto:<< []>> 
4629-NonEquals Sto: << []>> 
4629-Useless: []
4629-Constancy: [(3, 0), (0, 0)]
4629-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('176', '478848393423832921108083', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '42', 'mstore'), 2), (('s(10)', '29593690747763536770200911942998446292484964844061988840046503391719982899314', 'mstore'), 2), (('s(12)', '45864564229551173125737521983127142047231388901599435807126209818687898124288', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_4629_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_4629_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 90
Estimated size optimized in bytes: 90

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4629;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;4629;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;90;33;104;90;33;0;0;0;True;False;False;False;2.1238079519825988;2;4;0;0;4

Block: 4146
4146Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
4146-Stack size: 12 
4146-Equals Mem:<< []>> 
4146-NonEquals Mem: << [<11,14>]>> 
4146-Equals Sto:<< []>> 
4146-NonEquals Sto: << []>> 
4146-Useless: []
4146-Constancy: [(7, 0)]
4146-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4146 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4182
4182Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
4182-Stack size: 12 
4182-Equals Mem:<< []>> 
4182-NonEquals Mem: << [<11,14>]>> 
4182-Equals Sto:<< []>> 
4182-NonEquals Sto: << []>> 
4182-Useless: []
4182-Constancy: [(7, 0)]
4182-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4182 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4904
4904Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x134c', 'SWAP2', 'SWAP1', 'PUSH2 0x1c11', 'JUMP']>> 
4904-Stack size: 10 
4904-Equals Mem:<< [<18,6>]>> 
4904-NonEquals Mem: << []>> 
4904-Equals Sto:<< []>> 
4904-NonEquals Sto: << []>> 
4904-Useless: []
4904-Constancy: []
4904-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4904 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4997
4997Instr:<<['JUMPDEST', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x13bd', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1c2c', 'JUMP']>> 
4997-Stack size: 6 
4997-Equals Mem:<< []>> 
4997-NonEquals Mem: << [<9,4>]>> 
4997-Equals Sto:<< []>> 
4997-NonEquals Sto: << []>> 
4997-Useless: []
4997-Constancy: []
4997-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
Storage order: [(('20', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(13)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x13bd SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1c2c JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x13bd SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1c2c JUMP

Optimized code stored in /tmp/0x00/synagogue_4997_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_4997_statistics.csv

Estimated initial gas: 2208
Estimated gas optimized: 2208

Estimated initial size in bytes: 56
Estimated size optimized in bytes: 56

Initial number of instructions: 37
Final number of instructions: 37

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4997;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;4997;2;True;False;False;JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x13bd SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1c2c JUMP;JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x13bd SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1c2c JUMP;2208;56;37;2208;56;37;0;0;0;True;False;False;False;2.2035978159983642;3;0;2100;2100;6

Block: 7212
7212Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
7212-Stack size: 15 
7212-Equals Mem:<< []>> 
7212-NonEquals Mem: << [<13,21>, <7,21>, <24,21>, <18,21>]>> 
7212-Equals Sto:<< []>> 
7212-NonEquals Sto: << []>> 
7212-Useless: []
7212-Constancy: [(4, 0)]
7212-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('s(15)', 's(1)', 'mstore'), 2), (('s(16)', '160', 'mstore'), 2), (('s(2)', 'mload0'), 1), (('s(17)', 's(12)', 'mstore'), 2)]
Memory dep: [(2, 4), (1, 4), (0, 4), (1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(2, 4), (1, 2), (0, 1)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized code stored in /tmp/0x00/synagogue_7212_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_7212_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 41
Estimated size optimized in bytes: 41

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_7212;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;7212;2;True;False;False;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;102;41;36;102;41;36;0;0;0;True;False;False;False;2.279372759978287;0;3;0;0;0

Block: 7262
7262Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1c55', 'JUMP']>> 
7262-Stack size: 21 
7262-Equals Mem:<< []>> 
7262-NonEquals Mem: << [<9,1>]>> 
7262-Equals Sto:<< []>> 
7262-NonEquals Sto: << []>> 
7262-Useless: []
7262-Constancy: [(5, 0), (10, 0), (3, 32)]
7262-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(9)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x1c55 JUMP

Optimized sequence (basic block per line):
PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x1c55 JUMP

Optimized code stored in /tmp/0x00/synagogue_7262_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_7262_statistics.csv

Estimated initial gas: 71
Estimated gas optimized: 53

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 39

Initial number of instructions: 22
Final number of instructions: 16

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_7262;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;7262;2;True;True;False;DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x1c55 JUMP;PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x1c55 JUMP;71;28;22;53;39;16;18;-11;6;True;False;False;False;2.0955652889679186;2;0;0;0;4

Block: 4246
4246Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x01', 'SWAP1', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x10d6', 'JUMPI']>> 
4246-Stack size: 9 
4246-Equals Mem:<< []>> 
4246-NonEquals Mem: << [<11,14>]>> 
4246-Equals Sto:<< []>> 
4246-NonEquals Sto: << []>> 
4246-Useless: []
4246-Constancy: [(4, 0)]
4246-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4246 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4282
4282Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
4282-Stack size: 11 
4282-Equals Mem:<< []>> 
4282-NonEquals Mem: << [<11,14>]>> 
4282-Equals Sto:<< []>> 
4282-NonEquals Sto: << []>> 
4282-Useless: []
4282-Constancy: [(6, 0)]
4282-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4282 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5194
5194Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x15e8', 'JUMP']>> 
5194-Stack size: 11 
5194-Equals Mem:<< [<11,6>]>> 
5194-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
5194-Equals Sto:<< []>> 
5194-NonEquals Sto: << []>> 
5194-Useless: []
5194-Constancy: []
5194-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '26', 'mstore'), 2), (('s(12)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x15e8 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x15e8 JUMP

Optimized code stored in /tmp/0x00/synagogue_5194_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_5194_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5194;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;5194;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x15e8 JUMP;JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x15e8 JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.129308902018238;0;1;0;0;0

Block: 5737
5737Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1284', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x119a', 'JUMP']>> 
5737-Stack size: 28 
5737-Equals Mem:<< [<11,6>]>> 
5737-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
5737-Equals Sto:<< []>> 
5737-NonEquals Sto: << []>> 
5737-Useless: []
5737-Constancy: []
5737-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '30', 'mstore'), 2), (('s(12)', '37714057306925736537727343956344029380455708191757305005271024775623175766016', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x119a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x119a JUMP

Optimized code stored in /tmp/0x00/synagogue_5737_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_5737_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5737;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;5737;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x119a JUMP;JUMPDEST PUSH0 PUSH2 0x1284 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x119a JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.130162244022358;0;1;0;0;0

Block: 5319
5319Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP16', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP6', 'SWAP12', 'POP', 'SWAP4', 'SWAP10', 'POP', 'SWAP2', 'SWAP8', 'POP', 'SWAP6', 'POP', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x14f8', 'SWAP1', 'DUP8', 'PUSH2 0x1669', 'JUMP']>> 
5319-Stack size: 31 
5319-Equals Mem:<< []>> 
5319-NonEquals Mem: << [<11,14>]>> 
5319-Equals Sto:<< []>> 
5319-NonEquals Sto: << []>> 
5319-Useless: []
5319-Constancy: [(9, 0), (11, 0), (7, 0), (8, 0), (26, 0), (10, 0), (6, 0)]
5319-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5319 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5368
5368Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP12', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP11', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1526', 'SWAP1', 'DUP7', 'PUSH2 0x16aa', 'JUMP']>> 
5368-Stack size: 26 
5368-Equals Mem:<< [<12,28>]>> 
5368-NonEquals Mem: << [<12,15>, <15,28>]>> 
5368-Equals Sto:<< [<23,30>]>> 
5368-NonEquals Sto: << []>> 
5368-Useless: []
5368-Constancy: [(21, 0)]
5368-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>]}
{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>], 'storage_deps_eqs': [<22,29>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(18)', 's(9)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(15)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1526 SWAP1 DUP7 PUSH2 0x16aa JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1526 SWAP1 DUP7 PUSH2 0x16aa JUMP

Optimized code stored in /tmp/0x00/synagogue_5368_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_5368_statistics.csv

Estimated initial gas: 5258
Estimated gas optimized: 5258

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 46

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5368;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;5368;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1526 SWAP1 DUP7 PUSH2 0x16aa JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1526 SWAP1 DUP7 PUSH2 0x16aa JUMP;5258;46;36;5258;46;36;0;0;0;True;True;False;False;2.246907904976979;4;2;5100;5100;4

Block: 5414
5414Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP10', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1547', 'DUP2', 'PUSH2 0x1708', 'JUMP']>> 
5414-Stack size: 26 
5414-Equals Mem:<< []>> 
5414-NonEquals Mem: << [<11,14>]>> 
5414-Equals Sto:<< []>> 
5414-NonEquals Sto: << []>> 
5414-Useless: []
5414-Constancy: [(21, 0)]
5414-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(14)', 's(8)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(11)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5414 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5616
5616Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
5616-Stack size: 18 
5616-Equals Mem:<< []>> 
5616-NonEquals Mem: << [<6,1>]>> 
5616-Equals Sto:<< []>> 
5616-NonEquals Sto: << []>> 
5616-Useless: []
5616-Constancy: [(1, 0), (6, 0)]
5616-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP2 SWAP1 PUSH2 0x1986 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1986 JUMP

Optimized code stored in /tmp/0x00/synagogue_5616_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_5616_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5616;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;5616;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP2 SWAP1 PUSH2 0x1986 JUMP;PUSH2 0x5fc SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1986 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.0727257970138453;1;0;0;0;2

Block: 5918
5918Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH2 0x173a', 'SWAP1', 'DUP3', 'PUSH2 0x16aa', 'JUMP']>> 
5918-Stack size: 30 
5918-Equals Mem:<< []>> 
5918-NonEquals Mem: << [<5,8>]>> 
5918-Equals Sto:<< []>> 
5918-NonEquals Sto: << []>> 
5918-Useless: []
5918-Constancy: [(1, 0), (25, 0)]
5918-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5918 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5946
5946Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'POP', 'POP', 'POP', 'JUMP']>> 
5946-Stack size: 30 
5946-Equals Mem:<< []>> 
5946-NonEquals Mem: << [<5,8>]>> 
5946-Equals Sto:<< []>> 
5946-NonEquals Sto: << []>> 
5946-Useless: []
5946-Constancy: [(25, 0)]
5946-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5946 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5825
5825Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
5825-Stack size: 30 
5825-Equals Mem:<< []>> 
5825-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
5825-Equals Sto:<< []>> 
5825-NonEquals Sto: << []>> 
5825-Useless: []
5825-Constancy: [(1, 0)]
5825-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x5fc JUMP

Optimized code stored in /tmp/0x00/synagogue_5825_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_5825_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5825;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;5825;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x05fc JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x5fc JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.095539149013348;1;3;0;0;2

Block: 5457
5457Instr:<<['JUMPDEST', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP10', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP6', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x1596', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
5457-Stack size: 25 
5457-Equals Mem:<< []>> 
5457-NonEquals Mem: << [<22,18>]>> 
5457-Equals Sto:<< []>> 
5457-NonEquals Sto: << []>> 
5457-Useless: []
5457-Constancy: [(20, 0)]
5457-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<17,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<17,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(15)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP8 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP10 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP6 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP10 AND DUP9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef PUSH1 0x40 MLOAD PUSH1 0x20 DUP8 DUP3 MSTORE ADD PUSH2 0x1596 JUMP

Optimized code stored in /tmp/0x00/synagogue_5457_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_5457_statistics.csv

Estimated initial gas: 84
Estimated gas optimized: 57

Estimated initial size in bytes: 69
Estimated size optimized in bytes: 94

Initial number of instructions: 27
Final number of instructions: 18

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5457;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;5457;2;True;True;False;JUMPDEST DUP8 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP10 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP6 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP10 AND DUP9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef PUSH1 0x40 MLOAD PUSH1 0x20 DUP8 DUP3 MSTORE ADD PUSH2 0x1596 JUMP;84;69;27;57;94;18;27;-25;9;True;False;False;False;2.1747011939878576;4;0;0;0;8

Block: 4517
4517Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP2', 'SWAP1', 'PUSH2 0x1986', 'JUMP']>> 
4517-Stack size: 15 
4517-Equals Mem:<< []>> 
4517-NonEquals Mem: << [<6,1>]>> 
4517-Equals Sto:<< []>> 
4517-NonEquals Sto: << []>> 
4517-Useless: []
4517-Constancy: [(1, 0)]
4517-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP2 SWAP1 PUSH2 0x1986 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1986 JUMP

Optimized code stored in /tmp/0x00/synagogue_4517_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_4517_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4517;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;4517;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP2 SWAP1 PUSH2 0x1986 JUMP;PUSH2 0x5fc SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1986 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07473629695596173;1;0;0;0;2

Block: 7330
7330Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7330-Stack size: 22 
7330-Equals Mem:<< []>> 
7330-NonEquals Mem: << [<4,7>]>> 
7330-Equals Sto:<< []>> 
7330-NonEquals Sto: << []>> 
7330-Useless: []
7330-Constancy: [(0, 0)]
7330-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_7330 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6205
6205Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
6205-Stack size: 34 
6205-Equals Mem:<< []>> 
6205-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6205-Equals Sto:<< []>> 
6205-NonEquals Sto: << []>> 
6205-Useless: []
6205-Constancy: [(1, 0)]
6205-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '119', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '33', 'mstore'), 2), (('s(10)', '37714057306925736537727341711534603569002632158006504148307520321239491439727', 'mstore'), 2), (('s(12)', '53825228981408700216425575062632269666168469434418855940216611316178368856064', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_6205_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_6205_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 81

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_6205;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;6205;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;81;33;104;81;33;0;0;0;True;False;False;False;2.126005422032904;2;4;0;0;4

Block: 2902
2902Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
2902-Stack size: 9 
2902-Equals Mem:<< []>> 
2902-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2902-Equals Sto:<< []>> 
2902-NonEquals Sto: << []>> 
2902-Useless: []
2902-Constancy: []
2902-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_2902_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_2902_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2902;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;2902;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.121587584959343;2;4;0;0;4

Block: 3000
3000Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x05fc', 'JUMP']>> 
3000-Stack size: 9 
3000-Equals Mem:<< []>> 
3000-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3000-Equals Sto:<< []>> 
3000-NonEquals Sto: << []>> 
3000-Useless: []
3000-Constancy: []
3000-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP

Optimized code stored in /tmp/0x00/synagogue_3000_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_3000_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_3000;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;3000;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x05fc JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.123674932983704;2;4;0;0;4

Block: 510
510Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH9 0x53796e61676f677565', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
510-Stack size: 2 
510-Equals Mem:<< [<10,4>]>> 
510-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
510-Equals Sto:<< []>> 
510-NonEquals Sto: << []>> 
510-Useless: []
510-Constancy: []
510-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('184', '1539829796340798813541', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(2)', 'mstore'), 2), (('s(1)', '9', 'mstore'), 2), (('s(5)', '37756516745355263459337190407055403510645431813404445103196920811941533843456', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_510 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6286
6286Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6286-Stack size: 11 
6286-Equals Mem:<< []>> 
6286-NonEquals Mem: << [<5,8>]>> 
6286-Equals Sto:<< []>> 
6286-NonEquals Sto: << []>> 
6286-Useless: []
6286-Constancy: []
6286-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_6286 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6456
6456Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MSTORE', 'SWAP2', 'DUP3', 'MSTORE', 'DUP5', 'DUP3', 'ADD', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'ADD', 'DUP6', 'ADD', 'SWAP2', 'DUP9', 'DUP4', 'GT', 'ISZERO', 'PUSH2 0x1955', 'JUMPI']>> 
6456-Stack size: 13 
6456-Equals Mem:<< []>> 
6456-NonEquals Mem: << [<2,5>]>> 
6456-Equals Sto:<< []>> 
6456-NonEquals Sto: << []>> 
6456-Useless: []
6456-Constancy: [(7, 0), (6, 32)]
6456-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 's(9)', 'mstore'), 2), (('s(8)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x1955 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x1955 JUMPI

Optimized code stored in /tmp/0x00/synagogue_6456_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_6456_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 26
Estimated size optimized in bytes: 26

Initial number of instructions: 23
Final number of instructions: 23

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_6456;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;6456;2;True;False;False;JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x1955 JUMPI;JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x1955 JUMPI;73;26;23;73;26;23;0;0;0;True;False;False;False;2.1930291719618253;0;0;0;0;0

Block: 1509
1509Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x05fc', 'SWAP1', 'PUSH2 0x1b76', 'JUMP']>> 
1509-Stack size: 3 
1509-Equals Mem:<< []>> 
1509-NonEquals Mem: << [<6,1>]>> 
1509-Equals Sto:<< []>> 
1509-NonEquals Sto: << []>> 
1509-Useless: []
1509-Constancy: []
1509-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP

Optimized sequence (basic block per line):
PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP

Optimized code stored in /tmp/0x00/synagogue_1509_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_1509_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1509;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;1509;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x05fc SWAP1 PUSH2 0x1b76 JUMP;PUSH2 0x5fc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1b76 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02947789605241269;1;0;0;0;2

Block: 7083
7083Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7083-Stack size: 10 
7083-Equals Mem:<< []>> 
7083-NonEquals Mem: << [<5,8>]>> 
7083-Equals Sto:<< []>> 
7083-NonEquals Sto: << []>> 
7083-Useless: []
7083-Constancy: []
7083-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_7083 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1575
1575Instr:<<['JUMPDEST', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MUL', 'SWAP2', 'SWAP1', 'SWAP2', 'ADD', 'DUP2', 'ADD', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP3', 'MSTORE', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x0662', 'DUP2', 'PUSH2 0x1bd3', 'JUMP']>> 
1575-Stack size: 9 
1575-Equals Mem:<< []>> 
1575-NonEquals Mem: << [<19,11>, <19,25>, <25,11>, <11,29>]>> 
1575-Equals Sto:<< [<31,43>]>> 
1575-NonEquals Sto: << []>> 
1575-Useless: []
1575-Constancy: [(2, 0)]
1575-ContextAliasing: [(6, 7)]


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,18>, <18,24>, <10,24>, <10,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,18>, <18,24>, <10,24>, <10,28>], 'storage_deps_eqs': [<30,42>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', 's(14)', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('s(15)', 's(17)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(9)', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2), (('s(13)', 's(2)', 'mstore'), 2), (('0', 's(14)', 'keccak2560'), 2)]
Memory dep: [(2, 3), (1, 3)]
Memory dep simplified: [(2, 3), (1, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0662 DUP2 PUSH2 0x1bd3 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0662 DUP2 PUSH2 0x1bd3 JUMP

Optimized code stored in /tmp/0x00/synagogue_1575_optimized.txt
Optimality results stored in /tmp/0x00/synagogue_1575_statistics.csv

Estimated initial gas: 5172
Estimated gas optimized: 5172

Estimated initial size in bytes: 59
Estimated size optimized in bytes: 59

Initial number of instructions: 49
Final number of instructions: 49

GREENRES: 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1575;0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol;synagogue;1575;2;True;False;False;JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0662 DUP2 PUSH2 0x1bd3 JUMP;JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x0662 DUP2 PUSH2 0x1bd3 JUMP;5172;59;49;5172;59;49;0;0;0;True;True;False;False;2.598918796982616;3;2;5000;5000;4

Block: 7103
7103Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
7103-Stack size: 9 
7103-Equals Mem:<< []>> 
7103-NonEquals Mem: << [<5,8>]>> 
7103-Equals Sto:<< []>> 
7103-NonEquals Sto: << []>> 
7103-Useless: []
7103-Constancy: []
7103-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_7103 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1532
1532Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1532-Stack size: 3 
1532-Equals Mem:<< []>> 
1532-NonEquals Mem: << []>> 
1532-Equals Sto:<< []>> 
1532-NonEquals Sto: << []>> 
1532-Useless: []
1532-Constancy: []
1532-ContextAliasing: []

Block: 557
557Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
557-Stack size: 2 
557-Equals Mem:<< []>> 
557-NonEquals Mem: << []>> 
557-Equals Sto:<< []>> 
557-NonEquals Sto: << []>> 
557-Useless: []
557-Constancy: []
557-ContextAliasing: []

Block: 1885
1885Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xb0', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
1885-Stack size: 3 
1885-Equals Mem:<< []>> 
1885-NonEquals Mem: << []>> 
1885-Equals Sto:<< [<3,23>]>> 
1885-NonEquals Sto: << []>> 
1885-Useless: []
1885-Constancy: []
1885-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('176', '255', 'shl')
[RULE]: Evaluate expression ('176', '1', 'shl')
Storage order: [(('21', 'sload0'), 1), (('21', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_282c6b8e259e4412ac9b36c39e595b89/jsons/isolated_block_0_0_input.json --- (7, 5)
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_1885 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2222
2222Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
2222-Stack size: 3 
2222-Equals Mem:<< []>> 
2222-NonEquals Mem: << []>> 
2222-Equals Sto:<< [<3,23>]>> 
2222-NonEquals Sto: << []>> 
2222-Useless: []
2222-Constancy: []
2222-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '255', 'shl')
[RULE]: Evaluate expression ('160', '1', 'shl')
Storage order: [(('21', 'sload0'), 1), (('21', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_282c6b8e259e4412ac9b36c39e595b89/jsons/isolated_block_0_0_input.json --- (7, 5)
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2222 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2339
2339Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'PUSH1 0x0a', 'SWAP2', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x0b', 'SSTORE', 'JUMP']>> 
2339-Stack size: 6 
2339-Equals Mem:<< []>> 
2339-NonEquals Mem: << []>> 
2339-Equals Sto:<< []>> 
2339-NonEquals Sto: << [<5,10>, <5,12>, <5,14>, <10,12>, <10,14>, <12,14>]>> 
2339-Useless: []
2339-Constancy: []
2339-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,9>, <4,11>, <4,13>, <9,11>, <9,13>, <11,13>]}
Storage order: [(('8', 's(0)', 'sstore'), 2), (('10', 's(1)', 'sstore'), 2), (('9', 's(2)', 'sstore'), 2), (('11', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_2339 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4044
4044Instr:<<['JUMPDEST', 'PUSH1 0x18', 'SLOAD', 'PUSH1 0x16', 'SLOAD', 'SWAP2', 'SWAP3', 'POP', 'DUP3', 'LT', 'ISZERO', 'SWAP1', 'DUP3', 'LT', 'PUSH2 0x0fe5', 'JUMPI']>> 
4044-Stack size: 11 
4044-Equals Mem:<< []>> 
4044-NonEquals Mem: << []>> 
4044-Equals Sto:<< []>> 
4044-NonEquals Sto: << [<2,4>]>> 
4044-Useless: []
4044-Constancy: [(1, 0), (6, 0)]
4044-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
Storage order: [(('24', 'sload0'), 1), (('22', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
MEJORADO: /tmp/gasol_282c6b8e259e4412ac9b36c39e595b89/jsons/isolated_block_0_0_input.json --- (7, 6)
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4044 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4421
4421Instr:<<['PUSH1 0x08', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH1 0x0d', 'SSTORE']>> 
4421-Stack size: 10 
4421-Equals Mem:<< []>> 
4421-NonEquals Mem: << []>> 
4421-Equals Sto:<< []>> 
4421-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4421-Useless: []
4421-Constancy: [(5, 0)]
4421-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]}
Storage order: [(('8', 'sload0'), 1), (('12', 's(0)', 'sstore'), 2), (('9', 'sload1'), 1), (('13', 's(1)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4421 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4482
4482Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0d', 'SSTORE']>> 
4482-Stack size: 10 
4482-Equals Mem:<< []>> 
4482-NonEquals Mem: << []>> 
4482-Equals Sto:<< []>> 
4482-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4482-Useless: []
4482-Constancy: [(5, 0)]
4482-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]}
Storage order: [(('10', 'sload0'), 1), (('12', 's(0)', 'sstore'), 2), (('11', 'sload1'), 1), (('13', 's(1)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_4482 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5094
5094Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
5094-Stack size: 10 
5094-Equals Mem:<< []>> 
5094-NonEquals Mem: << []>> 
5094-Equals Sto:<< [<5,12>]>> 
5094-NonEquals Sto: << []>> 
5094-Useless: []
5094-Constancy: []
5094-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<4,11>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '255', 'shl')
Storage order: [(('21', 'sload0'), 1), (('21', 's(6)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5094 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5145
5145Instr:<<['PUSH2 0x0a2c', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
5145-Stack size: 15 
5145-Equals Mem:<< []>> 
5145-NonEquals Mem: << []>> 
5145-Equals Sto:<< []>> 
5145-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
5145-Useless: []
5145-Constancy: [(10, 0)]
5145-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]}
Storage order: [(('14', 'sload0'), 1), (('12', 's(1)', 'sstore'), 2), (('15', 'sload1'), 1), (('13', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5145 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5282
5282Instr:<<['JUMPDEST', 'PUSH1 0x0c', 'DUP1', 'SLOAD', 'PUSH1 0x0e', 'SSTORE', 'PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH0', 'SWAP2', 'DUP3', 'SWAP1', 'SSTORE', 'SSTORE', 'JUMP']>> 
5282-Stack size: 16 
5282-Equals Mem:<< []>> 
5282-NonEquals Mem: << []>> 
5282-Equals Sto:<< [<8,16>, <3,15>]>> 
5282-NonEquals Sto: << [<3,5>, <3,8>, <3,10>, <5,8>, <5,10>, <8,10>, <3,16>, <5,15>, <5,16>, <8,15>, <10,15>, <10,16>, <15,16>]>> 
5282-Useless: []
5282-Constancy: [(11, 0)]
5282-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<7,15>, <2,14>], 'storage_deps_noneqs': [<2,4>, <2,7>, <2,9>, <4,7>, <4,9>, <7,9>, <2,15>, <4,14>, <4,15>, <7,14>, <9,14>, <9,15>, <14,15>]}
Storage order: [(('12', 'sload0'), 1), (('14', 's(0)', 'sstore'), 2), (('13', 'sload1'), 1), (('15', 's(1)', 'sstore'), 2), (('12', '0', 'sstore'), 2), (('13', '0', 'sstore'), 2)]
Storage dep: [(2, 5), (0, 4)]
Storage dep simplified: [(2, 5), (0, 4)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5282 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5652
5652Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'PUSH2 0x162c', 'DUP11', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'PUSH2 0x1772', 'JUMP']>> 
5652-Stack size: 27 
5652-Equals Mem:<< []>> 
5652-NonEquals Mem: << []>> 
5652-Equals Sto:<< []>> 
5652-NonEquals Sto: << [<13,15>]>> 
5652-Useless: []
5652-Constancy: [(4, 0), (7, 0), (2, 0), (3, 0), (5, 0), (22, 0), (6, 0)]
5652-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<12,14>]}
Storage order: [(('12', 'sload0'), 1), (('13', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5652 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5979
5979Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SSTORE', 'PUSH1 0x07', 'SLOAD', 'PUSH2 0x176b', 'SWAP1', 'DUP3', 'PUSH2 0x16aa', 'JUMP']>> 
5979-Stack size: 29 
5979-Equals Mem:<< []>> 
5979-NonEquals Mem: << []>> 
5979-Equals Sto:<< []>> 
5979-NonEquals Sto: << [<2,4>]>> 
5979-Useless: []
5979-Constancy: [(24, 0)]
5979-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
Storage order: [(('6', 's(1)', 'sstore'), 2), (('7', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x015418d3466e177f99251f3b6f53bd6d62827d1e.sol_synagogue_5979 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
