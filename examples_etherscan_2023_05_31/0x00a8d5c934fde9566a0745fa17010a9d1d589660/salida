Green Main
*************************************************************
Compilation time: 1.2179822060279548s
*************************************************************
File: Ownable
Build CFG: 0.007642922981176525s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 4
Memory read accesses ContractOwnable: 8
Memory write accesses ContractOwnable: 15
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 174
174Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
174-Stack size: 4 
174-Equals Mem:<< []>> 
174-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
174-Equals Sto:<< []>> 
174-NonEquals Sto: << []>> 
174-Useless: []
174-Constancy: [(3, 0)]
174-ContextAliasing: []

.....
-----
Block: 403_0
403_0Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
403_0-Stack size: 5 
403_0-Equals Mem:<< []>> 
403_0-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
403_0-Equals Sto:<< []>> 
403_0-NonEquals Sto: << []>> 
403_0-Useless: []
403_0-Constancy: [(4, 0)]
403_0-ContextAliasing: []

.....
-----
Block: 283
283Instr:<<['SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
283-Stack size: 1 
283-Equals Mem:<< []>> 
283-NonEquals Mem: << [<12,2>]>> 
283-Equals Sto:<< []>> 
283-NonEquals Sto: << []>> 
283-Useless: []
283-Constancy: [(0, 0)]
283-ContextAliasing: []

.....
-----
Block: 403
403Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
403-Stack size: 5 
403-Equals Mem:<< []>> 
403-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
403-Equals Sto:<< []>> 
403-NonEquals Sto: << []>> 
403-Useless: []
403-Constancy: [(4, 0), (2, 0)]
403-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.0026088940212503076s

*************************************************************
File: SafeMath
Build CFG: 0.00045642699114978313s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 0
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.0001011659624055028s

*************************************************************
File: Secret
Build CFG: 0.7444311269791797s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Secret
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> <slot10,0> 6466_8:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--manualswap()
MEMRES: NOT Found read (potential optimization) -> <slot10,32> 6466_8:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--manualswap()
MEMRES: NOT Found read (potential optimization) -> mem40 3042_1:1 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--manualswap()
MEMRES: NOT Found read (potential optimization) -> <slot19,0> 4068_0:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot19,32> 4068_0:11 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot20,0> 4135_0:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot20,32> 4135_0:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot23,0> 6466_6:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot23,32> 6466_6:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot28,0> 6466_7:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot28,32> 6466_7:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot49,0> 6466_5:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot49,32> 6466_5:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot57,0> 6466_4:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot57,32> 6466_4:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot81,0> 6466_3:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--balanceOf(address)
MEMRES: NOT Found read (potential optimization) -> <slot81,32> 6466_3:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--balanceOf(address)
MEMRES: NOT Found read (potential optimization) -> <slot94,0> 4068:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot94,32> 4068:11 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot95,0> 4135:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot95,32> 4135:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot98,0> 6466_1:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot98,32> 6466_1:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot103,0> 6466_2:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot103,32> 6466_2:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot128,0> 6466_0:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot128,32> 6466_0:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot136,0> 6466:3 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot136,32> 6466:5 --> 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol Secret--transferFrom(address,address,uint256)
GASOL: Useless accesses found: {'6466_8': [3, 5], '3042_1': [1], '4068_0': [3, 11], '4135_0': [3, 5], '6466_6': [3, 5], '6466_7': [3, 5], '6466_5': [3, 5], '6466_4': [3, 5], '6466_3': [3, 5], '4068': [3, 11], '4135': [3, 5], '6466_1': [3, 5], '6466_2': [3, 5], '6466_0': [3, 5], '6466': [3, 5]}
Free memory analyss finished


SLOTS Contract Secret: 152
Memory read accesses ContractSecret: 425
Memory write accesses ContractSecret: 1003
********************************** INIT
GASOL: Adding block useless 6466_8
GASOL: Adding block useless 3042_1
GASOL: Adding block useless 4068_0
GASOL: Adding block useless 4135_0
GASOL: Adding block useless 6466_6
GASOL: Adding block useless 6466_7
GASOL: Adding block useless 6466_5
GASOL: Adding block useless 6466_4
GASOL: Adding block useless 6466_3
GASOL: Adding block useless 4068
GASOL: Adding block useless 4135
GASOL: Adding block useless 6466_1
GASOL: Adding block useless 6466_2
GASOL: Adding block useless 6466_0
GASOL: Adding block useless 6466
CONTEXT: Detected context equality 2 <slot14,0> 5 <slot14,0>
CONTEXT: Detected context equality 4 <slot13,0> 15 <slot13,0>
CONTEXT: Detected context equality 12 <slot14,0> 10 <slot14,0>
CONTEXT: Detected context equality 12 <slot14,0> 10 <slot14,0>
CONTEXT: Detected context equality 4 <slot13,0> 11 <slot13,0>
CONTEXT: Detected context equality 10 <slot15,0> 11 <slot15,0>
CONTEXT: Detected context equality 10 <slot15,0> 11 <slot15,0>
CONTEXT: Detected context equality 13 <slot16,0> 14 <slot16,0>
CONTEXT: Detected context equality 13 <slot16,0> 14 <slot16,0>
CONTEXT: Detected context equality 15 <slot33,0> 16 <slot33,0>
CONTEXT: Detected context equality 15 <slot33,0> 16 <slot33,0>
CONTEXT: Detected context equality 22 <slot36,0> 23 <slot36,0>
CONTEXT: Detected context equality 22 <slot36,0> 23 <slot36,0>
CONTEXT: Detected context equality 22 <slot38,0> 23 <slot38,0>
CONTEXT: Detected context equality 22 <slot38,0> 23 <slot38,0>
CONTEXT: Detected context equality 22 <slot39,0> 23 <slot39,0>
CONTEXT: Detected context equality 22 <slot39,0> 23 <slot39,0>
CONTEXT: Detected context equality 23 <slot40,0> 24 <slot40,0>
CONTEXT: Detected context equality 23 <slot40,0> 24 <slot40,0>
CONTEXT: Detected context equality 22 <slot44,0> 23 <slot44,0>
CONTEXT: Detected context equality 22 <slot44,0> 23 <slot44,0>
CONTEXT: Detected context equality 20 <slot45,0> 21 <slot45,0>
CONTEXT: Detected context equality 20 <slot45,0> 21 <slot45,0>
CONTEXT: Detected context equality 20 <slot46,0> 21 <slot46,0>
CONTEXT: Detected context equality 20 <slot46,0> 21 <slot46,0>
CONTEXT: Detected context equality 13 <slot53,0> 10 <slot53,0>
CONTEXT: Detected context equality 10 <slot52,0> 21 <slot52,0>
CONTEXT: Detected context equality 18 <slot53,0> 16 <slot53,0>
CONTEXT: Detected context equality 18 <slot53,0> 16 <slot53,0>
CONTEXT: Detected context equality 10 <slot52,0> 17 <slot52,0>
CONTEXT: Detected context equality 20 <slot54,0> 21 <slot54,0>
CONTEXT: Detected context equality 20 <slot54,0> 21 <slot54,0>
CONTEXT: Detected context equality 23 <slot55,0> 24 <slot55,0>
CONTEXT: Detected context equality 23 <slot55,0> 24 <slot55,0>
CONTEXT: Detected context equality 22 <slot61,0> 23 <slot61,0>
CONTEXT: Detected context equality 22 <slot61,0> 23 <slot61,0>
CONTEXT: Detected context equality 25 <slot62,0> 26 <slot62,0>
CONTEXT: Detected context equality 25 <slot62,0> 26 <slot62,0>
CONTEXT: Detected context equality 7 <slot85,0> 8 <slot85,0>
CONTEXT: Detected context equality 7 <slot85,0> 8 <slot85,0>
CONTEXT: Detected context equality 10 <slot86,0> 11 <slot86,0>
CONTEXT: Detected context equality 10 <slot86,0> 11 <slot86,0>
CONTEXT: Detected context equality 8 <slot110,0> 9 <slot110,0>
CONTEXT: Detected context equality 8 <slot110,0> 9 <slot110,0>
CONTEXT: Detected context equality 21 <slot112,0> 22 <slot112,0>
CONTEXT: Detected context equality 21 <slot112,0> 22 <slot112,0>
CONTEXT: Detected context equality 28 <slot115,0> 29 <slot115,0>
CONTEXT: Detected context equality 28 <slot115,0> 29 <slot115,0>
CONTEXT: Detected context equality 28 <slot117,0> 29 <slot117,0>
CONTEXT: Detected context equality 28 <slot117,0> 29 <slot117,0>
CONTEXT: Detected context equality 28 <slot118,0> 29 <slot118,0>
CONTEXT: Detected context equality 28 <slot118,0> 29 <slot118,0>
CONTEXT: Detected context equality 29 <slot119,0> 30 <slot119,0>
CONTEXT: Detected context equality 29 <slot119,0> 30 <slot119,0>
CONTEXT: Detected context equality 28 <slot123,0> 29 <slot123,0>
CONTEXT: Detected context equality 28 <slot123,0> 29 <slot123,0>
CONTEXT: Detected context equality 26 <slot124,0> 27 <slot124,0>
CONTEXT: Detected context equality 26 <slot124,0> 27 <slot124,0>
CONTEXT: Detected context equality 26 <slot125,0> 27 <slot125,0>
CONTEXT: Detected context equality 26 <slot125,0> 27 <slot125,0>
CONTEXT: Detected context equality 19 <slot132,0> 16 <slot132,0>
CONTEXT: Detected context equality 16 <slot131,0> 27 <slot131,0>
CONTEXT: Detected context equality 24 <slot132,0> 22 <slot132,0>
CONTEXT: Detected context equality 24 <slot132,0> 22 <slot132,0>
CONTEXT: Detected context equality 16 <slot131,0> 23 <slot131,0>
CONTEXT: Detected context equality 26 <slot133,0> 27 <slot133,0>
CONTEXT: Detected context equality 26 <slot133,0> 27 <slot133,0>
CONTEXT: Detected context equality 29 <slot134,0> 30 <slot134,0>
CONTEXT: Detected context equality 29 <slot134,0> 30 <slot134,0>
CONTEXT: Detected context equality 28 <slot140,0> 29 <slot140,0>
CONTEXT: Detected context equality 28 <slot140,0> 29 <slot140,0>
CONTEXT: Detected context equality 31 <slot141,0> 32 <slot141,0>
CONTEXT: Detected context equality 31 <slot141,0> 32 <slot141,0>
COMPACT CLONES: True
CONTRACT: Secret
-----
Block: 484
484Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
484-Stack size: 6 
484-Equals Mem:<< []>> 
484-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
484-Equals Sto:<< []>> 
484-NonEquals Sto: << []>> 
484-Useless: []
484-Constancy: [(5, 0), (0, 64)]
484-ContextAliasing: []

.....
-----
Block: 3293_9
3293_9Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_9-Stack size: 8 
3293_9-Equals Mem:<< []>> 
3293_9-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_9-Equals Sto:<< []>> 
3293_9-NonEquals Sto: << []>> 
3293_9-Useless: []
3293_9-Constancy: [(7, 0), (6, 64)]
3293_9-ContextAliasing: []

.....
-----
Block: 3293_8
3293_8Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_8-Stack size: 7 
3293_8-Equals Mem:<< []>> 
3293_8-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_8-Equals Sto:<< []>> 
3293_8-NonEquals Sto: << []>> 
3293_8-Useless: []
3293_8-Constancy: [(6, 0), (5, 64), (2, 0)]
3293_8-ContextAliasing: []

.....
-----
Block: 658
658Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP4', 'DUP5', 'AND', 'DUP3', 'MSTORE', 'SWAP4', 'DUP7', 'MSTORE', 'KECCAK256', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'SWAP1', 'DUP4', 'MSTORE', 'DUP2', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
658-Stack size: 7 
658-Equals Mem:<< [<10,20>, <13,23>]>> 
658-NonEquals Mem: << [<10,29>, <10,13>, <10,23>, <10,32>, <13,29>, <13,20>, <13,32>, <20,29>, <20,23>, <20,32>, <23,29>, <23,32>, <32,14>, <32,26>, <32,29>, <14,29>, <26,29>]>> 
658-Equals Sto:<< []>> 
658-NonEquals Sto: << []>> 
658-Useless: []
658-Constancy: [(6, 32), (5, 64), (2, 64), (1, 0)]
658-ContextAliasing: []

.....
-----
Block: 851
851Instr:<<['PUSH2 0x036e', 'SWAP2', 'DUP11', 'MSTORE', 'DUP5', 'PUSH1 0x20', 'MSTORE', 'DUP6', 'DUP11', 'KECCAK256', 'DUP8', 'PUSH1 0xff', 'NOT', 'DUP3', 'SLOAD', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x17fa', 'JUMP']>> 
851-Stack size: 10 
851-Equals Mem:<< []>> 
851-NonEquals Mem: << [<3,6>]>> 
851-Equals Sto:<< [<14,18>]>> 
851-NonEquals Sto: << []>> 
851-Useless: []
851-Constancy: [(9, 0), (5, 64)]
851-ContextAliasing: []

.....
-----
Block: 3427_33
3427_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_33-Stack size: 10 
3427_33-Equals Mem:<< []>> 
3427_33-NonEquals Mem: << [<5,8>]>> 
3427_33-Equals Sto:<< []>> 
3427_33-NonEquals Sto: << []>> 
3427_33-Useless: []
3427_33-Constancy: [(9, 0), (5, 64)]
3427_33-ContextAliasing: []

.....
-----
Block: 3293_7
3293_7Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_7-Stack size: 9 
3293_7-Equals Mem:<< []>> 
3293_7-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_7-Equals Sto:<< []>> 
3293_7-NonEquals Sto: << []>> 
3293_7-Useless: []
3293_7-Constancy: [(8, 0), (4, 64)]
3293_7-ContextAliasing: []

.....
-----
Block: 952
952Instr:<<['ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x02', 'DUP2', 'MSTORE', 'PUSH2 0x03cc', 'DUP3', 'DUP6', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
952-Stack size: 4 
952-Equals Mem:<< []>> 
952-NonEquals Mem: << [<2,6>]>> 
952-Equals Sto:<< []>> 
952-NonEquals Sto: << []>> 
952-Useless: []
952-Constancy: [(2, 0), (0, 64)]
952-ContextAliasing: []

.....
-----
Block: 6466_8
6466_8Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_8-Stack size: 15 
6466_8-Equals Mem:<< []>> 
6466_8-NonEquals Mem: << [<3,5>]>> 
6466_8-Equals Sto:<< []>> 
6466_8-NonEquals Sto: << []>> 
6466_8-Useless: [3, 5]
6466_8-Constancy: [(13, 0), (11, 64), (10, 32), (1, 32)]
6466_8-ContextAliasing: []

.....
-----
Block: 3484_13
3484_13Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_13-Stack size: 14 
3484_13-Equals Mem:<< []>> 
3484_13-NonEquals Mem: << [<3,10>]>> 
3484_13-Equals Sto:<< []>> 
3484_13-NonEquals Sto: << []>> 
3484_13-Useless: []
3484_13-Constancy: [(12, 0), (10, 64), (9, 32)]
3484_13-ContextAliasing: []

.....
-----
Block: 3484_14
3484_14Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_14-Stack size: 11 
3484_14-Equals Mem:<< []>> 
3484_14-NonEquals Mem: << [<3,10>]>> 
3484_14-Equals Sto:<< []>> 
3484_14-NonEquals Sto: << []>> 
3484_14-Useless: []
3484_14-Constancy: [(9, 0), (7, 64), (6, 32)]
3484_14-ContextAliasing: []

.....
-----
Block: 1110
1110Instr:<<['SWAP7', 'SWAP4', 'SWAP2', 'SWAP3', 'DUP9', 'SWAP6', 'SWAP4', 'DUP8', 'MLOAD', 'SWAP9', 'DUP10', 'SWAP7', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP9', 'MSTORE', 'PUSH1 0xa4', 'DUP9', 'ADD', 'SWAP4', 'DUP9', 'ADD', 'MSTORE', 'DUP8', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP4', 'SWAP3', 'DUP8', 'SWAP1']>> 
1110-Stack size: 10 
1110-Equals Mem:<< []>> 
1110-NonEquals Mem: << [<16,8>, <16,34>, <23,8>, <23,34>, <28,8>, <28,34>, <33,8>, <33,34>, <37,8>, <37,34>, <8,34>]>> 
1110-Equals Sto:<< []>> 
1110-NonEquals Sto: << []>> 
1110-Useless: []
1110-Constancy: [(8, 0), (6, 64), (2, 32)]
1110-ContextAliasing: []

.....
-----
Block: 3046_55
3046_55Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_55-Stack size: 4 
3046_55-Equals Mem:<< []>> 
3046_55-NonEquals Mem: << [<5,8>]>> 
3046_55-Equals Sto:<< []>> 
3046_55-NonEquals Sto: << []>> 
3046_55-Useless: []
3046_55-Constancy: [(2, 0)]
3046_55-ContextAliasing: []

.....
-----
Block: 1246
1246Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'DUP2', 'AND', 'DUP7', 'MSTORE', 'DUP12', 'SWAP9', 'POP', 'DUP11', 'SWAP8', 'POP', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP4', 'DUP3', 'ADD', 'SWAP4', 'PUSH1 0x01', 'SWAP1', 'SWAP2', 'ADD', 'SWAP1', 'PUSH2 0x048d', 'JUMP']>> 
1246-Stack size: 13 
1246-Equals Mem:<< []>> 
1246-NonEquals Mem: << [<6,2>]>> 
1246-Equals Sto:<< []>> 
1246-NonEquals Sto: << []>> 
1246-Useless: []
1246-Constancy: [(11, 0), (9, 64), (8, 0), (2, 32)]
1246-ContextAliasing: [(10, 5)]

.....
-----
Block: 3750_3
3750_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3750_3-Stack size: 13 
3750_3-Equals Mem:<< []>> 
3750_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3750_3-Equals Sto:<< []>> 
3750_3-NonEquals Sto: << []>> 
3750_3-Useless: []
3750_3-Constancy: [(11, 0), (9, 64), (5, 32)]
3750_3-ContextAliasing: []

.....
-----
Block: 3830_3
3830_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3830_3-Stack size: 14 
3830_3-Equals Mem:<< []>> 
3830_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3830_3-Equals Sto:<< []>> 
3830_3-NonEquals Sto: << []>> 
3830_3-Useless: []
3830_3-Constancy: [(12, 0), (10, 64), (6, 32)]
3830_3-ContextAliasing: []

.....
-----
Block: 6046_4
6046_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6046_4-Stack size: 16 
6046_4-Equals Mem:<< []>> 
6046_4-NonEquals Mem: << [<5,8>]>> 
6046_4-Equals Sto:<< []>> 
6046_4-NonEquals Sto: << []>> 
6046_4-Useless: []
6046_4-Constancy: [(14, 0), (12, 64), (8, 32)]
6046_4-ContextAliasing: [(11, 15)]

.....
-----
Block: 3046_56
3046_56Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_56-Stack size: 16 
3046_56-Equals Mem:<< []>> 
3046_56-NonEquals Mem: << [<5,8>]>> 
3046_56-Equals Sto:<< []>> 
3046_56-NonEquals Sto: << []>> 
3046_56-Useless: []
3046_56-Constancy: [(14, 0), (12, 64), (8, 32), (4, 32), (2, 32)]
3046_56-ContextAliasing: [(3, 10)]

.....
-----
Block: 3046_54
3046_54Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_54-Stack size: 16 
3046_54-Equals Mem:<< []>> 
3046_54-NonEquals Mem: << [<5,8>]>> 
3046_54-Equals Sto:<< []>> 
3046_54-NonEquals Sto: << []>> 
3046_54-Useless: []
3046_54-Constancy: [(14, 0), (12, 64), (8, 32), (4, 32)]
3046_54-ContextAliasing: [(3, 10)]

.....
-----
Block: 6046_3
6046_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6046_3-Stack size: 12 
6046_3-Equals Mem:<< []>> 
6046_3-NonEquals Mem: << [<5,8>]>> 
6046_3-Equals Sto:<< []>> 
6046_3-NonEquals Sto: << []>> 
6046_3-Useless: []
6046_3-Constancy: [(10, 0), (8, 64), (4, 32)]
6046_3-ContextAliasing: [(7, 11)]

.....
-----
Block: 3046_53
3046_53Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_53-Stack size: 10 
3046_53-Equals Mem:<< []>> 
3046_53-NonEquals Mem: << [<5,8>]>> 
3046_53-Equals Sto:<< []>> 
3046_53-NonEquals Sto: << []>> 
3046_53-Useless: []
3046_53-Constancy: [(8, 0), (6, 64), (2, 32)]
3046_53-ContextAliasing: []

.....
-----
Block: 3637_26
3637_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_26-Stack size: 9 
3637_26-Equals Mem:<< []>> 
3637_26-NonEquals Mem: << [<5,8>]>> 
3637_26-Equals Sto:<< []>> 
3637_26-NonEquals Sto: << []>> 
3637_26-Useless: []
3637_26-Constancy: [(7, 0), (5, 64), (4, 32)]
3637_26-ContextAliasing: []

.....
-----
Block: 3369_27
3369_27Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_27-Stack size: 11 
3369_27-Equals Mem:<< []>> 
3369_27-NonEquals Mem: << [<7,2>]>> 
3369_27-Equals Sto:<< []>> 
3369_27-NonEquals Sto: << []>> 
3369_27-Useless: []
3369_27-Constancy: [(9, 0), (7, 64), (6, 32)]
3369_27-ContextAliasing: []

.....
-----
Block: 3200_28
3200_28Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_28-Stack size: 15 
3200_28-Equals Mem:<< []>> 
3200_28-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_28-Equals Sto:<< []>> 
3200_28-NonEquals Sto: << []>> 
3200_28-Useless: []
3200_28-Constancy: [(13, 0), (11, 64), (10, 32)]
3200_28-ContextAliasing: [(4, 11)]

.....
-----
Block: 3251_28
3251_28Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_28-Stack size: 18 
3251_28-Equals Mem:<< []>> 
3251_28-NonEquals Mem: << [<12,6>]>> 
3251_28-Equals Sto:<< []>> 
3251_28-NonEquals Sto: << []>> 
3251_28-Useless: []
3251_28-Constancy: [(16, 0), (14, 64), (13, 32), (5, 32)]
3251_28-ContextAliasing: [(7, 11)]

.....
-----
Block: 3046_52
3046_52Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_52-Stack size: 13 
3046_52-Equals Mem:<< []>> 
3046_52-NonEquals Mem: << [<5,8>]>> 
3046_52-Equals Sto:<< []>> 
3046_52-NonEquals Sto: << []>> 
3046_52-Useless: []
3046_52-Constancy: [(11, 0), (9, 64), (8, 32)]
3046_52-ContextAliasing: []

.....
-----
Block: 3637_25
3637_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_25-Stack size: 12 
3637_25-Equals Mem:<< []>> 
3637_25-NonEquals Mem: << [<5,8>]>> 
3637_25-Equals Sto:<< []>> 
3637_25-NonEquals Sto: << []>> 
3637_25-Useless: []
3637_25-Constancy: [(10, 0), (8, 64), (7, 32)]
3637_25-ContextAliasing: []

.....
-----
Block: 3369_26
3369_26Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_26-Stack size: 14 
3369_26-Equals Mem:<< []>> 
3369_26-NonEquals Mem: << [<7,2>]>> 
3369_26-Equals Sto:<< []>> 
3369_26-NonEquals Sto: << []>> 
3369_26-Useless: []
3369_26-Constancy: [(12, 0), (10, 64), (9, 32)]
3369_26-ContextAliasing: []

.....
-----
Block: 3200_27
3200_27Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_27-Stack size: 18 
3200_27-Equals Mem:<< []>> 
3200_27-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_27-Equals Sto:<< []>> 
3200_27-NonEquals Sto: << []>> 
3200_27-Useless: []
3200_27-Constancy: [(16, 0), (14, 64), (13, 32)]
3200_27-ContextAliasing: [(4, 14)]

.....
-----
Block: 3251_27
3251_27Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_27-Stack size: 21 
3251_27-Equals Mem:<< []>> 
3251_27-NonEquals Mem: << [<12,6>]>> 
3251_27-Equals Sto:<< []>> 
3251_27-NonEquals Sto: << []>> 
3251_27-Useless: []
3251_27-Constancy: [(19, 0), (17, 64), (16, 32), (5, 32)]
3251_27-ContextAliasing: [(7, 14)]

.....
-----
Block: 3046_51
3046_51Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_51-Stack size: 16 
3046_51-Equals Mem:<< []>> 
3046_51-NonEquals Mem: << [<5,8>]>> 
3046_51-Equals Sto:<< []>> 
3046_51-NonEquals Sto: << []>> 
3046_51-Useless: []
3046_51-Constancy: [(14, 0), (12, 64), (11, 32)]
3046_51-ContextAliasing: []

.....
-----
Block: 3046_50
3046_50Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_50-Stack size: 17 
3046_50-Equals Mem:<< []>> 
3046_50-NonEquals Mem: << [<5,8>]>> 
3046_50-Equals Sto:<< []>> 
3046_50-NonEquals Sto: << []>> 
3046_50-Useless: []
3046_50-Constancy: [(15, 0), (13, 64), (12, 32), (3, 32)]
3046_50-ContextAliasing: []

.....
-----
Block: 3539_4
3539_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3539_4-Stack size: 7 
3539_4-Equals Mem:<< []>> 
3539_4-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3539_4-Equals Sto:<< []>> 
3539_4-NonEquals Sto: << []>> 
3539_4-Useless: []
3539_4-Constancy: [(5, 0), (3, 64), (2, 32)]
3539_4-ContextAliasing: []

.....
-----
Block: 1407
1407Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1407-Stack size: 7 
1407-Equals Mem:<< []>> 
1407-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
1407-Equals Sto:<< []>> 
1407-NonEquals Sto: << []>> 
1407-Useless: []
1407-Constancy: [(6, 32), (5, 64), (3, 64), (2, 0)]
1407-ContextAliasing: []

.....
-----
Block: 3983_0
3983_0Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x01', 'SWAP1', 'DUP4', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'SWAP2', 'PUSH1 0x05', 'DUP4', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'PUSH1 0xff', 'DUP4', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1277', 'JUMPI']>> 
3983_0-Stack size: 10 
3983_0-Equals Mem:<< []>> 
3983_0-NonEquals Mem: << [<6,11>]>> 
3983_0-Equals Sto:<< []>> 
3983_0-NonEquals Sto: << []>> 
3983_0-Useless: []
3983_0-Constancy: [(9, 0), (8, 32), (7, 64), (2, 0)]
3983_0-ContextAliasing: []

.....
-----
Block: 4068_0
4068_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'SWAP3', 'DUP4', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'DIV', 'SWAP3', 'PUSH2 0x101a', 'SWAP1', 'DUP4', 'PUSH2 0x1891', 'JUMP']>> 
4068_0-Stack size: 15 
4068_0-Equals Mem:<< []>> 
4068_0-NonEquals Mem: << [<3,11>]>> 
4068_0-Equals Sto:<< []>> 
4068_0-NonEquals Sto: << []>> 
4068_0-Useless: [3, 11]
4068_0-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (6, 32), (5, 64), (2, 32)]
4068_0-ContextAliasing: []

.....
-----
Block: 4135_0
4135_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'DIV', 'SWAP5', 'DUP4', 'MLOAD', 'SWAP2', 'PUSH2 0x103e', 'DUP4', 'PUSH2 0x0bfa', 'JUMP']>> 
4135_0-Stack size: 16 
4135_0-Equals Mem:<< []>> 
4135_0-NonEquals Mem: << [<3,11>, <3,5>, <5,11>]>> 
4135_0-Equals Sto:<< []>> 
4135_0-NonEquals Sto: << []>> 
4135_0-Useless: [3, 5]
4135_0-Constancy: [(15, 0), (14, 32), (13, 64), (8, 0), (7, 32), (6, 64), (1, 32)]
4135_0-ContextAliasing: []

.....
-----
Block: 4158_0
4158_0Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'SWAP2', 'DUP3', 'DUP5', 'MSTORE', 'DUP6', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP5', 'DUP6', 'DUP10', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x1077', 'SWAP1', 'DUP8', 'DUP6', 'PUSH2 0x0d49', 'JUMP']>> 
4158_0-Stack size: 14 
4158_0-Equals Mem:<< []>> 
4158_0-NonEquals Mem: << [<5,13>]>> 
4158_0-Equals Sto:<< []>> 
4158_0-NonEquals Sto: << []>> 
4158_0-Useless: []
4158_0-Constancy: [(13, 0), (12, 32), (11, 64), (5, 32), (4, 64), (1, 0)]
4158_0-ContextAliasing: []

.....
-----
Block: 4226_0
4226_0Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'DUP11', 'DUP8', 'DUP12', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1094', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4226_0-Stack size: 18 
4226_0-Equals Mem:<< []>> 
4226_0-NonEquals Mem: << [<3,9>]>> 
4226_0-Equals Sto:<< []>> 
4226_0-NonEquals Sto: << []>> 
4226_0-Useless: []
4226_0-Constancy: [(17, 0), (16, 32), (15, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
4226_0-ContextAliasing: []

.....
-----
Block: 6466_6
6466_6Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_6-Stack size: 24 
6466_6-Equals Mem:<< []>> 
6466_6-NonEquals Mem: << [<3,5>]>> 
6466_6-Equals Sto:<< []>> 
6466_6-NonEquals Sto: << []>> 
6466_6-Useless: [3, 5]
6466_6-Constancy: [(23, 0), (22, 32), (21, 64), (15, 32), (14, 64), (9, 0), (8, 64), (1, 32)]
6466_6-ContextAliasing: []

.....
-----
Block: 3484_11
3484_11Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_11-Stack size: 23 
3484_11-Equals Mem:<< []>> 
3484_11-NonEquals Mem: << [<3,10>]>> 
3484_11-Equals Sto:<< []>> 
3484_11-NonEquals Sto: << []>> 
3484_11-Useless: []
3484_11-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3484_11-ContextAliasing: []

.....
-----
Block: 4296_0
4296_0Instr:<<['JUMPDEST', 'DUP8', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x10db', 'SWAP1', 'DUP8', 'DUP5', 'PUSH2 0x0d49', 'JUMP']>> 
4296_0-Stack size: 20 
4296_0-Equals Mem:<< []>> 
4296_0-NonEquals Mem: << [<3,8>]>> 
4296_0-Equals Sto:<< []>> 
4296_0-NonEquals Sto: << []>> 
4296_0-Useless: []
4296_0-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
4296_0-ContextAliasing: []

.....
-----
Block: 4328_0
4328_0Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'DUP10', 'DUP14', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x10f9', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4328_0-Stack size: 21 
4328_0-Equals Mem:<< []>> 
4328_0-NonEquals Mem: << [<3,8>]>> 
4328_0-Equals Sto:<< []>> 
4328_0-NonEquals Sto: << []>> 
4328_0-Useless: []
4328_0-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
4328_0-ContextAliasing: []

.....
-----
Block: 4345_0
4345_0Instr:<<['JUMPDEST', 'SWAP1', 'DUP13', 'DUP6', 'MSTORE', 'PUSH1 0x02', 'DUP12', 'MSTORE', 'DUP4', 'DUP6', 'KECCAK256', 'SLOAD', 'SWAP1', 'DUP5', 'MLOAD', 'SWAP1', 'PUSH2 0x1112', 'DUP3', 'PUSH2 0x0bfa', 'JUMP']>> 
4345_0-Stack size: 19 
4345_0-Equals Mem:<< []>> 
4345_0-NonEquals Mem: << [<4,14>, <4,7>, <7,14>, <10,14>]>> 
4345_0-Equals Sto:<< []>> 
4345_0-NonEquals Sto: << []>> 
4345_0-Useless: []
4345_0-Constancy: [(18, 0), (17, 32), (16, 64), (10, 32), (9, 64), (4, 0), (3, 64)]
4345_0-ContextAliasing: []

.....
-----
Block: 4370_0
4370_0Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'DUP10', 'DUP14', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1123', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4370_0-Stack size: 21 
4370_0-Equals Mem:<< []>> 
4370_0-NonEquals Mem: << [<3,8>]>> 
4370_0-Equals Sto:<< []>> 
4370_0-NonEquals Sto: << []>> 
4370_0-Useless: []
4370_0-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
4370_0-ContextAliasing: []

.....
-----
Block: 4387_0
4387_0Instr:<<['JUMPDEST', 'DUP13', 'DUP6', 'MSTORE', 'PUSH1 0x02', 'DUP12', 'MSTORE', 'DUP4', 'DUP6', 'KECCAK256', 'SSTORE', 'DUP13', 'DUP5', 'MSTORE', 'DUP3', 'DUP5', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x113f', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4387_0-Stack size: 19 
4387_0-Equals Mem:<< [<3,13>]>> 
4387_0-NonEquals Mem: << [<3,6>, <6,13>]>> 
4387_0-Equals Sto:<< [<10,17>]>> 
4387_0-NonEquals Sto: << []>> 
4387_0-Useless: []
4387_0-Constancy: [(18, 0), (17, 32), (16, 64), (10, 32), (9, 64), (4, 0), (3, 64)]
4387_0-ContextAliasing: []

.....
-----
Block: 4415_0
4415_0Instr:<<['JUMPDEST', 'DUP13', 'DUP5', 'MSTORE', 'PUSH1 0x02', 'DUP11', 'MSTORE', 'DUP3', 'DUP5', 'KECCAK256', 'SSTORE', 'PUSH2 0x1152', 'PUSH2 0x190c', 'JUMP']>> 
4415_0-Stack size: 18 
4415_0-Equals Mem:<< []>> 
4415_0-NonEquals Mem: << [<3,6>]>> 
4415_0-Equals Sto:<< []>> 
4415_0-NonEquals Sto: << []>> 
4415_0-Useless: []
4415_0-Constancy: [(17, 0), (16, 32), (15, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
4415_0-ContextAliasing: []

.....
-----
Block: 6466_7
6466_7Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_7-Stack size: 24 
6466_7-Equals Mem:<< []>> 
6466_7-NonEquals Mem: << [<3,5>]>> 
6466_7-Equals Sto:<< []>> 
6466_7-NonEquals Sto: << []>> 
6466_7-Useless: [3, 5]
6466_7-Constancy: [(23, 0), (22, 32), (21, 64), (15, 32), (14, 64), (9, 0), (8, 64), (1, 32)]
6466_7-ContextAliasing: []

.....
-----
Block: 3484_12
3484_12Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_12-Stack size: 23 
3484_12-Equals Mem:<< []>> 
3484_12-NonEquals Mem: << [<3,10>]>> 
3484_12-Equals Sto:<< []>> 
3484_12-NonEquals Sto: << []>> 
3484_12-Useless: []
3484_12-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3484_12-ContextAliasing: []

.....
-----
Block: 4443_0
4443_0Instr:<<['JUMPDEST', 'ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x02', 'DUP10', 'MSTORE', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x1170', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4443_0-Stack size: 17 
4443_0-Equals Mem:<< []>> 
4443_0-NonEquals Mem: << [<3,6>]>> 
4443_0-Equals Sto:<< []>> 
4443_0-NonEquals Sto: << []>> 
4443_0-Useless: []
4443_0-Constancy: [(16, 0), (15, 32), (14, 64), (8, 32), (7, 64), (2, 0), (1, 64)]
4443_0-ContextAliasing: []

.....
-----
Block: 4464_0
4464_0Instr:<<['JUMPDEST', 'SWAP2', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'SWAP3', 'DUP6', 'MLOAD', 'SWAP3', 'PUSH2 0x118a', 'DUP5', 'PUSH2 0x0bfa', 'JUMP']>> 
4464_0-Stack size: 17 
4464_0-Equals Mem:<< []>> 
4464_0-NonEquals Mem: << [<4,14>, <4,7>, <7,14>, <8,14>]>> 
4464_0-Equals Sto:<< []>> 
4464_0-NonEquals Sto: << [<9,11>]>> 
4464_0-Useless: []
4464_0-Constancy: [(16, 0), (15, 32), (14, 64), (8, 32), (7, 64), (2, 0), (1, 64)]
4464_0-ContextAliasing: []

.....
-----
Block: 4490_0
4490_0Instr:<<['JUMPDEST', 'DUP4', 'MSTORE', 'DUP7', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1199', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4490_0-Stack size: 16 
4490_0-Equals Mem:<< []>> 
4490_0-NonEquals Mem: << [<2,6>]>> 
4490_0-Equals Sto:<< []>> 
4490_0-NonEquals Sto: << []>> 
4490_0-Useless: []
4490_0-Constancy: [(15, 0), (14, 32), (13, 64), (7, 32), (6, 64)]
4490_0-ContextAliasing: []

.....
-----
Block: 1468
1468Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1468-Stack size: 3 
1468-Equals Mem:<< []>> 
1468-NonEquals Mem: << [<4,1>]>> 
1468-Equals Sto:<< []>> 
1468-NonEquals Sto: << []>> 
1468-Useless: []
1468-Constancy: [(2, 0), (1, 32), (0, 64)]
1468-ContextAliasing: []

.....
-----
Block: 6220_4
6220_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
6220_4-Stack size: 12 
6220_4-Equals Mem:<< []>> 
6220_4-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
6220_4-Equals Sto:<< []>> 
6220_4-NonEquals Sto: << []>> 
6220_4-Useless: []
6220_4-Constancy: [(11, 0), (10, 32), (9, 64), (3, 32), (2, 64)]
6220_4-ContextAliasing: []

.....
-----
Block: 3427_26
3427_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_26-Stack size: 14 
3427_26-Equals Mem:<< []>> 
3427_26-NonEquals Mem: << [<5,8>]>> 
3427_26-Equals Sto:<< []>> 
3427_26-NonEquals Sto: << []>> 
3427_26-Useless: []
3427_26-Constancy: [(13, 0), (12, 32), (11, 64), (5, 32), (4, 64)]
3427_26-ContextAliasing: []

.....
-----
Block: 3427_25
3427_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_25-Stack size: 13 
3427_25-Equals Mem:<< []>> 
3427_25-NonEquals Mem: << [<5,8>]>> 
3427_25-Equals Sto:<< []>> 
3427_25-NonEquals Sto: << []>> 
3427_25-Useless: []
3427_25-Constancy: [(12, 0), (11, 32), (10, 64), (4, 32), (3, 64)]
3427_25-ContextAliasing: []

.....
-----
Block: 3369_25
3369_25Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_25-Stack size: 16 
3369_25-Equals Mem:<< []>> 
3369_25-NonEquals Mem: << [<7,2>]>> 
3369_25-Equals Sto:<< []>> 
3369_25-NonEquals Sto: << []>> 
3369_25-Useless: []
3369_25-Constancy: [(15, 0), (14, 32), (13, 64), (7, 32), (6, 64)]
3369_25-ContextAliasing: []

.....
-----
Block: 3200_26
3200_26Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_26-Stack size: 20 
3200_26-Equals Mem:<< []>> 
3200_26-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_26-Equals Sto:<< []>> 
3200_26-NonEquals Sto: << []>> 
3200_26-Useless: []
3200_26-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64)]
3200_26-ContextAliasing: [(4, 16)]

.....
-----
Block: 3251_26
3251_26Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_26-Stack size: 23 
3251_26-Equals Mem:<< []>> 
3251_26-NonEquals Mem: << [<12,6>]>> 
3251_26-Equals Sto:<< []>> 
3251_26-NonEquals Sto: << []>> 
3251_26-Useless: []
3251_26-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (5, 32)]
3251_26-ContextAliasing: [(7, 16)]

.....
-----
Block: 3046_48
3046_48Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_48-Stack size: 18 
3046_48-Equals Mem:<< []>> 
3046_48-NonEquals Mem: << [<5,8>]>> 
3046_48-Equals Sto:<< []>> 
3046_48-NonEquals Sto: << []>> 
3046_48-Useless: []
3046_48-Constancy: [(17, 0), (16, 32), (15, 64), (9, 32), (8, 64)]
3046_48-ContextAliasing: []

.....
-----
Block: 6220_3
6220_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
6220_3-Stack size: 18 
6220_3-Equals Mem:<< []>> 
6220_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
6220_3-Equals Sto:<< []>> 
6220_3-NonEquals Sto: << []>> 
6220_3-Useless: []
6220_3-Constancy: [(17, 0), (16, 32), (15, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
6220_3-ContextAliasing: []

.....
-----
Block: 3427_24
3427_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_24-Stack size: 20 
3427_24-Equals Mem:<< []>> 
3427_24-NonEquals Mem: << [<5,8>]>> 
3427_24-Equals Sto:<< []>> 
3427_24-NonEquals Sto: << []>> 
3427_24-Useless: []
3427_24-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_24-ContextAliasing: []

.....
-----
Block: 6327_5
6327_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_5-Stack size: 18 
6327_5-Equals Mem:<< []>> 
6327_5-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_5-Equals Sto:<< []>> 
6327_5-NonEquals Sto: << []>> 
6327_5-Useless: []
6327_5-Constancy: [(17, 0), (16, 32), (15, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
6327_5-ContextAliasing: []

.....
-----
Block: 3637_19
3637_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_19-Stack size: 22 
3637_19-Equals Mem:<< []>> 
3637_19-NonEquals Mem: << [<5,8>]>> 
3637_19-Equals Sto:<< []>> 
3637_19-NonEquals Sto: << []>> 
3637_19-Useless: []
3637_19-Constancy: [(21, 0), (20, 32), (19, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3637_19-ContextAliasing: []

.....
-----
Block: 3427_27
3427_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_27-Stack size: 20 
3427_27-Equals Mem:<< []>> 
3427_27-NonEquals Mem: << [<5,8>]>> 
3427_27-Equals Sto:<< []>> 
3427_27-NonEquals Sto: << []>> 
3427_27-Useless: []
3427_27-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_27-ContextAliasing: []

.....
-----
Block: 3637_18
3637_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_18-Stack size: 21 
3637_18-Equals Mem:<< []>> 
3637_18-NonEquals Mem: << [<5,8>]>> 
3637_18-Equals Sto:<< []>> 
3637_18-NonEquals Sto: << []>> 
3637_18-Useless: []
3637_18-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
3637_18-ContextAliasing: []

.....
-----
Block: 3369_24
3369_24Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_24-Stack size: 23 
3369_24-Equals Mem:<< []>> 
3369_24-NonEquals Mem: << [<7,2>]>> 
3369_24-Equals Sto:<< []>> 
3369_24-NonEquals Sto: << []>> 
3369_24-Useless: []
3369_24-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_24-ContextAliasing: []

.....
-----
Block: 3200_25
3200_25Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_25-Stack size: 27 
3200_25-Equals Mem:<< []>> 
3200_25-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_25-Equals Sto:<< []>> 
3200_25-NonEquals Sto: << []>> 
3200_25-Useless: []
3200_25-Constancy: [(26, 0), (25, 32), (24, 64), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_25-ContextAliasing: [(4, 23)]

.....
-----
Block: 3251_25
3251_25Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_25-Stack size: 30 
3251_25-Equals Mem:<< []>> 
3251_25-NonEquals Mem: << [<12,6>]>> 
3251_25-Equals Sto:<< []>> 
3251_25-NonEquals Sto: << []>> 
3251_25-Useless: []
3251_25-Constancy: [(29, 0), (28, 32), (27, 64), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_25-ContextAliasing: [(7, 23)]

.....
-----
Block: 3046_47
3046_47Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_47-Stack size: 25 
3046_47-Equals Mem:<< []>> 
3046_47-NonEquals Mem: << [<5,8>]>> 
3046_47-Equals Sto:<< []>> 
3046_47-NonEquals Sto: << []>> 
3046_47-Useless: []
3046_47-Constancy: [(24, 0), (23, 32), (22, 64), (16, 32), (15, 64), (10, 0), (9, 64)]
3046_47-ContextAliasing: []

.....
-----
Block: 3046_46
3046_46Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_46-Stack size: 26 
3046_46-Equals Mem:<< []>> 
3046_46-NonEquals Mem: << [<5,8>]>> 
3046_46-Equals Sto:<< []>> 
3046_46-NonEquals Sto: << []>> 
3046_46-Useless: []
3046_46-Constancy: [(25, 0), (24, 32), (23, 64), (17, 32), (16, 64), (11, 0), (10, 64), (3, 32)]
3046_46-ContextAliasing: []

.....
-----
Block: 6220_2
6220_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
6220_2-Stack size: 19 
6220_2-Equals Mem:<< []>> 
6220_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
6220_2-Equals Sto:<< []>> 
6220_2-NonEquals Sto: << []>> 
6220_2-Useless: []
6220_2-Constancy: [(18, 0), (17, 32), (16, 64), (10, 32), (9, 64), (4, 0), (3, 64)]
6220_2-ContextAliasing: []

.....
-----
Block: 3427_23
3427_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_23-Stack size: 21 
3427_23-Equals Mem:<< []>> 
3427_23-NonEquals Mem: << [<5,8>]>> 
3427_23-Equals Sto:<< []>> 
3427_23-NonEquals Sto: << []>> 
3427_23-Useless: []
3427_23-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
3427_23-ContextAliasing: []

.....
-----
Block: 3427_22
3427_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_22-Stack size: 20 
3427_22-Equals Mem:<< []>> 
3427_22-NonEquals Mem: << [<5,8>]>> 
3427_22-Equals Sto:<< []>> 
3427_22-NonEquals Sto: << []>> 
3427_22-Useless: []
3427_22-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_22-ContextAliasing: []

.....
-----
Block: 3369_23
3369_23Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_23-Stack size: 23 
3369_23-Equals Mem:<< []>> 
3369_23-NonEquals Mem: << [<7,2>]>> 
3369_23-Equals Sto:<< []>> 
3369_23-NonEquals Sto: << []>> 
3369_23-Useless: []
3369_23-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_23-ContextAliasing: []

.....
-----
Block: 3200_24
3200_24Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_24-Stack size: 27 
3200_24-Equals Mem:<< []>> 
3200_24-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_24-Equals Sto:<< []>> 
3200_24-NonEquals Sto: << []>> 
3200_24-Useless: []
3200_24-Constancy: [(26, 0), (25, 32), (24, 64), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_24-ContextAliasing: [(4, 23)]

.....
-----
Block: 3251_24
3251_24Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_24-Stack size: 30 
3251_24-Equals Mem:<< []>> 
3251_24-NonEquals Mem: << [<12,6>]>> 
3251_24-Equals Sto:<< []>> 
3251_24-NonEquals Sto: << []>> 
3251_24-Useless: []
3251_24-Constancy: [(29, 0), (28, 32), (27, 64), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_24-ContextAliasing: [(7, 23)]

.....
-----
Block: 3046_45
3046_45Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_45-Stack size: 23 
3046_45-Equals Mem:<< []>> 
3046_45-NonEquals Mem: << [<5,8>]>> 
3046_45-Equals Sto:<< []>> 
3046_45-NonEquals Sto: << []>> 
3046_45-Useless: []
3046_45-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3046_45-ContextAliasing: []

.....
-----
Block: 3427_21
3427_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_21-Stack size: 20 
3427_21-Equals Mem:<< []>> 
3427_21-NonEquals Mem: << [<5,8>]>> 
3427_21-Equals Sto:<< []>> 
3427_21-NonEquals Sto: << []>> 
3427_21-Useless: []
3427_21-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_21-ContextAliasing: []

.....
-----
Block: 3369_22
3369_22Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_22-Stack size: 23 
3369_22-Equals Mem:<< []>> 
3369_22-NonEquals Mem: << [<7,2>]>> 
3369_22-Equals Sto:<< []>> 
3369_22-NonEquals Sto: << []>> 
3369_22-Useless: []
3369_22-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_22-ContextAliasing: []

.....
-----
Block: 3200_23
3200_23Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_23-Stack size: 27 
3200_23-Equals Mem:<< []>> 
3200_23-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_23-Equals Sto:<< []>> 
3200_23-NonEquals Sto: << []>> 
3200_23-Useless: []
3200_23-Constancy: [(26, 0), (25, 32), (24, 64), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_23-ContextAliasing: [(4, 23)]

.....
-----
Block: 3251_23
3251_23Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_23-Stack size: 30 
3251_23-Equals Mem:<< []>> 
3251_23-NonEquals Mem: << [<12,6>]>> 
3251_23-Equals Sto:<< []>> 
3251_23-NonEquals Sto: << []>> 
3251_23-Useless: []
3251_23-Constancy: [(29, 0), (28, 32), (27, 64), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_23-ContextAliasing: [(7, 23)]

.....
-----
Block: 3046_44
3046_44Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_44-Stack size: 23 
3046_44-Equals Mem:<< []>> 
3046_44-NonEquals Mem: << [<5,8>]>> 
3046_44-Equals Sto:<< []>> 
3046_44-NonEquals Sto: << []>> 
3046_44-Useless: []
3046_44-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3046_44-ContextAliasing: []

.....
-----
Block: 3427_20
3427_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_20-Stack size: 21 
3427_20-Equals Mem:<< []>> 
3427_20-NonEquals Mem: << [<5,8>]>> 
3427_20-Equals Sto:<< []>> 
3427_20-NonEquals Sto: << []>> 
3427_20-Useless: []
3427_20-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
3427_20-ContextAliasing: []

.....
-----
Block: 3369_21
3369_21Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_21-Stack size: 24 
3369_21-Equals Mem:<< []>> 
3369_21-NonEquals Mem: << [<7,2>]>> 
3369_21-Equals Sto:<< []>> 
3369_21-NonEquals Sto: << []>> 
3369_21-Useless: []
3369_21-Constancy: [(23, 0), (22, 32), (21, 64), (15, 32), (14, 64), (9, 0), (8, 64)]
3369_21-ContextAliasing: []

.....
-----
Block: 3200_22
3200_22Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_22-Stack size: 28 
3200_22-Equals Mem:<< []>> 
3200_22-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_22-Equals Sto:<< []>> 
3200_22-NonEquals Sto: << []>> 
3200_22-Useless: []
3200_22-Constancy: [(27, 0), (26, 32), (25, 64), (19, 32), (18, 64), (13, 0), (12, 64)]
3200_22-ContextAliasing: [(4, 24)]

.....
-----
Block: 3251_22
3251_22Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_22-Stack size: 31 
3251_22-Equals Mem:<< []>> 
3251_22-NonEquals Mem: << [<12,6>]>> 
3251_22-Equals Sto:<< []>> 
3251_22-NonEquals Sto: << []>> 
3251_22-Useless: []
3251_22-Constancy: [(30, 0), (29, 32), (28, 64), (22, 32), (21, 64), (16, 0), (15, 64), (5, 32)]
3251_22-ContextAliasing: [(7, 24)]

.....
-----
Block: 3046_43
3046_43Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_43-Stack size: 22 
3046_43-Equals Mem:<< []>> 
3046_43-NonEquals Mem: << [<5,8>]>> 
3046_43-Equals Sto:<< []>> 
3046_43-NonEquals Sto: << []>> 
3046_43-Useless: []
3046_43-Constancy: [(21, 0), (20, 32), (19, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3046_43-ContextAliasing: []

.....
-----
Block: 6327_6
6327_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_6-Stack size: 20 
6327_6-Equals Mem:<< []>> 
6327_6-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_6-Equals Sto:<< []>> 
6327_6-NonEquals Sto: << []>> 
6327_6-Useless: []
6327_6-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
6327_6-ContextAliasing: []

.....
-----
Block: 3637_20
3637_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_20-Stack size: 24 
3637_20-Equals Mem:<< []>> 
3637_20-NonEquals Mem: << [<5,8>]>> 
3637_20-Equals Sto:<< []>> 
3637_20-NonEquals Sto: << []>> 
3637_20-Useless: []
3637_20-Constancy: [(23, 0), (22, 32), (21, 64), (15, 32), (14, 64), (9, 0), (8, 64)]
3637_20-ContextAliasing: []

.....
-----
Block: 3427_28
3427_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_28-Stack size: 22 
3427_28-Equals Mem:<< []>> 
3427_28-NonEquals Mem: << [<5,8>]>> 
3427_28-Equals Sto:<< []>> 
3427_28-NonEquals Sto: << []>> 
3427_28-Useless: []
3427_28-Constancy: [(21, 0), (20, 32), (19, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3427_28-ContextAliasing: []

.....
-----
Block: 6327_7
6327_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_7-Stack size: 20 
6327_7-Equals Mem:<< []>> 
6327_7-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_7-Equals Sto:<< []>> 
6327_7-NonEquals Sto: << []>> 
6327_7-Useless: []
6327_7-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
6327_7-ContextAliasing: []

.....
-----
Block: 3637_21
3637_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_21-Stack size: 24 
3637_21-Equals Mem:<< []>> 
3637_21-NonEquals Mem: << [<5,8>]>> 
3637_21-Equals Sto:<< []>> 
3637_21-NonEquals Sto: << []>> 
3637_21-Useless: []
3637_21-Constancy: [(23, 0), (22, 32), (21, 64), (15, 32), (14, 64), (9, 0), (8, 64)]
3637_21-ContextAliasing: []

.....
-----
Block: 3427_29
3427_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_29-Stack size: 22 
3427_29-Equals Mem:<< []>> 
3427_29-NonEquals Mem: << [<5,8>]>> 
3427_29-Equals Sto:<< []>> 
3427_29-NonEquals Sto: << []>> 
3427_29-Useless: []
3427_29-Constancy: [(21, 0), (20, 32), (19, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3427_29-ContextAliasing: []

.....
-----
Block: 6327_8
6327_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_8-Stack size: 19 
6327_8-Equals Mem:<< []>> 
6327_8-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_8-Equals Sto:<< []>> 
6327_8-NonEquals Sto: << []>> 
6327_8-Useless: []
6327_8-Constancy: [(18, 0), (17, 32), (16, 64), (10, 32), (9, 64), (4, 0), (3, 64)]
6327_8-ContextAliasing: []

.....
-----
Block: 3637_22
3637_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_22-Stack size: 23 
3637_22-Equals Mem:<< []>> 
3637_22-NonEquals Mem: << [<5,8>]>> 
3637_22-Equals Sto:<< []>> 
3637_22-NonEquals Sto: << []>> 
3637_22-Useless: []
3637_22-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3637_22-ContextAliasing: []

.....
-----
Block: 3427_30
3427_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_30-Stack size: 21 
3427_30-Equals Mem:<< []>> 
3427_30-NonEquals Mem: << [<5,8>]>> 
3427_30-Equals Sto:<< []>> 
3427_30-NonEquals Sto: << []>> 
3427_30-Useless: []
3427_30-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
3427_30-ContextAliasing: []

.....
-----
Block: 3637_17
3637_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_17-Stack size: 21 
3637_17-Equals Mem:<< []>> 
3637_17-NonEquals Mem: << [<5,8>]>> 
3637_17-Equals Sto:<< []>> 
3637_17-NonEquals Sto: << []>> 
3637_17-Useless: []
3637_17-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
3637_17-ContextAliasing: []

.....
-----
Block: 3369_20
3369_20Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_20-Stack size: 23 
3369_20-Equals Mem:<< []>> 
3369_20-NonEquals Mem: << [<7,2>]>> 
3369_20-Equals Sto:<< []>> 
3369_20-NonEquals Sto: << []>> 
3369_20-Useless: []
3369_20-Constancy: [(22, 0), (21, 32), (20, 64), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_20-ContextAliasing: []

.....
-----
Block: 3200_21
3200_21Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_21-Stack size: 27 
3200_21-Equals Mem:<< []>> 
3200_21-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_21-Equals Sto:<< []>> 
3200_21-NonEquals Sto: << []>> 
3200_21-Useless: []
3200_21-Constancy: [(26, 0), (25, 32), (24, 64), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_21-ContextAliasing: [(4, 23)]

.....
-----
Block: 3251_21
3251_21Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_21-Stack size: 30 
3251_21-Equals Mem:<< []>> 
3251_21-NonEquals Mem: << [<12,6>]>> 
3251_21-Equals Sto:<< []>> 
3251_21-NonEquals Sto: << []>> 
3251_21-Useless: []
3251_21-Constancy: [(29, 0), (28, 32), (27, 64), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_21-ContextAliasing: [(7, 23)]

.....
-----
Block: 3046_42
3046_42Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_42-Stack size: 25 
3046_42-Equals Mem:<< []>> 
3046_42-NonEquals Mem: << [<5,8>]>> 
3046_42-Equals Sto:<< []>> 
3046_42-NonEquals Sto: << []>> 
3046_42-Useless: []
3046_42-Constancy: [(24, 0), (23, 32), (22, 64), (16, 32), (15, 64), (10, 0), (9, 64)]
3046_42-ContextAliasing: []

.....
-----
Block: 3046_41
3046_41Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_41-Stack size: 26 
3046_41-Equals Mem:<< []>> 
3046_41-NonEquals Mem: << [<5,8>]>> 
3046_41-Equals Sto:<< []>> 
3046_41-NonEquals Sto: << []>> 
3046_41-Useless: []
3046_41-Constancy: [(25, 0), (24, 32), (23, 64), (17, 32), (16, 64), (11, 0), (10, 64), (3, 32)]
3046_41-ContextAliasing: []

.....
-----
Block: 3427_19
3427_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_19-Stack size: 18 
3427_19-Equals Mem:<< []>> 
3427_19-NonEquals Mem: << [<5,8>]>> 
3427_19-Equals Sto:<< []>> 
3427_19-NonEquals Sto: << []>> 
3427_19-Useless: []
3427_19-Constancy: [(17, 0), (16, 32), (15, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
3427_19-ContextAliasing: []

.....
-----
Block: 3369_19
3369_19Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_19-Stack size: 21 
3369_19-Equals Mem:<< []>> 
3369_19-NonEquals Mem: << [<7,2>]>> 
3369_19-Equals Sto:<< []>> 
3369_19-NonEquals Sto: << []>> 
3369_19-Useless: []
3369_19-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
3369_19-ContextAliasing: []

.....
-----
Block: 3200_20
3200_20Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_20-Stack size: 25 
3200_20-Equals Mem:<< []>> 
3200_20-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_20-Equals Sto:<< []>> 
3200_20-NonEquals Sto: << []>> 
3200_20-Useless: []
3200_20-Constancy: [(24, 0), (23, 32), (22, 64), (16, 32), (15, 64), (10, 0), (9, 64)]
3200_20-ContextAliasing: [(4, 21)]

.....
-----
Block: 3251_20
3251_20Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_20-Stack size: 28 
3251_20-Equals Mem:<< []>> 
3251_20-NonEquals Mem: << [<12,6>]>> 
3251_20-Equals Sto:<< []>> 
3251_20-NonEquals Sto: << []>> 
3251_20-Useless: []
3251_20-Constancy: [(27, 0), (26, 32), (25, 64), (19, 32), (18, 64), (13, 0), (12, 64), (5, 32)]
3251_20-ContextAliasing: [(7, 21)]

.....
-----
Block: 3046_40
3046_40Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_40-Stack size: 20 
3046_40-Equals Mem:<< []>> 
3046_40-NonEquals Mem: << [<5,8>]>> 
3046_40-Equals Sto:<< []>> 
3046_40-NonEquals Sto: << []>> 
3046_40-Useless: []
3046_40-Constancy: [(19, 0), (18, 32), (17, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3046_40-ContextAliasing: []

.....
-----
Block: 3427_18
3427_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_18-Stack size: 18 
3427_18-Equals Mem:<< []>> 
3427_18-NonEquals Mem: << [<5,8>]>> 
3427_18-Equals Sto:<< []>> 
3427_18-NonEquals Sto: << []>> 
3427_18-Useless: []
3427_18-Constancy: [(17, 0), (16, 32), (15, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
3427_18-ContextAliasing: []

.....
-----
Block: 3369_18
3369_18Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_18-Stack size: 21 
3369_18-Equals Mem:<< []>> 
3369_18-NonEquals Mem: << [<7,2>]>> 
3369_18-Equals Sto:<< []>> 
3369_18-NonEquals Sto: << []>> 
3369_18-Useless: []
3369_18-Constancy: [(20, 0), (19, 32), (18, 64), (12, 32), (11, 64), (6, 0), (5, 64)]
3369_18-ContextAliasing: []

.....
-----
Block: 3200_19
3200_19Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_19-Stack size: 25 
3200_19-Equals Mem:<< []>> 
3200_19-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_19-Equals Sto:<< []>> 
3200_19-NonEquals Sto: << []>> 
3200_19-Useless: []
3200_19-Constancy: [(24, 0), (23, 32), (22, 64), (16, 32), (15, 64), (10, 0), (9, 64)]
3200_19-ContextAliasing: [(4, 21)]

.....
-----
Block: 3251_19
3251_19Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_19-Stack size: 28 
3251_19-Equals Mem:<< []>> 
3251_19-NonEquals Mem: << [<12,6>]>> 
3251_19-Equals Sto:<< []>> 
3251_19-NonEquals Sto: << []>> 
3251_19-Useless: []
3251_19-Constancy: [(27, 0), (26, 32), (25, 64), (19, 32), (18, 64), (13, 0), (12, 64), (5, 32)]
3251_19-ContextAliasing: [(7, 21)]

.....
-----
Block: 3046_39
3046_39Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_39-Stack size: 16 
3046_39-Equals Mem:<< []>> 
3046_39-NonEquals Mem: << [<5,8>]>> 
3046_39-Equals Sto:<< []>> 
3046_39-NonEquals Sto: << []>> 
3046_39-Useless: []
3046_39-Constancy: [(15, 0), (14, 32), (13, 64), (7, 32), (6, 64), (3, 0)]
3046_39-ContextAliasing: []

.....
-----
Block: 3046_38
3046_38Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_38-Stack size: 18 
3046_38-Equals Mem:<< []>> 
3046_38-NonEquals Mem: << [<5,8>]>> 
3046_38-Equals Sto:<< []>> 
3046_38-NonEquals Sto: << []>> 
3046_38-Useless: []
3046_38-Constancy: [(17, 0), (16, 32), (15, 64), (10, 0), (9, 32), (8, 64), (3, 32)]
3046_38-ContextAliasing: []

.....
-----
Block: 6327_9
6327_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_9-Stack size: 15 
6327_9-Equals Mem:<< []>> 
6327_9-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_9-Equals Sto:<< []>> 
6327_9-NonEquals Sto: << []>> 
6327_9-Useless: []
6327_9-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (6, 32), (5, 64)]
6327_9-ContextAliasing: []

.....
-----
Block: 3637_23
3637_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_23-Stack size: 19 
3637_23-Equals Mem:<< []>> 
3637_23-NonEquals Mem: << [<5,8>]>> 
3637_23-Equals Sto:<< []>> 
3637_23-NonEquals Sto: << []>> 
3637_23-Useless: []
3637_23-Constancy: [(18, 0), (17, 32), (16, 64), (11, 0), (10, 32), (9, 64)]
3637_23-ContextAliasing: []

.....
-----
Block: 3427_31
3427_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_31-Stack size: 17 
3427_31-Equals Mem:<< []>> 
3427_31-NonEquals Mem: << [<5,8>]>> 
3427_31-Equals Sto:<< []>> 
3427_31-NonEquals Sto: << []>> 
3427_31-Useless: []
3427_31-Constancy: [(16, 0), (15, 32), (14, 64), (9, 0), (8, 32), (7, 64)]
3427_31-ContextAliasing: []

.....
-----
Block: 3046_37
3046_37Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_37-Stack size: 17 
3046_37-Equals Mem:<< []>> 
3046_37-NonEquals Mem: << [<5,8>]>> 
3046_37-Equals Sto:<< []>> 
3046_37-NonEquals Sto: << []>> 
3046_37-Useless: []
3046_37-Constancy: [(16, 0), (15, 32), (14, 64), (9, 0), (8, 32), (7, 64), (4, 32)]
3046_37-ContextAliasing: []

.....
-----
Block: 6327_10
6327_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_10-Stack size: 15 
6327_10-Equals Mem:<< []>> 
6327_10-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_10-Equals Sto:<< []>> 
6327_10-NonEquals Sto: << []>> 
6327_10-Useless: []
6327_10-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (6, 32), (5, 64), (2, 32)]
6327_10-ContextAliasing: []

.....
-----
Block: 3637_24
3637_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_24-Stack size: 19 
3637_24-Equals Mem:<< []>> 
3637_24-NonEquals Mem: << [<5,8>]>> 
3637_24-Equals Sto:<< []>> 
3637_24-NonEquals Sto: << []>> 
3637_24-Useless: []
3637_24-Constancy: [(18, 0), (17, 32), (16, 64), (11, 0), (10, 32), (9, 64), (6, 32)]
3637_24-ContextAliasing: []

.....
-----
Block: 3427_32
3427_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_32-Stack size: 17 
3427_32-Equals Mem:<< []>> 
3427_32-NonEquals Mem: << [<5,8>]>> 
3427_32-Equals Sto:<< []>> 
3427_32-NonEquals Sto: << []>> 
3427_32-Useless: []
3427_32-Constancy: [(16, 0), (15, 32), (14, 64), (9, 0), (8, 32), (7, 64), (4, 32)]
3427_32-ContextAliasing: []

.....
-----
Block: 4774_0
4774_0Instr:<<['DUP6', 'DUP6', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x10', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP4', 'DUP4', 'DUP9', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x15c1', 'JUMPI']>> 
4774_0-Stack size: 12 
4774_0-Equals Mem:<< []>> 
4774_0-NonEquals Mem: << [<2,6>]>> 
4774_0-Equals Sto:<< []>> 
4774_0-NonEquals Sto: << []>> 
4774_0-Useless: []
4774_0-Constancy: [(11, 0), (10, 32), (9, 64), (4, 0)]
4774_0-ContextAliasing: []

.....
-----
Block: 4815_0
4815_0Instr:<<['JUMPDEST', 'ADDRESS', 'DUP9', 'MSTORE', 'PUSH1 0x02', 'DUP4', 'MSTORE', 'PUSH2 0x12e2', 'DUP5', 'DUP10', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
4815_0-Stack size: 15 
4815_0-Equals Mem:<< []>> 
4815_0-NonEquals Mem: << [<3,6>]>> 
4815_0-Equals Sto:<< []>> 
4815_0-NonEquals Sto: << []>> 
4815_0-Useless: []
4815_0-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (3, 64), (2, 32)]
4815_0-ContextAliasing: []

.....
-----
Block: 6466_5
6466_5Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_5-Stack size: 25 
6466_5-Equals Mem:<< []>> 
6466_5-NonEquals Mem: << [<3,5>]>> 
6466_5-Equals Sto:<< []>> 
6466_5-NonEquals Sto: << []>> 
6466_5-Useless: [3, 5]
6466_5-Constancy: [(24, 0), (23, 32), (22, 64), (17, 0), (13, 64), (12, 32), (1, 32)]
6466_5-ContextAliasing: []

.....
-----
Block: 3484_9
3484_9Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_9-Stack size: 24 
3484_9-Equals Mem:<< []>> 
3484_9-NonEquals Mem: << [<3,10>]>> 
3484_9-Equals Sto:<< []>> 
3484_9-NonEquals Sto: << []>> 
3484_9-Useless: []
3484_9-Constancy: [(23, 0), (22, 32), (21, 64), (16, 0), (12, 64), (11, 32)]
3484_9-ContextAliasing: []

.....
-----
Block: 3484_10
3484_10Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_10-Stack size: 21 
3484_10-Equals Mem:<< []>> 
3484_10-NonEquals Mem: << [<3,10>]>> 
3484_10-Equals Sto:<< []>> 
3484_10-NonEquals Sto: << []>> 
3484_10-Useless: []
3484_10-Constancy: [(20, 0), (19, 32), (18, 64), (13, 0), (9, 64), (8, 32)]
3484_10-ContextAliasing: []

.....
-----
Block: 5022_0
5022_0Instr:<<['SWAP2', 'DUP9', 'SWAP4', 'SWAP2', 'SWAP6', 'SWAP3', 'DUP6', 'MLOAD', 'SWAP7', 'DUP8', 'SWAP5', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP7', 'MSTORE', 'PUSH1 0xa4', 'DUP7', 'ADD', 'SWAP2', 'PUSH1 0x04', 'DUP8', 'ADD', 'MSTORE', 'DUP7', 'PUSH1 0x24', 'DUP8', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP8', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP2', 'MSTORE', 'PUSH1 0xc4', 'DUP6', 'ADD', 'SWAP3', 'SWAP2', 'DUP7']>> 
5022_0-Stack size: 16 
5022_0-Equals Mem:<< []>> 
5022_0-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
5022_0-Equals Sto:<< []>> 
5022_0-NonEquals Sto: << []>> 
5022_0-Useless: []
5022_0-Constancy: [(15, 0), (14, 32), (13, 64), (8, 0), (4, 64), (0, 32)]
5022_0-ContextAliasing: []

.....
-----
Block: 3046_36
3046_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_36-Stack size: 12 
3046_36-Equals Mem:<< []>> 
3046_36-NonEquals Mem: << [<5,8>]>> 
3046_36-Equals Sto:<< []>> 
3046_36-NonEquals Sto: << []>> 
3046_36-Useless: []
3046_36-Constancy: [(11, 0), (10, 32), (9, 64), (2, 0)]
3046_36-ContextAliasing: []

.....
-----
Block: 5186_0
5186_0Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'DUP13', 'AND', 'DUP6', 'MSTORE', 'DUP13', 'SWAP8', 'POP', 'DUP10', 'SWAP7', 'POP', 'SWAP4', 'DUP2', 'ADD', 'SWAP4', 'SWAP3', 'DUP2', 'ADD', 'SWAP3', 'PUSH1 0x01', 'ADD', 'PUSH2 0x13d5', 'JUMP']>> 
5186_0-Stack size: 20 
5186_0-Equals Mem:<< []>> 
5186_0-NonEquals Mem: << [<6,2>]>> 
5186_0-Equals Sto:<< []>> 
5186_0-NonEquals Sto: << []>> 
5186_0-Useless: []
5186_0-Constancy: [(19, 0), (18, 32), (17, 64), (12, 0), (8, 64), (7, 0), (1, 32)]
5186_0-ContextAliasing: [(6, 10)]

.....
-----
Block: 3750_2
3750_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3750_2-Stack size: 19 
3750_2-Equals Mem:<< []>> 
3750_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3750_2-Equals Sto:<< []>> 
3750_2-NonEquals Sto: << []>> 
3750_2-Useless: []
3750_2-Constancy: [(18, 0), (17, 32), (16, 64), (11, 0), (7, 64), (6, 32)]
3750_2-ContextAliasing: []

.....
-----
Block: 3830_2
3830_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3830_2-Stack size: 20 
3830_2-Equals Mem:<< []>> 
3830_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3830_2-Equals Sto:<< []>> 
3830_2-NonEquals Sto: << []>> 
3830_2-Useless: []
3830_2-Constancy: [(19, 0), (18, 32), (17, 64), (12, 0), (8, 64), (7, 32)]
3830_2-ContextAliasing: []

.....
-----
Block: 6046_2
6046_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6046_2-Stack size: 22 
6046_2-Equals Mem:<< []>> 
6046_2-NonEquals Mem: << [<5,8>]>> 
6046_2-Equals Sto:<< []>> 
6046_2-NonEquals Sto: << []>> 
6046_2-Useless: []
6046_2-Constancy: [(21, 0), (20, 32), (19, 64), (14, 0), (10, 64), (9, 32)]
6046_2-ContextAliasing: [(11, 21)]

.....
-----
Block: 3046_49
3046_49Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_49-Stack size: 22 
3046_49-Equals Mem:<< []>> 
3046_49-NonEquals Mem: << [<5,8>]>> 
3046_49-Equals Sto:<< []>> 
3046_49-NonEquals Sto: << []>> 
3046_49-Useless: []
3046_49-Constancy: [(21, 0), (20, 32), (19, 64), (14, 0), (10, 64), (9, 32), (4, 32), (2, 32)]
3046_49-ContextAliasing: [(3, 16)]

.....
-----
Block: 3046_35
3046_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_35-Stack size: 22 
3046_35-Equals Mem:<< []>> 
3046_35-NonEquals Mem: << [<5,8>]>> 
3046_35-Equals Sto:<< []>> 
3046_35-NonEquals Sto: << []>> 
3046_35-Useless: []
3046_35-Constancy: [(21, 0), (20, 32), (19, 64), (14, 0), (10, 64), (9, 32), (4, 32)]
3046_35-ContextAliasing: [(3, 16)]

.....
-----
Block: 6046_1
6046_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6046_1-Stack size: 18 
6046_1-Equals Mem:<< []>> 
6046_1-NonEquals Mem: << [<5,8>]>> 
6046_1-Equals Sto:<< []>> 
6046_1-NonEquals Sto: << []>> 
6046_1-Useless: []
6046_1-Constancy: [(17, 0), (16, 32), (15, 64), (10, 0), (6, 64), (5, 32)]
6046_1-ContextAliasing: [(7, 17)]

.....
-----
Block: 3046_34
3046_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_34-Stack size: 16 
3046_34-Equals Mem:<< []>> 
3046_34-NonEquals Mem: << [<5,8>]>> 
3046_34-Equals Sto:<< []>> 
3046_34-NonEquals Sto: << []>> 
3046_34-Useless: []
3046_34-Constancy: [(15, 0), (14, 32), (13, 64), (8, 0), (4, 64), (3, 32)]
3046_34-ContextAliasing: []

.....
-----
Block: 5284_0
5284_0Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'DUP9', 'DUP8', 'MSTORE', 'PUSH1 0x05', 'DUP3', 'MSTORE', 'DUP3', 'DUP8', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH0', 'PUSH2 0x1313', 'JUMP']>> 
5284_0-Stack size: 15 
5284_0-Equals Mem:<< []>> 
5284_0-NonEquals Mem: << [<5,8>]>> 
5284_0-Equals Sto:<< []>> 
5284_0-NonEquals Sto: << []>> 
5284_0-Useless: []
5284_0-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (3, 64), (2, 32)]
5284_0-ContextAliasing: []

.....
-----
Block: 5305_0
5305_0Instr:<<['JUMPDEST', 'DUP9', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP4', 'MSTORE', 'DUP4', 'DUP9', 'KECCAK256', 'SLOAD', 'DUP2', 'AND', 'ISZERO', 'SWAP2', 'POP', 'PUSH2 0x130d', 'JUMP']>> 
5305_0-Stack size: 15 
5305_0-Equals Mem:<< []>> 
5305_0-NonEquals Mem: << [<3,6>]>> 
5305_0-Equals Sto:<< []>> 
5305_0-NonEquals Sto: << []>> 
5305_0-Useless: []
5305_0-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (3, 64), (2, 32)]
5305_0-ContextAliasing: []

.....
-----
Block: 3637_16
3637_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_16-Stack size: 19 
3637_16-Equals Mem:<< []>> 
3637_16-NonEquals Mem: << [<5,8>]>> 
3637_16-Equals Sto:<< []>> 
3637_16-NonEquals Sto: << []>> 
3637_16-Useless: []
3637_16-Constancy: [(18, 0), (17, 32), (16, 64), (11, 0), (7, 64), (6, 32)]
3637_16-ContextAliasing: []

.....
-----
Block: 3369_17
3369_17Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_17-Stack size: 21 
3369_17-Equals Mem:<< []>> 
3369_17-NonEquals Mem: << [<7,2>]>> 
3369_17-Equals Sto:<< []>> 
3369_17-NonEquals Sto: << []>> 
3369_17-Useless: []
3369_17-Constancy: [(20, 0), (19, 32), (18, 64), (13, 0), (9, 64), (8, 32)]
3369_17-ContextAliasing: []

.....
-----
Block: 3200_18
3200_18Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_18-Stack size: 25 
3200_18-Equals Mem:<< []>> 
3200_18-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_18-Equals Sto:<< []>> 
3200_18-NonEquals Sto: << []>> 
3200_18-Useless: []
3200_18-Constancy: [(24, 0), (23, 32), (22, 64), (17, 0), (13, 64), (12, 32)]
3200_18-ContextAliasing: [(4, 21)]

.....
-----
Block: 3251_18
3251_18Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_18-Stack size: 28 
3251_18-Equals Mem:<< []>> 
3251_18-NonEquals Mem: << [<12,6>]>> 
3251_18-Equals Sto:<< []>> 
3251_18-NonEquals Sto: << []>> 
3251_18-Useless: []
3251_18-Constancy: [(27, 0), (26, 32), (25, 64), (20, 0), (16, 64), (15, 32), (5, 32)]
3251_18-ContextAliasing: [(7, 21)]

.....
-----
Block: 3046_33
3046_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_33-Stack size: 23 
3046_33-Equals Mem:<< []>> 
3046_33-NonEquals Mem: << [<5,8>]>> 
3046_33-Equals Sto:<< []>> 
3046_33-NonEquals Sto: << []>> 
3046_33-Useless: []
3046_33-Constancy: [(22, 0), (21, 32), (20, 64), (15, 0), (11, 64), (10, 32)]
3046_33-ContextAliasing: []

.....
-----
Block: 3637_15
3637_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_15-Stack size: 22 
3637_15-Equals Mem:<< []>> 
3637_15-NonEquals Mem: << [<5,8>]>> 
3637_15-Equals Sto:<< []>> 
3637_15-NonEquals Sto: << []>> 
3637_15-Useless: []
3637_15-Constancy: [(21, 0), (20, 32), (19, 64), (14, 0), (10, 64), (9, 32)]
3637_15-ContextAliasing: []

.....
-----
Block: 3369_16
3369_16Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_16-Stack size: 24 
3369_16-Equals Mem:<< []>> 
3369_16-NonEquals Mem: << [<7,2>]>> 
3369_16-Equals Sto:<< []>> 
3369_16-NonEquals Sto: << []>> 
3369_16-Useless: []
3369_16-Constancy: [(23, 0), (22, 32), (21, 64), (16, 0), (12, 64), (11, 32)]
3369_16-ContextAliasing: []

.....
-----
Block: 3200_17
3200_17Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_17-Stack size: 28 
3200_17-Equals Mem:<< []>> 
3200_17-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_17-Equals Sto:<< []>> 
3200_17-NonEquals Sto: << []>> 
3200_17-Useless: []
3200_17-Constancy: [(27, 0), (26, 32), (25, 64), (20, 0), (16, 64), (15, 32)]
3200_17-ContextAliasing: [(4, 24)]

.....
-----
Block: 3251_17
3251_17Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_17-Stack size: 31 
3251_17-Equals Mem:<< []>> 
3251_17-NonEquals Mem: << [<12,6>]>> 
3251_17-Equals Sto:<< []>> 
3251_17-NonEquals Sto: << []>> 
3251_17-Useless: []
3251_17-Constancy: [(30, 0), (29, 32), (28, 64), (23, 0), (19, 64), (18, 32), (5, 32)]
3251_17-ContextAliasing: [(7, 24)]

.....
-----
Block: 3046_32
3046_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_32-Stack size: 26 
3046_32-Equals Mem:<< []>> 
3046_32-NonEquals Mem: << [<5,8>]>> 
3046_32-Equals Sto:<< []>> 
3046_32-NonEquals Sto: << []>> 
3046_32-Useless: []
3046_32-Constancy: [(25, 0), (24, 32), (23, 64), (18, 0), (14, 64), (13, 32)]
3046_32-ContextAliasing: []

.....
-----
Block: 3046_31
3046_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_31-Stack size: 27 
3046_31-Equals Mem:<< []>> 
3046_31-NonEquals Mem: << [<5,8>]>> 
3046_31-Equals Sto:<< []>> 
3046_31-NonEquals Sto: << []>> 
3046_31-Useless: []
3046_31-Constancy: [(26, 0), (25, 32), (24, 64), (19, 0), (15, 64), (14, 32), (3, 32)]
3046_31-ContextAliasing: []

.....
-----
Block: 3539_3
3539_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3539_3-Stack size: 17 
3539_3-Equals Mem:<< []>> 
3539_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3539_3-Equals Sto:<< []>> 
3539_3-NonEquals Sto: << []>> 
3539_3-Useless: []
3539_3-Constancy: [(16, 0), (15, 32), (14, 64), (9, 0), (5, 64), (4, 32)]
3539_3-ContextAliasing: []

.....
-----
Block: 5374_0
5374_0Instr:<<['JUMPDEST', 'DUP10', 'DUP9', 'MSTORE', 'PUSH1 0x02', 'DUP4', 'MSTORE', 'PUSH2 0x151a', 'DUP12', 'PUSH2 0x1515', 'DUP7', 'DUP12', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
5374_0-Stack size: 15 
5374_0-Equals Mem:<< []>> 
5374_0-NonEquals Mem: << [<3,6>]>> 
5374_0-Equals Sto:<< []>> 
5374_0-NonEquals Sto: << []>> 
5374_0-Useless: []
5374_0-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (3, 64), (2, 32)]
5374_0-ContextAliasing: []

.....
-----
Block: 6466_4
6466_4Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_4-Stack size: 27 
6466_4-Equals Mem:<< []>> 
6466_4-NonEquals Mem: << [<3,5>]>> 
6466_4-Equals Sto:<< []>> 
6466_4-NonEquals Sto: << []>> 
6466_4-Useless: [3, 5]
6466_4-Constancy: [(26, 0), (25, 32), (24, 64), (19, 0), (15, 64), (14, 32), (1, 32)]
6466_4-ContextAliasing: []

.....
-----
Block: 3484_7
3484_7Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_7-Stack size: 26 
3484_7-Equals Mem:<< []>> 
3484_7-NonEquals Mem: << [<3,10>]>> 
3484_7-Equals Sto:<< []>> 
3484_7-NonEquals Sto: << []>> 
3484_7-Useless: []
3484_7-Constancy: [(25, 0), (24, 32), (23, 64), (18, 0), (14, 64), (13, 32)]
3484_7-ContextAliasing: []

.....
-----
Block: 3484_8
3484_8Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_8-Stack size: 23 
3484_8-Equals Mem:<< []>> 
3484_8-NonEquals Mem: << [<3,10>]>> 
3484_8-Equals Sto:<< []>> 
3484_8-NonEquals Sto: << []>> 
3484_8-Useless: []
3484_8-Constancy: [(22, 0), (21, 32), (20, 64), (15, 0), (11, 64), (10, 32)]
3484_8-ContextAliasing: []

.....
-----
Block: 5411_0
5411_0Instr:<<['DUP4', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP5', 'SWAP1', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x7a6521', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5411_0-Stack size: 15 
5411_0-Equals Mem:<< []>> 
5411_0-NonEquals Mem: << [<6,1>, <12,1>, <17,1>, <22,1>, <29,1>]>> 
5411_0-Equals Sto:<< []>> 
5411_0-NonEquals Sto: << []>> 
5411_0-Useless: []
5411_0-Constancy: [(14, 0), (13, 32), (12, 64), (7, 0), (3, 64), (2, 32)]
5411_0-ContextAliasing: []

.....
-----
Block: 3427_17
3427_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_17-Stack size: 17 
3427_17-Equals Mem:<< []>> 
3427_17-NonEquals Mem: << [<5,8>]>> 
3427_17-Equals Sto:<< []>> 
3427_17-NonEquals Sto: << []>> 
3427_17-Useless: []
3427_17-Constancy: [(16, 0), (15, 32), (14, 64), (9, 0), (5, 64), (4, 32)]
3427_17-ContextAliasing: []

.....
-----
Block: 3637_14
3637_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_14-Stack size: 21 
3637_14-Equals Mem:<< []>> 
3637_14-NonEquals Mem: << [<5,8>]>> 
3637_14-Equals Sto:<< []>> 
3637_14-NonEquals Sto: << []>> 
3637_14-Useless: []
3637_14-Constancy: [(20, 0), (19, 32), (18, 64), (13, 0), (9, 64), (8, 32)]
3637_14-ContextAliasing: []

.....
-----
Block: 3369_15
3369_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_15-Stack size: 23 
3369_15-Equals Mem:<< []>> 
3369_15-NonEquals Mem: << [<7,2>]>> 
3369_15-Equals Sto:<< []>> 
3369_15-NonEquals Sto: << []>> 
3369_15-Useless: []
3369_15-Constancy: [(22, 0), (21, 32), (20, 64), (15, 0), (11, 64), (10, 32)]
3369_15-ContextAliasing: []

.....
-----
Block: 3200_16
3200_16Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_16-Stack size: 27 
3200_16-Equals Mem:<< []>> 
3200_16-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_16-Equals Sto:<< []>> 
3200_16-NonEquals Sto: << []>> 
3200_16-Useless: []
3200_16-Constancy: [(26, 0), (25, 32), (24, 64), (19, 0), (15, 64), (14, 32)]
3200_16-ContextAliasing: [(4, 23)]

.....
-----
Block: 3251_16
3251_16Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_16-Stack size: 30 
3251_16-Equals Mem:<< []>> 
3251_16-NonEquals Mem: << [<12,6>]>> 
3251_16-Equals Sto:<< []>> 
3251_16-NonEquals Sto: << []>> 
3251_16-Useless: []
3251_16-Constancy: [(29, 0), (28, 32), (27, 64), (22, 0), (18, 64), (17, 32), (5, 32)]
3251_16-ContextAliasing: [(7, 23)]

.....
-----
Block: 3046_30
3046_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_30-Stack size: 25 
3046_30-Equals Mem:<< []>> 
3046_30-NonEquals Mem: << [<5,8>]>> 
3046_30-Equals Sto:<< []>> 
3046_30-NonEquals Sto: << []>> 
3046_30-Useless: []
3046_30-Constancy: [(24, 0), (23, 32), (22, 64), (17, 0), (13, 64), (12, 32)]
3046_30-ContextAliasing: []

.....
-----
Block: 3637_13
3637_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_13-Stack size: 24 
3637_13-Equals Mem:<< []>> 
3637_13-NonEquals Mem: << [<5,8>]>> 
3637_13-Equals Sto:<< []>> 
3637_13-NonEquals Sto: << []>> 
3637_13-Useless: []
3637_13-Constancy: [(23, 0), (22, 32), (21, 64), (16, 0), (12, 64), (11, 32)]
3637_13-ContextAliasing: []

.....
-----
Block: 3369_14
3369_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_14-Stack size: 26 
3369_14-Equals Mem:<< []>> 
3369_14-NonEquals Mem: << [<7,2>]>> 
3369_14-Equals Sto:<< []>> 
3369_14-NonEquals Sto: << []>> 
3369_14-Useless: []
3369_14-Constancy: [(25, 0), (24, 32), (23, 64), (18, 0), (14, 64), (13, 32)]
3369_14-ContextAliasing: []

.....
-----
Block: 3200_15
3200_15Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_15-Stack size: 30 
3200_15-Equals Mem:<< []>> 
3200_15-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_15-Equals Sto:<< []>> 
3200_15-NonEquals Sto: << []>> 
3200_15-Useless: []
3200_15-Constancy: [(29, 0), (28, 32), (27, 64), (22, 0), (18, 64), (17, 32)]
3200_15-ContextAliasing: [(4, 26)]

.....
-----
Block: 3251_15
3251_15Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_15-Stack size: 33 
3251_15-Equals Mem:<< []>> 
3251_15-NonEquals Mem: << [<12,6>]>> 
3251_15-Equals Sto:<< []>> 
3251_15-NonEquals Sto: << []>> 
3251_15-Useless: []
3251_15-Constancy: [(32, 0), (31, 32), (30, 64), (25, 0), (21, 64), (20, 32), (5, 32)]
3251_15-ContextAliasing: [(7, 26)]

.....
-----
Block: 3046_29
3046_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_29-Stack size: 28 
3046_29-Equals Mem:<< []>> 
3046_29-NonEquals Mem: << [<5,8>]>> 
3046_29-Equals Sto:<< []>> 
3046_29-NonEquals Sto: << []>> 
3046_29-Useless: []
3046_29-Constancy: [(27, 0), (26, 32), (25, 64), (20, 0), (16, 64), (15, 32)]
3046_29-ContextAliasing: []

.....
-----
Block: 3046_28
3046_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_28-Stack size: 29 
3046_28-Equals Mem:<< []>> 
3046_28-NonEquals Mem: << [<5,8>]>> 
3046_28-Equals Sto:<< []>> 
3046_28-NonEquals Sto: << []>> 
3046_28-Useless: []
3046_28-Constancy: [(28, 0), (27, 32), (26, 64), (21, 0), (17, 64), (16, 32), (3, 32)]
3046_28-ContextAliasing: []

.....
-----
Block: 3539_2
3539_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3539_2-Stack size: 19 
3539_2-Equals Mem:<< []>> 
3539_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3539_2-Equals Sto:<< []>> 
3539_2-NonEquals Sto: << []>> 
3539_2-Useless: []
3539_2-Constancy: [(18, 0), (17, 32), (16, 64), (11, 0), (7, 64), (6, 32)]
3539_2-ContextAliasing: []

.....
-----
Block: 5490_0
5490_0Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x84', 'SWAP2', 'MLOAD', 'SWAP1', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP3', 'MSTORE', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x656421', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
5490_0-Stack size: 14 
5490_0-Equals Mem:<< []>> 
5490_0-NonEquals Mem: << [<10,4>, <14,4>, <19,4>, <24,4>, <31,4>]>> 
5490_0-Equals Sto:<< []>> 
5490_0-NonEquals Sto: << []>> 
5490_0-Useless: []
5490_0-Constancy: [(13, 0), (12, 32), (11, 64), (6, 0), (2, 64), (1, 32)]
5490_0-ContextAliasing: []

.....
-----
Block: 5585_0
5585_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5585_0-Stack size: 12 
5585_0-Equals Mem:<< []>> 
5585_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5585_0-Equals Sto:<< []>> 
5585_0-NonEquals Sto: << []>> 
5585_0-Useless: []
5585_0-Constancy: [(11, 0), (10, 32), (9, 64), (4, 0)]
5585_0-ContextAliasing: []

.....
-----
Block: 5664_0
5664_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5664_0-Stack size: 11 
5664_0-Equals Mem:<< []>> 
5664_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <27,2>]>> 
5664_0-Equals Sto:<< []>> 
5664_0-NonEquals Sto: << []>> 
5664_0-Useless: []
5664_0-Constancy: [(10, 0), (9, 32), (8, 64), (3, 0)]
5664_0-ContextAliasing: []

.....
-----
Block: 5782_0
5782_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5782_0-Stack size: 9 
5782_0-Equals Mem:<< []>> 
5782_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5782_0-Equals Sto:<< []>> 
5782_0-NonEquals Sto: << []>> 
5782_0-Useless: []
5782_0-Constancy: [(8, 0), (7, 32), (6, 64), (1, 0)]
5782_0-ContextAliasing: []

.....
-----
Block: 5869_0
5869_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5869_0-Stack size: 9 
5869_0-Equals Mem:<< []>> 
5869_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5869_0-Equals Sto:<< []>> 
5869_0-NonEquals Sto: << []>> 
5869_0-Useless: []
5869_0-Constancy: [(8, 0), (7, 32), (6, 64), (1, 0)]
5869_0-ContextAliasing: []

.....
-----
Block: 5950_0
5950_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5950_0-Stack size: 9 
5950_0-Equals Mem:<< []>> 
5950_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5950_0-Equals Sto:<< []>> 
5950_0-NonEquals Sto: << []>> 
5950_0-Useless: []
5950_0-Constancy: [(8, 0), (7, 32), (6, 64), (1, 0)]
5950_0-ContextAliasing: []

.....
-----
Block: 3293_6
3293_6Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_6-Stack size: 7 
3293_6-Equals Mem:<< []>> 
3293_6-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_6-Equals Sto:<< []>> 
3293_6-NonEquals Sto: << []>> 
3293_6-Useless: []
3293_6-Constancy: [(6, 0), (5, 64), (2, 0)]
3293_6-ContextAliasing: []

.....
-----
Block: 3293_5
3293_5Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_5-Stack size: 7 
3293_5-Equals Mem:<< []>> 
3293_5-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_5-Equals Sto:<< []>> 
3293_5-NonEquals Sto: << []>> 
3293_5-Useless: []
3293_5-Constancy: [(6, 0), (5, 64), (2, 0)]
3293_5-ContextAliasing: []

.....
-----
Block: 1618
1618Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP3', 'MSTORE', 'PUSH6 0x1370eb1b70eb', 'PUSH1 0xd2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0c80', 'JUMP']>> 
1618-Stack size: 4 
1618-Equals Mem:<< []>> 
1618-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
1618-Equals Sto:<< []>> 
1618-NonEquals Sto: << []>> 
1618-Useless: []
1618-Constancy: [(3, 0), (0, 64)]
1618-ContextAliasing: []

.....
-----
Block: 3200
3200Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200-Stack size: 6 
3200-Equals Mem:<< []>> 
3200-NonEquals Mem: << [<4,6>, <4,12>, <12,6>]>> 
3200-Equals Sto:<< []>> 
3200-NonEquals Sto: << []>> 
3200-Useless: []
3200-Constancy: [(5, 0)]
3200-ContextAliasing: []

.....
-----
Block: 3251
3251Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251-Stack size: 9 
3251-Equals Mem:<< []>> 
3251-NonEquals Mem: << [<12,6>]>> 
3251-Equals Sto:<< []>> 
3251-NonEquals Sto: << []>> 
3251-Useless: []
3251-Constancy: [(8, 0), (5, 32)]
3251-ContextAliasing: []

.....
-----
Block: 3046_27
3046_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_27-Stack size: 6 
3046_27-Equals Mem:<< []>> 
3046_27-NonEquals Mem: << [<5,8>]>> 
3046_27-Equals Sto:<< []>> 
3046_27-NonEquals Sto: << []>> 
3046_27-Useless: []
3046_27-Constancy: [(5, 0), (2, 64)]
3046_27-ContextAliasing: []

.....
-----
Block: 1670
1670Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x17', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1670-Stack size: 2 
1670-Equals Mem:<< []>> 
1670-NonEquals Mem: << [<8,5>]>> 
1670-Equals Sto:<< []>> 
1670-NonEquals Sto: << []>> 
1670-Useless: []
1670-Constancy: [(1, 0), (0, 64)]
1670-ContextAliasing: []

.....
-----
Block: 3293_4
3293_4Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_4-Stack size: 7 
3293_4-Equals Mem:<< []>> 
3293_4-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_4-Equals Sto:<< []>> 
3293_4-NonEquals Sto: << []>> 
3293_4-Useless: []
3293_4-Constancy: [(6, 0), (5, 64), (2, 0)]
3293_4-ContextAliasing: []

.....
-----
Block: 1782
1782Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1782-Stack size: 2 
1782-Equals Mem:<< []>> 
1782-NonEquals Mem: << [<13,3>]>> 
1782-Equals Sto:<< []>> 
1782-NonEquals Sto: << []>> 
1782-Useless: []
1782-Constancy: [(1, 0), (0, 64)]
1782-ContextAliasing: []

.....
-----
Block: 1843
1843Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x11', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1843-Stack size: 6 
1843-Equals Mem:<< []>> 
1843-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
1843-Equals Sto:<< []>> 
1843-NonEquals Sto: << []>> 
1843-Useless: []
1843-Constancy: [(5, 32), (4, 64), (3, 64), (2, 0)]
1843-ContextAliasing: []

.....
-----
Block: 1878
1878Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x16', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1878-Stack size: 2 
1878-Equals Mem:<< []>> 
1878-NonEquals Mem: << [<8,5>]>> 
1878-Equals Sto:<< []>> 
1878-NonEquals Sto: << []>> 
1878-Useless: []
1878-Constancy: [(1, 0), (0, 64)]
1878-ContextAliasing: []

.....
-----
Block: 3293_3
3293_3Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_3-Stack size: 7 
3293_3-Equals Mem:<< []>> 
3293_3-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_3-Equals Sto:<< []>> 
3293_3-NonEquals Sto: << []>> 
3293_3-Useless: []
3293_3-Constancy: [(6, 0), (5, 64), (2, 0)]
3293_3-ContextAliasing: []

.....
-----
Block: 3293_2
3293_2Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_2-Stack size: 9 
3293_2-Equals Mem:<< []>> 
3293_2-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_2-Equals Sto:<< []>> 
3293_2-NonEquals Sto: << []>> 
3293_2-Useless: []
3293_2-Constancy: [(8, 0), (7, 64), (4, 0), (2, 0)]
3293_2-ContextAliasing: []

.....
-----
Block: 2072
2072Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
2072-Stack size: 7 
2072-Equals Mem:<< []>> 
2072-NonEquals Mem: << [<3,6>]>> 
2072-Equals Sto:<< []>> 
2072-NonEquals Sto: << []>> 
2072-Useless: []
2072-Constancy: [(6, 32), (5, 64), (3, 64), (2, 0)]
2072-ContextAliasing: []

.....
-----
Block: 6466_3
6466_3Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_3-Stack size: 12 
6466_3-Equals Mem:<< []>> 
6466_3-NonEquals Mem: << [<3,5>]>> 
6466_3-Equals Sto:<< []>> 
6466_3-NonEquals Sto: << []>> 
6466_3-Useless: [3, 5]
6466_3-Constancy: [(11, 32), (10, 64), (1, 32)]
6466_3-ContextAliasing: []

.....
-----
Block: 3484_5
3484_5Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_5-Stack size: 11 
3484_5-Equals Mem:<< []>> 
3484_5-NonEquals Mem: << [<3,10>]>> 
3484_5-Equals Sto:<< []>> 
3484_5-NonEquals Sto: << []>> 
3484_5-Useless: []
3484_5-Constancy: [(10, 32), (9, 64)]
3484_5-ContextAliasing: []

.....
-----
Block: 3484_6
3484_6Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_6-Stack size: 8 
3484_6-Equals Mem:<< []>> 
3484_6-NonEquals Mem: << [<3,10>]>> 
3484_6-Equals Sto:<< []>> 
3484_6-NonEquals Sto: << []>> 
3484_6-Useless: []
3484_6-Constancy: [(7, 32), (6, 64)]
3484_6-ContextAliasing: []

.....
-----
Block: 2086
2086Instr:<<['JUMPDEST', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2086-Stack size: 3 
2086-Equals Mem:<< []>> 
2086-NonEquals Mem: << [<5,2>]>> 
2086-Equals Sto:<< []>> 
2086-NonEquals Sto: << []>> 
2086-Useless: []
2086-Constancy: [(2, 32), (1, 64)]
2086-ContextAliasing: []

.....
-----
Block: 3637_12
3637_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_12-Stack size: 6 
3637_12-Equals Mem:<< []>> 
3637_12-NonEquals Mem: << [<5,8>]>> 
3637_12-Equals Sto:<< []>> 
3637_12-NonEquals Sto: << []>> 
3637_12-Useless: []
3637_12-Constancy: [(5, 32), (4, 64)]
3637_12-ContextAliasing: []

.....
-----
Block: 3369_13
3369_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_13-Stack size: 8 
3369_13-Equals Mem:<< []>> 
3369_13-NonEquals Mem: << [<7,2>]>> 
3369_13-Equals Sto:<< []>> 
3369_13-NonEquals Sto: << []>> 
3369_13-Useless: []
3369_13-Constancy: [(7, 32), (6, 64)]
3369_13-ContextAliasing: []

.....
-----
Block: 3200_14
3200_14Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_14-Stack size: 12 
3200_14-Equals Mem:<< []>> 
3200_14-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_14-Equals Sto:<< []>> 
3200_14-NonEquals Sto: << []>> 
3200_14-Useless: []
3200_14-Constancy: [(11, 32), (10, 64)]
3200_14-ContextAliasing: [(4, 8)]

.....
-----
Block: 3251_14
3251_14Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_14-Stack size: 15 
3251_14-Equals Mem:<< []>> 
3251_14-NonEquals Mem: << [<12,6>]>> 
3251_14-Equals Sto:<< []>> 
3251_14-NonEquals Sto: << []>> 
3251_14-Useless: []
3251_14-Constancy: [(14, 32), (13, 64), (5, 32)]
3251_14-ContextAliasing: [(7, 8)]

.....
-----
Block: 3046_26
3046_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_26-Stack size: 10 
3046_26-Equals Mem:<< []>> 
3046_26-NonEquals Mem: << [<5,8>]>> 
3046_26-Equals Sto:<< []>> 
3046_26-NonEquals Sto: << []>> 
3046_26-Useless: []
3046_26-Constancy: [(9, 32), (8, 64)]
3046_26-ContextAliasing: []

.....
-----
Block: 3637_11
3637_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_11-Stack size: 9 
3637_11-Equals Mem:<< []>> 
3637_11-NonEquals Mem: << [<5,8>]>> 
3637_11-Equals Sto:<< []>> 
3637_11-NonEquals Sto: << []>> 
3637_11-Useless: []
3637_11-Constancy: [(8, 32), (7, 64)]
3637_11-ContextAliasing: []

.....
-----
Block: 3369_12
3369_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_12-Stack size: 11 
3369_12-Equals Mem:<< []>> 
3369_12-NonEquals Mem: << [<7,2>]>> 
3369_12-Equals Sto:<< []>> 
3369_12-NonEquals Sto: << []>> 
3369_12-Useless: []
3369_12-Constancy: [(10, 32), (9, 64)]
3369_12-ContextAliasing: []

.....
-----
Block: 3200_13
3200_13Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_13-Stack size: 15 
3200_13-Equals Mem:<< []>> 
3200_13-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_13-Equals Sto:<< []>> 
3200_13-NonEquals Sto: << []>> 
3200_13-Useless: []
3200_13-Constancy: [(14, 32), (13, 64)]
3200_13-ContextAliasing: [(4, 11)]

.....
-----
Block: 3251_13
3251_13Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_13-Stack size: 18 
3251_13-Equals Mem:<< []>> 
3251_13-NonEquals Mem: << [<12,6>]>> 
3251_13-Equals Sto:<< []>> 
3251_13-NonEquals Sto: << []>> 
3251_13-Useless: []
3251_13-Constancy: [(17, 32), (16, 64), (5, 32)]
3251_13-ContextAliasing: [(7, 11)]

.....
-----
Block: 3046_25
3046_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_25-Stack size: 13 
3046_25-Equals Mem:<< []>> 
3046_25-NonEquals Mem: << [<5,8>]>> 
3046_25-Equals Sto:<< []>> 
3046_25-NonEquals Sto: << []>> 
3046_25-Useless: []
3046_25-Constancy: [(12, 32), (11, 64)]
3046_25-ContextAliasing: []

.....
-----
Block: 3046_24
3046_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_24-Stack size: 14 
3046_24-Equals Mem:<< []>> 
3046_24-NonEquals Mem: << [<5,8>]>> 
3046_24-Equals Sto:<< []>> 
3046_24-NonEquals Sto: << []>> 
3046_24-Useless: []
3046_24-Constancy: [(13, 32), (12, 64), (3, 32)]
3046_24-ContextAliasing: []

.....
-----
Block: 3539_1
3539_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3539_1-Stack size: 4 
3539_1-Equals Mem:<< []>> 
3539_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3539_1-Equals Sto:<< []>> 
3539_1-NonEquals Sto: << []>> 
3539_1-Useless: []
3539_1-Constancy: [(3, 32), (2, 64)]
3539_1-ContextAliasing: []

.....
-----
Block: 3293_1
3293_1Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_1-Stack size: 7 
3293_1-Equals Mem:<< []>> 
3293_1-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_1-Equals Sto:<< []>> 
3293_1-NonEquals Sto: << []>> 
3293_1-Useless: []
3293_1-Constancy: [(6, 0), (5, 64), (2, 0)]
3293_1-ContextAliasing: []

.....
-----
Block: 2296
2296Instr:<<['JUMPDEST', 'AND', 'DUP3', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
2296-Stack size: 4 
2296-Equals Mem:<< []>> 
2296-NonEquals Mem: << [<3,6>]>> 
2296-Equals Sto:<< [<10,15>]>> 
2296-NonEquals Sto: << []>> 
2296-Useless: []
2296-Constancy: [(3, 0), (2, 64)]
2296-ContextAliasing: []

.....
-----
Block: 3293_0
3293_0Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293_0-Stack size: 5 
3293_0-Equals Mem:<< []>> 
3293_0-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293_0-Equals Sto:<< []>> 
3293_0-NonEquals Sto: << []>> 
3293_0-Useless: []
3293_0-Constancy: [(4, 0), (3, 64)]
3293_0-ContextAliasing: []

.....
-----
Block: 2336
2336Instr:<<['PUSH1 0x15', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
2336-Stack size: 2 
2336-Equals Mem:<< []>> 
2336-NonEquals Mem: << [<13,3>]>> 
2336-Equals Sto:<< []>> 
2336-NonEquals Sto: << []>> 
2336-Useless: []
2336-Constancy: [(1, 0), (0, 64)]
2336-ContextAliasing: []

.....
-----
Block: 2377
2377Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2377-Stack size: 2 
2377-Equals Mem:<< []>> 
2377-NonEquals Mem: << [<5,2>]>> 
2377-Equals Sto:<< []>> 
2377-NonEquals Sto: << []>> 
2377-Useless: []
2377-Constancy: [(1, 0), (0, 64)]
2377-ContextAliasing: []

.....
-----
Block: 2405
2405Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x18', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2405-Stack size: 2 
2405-Equals Mem:<< []>> 
2405-NonEquals Mem: << [<8,5>]>> 
2405-Equals Sto:<< []>> 
2405-NonEquals Sto: << []>> 
2405-Useless: []
2405-Constancy: [(1, 0), (0, 64)]
2405-ContextAliasing: []

.....
-----
Block: 3983
3983Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x01', 'SWAP1', 'DUP4', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'SWAP2', 'PUSH1 0x05', 'DUP4', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'PUSH1 0xff', 'DUP4', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1277', 'JUMPI']>> 
3983-Stack size: 16 
3983-Equals Mem:<< []>> 
3983-NonEquals Mem: << [<6,11>]>> 
3983-Equals Sto:<< []>> 
3983-NonEquals Sto: << []>> 
3983-Useless: []
3983-Constancy: [(15, 32), (14, 64), (9, 64), (8, 0), (2, 0)]
3983-ContextAliasing: []

.....
-----
Block: 4068
4068Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'SWAP3', 'DUP4', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'DIV', 'SWAP3', 'PUSH2 0x101a', 'SWAP1', 'DUP4', 'PUSH2 0x1891', 'JUMP']>> 
4068-Stack size: 21 
4068-Equals Mem:<< []>> 
4068-NonEquals Mem: << [<3,11>]>> 
4068-Equals Sto:<< []>> 
4068-NonEquals Sto: << []>> 
4068-Useless: [3, 11]
4068-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (6, 32), (5, 64), (2, 32)]
4068-ContextAliasing: []

.....
-----
Block: 4135
4135Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'DIV', 'SWAP5', 'DUP4', 'MLOAD', 'SWAP2', 'PUSH2 0x103e', 'DUP4', 'PUSH2 0x0bfa', 'JUMP']>> 
4135-Stack size: 22 
4135-Equals Mem:<< []>> 
4135-NonEquals Mem: << [<3,11>, <3,5>, <5,11>]>> 
4135-Equals Sto:<< []>> 
4135-NonEquals Sto: << []>> 
4135-Useless: [3, 5]
4135-Constancy: [(21, 32), (20, 64), (15, 64), (14, 0), (8, 0), (7, 32), (6, 64), (1, 32)]
4135-ContextAliasing: []

.....
-----
Block: 4158
4158Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'SWAP2', 'DUP3', 'DUP5', 'MSTORE', 'DUP6', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP5', 'DUP6', 'DUP10', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x1077', 'SWAP1', 'DUP8', 'DUP6', 'PUSH2 0x0d49', 'JUMP']>> 
4158-Stack size: 20 
4158-Equals Mem:<< []>> 
4158-NonEquals Mem: << [<5,13>]>> 
4158-Equals Sto:<< []>> 
4158-NonEquals Sto: << []>> 
4158-Useless: []
4158-Constancy: [(19, 32), (18, 64), (13, 64), (12, 0), (5, 32), (4, 64), (1, 0)]
4158-ContextAliasing: []

.....
-----
Block: 4226
4226Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'DUP11', 'DUP8', 'DUP12', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1094', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4226-Stack size: 24 
4226-Equals Mem:<< []>> 
4226-NonEquals Mem: << [<3,9>]>> 
4226-Equals Sto:<< []>> 
4226-NonEquals Sto: << []>> 
4226-Useless: []
4226-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
4226-ContextAliasing: []

.....
-----
Block: 6466_1
6466_1Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_1-Stack size: 30 
6466_1-Equals Mem:<< []>> 
6466_1-NonEquals Mem: << [<3,5>]>> 
6466_1-Equals Sto:<< []>> 
6466_1-NonEquals Sto: << []>> 
6466_1-Useless: [3, 5]
6466_1-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (15, 32), (14, 64), (9, 0), (8, 64), (1, 32)]
6466_1-ContextAliasing: []

.....
-----
Block: 3484_3
3484_3Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_3-Stack size: 29 
3484_3-Equals Mem:<< []>> 
3484_3-NonEquals Mem: << [<3,10>]>> 
3484_3-Equals Sto:<< []>> 
3484_3-NonEquals Sto: << []>> 
3484_3-Useless: []
3484_3-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3484_3-ContextAliasing: []

.....
-----
Block: 4296
4296Instr:<<['JUMPDEST', 'DUP8', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x10db', 'SWAP1', 'DUP8', 'DUP5', 'PUSH2 0x0d49', 'JUMP']>> 
4296-Stack size: 26 
4296-Equals Mem:<< []>> 
4296-NonEquals Mem: << [<3,8>]>> 
4296-Equals Sto:<< []>> 
4296-NonEquals Sto: << []>> 
4296-Useless: []
4296-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
4296-ContextAliasing: []

.....
-----
Block: 4328
4328Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'DUP10', 'DUP14', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x10f9', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4328-Stack size: 27 
4328-Equals Mem:<< []>> 
4328-NonEquals Mem: << [<3,8>]>> 
4328-Equals Sto:<< []>> 
4328-NonEquals Sto: << []>> 
4328-Useless: []
4328-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
4328-ContextAliasing: []

.....
-----
Block: 4345
4345Instr:<<['JUMPDEST', 'SWAP1', 'DUP13', 'DUP6', 'MSTORE', 'PUSH1 0x02', 'DUP12', 'MSTORE', 'DUP4', 'DUP6', 'KECCAK256', 'SLOAD', 'SWAP1', 'DUP5', 'MLOAD', 'SWAP1', 'PUSH2 0x1112', 'DUP3', 'PUSH2 0x0bfa', 'JUMP']>> 
4345-Stack size: 25 
4345-Equals Mem:<< []>> 
4345-NonEquals Mem: << [<4,14>, <4,7>, <7,14>, <10,14>]>> 
4345-Equals Sto:<< []>> 
4345-NonEquals Sto: << []>> 
4345-Useless: []
4345-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (10, 32), (9, 64), (4, 0), (3, 64)]
4345-ContextAliasing: []

.....
-----
Block: 4370
4370Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'DUP10', 'DUP14', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1123', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4370-Stack size: 27 
4370-Equals Mem:<< []>> 
4370-NonEquals Mem: << [<3,8>]>> 
4370-Equals Sto:<< []>> 
4370-NonEquals Sto: << []>> 
4370-Useless: []
4370-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
4370-ContextAliasing: []

.....
-----
Block: 4387
4387Instr:<<['JUMPDEST', 'DUP13', 'DUP6', 'MSTORE', 'PUSH1 0x02', 'DUP12', 'MSTORE', 'DUP4', 'DUP6', 'KECCAK256', 'SSTORE', 'DUP13', 'DUP5', 'MSTORE', 'DUP3', 'DUP5', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x113f', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4387-Stack size: 25 
4387-Equals Mem:<< [<3,13>]>> 
4387-NonEquals Mem: << [<3,6>, <6,13>]>> 
4387-Equals Sto:<< [<10,17>]>> 
4387-NonEquals Sto: << []>> 
4387-Useless: []
4387-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (10, 32), (9, 64), (4, 0), (3, 64)]
4387-ContextAliasing: []

.....
-----
Block: 4415
4415Instr:<<['JUMPDEST', 'DUP13', 'DUP5', 'MSTORE', 'PUSH1 0x02', 'DUP11', 'MSTORE', 'DUP3', 'DUP5', 'KECCAK256', 'SSTORE', 'PUSH2 0x1152', 'PUSH2 0x190c', 'JUMP']>> 
4415-Stack size: 24 
4415-Equals Mem:<< []>> 
4415-NonEquals Mem: << [<3,6>]>> 
4415-Equals Sto:<< []>> 
4415-NonEquals Sto: << []>> 
4415-Useless: []
4415-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
4415-ContextAliasing: []

.....
-----
Block: 6466_2
6466_2Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_2-Stack size: 30 
6466_2-Equals Mem:<< []>> 
6466_2-NonEquals Mem: << [<3,5>]>> 
6466_2-Equals Sto:<< []>> 
6466_2-NonEquals Sto: << []>> 
6466_2-Useless: [3, 5]
6466_2-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (15, 32), (14, 64), (9, 0), (8, 64), (1, 32)]
6466_2-ContextAliasing: []

.....
-----
Block: 3484_4
3484_4Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_4-Stack size: 29 
3484_4-Equals Mem:<< []>> 
3484_4-NonEquals Mem: << [<3,10>]>> 
3484_4-Equals Sto:<< []>> 
3484_4-NonEquals Sto: << []>> 
3484_4-Useless: []
3484_4-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3484_4-ContextAliasing: []

.....
-----
Block: 4443
4443Instr:<<['JUMPDEST', 'ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x02', 'DUP10', 'MSTORE', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x1170', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4443-Stack size: 23 
4443-Equals Mem:<< []>> 
4443-NonEquals Mem: << [<3,6>]>> 
4443-Equals Sto:<< []>> 
4443-NonEquals Sto: << []>> 
4443-Useless: []
4443-Constancy: [(22, 32), (21, 64), (16, 64), (15, 0), (8, 32), (7, 64), (2, 0), (1, 64)]
4443-ContextAliasing: []

.....
-----
Block: 4464
4464Instr:<<['JUMPDEST', 'SWAP2', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'SWAP3', 'DUP6', 'MLOAD', 'SWAP3', 'PUSH2 0x118a', 'DUP5', 'PUSH2 0x0bfa', 'JUMP']>> 
4464-Stack size: 23 
4464-Equals Mem:<< []>> 
4464-NonEquals Mem: << [<4,14>, <4,7>, <7,14>, <8,14>]>> 
4464-Equals Sto:<< []>> 
4464-NonEquals Sto: << [<9,11>]>> 
4464-Useless: []
4464-Constancy: [(22, 32), (21, 64), (16, 64), (15, 0), (8, 32), (7, 64), (2, 0), (1, 64)]
4464-ContextAliasing: []

.....
-----
Block: 4490
4490Instr:<<['JUMPDEST', 'DUP4', 'MSTORE', 'DUP7', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1199', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4490-Stack size: 22 
4490-Equals Mem:<< []>> 
4490-NonEquals Mem: << [<2,6>]>> 
4490-Equals Sto:<< []>> 
4490-NonEquals Sto: << []>> 
4490-Useless: []
4490-Constancy: [(21, 32), (20, 64), (15, 64), (14, 0), (7, 32), (6, 64)]
4490-ContextAliasing: []

.....
-----
Block: 2478
2478Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'DUP6', 'MLOAD', 'SWAP2', 'SWAP1', 'PUSH2 0x09d3', 'DUP4', 'PUSH2 0x0c16', 'JUMP']>> 
2478-Stack size: 9 
2478-Equals Mem:<< [<9,17>, <11,19>]>> 
2478-NonEquals Mem: << [<9,23>, <9,11>, <9,19>, <11,23>, <11,17>, <17,23>, <17,19>, <19,23>, <14,23>, <20,23>]>> 
2478-Equals Sto:<< []>> 
2478-NonEquals Sto: << []>> 
2478-Useless: []
2478-Constancy: [(8, 32), (7, 64), (2, 64), (1, 0)]
2478-ContextAliasing: []

.....
-----
Block: 2515
2515Instr:<<['JUMPDEST', 'PUSH1 0x28', 'DUP4', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'DUP9', 'DUP5', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'DUP8', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0d49', 'JUMP']>> 
2515-Stack size: 8 
2515-Equals Mem:<< []>> 
2515-NonEquals Mem: << [<3,8>, <3,15>, <8,15>]>> 
2515-Equals Sto:<< []>> 
2515-NonEquals Sto: << []>> 
2515-Useless: []
2515-Constancy: [(7, 32), (6, 64)]
2515-ContextAliasing: []

.....
-----
Block: 1468_0
1468_0Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1468_0-Stack size: 2 
1468_0-Equals Mem:<< []>> 
1468_0-NonEquals Mem: << [<4,1>]>> 
1468_0-Equals Sto:<< []>> 
1468_0-NonEquals Sto: << []>> 
1468_0-Useless: []
1468_0-Constancy: [(1, 32), (0, 64)]
1468_0-ContextAliasing: []

.....
-----
Block: 3750_1
3750_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3750_1-Stack size: 6 
3750_1-Equals Mem:<< []>> 
3750_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3750_1-Equals Sto:<< []>> 
3750_1-NonEquals Sto: << []>> 
3750_1-Useless: []
3750_1-Constancy: [(5, 32), (4, 64)]
3750_1-ContextAliasing: []

.....
-----
Block: 3830_1
3830_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3830_1-Stack size: 7 
3830_1-Equals Mem:<< []>> 
3830_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3830_1-Equals Sto:<< []>> 
3830_1-NonEquals Sto: << []>> 
3830_1-Useless: []
3830_1-Constancy: [(6, 32), (5, 64)]
3830_1-ContextAliasing: []

.....
-----
Block: 3427_10
3427_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_10-Stack size: 6 
3427_10-Equals Mem:<< []>> 
3427_10-NonEquals Mem: << [<5,8>]>> 
3427_10-Equals Sto:<< []>> 
3427_10-NonEquals Sto: << []>> 
3427_10-Useless: []
3427_10-Constancy: [(5, 32), (4, 64)]
3427_10-ContextAliasing: []

.....
-----
Block: 3369_11
3369_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_11-Stack size: 9 
3369_11-Equals Mem:<< []>> 
3369_11-NonEquals Mem: << [<7,2>]>> 
3369_11-Equals Sto:<< []>> 
3369_11-NonEquals Sto: << []>> 
3369_11-Useless: []
3369_11-Constancy: [(8, 32), (7, 64)]
3369_11-ContextAliasing: []

.....
-----
Block: 3200_12
3200_12Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_12-Stack size: 13 
3200_12-Equals Mem:<< []>> 
3200_12-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_12-Equals Sto:<< []>> 
3200_12-NonEquals Sto: << []>> 
3200_12-Useless: []
3200_12-Constancy: [(12, 32), (11, 64)]
3200_12-ContextAliasing: [(4, 9)]

.....
-----
Block: 3251_12
3251_12Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_12-Stack size: 16 
3251_12-Equals Mem:<< []>> 
3251_12-NonEquals Mem: << [<12,6>]>> 
3251_12-Equals Sto:<< []>> 
3251_12-NonEquals Sto: << []>> 
3251_12-Useless: []
3251_12-Constancy: [(15, 32), (14, 64), (5, 32)]
3251_12-ContextAliasing: [(7, 9)]

.....
-----
Block: 3046_22
3046_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_22-Stack size: 10 
3046_22-Equals Mem:<< []>> 
3046_22-NonEquals Mem: << [<5,8>]>> 
3046_22-Equals Sto:<< []>> 
3046_22-NonEquals Sto: << []>> 
3046_22-Useless: []
3046_22-Constancy: [(9, 32), (8, 64)]
3046_22-ContextAliasing: []

.....
-----
Block: 6220_1
6220_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
6220_1-Stack size: 18 
6220_1-Equals Mem:<< []>> 
6220_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
6220_1-Equals Sto:<< []>> 
6220_1-NonEquals Sto: << []>> 
6220_1-Useless: []
6220_1-Constancy: [(17, 32), (16, 64), (11, 64), (10, 0), (3, 32), (2, 64)]
6220_1-ContextAliasing: []

.....
-----
Block: 3427_9
3427_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_9-Stack size: 20 
3427_9-Equals Mem:<< []>> 
3427_9-NonEquals Mem: << [<5,8>]>> 
3427_9-Equals Sto:<< []>> 
3427_9-NonEquals Sto: << []>> 
3427_9-Useless: []
3427_9-Constancy: [(19, 32), (18, 64), (13, 64), (12, 0), (5, 32), (4, 64)]
3427_9-ContextAliasing: []

.....
-----
Block: 3427_8
3427_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_8-Stack size: 19 
3427_8-Equals Mem:<< []>> 
3427_8-NonEquals Mem: << [<5,8>]>> 
3427_8-Equals Sto:<< []>> 
3427_8-NonEquals Sto: << []>> 
3427_8-Useless: []
3427_8-Constancy: [(18, 32), (17, 64), (12, 64), (11, 0), (4, 32), (3, 64)]
3427_8-ContextAliasing: []

.....
-----
Block: 3369_10
3369_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_10-Stack size: 22 
3369_10-Equals Mem:<< []>> 
3369_10-NonEquals Mem: << [<7,2>]>> 
3369_10-Equals Sto:<< []>> 
3369_10-NonEquals Sto: << []>> 
3369_10-Useless: []
3369_10-Constancy: [(21, 32), (20, 64), (15, 64), (14, 0), (7, 32), (6, 64)]
3369_10-ContextAliasing: []

.....
-----
Block: 3200_11
3200_11Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_11-Stack size: 26 
3200_11-Equals Mem:<< []>> 
3200_11-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_11-Equals Sto:<< []>> 
3200_11-NonEquals Sto: << []>> 
3200_11-Useless: []
3200_11-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64)]
3200_11-ContextAliasing: [(4, 22)]

.....
-----
Block: 3251_11
3251_11Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_11-Stack size: 29 
3251_11-Equals Mem:<< []>> 
3251_11-NonEquals Mem: << [<12,6>]>> 
3251_11-Equals Sto:<< []>> 
3251_11-NonEquals Sto: << []>> 
3251_11-Useless: []
3251_11-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (5, 32)]
3251_11-ContextAliasing: [(7, 22)]

.....
-----
Block: 3046_21
3046_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_21-Stack size: 24 
3046_21-Equals Mem:<< []>> 
3046_21-NonEquals Mem: << [<5,8>]>> 
3046_21-Equals Sto:<< []>> 
3046_21-NonEquals Sto: << []>> 
3046_21-Useless: []
3046_21-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (9, 32), (8, 64)]
3046_21-ContextAliasing: []

.....
-----
Block: 6220_0
6220_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
6220_0-Stack size: 24 
6220_0-Equals Mem:<< []>> 
6220_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
6220_0-Equals Sto:<< []>> 
6220_0-NonEquals Sto: << []>> 
6220_0-Useless: []
6220_0-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
6220_0-ContextAliasing: []

.....
-----
Block: 3427_7
3427_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_7-Stack size: 26 
3427_7-Equals Mem:<< []>> 
3427_7-NonEquals Mem: << [<5,8>]>> 
3427_7-Equals Sto:<< []>> 
3427_7-NonEquals Sto: << []>> 
3427_7-Useless: []
3427_7-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_7-ContextAliasing: []

.....
-----
Block: 6327
6327Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327-Stack size: 24 
6327-Equals Mem:<< []>> 
6327-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327-Equals Sto:<< []>> 
6327-NonEquals Sto: << []>> 
6327-Useless: []
6327-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
6327-ContextAliasing: []

.....
-----
Block: 3637_5
3637_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_5-Stack size: 28 
3637_5-Equals Mem:<< []>> 
3637_5-NonEquals Mem: << [<5,8>]>> 
3637_5-Equals Sto:<< []>> 
3637_5-NonEquals Sto: << []>> 
3637_5-Useless: []
3637_5-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3637_5-ContextAliasing: []

.....
-----
Block: 3427_11
3427_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_11-Stack size: 26 
3427_11-Equals Mem:<< []>> 
3427_11-NonEquals Mem: << [<5,8>]>> 
3427_11-Equals Sto:<< []>> 
3427_11-NonEquals Sto: << []>> 
3427_11-Useless: []
3427_11-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_11-ContextAliasing: []

.....
-----
Block: 3637_4
3637_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_4-Stack size: 27 
3637_4-Equals Mem:<< []>> 
3637_4-NonEquals Mem: << [<5,8>]>> 
3637_4-Equals Sto:<< []>> 
3637_4-NonEquals Sto: << []>> 
3637_4-Useless: []
3637_4-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
3637_4-ContextAliasing: []

.....
-----
Block: 3369_9
3369_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_9-Stack size: 29 
3369_9-Equals Mem:<< []>> 
3369_9-NonEquals Mem: << [<7,2>]>> 
3369_9-Equals Sto:<< []>> 
3369_9-NonEquals Sto: << []>> 
3369_9-Useless: []
3369_9-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_9-ContextAliasing: []

.....
-----
Block: 3200_10
3200_10Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_10-Stack size: 33 
3200_10-Equals Mem:<< []>> 
3200_10-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_10-Equals Sto:<< []>> 
3200_10-NonEquals Sto: << []>> 
3200_10-Useless: []
3200_10-Constancy: [(32, 32), (31, 64), (26, 64), (25, 0), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_10-ContextAliasing: [(4, 29)]

.....
-----
Block: 3251_10
3251_10Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_10-Stack size: 36 
3251_10-Equals Mem:<< []>> 
3251_10-NonEquals Mem: << [<12,6>]>> 
3251_10-Equals Sto:<< []>> 
3251_10-NonEquals Sto: << []>> 
3251_10-Useless: []
3251_10-Constancy: [(35, 32), (34, 64), (29, 64), (28, 0), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_10-ContextAliasing: [(7, 29)]

.....
-----
Block: 3046_20
3046_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_20-Stack size: 31 
3046_20-Equals Mem:<< []>> 
3046_20-NonEquals Mem: << [<5,8>]>> 
3046_20-Equals Sto:<< []>> 
3046_20-NonEquals Sto: << []>> 
3046_20-Useless: []
3046_20-Constancy: [(30, 32), (29, 64), (24, 64), (23, 0), (16, 32), (15, 64), (10, 0), (9, 64)]
3046_20-ContextAliasing: []

.....
-----
Block: 3046_19
3046_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_19-Stack size: 32 
3046_19-Equals Mem:<< []>> 
3046_19-NonEquals Mem: << [<5,8>]>> 
3046_19-Equals Sto:<< []>> 
3046_19-NonEquals Sto: << []>> 
3046_19-Useless: []
3046_19-Constancy: [(31, 32), (30, 64), (25, 64), (24, 0), (17, 32), (16, 64), (11, 0), (10, 64), (3, 32)]
3046_19-ContextAliasing: []

.....
-----
Block: 6220
6220Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
6220-Stack size: 25 
6220-Equals Mem:<< []>> 
6220-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
6220-Equals Sto:<< []>> 
6220-NonEquals Sto: << []>> 
6220-Useless: []
6220-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (10, 32), (9, 64), (4, 0), (3, 64)]
6220-ContextAliasing: []

.....
-----
Block: 3427_6
3427_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_6-Stack size: 27 
3427_6-Equals Mem:<< []>> 
3427_6-NonEquals Mem: << [<5,8>]>> 
3427_6-Equals Sto:<< []>> 
3427_6-NonEquals Sto: << []>> 
3427_6-Useless: []
3427_6-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
3427_6-ContextAliasing: []

.....
-----
Block: 3427_5
3427_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_5-Stack size: 26 
3427_5-Equals Mem:<< []>> 
3427_5-NonEquals Mem: << [<5,8>]>> 
3427_5-Equals Sto:<< []>> 
3427_5-NonEquals Sto: << []>> 
3427_5-Useless: []
3427_5-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_5-ContextAliasing: []

.....
-----
Block: 3369_8
3369_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_8-Stack size: 29 
3369_8-Equals Mem:<< []>> 
3369_8-NonEquals Mem: << [<7,2>]>> 
3369_8-Equals Sto:<< []>> 
3369_8-NonEquals Sto: << []>> 
3369_8-Useless: []
3369_8-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_8-ContextAliasing: []

.....
-----
Block: 3200_9
3200_9Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_9-Stack size: 33 
3200_9-Equals Mem:<< []>> 
3200_9-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_9-Equals Sto:<< []>> 
3200_9-NonEquals Sto: << []>> 
3200_9-Useless: []
3200_9-Constancy: [(32, 32), (31, 64), (26, 64), (25, 0), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_9-ContextAliasing: [(4, 29)]

.....
-----
Block: 3251_9
3251_9Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_9-Stack size: 36 
3251_9-Equals Mem:<< []>> 
3251_9-NonEquals Mem: << [<12,6>]>> 
3251_9-Equals Sto:<< []>> 
3251_9-NonEquals Sto: << []>> 
3251_9-Useless: []
3251_9-Constancy: [(35, 32), (34, 64), (29, 64), (28, 0), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_9-ContextAliasing: [(7, 29)]

.....
-----
Block: 3046_18
3046_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_18-Stack size: 29 
3046_18-Equals Mem:<< []>> 
3046_18-NonEquals Mem: << [<5,8>]>> 
3046_18-Equals Sto:<< []>> 
3046_18-NonEquals Sto: << []>> 
3046_18-Useless: []
3046_18-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3046_18-ContextAliasing: []

.....
-----
Block: 3427_4
3427_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_4-Stack size: 26 
3427_4-Equals Mem:<< []>> 
3427_4-NonEquals Mem: << [<5,8>]>> 
3427_4-Equals Sto:<< []>> 
3427_4-NonEquals Sto: << []>> 
3427_4-Useless: []
3427_4-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3427_4-ContextAliasing: []

.....
-----
Block: 3369_7
3369_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_7-Stack size: 29 
3369_7-Equals Mem:<< []>> 
3369_7-NonEquals Mem: << [<7,2>]>> 
3369_7-Equals Sto:<< []>> 
3369_7-NonEquals Sto: << []>> 
3369_7-Useless: []
3369_7-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_7-ContextAliasing: []

.....
-----
Block: 3200_8
3200_8Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_8-Stack size: 33 
3200_8-Equals Mem:<< []>> 
3200_8-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_8-Equals Sto:<< []>> 
3200_8-NonEquals Sto: << []>> 
3200_8-Useless: []
3200_8-Constancy: [(32, 32), (31, 64), (26, 64), (25, 0), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_8-ContextAliasing: [(4, 29)]

.....
-----
Block: 3251_8
3251_8Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_8-Stack size: 36 
3251_8-Equals Mem:<< []>> 
3251_8-NonEquals Mem: << [<12,6>]>> 
3251_8-Equals Sto:<< []>> 
3251_8-NonEquals Sto: << []>> 
3251_8-Useless: []
3251_8-Constancy: [(35, 32), (34, 64), (29, 64), (28, 0), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_8-ContextAliasing: [(7, 29)]

.....
-----
Block: 3046_17
3046_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_17-Stack size: 29 
3046_17-Equals Mem:<< []>> 
3046_17-NonEquals Mem: << [<5,8>]>> 
3046_17-Equals Sto:<< []>> 
3046_17-NonEquals Sto: << []>> 
3046_17-Useless: []
3046_17-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3046_17-ContextAliasing: []

.....
-----
Block: 3427_3
3427_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_3-Stack size: 27 
3427_3-Equals Mem:<< []>> 
3427_3-NonEquals Mem: << [<5,8>]>> 
3427_3-Equals Sto:<< []>> 
3427_3-NonEquals Sto: << []>> 
3427_3-Useless: []
3427_3-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
3427_3-ContextAliasing: []

.....
-----
Block: 3369_6
3369_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_6-Stack size: 30 
3369_6-Equals Mem:<< []>> 
3369_6-NonEquals Mem: << [<7,2>]>> 
3369_6-Equals Sto:<< []>> 
3369_6-NonEquals Sto: << []>> 
3369_6-Useless: []
3369_6-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (15, 32), (14, 64), (9, 0), (8, 64)]
3369_6-ContextAliasing: []

.....
-----
Block: 3200_7
3200_7Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_7-Stack size: 34 
3200_7-Equals Mem:<< []>> 
3200_7-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_7-Equals Sto:<< []>> 
3200_7-NonEquals Sto: << []>> 
3200_7-Useless: []
3200_7-Constancy: [(33, 32), (32, 64), (27, 64), (26, 0), (19, 32), (18, 64), (13, 0), (12, 64)]
3200_7-ContextAliasing: [(4, 30)]

.....
-----
Block: 3251_7
3251_7Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_7-Stack size: 37 
3251_7-Equals Mem:<< []>> 
3251_7-NonEquals Mem: << [<12,6>]>> 
3251_7-Equals Sto:<< []>> 
3251_7-NonEquals Sto: << []>> 
3251_7-Useless: []
3251_7-Constancy: [(36, 32), (35, 64), (30, 64), (29, 0), (22, 32), (21, 64), (16, 0), (15, 64), (5, 32)]
3251_7-ContextAliasing: [(7, 30)]

.....
-----
Block: 3046_16
3046_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_16-Stack size: 28 
3046_16-Equals Mem:<< []>> 
3046_16-NonEquals Mem: << [<5,8>]>> 
3046_16-Equals Sto:<< []>> 
3046_16-NonEquals Sto: << []>> 
3046_16-Useless: []
3046_16-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3046_16-ContextAliasing: []

.....
-----
Block: 6327_0
6327_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_0-Stack size: 26 
6327_0-Equals Mem:<< []>> 
6327_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_0-Equals Sto:<< []>> 
6327_0-NonEquals Sto: << []>> 
6327_0-Useless: []
6327_0-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
6327_0-ContextAliasing: []

.....
-----
Block: 3637_6
3637_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_6-Stack size: 30 
3637_6-Equals Mem:<< []>> 
3637_6-NonEquals Mem: << [<5,8>]>> 
3637_6-Equals Sto:<< []>> 
3637_6-NonEquals Sto: << []>> 
3637_6-Useless: []
3637_6-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (15, 32), (14, 64), (9, 0), (8, 64)]
3637_6-ContextAliasing: []

.....
-----
Block: 3427_12
3427_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_12-Stack size: 28 
3427_12-Equals Mem:<< []>> 
3427_12-NonEquals Mem: << [<5,8>]>> 
3427_12-Equals Sto:<< []>> 
3427_12-NonEquals Sto: << []>> 
3427_12-Useless: []
3427_12-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3427_12-ContextAliasing: []

.....
-----
Block: 6327_1
6327_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_1-Stack size: 26 
6327_1-Equals Mem:<< []>> 
6327_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_1-Equals Sto:<< []>> 
6327_1-NonEquals Sto: << []>> 
6327_1-Useless: []
6327_1-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
6327_1-ContextAliasing: []

.....
-----
Block: 3637_7
3637_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_7-Stack size: 30 
3637_7-Equals Mem:<< []>> 
3637_7-NonEquals Mem: << [<5,8>]>> 
3637_7-Equals Sto:<< []>> 
3637_7-NonEquals Sto: << []>> 
3637_7-Useless: []
3637_7-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (15, 32), (14, 64), (9, 0), (8, 64)]
3637_7-ContextAliasing: []

.....
-----
Block: 3427_13
3427_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_13-Stack size: 28 
3427_13-Equals Mem:<< []>> 
3427_13-NonEquals Mem: << [<5,8>]>> 
3427_13-Equals Sto:<< []>> 
3427_13-NonEquals Sto: << []>> 
3427_13-Useless: []
3427_13-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3427_13-ContextAliasing: []

.....
-----
Block: 6327_2
6327_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_2-Stack size: 25 
6327_2-Equals Mem:<< []>> 
6327_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_2-Equals Sto:<< []>> 
6327_2-NonEquals Sto: << []>> 
6327_2-Useless: []
6327_2-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (10, 32), (9, 64), (4, 0), (3, 64)]
6327_2-ContextAliasing: []

.....
-----
Block: 3637_8
3637_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_8-Stack size: 29 
3637_8-Equals Mem:<< []>> 
3637_8-NonEquals Mem: << [<5,8>]>> 
3637_8-Equals Sto:<< []>> 
3637_8-NonEquals Sto: << []>> 
3637_8-Useless: []
3637_8-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3637_8-ContextAliasing: []

.....
-----
Block: 3427_14
3427_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_14-Stack size: 27 
3427_14-Equals Mem:<< []>> 
3427_14-NonEquals Mem: << [<5,8>]>> 
3427_14-Equals Sto:<< []>> 
3427_14-NonEquals Sto: << []>> 
3427_14-Useless: []
3427_14-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
3427_14-ContextAliasing: []

.....
-----
Block: 3637_3
3637_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_3-Stack size: 27 
3637_3-Equals Mem:<< []>> 
3637_3-NonEquals Mem: << [<5,8>]>> 
3637_3-Equals Sto:<< []>> 
3637_3-NonEquals Sto: << []>> 
3637_3-Useless: []
3637_3-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
3637_3-ContextAliasing: []

.....
-----
Block: 3369_5
3369_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_5-Stack size: 29 
3369_5-Equals Mem:<< []>> 
3369_5-NonEquals Mem: << [<7,2>]>> 
3369_5-Equals Sto:<< []>> 
3369_5-NonEquals Sto: << []>> 
3369_5-Useless: []
3369_5-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (14, 32), (13, 64), (8, 0), (7, 64)]
3369_5-ContextAliasing: []

.....
-----
Block: 3200_6
3200_6Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_6-Stack size: 33 
3200_6-Equals Mem:<< []>> 
3200_6-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_6-Equals Sto:<< []>> 
3200_6-NonEquals Sto: << []>> 
3200_6-Useless: []
3200_6-Constancy: [(32, 32), (31, 64), (26, 64), (25, 0), (18, 32), (17, 64), (12, 0), (11, 64)]
3200_6-ContextAliasing: [(4, 29)]

.....
-----
Block: 3251_6
3251_6Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_6-Stack size: 36 
3251_6-Equals Mem:<< []>> 
3251_6-NonEquals Mem: << [<12,6>]>> 
3251_6-Equals Sto:<< []>> 
3251_6-NonEquals Sto: << []>> 
3251_6-Useless: []
3251_6-Constancy: [(35, 32), (34, 64), (29, 64), (28, 0), (21, 32), (20, 64), (15, 0), (14, 64), (5, 32)]
3251_6-ContextAliasing: [(7, 29)]

.....
-----
Block: 3046_15
3046_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_15-Stack size: 31 
3046_15-Equals Mem:<< []>> 
3046_15-NonEquals Mem: << [<5,8>]>> 
3046_15-Equals Sto:<< []>> 
3046_15-NonEquals Sto: << []>> 
3046_15-Useless: []
3046_15-Constancy: [(30, 32), (29, 64), (24, 64), (23, 0), (16, 32), (15, 64), (10, 0), (9, 64)]
3046_15-ContextAliasing: []

.....
-----
Block: 3046_14
3046_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_14-Stack size: 32 
3046_14-Equals Mem:<< []>> 
3046_14-NonEquals Mem: << [<5,8>]>> 
3046_14-Equals Sto:<< []>> 
3046_14-NonEquals Sto: << []>> 
3046_14-Useless: []
3046_14-Constancy: [(31, 32), (30, 64), (25, 64), (24, 0), (17, 32), (16, 64), (11, 0), (10, 64), (3, 32)]
3046_14-ContextAliasing: []

.....
-----
Block: 3427_2
3427_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_2-Stack size: 24 
3427_2-Equals Mem:<< []>> 
3427_2-NonEquals Mem: << [<5,8>]>> 
3427_2-Equals Sto:<< []>> 
3427_2-NonEquals Sto: << []>> 
3427_2-Useless: []
3427_2-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
3427_2-ContextAliasing: []

.....
-----
Block: 3369_4
3369_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_4-Stack size: 27 
3369_4-Equals Mem:<< []>> 
3369_4-NonEquals Mem: << [<7,2>]>> 
3369_4-Equals Sto:<< []>> 
3369_4-NonEquals Sto: << []>> 
3369_4-Useless: []
3369_4-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
3369_4-ContextAliasing: []

.....
-----
Block: 3200_5
3200_5Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_5-Stack size: 31 
3200_5-Equals Mem:<< []>> 
3200_5-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_5-Equals Sto:<< []>> 
3200_5-NonEquals Sto: << []>> 
3200_5-Useless: []
3200_5-Constancy: [(30, 32), (29, 64), (24, 64), (23, 0), (16, 32), (15, 64), (10, 0), (9, 64)]
3200_5-ContextAliasing: [(4, 27)]

.....
-----
Block: 3251_5
3251_5Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_5-Stack size: 34 
3251_5-Equals Mem:<< []>> 
3251_5-NonEquals Mem: << [<12,6>]>> 
3251_5-Equals Sto:<< []>> 
3251_5-NonEquals Sto: << []>> 
3251_5-Useless: []
3251_5-Constancy: [(33, 32), (32, 64), (27, 64), (26, 0), (19, 32), (18, 64), (13, 0), (12, 64), (5, 32)]
3251_5-ContextAliasing: [(7, 27)]

.....
-----
Block: 3046_13
3046_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_13-Stack size: 26 
3046_13-Equals Mem:<< []>> 
3046_13-NonEquals Mem: << [<5,8>]>> 
3046_13-Equals Sto:<< []>> 
3046_13-NonEquals Sto: << []>> 
3046_13-Useless: []
3046_13-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3046_13-ContextAliasing: []

.....
-----
Block: 3427_1
3427_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_1-Stack size: 24 
3427_1-Equals Mem:<< []>> 
3427_1-NonEquals Mem: << [<5,8>]>> 
3427_1-Equals Sto:<< []>> 
3427_1-NonEquals Sto: << []>> 
3427_1-Useless: []
3427_1-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
3427_1-ContextAliasing: []

.....
-----
Block: 3369_3
3369_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_3-Stack size: 27 
3369_3-Equals Mem:<< []>> 
3369_3-NonEquals Mem: << [<7,2>]>> 
3369_3-Equals Sto:<< []>> 
3369_3-NonEquals Sto: << []>> 
3369_3-Useless: []
3369_3-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (12, 32), (11, 64), (6, 0), (5, 64)]
3369_3-ContextAliasing: []

.....
-----
Block: 3200_4
3200_4Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_4-Stack size: 31 
3200_4-Equals Mem:<< []>> 
3200_4-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_4-Equals Sto:<< []>> 
3200_4-NonEquals Sto: << []>> 
3200_4-Useless: []
3200_4-Constancy: [(30, 32), (29, 64), (24, 64), (23, 0), (16, 32), (15, 64), (10, 0), (9, 64)]
3200_4-ContextAliasing: [(4, 27)]

.....
-----
Block: 3251_4
3251_4Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_4-Stack size: 34 
3251_4-Equals Mem:<< []>> 
3251_4-NonEquals Mem: << [<12,6>]>> 
3251_4-Equals Sto:<< []>> 
3251_4-NonEquals Sto: << []>> 
3251_4-Useless: []
3251_4-Constancy: [(33, 32), (32, 64), (27, 64), (26, 0), (19, 32), (18, 64), (13, 0), (12, 64), (5, 32)]
3251_4-ContextAliasing: [(7, 27)]

.....
-----
Block: 3046_12
3046_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_12-Stack size: 22 
3046_12-Equals Mem:<< []>> 
3046_12-NonEquals Mem: << [<5,8>]>> 
3046_12-Equals Sto:<< []>> 
3046_12-NonEquals Sto: << []>> 
3046_12-Useless: []
3046_12-Constancy: [(21, 32), (20, 64), (15, 64), (14, 0), (7, 32), (6, 64), (3, 0)]
3046_12-ContextAliasing: []

.....
-----
Block: 3046_11
3046_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_11-Stack size: 24 
3046_11-Equals Mem:<< []>> 
3046_11-NonEquals Mem: << [<5,8>]>> 
3046_11-Equals Sto:<< []>> 
3046_11-NonEquals Sto: << []>> 
3046_11-Useless: []
3046_11-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (10, 0), (9, 32), (8, 64), (3, 32)]
3046_11-ContextAliasing: []

.....
-----
Block: 6327_3
6327_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_3-Stack size: 21 
6327_3-Equals Mem:<< []>> 
6327_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_3-Equals Sto:<< []>> 
6327_3-NonEquals Sto: << []>> 
6327_3-Useless: []
6327_3-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (6, 32), (5, 64)]
6327_3-ContextAliasing: []

.....
-----
Block: 3637_9
3637_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_9-Stack size: 25 
3637_9-Equals Mem:<< []>> 
3637_9-NonEquals Mem: << [<5,8>]>> 
3637_9-Equals Sto:<< []>> 
3637_9-NonEquals Sto: << []>> 
3637_9-Useless: []
3637_9-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (10, 32), (9, 64)]
3637_9-ContextAliasing: []

.....
-----
Block: 3427_15
3427_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_15-Stack size: 23 
3427_15-Equals Mem:<< []>> 
3427_15-NonEquals Mem: << [<5,8>]>> 
3427_15-Equals Sto:<< []>> 
3427_15-NonEquals Sto: << []>> 
3427_15-Useless: []
3427_15-Constancy: [(22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (8, 32), (7, 64)]
3427_15-ContextAliasing: []

.....
-----
Block: 3046_10
3046_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_10-Stack size: 23 
3046_10-Equals Mem:<< []>> 
3046_10-NonEquals Mem: << [<5,8>]>> 
3046_10-Equals Sto:<< []>> 
3046_10-NonEquals Sto: << []>> 
3046_10-Useless: []
3046_10-Constancy: [(22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (8, 32), (7, 64), (4, 32)]
3046_10-ContextAliasing: []

.....
-----
Block: 6327_4
6327_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327_4-Stack size: 21 
6327_4-Equals Mem:<< []>> 
6327_4-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327_4-Equals Sto:<< []>> 
6327_4-NonEquals Sto: << []>> 
6327_4-Useless: []
6327_4-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (6, 32), (5, 64), (2, 32)]
6327_4-ContextAliasing: []

.....
-----
Block: 3637_10
3637_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_10-Stack size: 25 
3637_10-Equals Mem:<< []>> 
3637_10-NonEquals Mem: << [<5,8>]>> 
3637_10-Equals Sto:<< []>> 
3637_10-NonEquals Sto: << []>> 
3637_10-Useless: []
3637_10-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (10, 32), (9, 64), (6, 32)]
3637_10-ContextAliasing: []

.....
-----
Block: 3427_16
3427_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_16-Stack size: 23 
3427_16-Equals Mem:<< []>> 
3427_16-NonEquals Mem: << [<5,8>]>> 
3427_16-Equals Sto:<< []>> 
3427_16-NonEquals Sto: << []>> 
3427_16-Useless: []
3427_16-Constancy: [(22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (8, 32), (7, 64), (4, 32)]
3427_16-ContextAliasing: []

.....
-----
Block: 4774
4774Instr:<<['DUP6', 'DUP6', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x10', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP4', 'DUP4', 'DUP9', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x15c1', 'JUMPI']>> 
4774-Stack size: 18 
4774-Equals Mem:<< []>> 
4774-NonEquals Mem: << [<2,6>]>> 
4774-Equals Sto:<< []>> 
4774-NonEquals Sto: << []>> 
4774-Useless: []
4774-Constancy: [(17, 32), (16, 64), (11, 64), (10, 0), (4, 0)]
4774-ContextAliasing: []

.....
-----
Block: 4815
4815Instr:<<['JUMPDEST', 'ADDRESS', 'DUP9', 'MSTORE', 'PUSH1 0x02', 'DUP4', 'MSTORE', 'PUSH2 0x12e2', 'DUP5', 'DUP10', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
4815-Stack size: 21 
4815-Equals Mem:<< []>> 
4815-NonEquals Mem: << [<3,6>]>> 
4815-Equals Sto:<< []>> 
4815-NonEquals Sto: << []>> 
4815-Useless: []
4815-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (3, 64), (2, 32)]
4815-ContextAliasing: []

.....
-----
Block: 6466_0
6466_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466_0-Stack size: 31 
6466_0-Equals Mem:<< []>> 
6466_0-NonEquals Mem: << [<3,5>]>> 
6466_0-Equals Sto:<< []>> 
6466_0-NonEquals Sto: << []>> 
6466_0-Useless: [3, 5]
6466_0-Constancy: [(30, 32), (29, 64), (24, 64), (23, 0), (17, 0), (13, 64), (12, 32), (1, 32)]
6466_0-ContextAliasing: []

.....
-----
Block: 3484_1
3484_1Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_1-Stack size: 30 
3484_1-Equals Mem:<< []>> 
3484_1-NonEquals Mem: << [<3,10>]>> 
3484_1-Equals Sto:<< []>> 
3484_1-NonEquals Sto: << []>> 
3484_1-Useless: []
3484_1-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (16, 0), (12, 64), (11, 32)]
3484_1-ContextAliasing: []

.....
-----
Block: 3484_2
3484_2Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_2-Stack size: 27 
3484_2-Equals Mem:<< []>> 
3484_2-NonEquals Mem: << [<3,10>]>> 
3484_2-Equals Sto:<< []>> 
3484_2-NonEquals Sto: << []>> 
3484_2-Useless: []
3484_2-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (13, 0), (9, 64), (8, 32)]
3484_2-ContextAliasing: []

.....
-----
Block: 5022
5022Instr:<<['SWAP2', 'DUP9', 'SWAP4', 'SWAP2', 'SWAP6', 'SWAP3', 'DUP6', 'MLOAD', 'SWAP7', 'DUP8', 'SWAP5', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP7', 'MSTORE', 'PUSH1 0xa4', 'DUP7', 'ADD', 'SWAP2', 'PUSH1 0x04', 'DUP8', 'ADD', 'MSTORE', 'DUP7', 'PUSH1 0x24', 'DUP8', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP8', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP2', 'MSTORE', 'PUSH1 0xc4', 'DUP6', 'ADD', 'SWAP3', 'SWAP2', 'DUP7']>> 
5022-Stack size: 22 
5022-Equals Mem:<< []>> 
5022-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
5022-Equals Sto:<< []>> 
5022-NonEquals Sto: << []>> 
5022-Useless: []
5022-Constancy: [(21, 32), (20, 64), (15, 64), (14, 0), (8, 0), (4, 64), (0, 32)]
5022-ContextAliasing: []

.....
-----
Block: 3046_9
3046_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_9-Stack size: 18 
3046_9-Equals Mem:<< []>> 
3046_9-NonEquals Mem: << [<5,8>]>> 
3046_9-Equals Sto:<< []>> 
3046_9-NonEquals Sto: << []>> 
3046_9-Useless: []
3046_9-Constancy: [(17, 32), (16, 64), (11, 64), (10, 0), (2, 0)]
3046_9-ContextAliasing: []

.....
-----
Block: 5186
5186Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'DUP13', 'AND', 'DUP6', 'MSTORE', 'DUP13', 'SWAP8', 'POP', 'DUP10', 'SWAP7', 'POP', 'SWAP4', 'DUP2', 'ADD', 'SWAP4', 'SWAP3', 'DUP2', 'ADD', 'SWAP3', 'PUSH1 0x01', 'ADD', 'PUSH2 0x13d5', 'JUMP']>> 
5186-Stack size: 26 
5186-Equals Mem:<< []>> 
5186-NonEquals Mem: << [<6,2>]>> 
5186-Equals Sto:<< []>> 
5186-NonEquals Sto: << []>> 
5186-Useless: []
5186-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (12, 0), (8, 64), (7, 0), (1, 32)]
5186-ContextAliasing: [(6, 16)]

.....
-----
Block: 3750_0
3750_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3750_0-Stack size: 25 
3750_0-Equals Mem:<< []>> 
3750_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3750_0-Equals Sto:<< []>> 
3750_0-NonEquals Sto: << []>> 
3750_0-Useless: []
3750_0-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (7, 64), (6, 32)]
3750_0-ContextAliasing: []

.....
-----
Block: 3830_0
3830_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3830_0-Stack size: 26 
3830_0-Equals Mem:<< []>> 
3830_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3830_0-Equals Sto:<< []>> 
3830_0-NonEquals Sto: << []>> 
3830_0-Useless: []
3830_0-Constancy: [(25, 32), (24, 64), (19, 64), (18, 0), (12, 0), (8, 64), (7, 32)]
3830_0-ContextAliasing: []

.....
-----
Block: 6046_0
6046_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6046_0-Stack size: 28 
6046_0-Equals Mem:<< []>> 
6046_0-NonEquals Mem: << [<5,8>]>> 
6046_0-Equals Sto:<< []>> 
6046_0-NonEquals Sto: << []>> 
6046_0-Useless: []
6046_0-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (14, 0), (10, 64), (9, 32)]
6046_0-ContextAliasing: [(11, 27)]

.....
-----
Block: 3046_23
3046_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_23-Stack size: 28 
3046_23-Equals Mem:<< []>> 
3046_23-NonEquals Mem: << [<5,8>]>> 
3046_23-Equals Sto:<< []>> 
3046_23-NonEquals Sto: << []>> 
3046_23-Useless: []
3046_23-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (14, 0), (10, 64), (9, 32), (4, 32), (2, 32)]
3046_23-ContextAliasing: [(3, 22)]

.....
-----
Block: 3046_8
3046_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_8-Stack size: 28 
3046_8-Equals Mem:<< []>> 
3046_8-NonEquals Mem: << [<5,8>]>> 
3046_8-Equals Sto:<< []>> 
3046_8-NonEquals Sto: << []>> 
3046_8-Useless: []
3046_8-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (14, 0), (10, 64), (9, 32), (4, 32)]
3046_8-ContextAliasing: [(3, 22)]

.....
-----
Block: 6046
6046Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6046-Stack size: 24 
6046-Equals Mem:<< []>> 
6046-NonEquals Mem: << [<5,8>]>> 
6046-Equals Sto:<< []>> 
6046-NonEquals Sto: << []>> 
6046-Useless: []
6046-Constancy: [(23, 32), (22, 64), (17, 64), (16, 0), (10, 0), (6, 64), (5, 32)]
6046-ContextAliasing: [(7, 23)]

.....
-----
Block: 3046_7
3046_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_7-Stack size: 22 
3046_7-Equals Mem:<< []>> 
3046_7-NonEquals Mem: << [<5,8>]>> 
3046_7-Equals Sto:<< []>> 
3046_7-NonEquals Sto: << []>> 
3046_7-Useless: []
3046_7-Constancy: [(21, 32), (20, 64), (15, 64), (14, 0), (8, 0), (4, 64), (3, 32)]
3046_7-ContextAliasing: []

.....
-----
Block: 5284
5284Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'DUP9', 'DUP8', 'MSTORE', 'PUSH1 0x05', 'DUP3', 'MSTORE', 'DUP3', 'DUP8', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH0', 'PUSH2 0x1313', 'JUMP']>> 
5284-Stack size: 21 
5284-Equals Mem:<< []>> 
5284-NonEquals Mem: << [<5,8>]>> 
5284-Equals Sto:<< []>> 
5284-NonEquals Sto: << []>> 
5284-Useless: []
5284-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (3, 64), (2, 32)]
5284-ContextAliasing: []

.....
-----
Block: 5305
5305Instr:<<['JUMPDEST', 'DUP9', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP4', 'MSTORE', 'DUP4', 'DUP9', 'KECCAK256', 'SLOAD', 'DUP2', 'AND', 'ISZERO', 'SWAP2', 'POP', 'PUSH2 0x130d', 'JUMP']>> 
5305-Stack size: 21 
5305-Equals Mem:<< []>> 
5305-NonEquals Mem: << [<3,6>]>> 
5305-Equals Sto:<< []>> 
5305-NonEquals Sto: << []>> 
5305-Useless: []
5305-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (3, 64), (2, 32)]
5305-ContextAliasing: []

.....
-----
Block: 3637_2
3637_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_2-Stack size: 25 
3637_2-Equals Mem:<< []>> 
3637_2-NonEquals Mem: << [<5,8>]>> 
3637_2-Equals Sto:<< []>> 
3637_2-NonEquals Sto: << []>> 
3637_2-Useless: []
3637_2-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (7, 64), (6, 32)]
3637_2-ContextAliasing: []

.....
-----
Block: 3369_2
3369_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_2-Stack size: 27 
3369_2-Equals Mem:<< []>> 
3369_2-NonEquals Mem: << [<7,2>]>> 
3369_2-Equals Sto:<< []>> 
3369_2-NonEquals Sto: << []>> 
3369_2-Useless: []
3369_2-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (13, 0), (9, 64), (8, 32)]
3369_2-ContextAliasing: []

.....
-----
Block: 3200_3
3200_3Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_3-Stack size: 31 
3200_3-Equals Mem:<< []>> 
3200_3-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_3-Equals Sto:<< []>> 
3200_3-NonEquals Sto: << []>> 
3200_3-Useless: []
3200_3-Constancy: [(30, 32), (29, 64), (24, 64), (23, 0), (17, 0), (13, 64), (12, 32)]
3200_3-ContextAliasing: [(4, 27)]

.....
-----
Block: 3251_3
3251_3Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_3-Stack size: 34 
3251_3-Equals Mem:<< []>> 
3251_3-NonEquals Mem: << [<12,6>]>> 
3251_3-Equals Sto:<< []>> 
3251_3-NonEquals Sto: << []>> 
3251_3-Useless: []
3251_3-Constancy: [(33, 32), (32, 64), (27, 64), (26, 0), (20, 0), (16, 64), (15, 32), (5, 32)]
3251_3-ContextAliasing: [(7, 27)]

.....
-----
Block: 3046_6
3046_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_6-Stack size: 29 
3046_6-Equals Mem:<< []>> 
3046_6-NonEquals Mem: << [<5,8>]>> 
3046_6-Equals Sto:<< []>> 
3046_6-NonEquals Sto: << []>> 
3046_6-Useless: []
3046_6-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (15, 0), (11, 64), (10, 32)]
3046_6-ContextAliasing: []

.....
-----
Block: 3637_1
3637_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_1-Stack size: 28 
3637_1-Equals Mem:<< []>> 
3637_1-NonEquals Mem: << [<5,8>]>> 
3637_1-Equals Sto:<< []>> 
3637_1-NonEquals Sto: << []>> 
3637_1-Useless: []
3637_1-Constancy: [(27, 32), (26, 64), (21, 64), (20, 0), (14, 0), (10, 64), (9, 32)]
3637_1-ContextAliasing: []

.....
-----
Block: 3369_1
3369_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_1-Stack size: 30 
3369_1-Equals Mem:<< []>> 
3369_1-NonEquals Mem: << [<7,2>]>> 
3369_1-Equals Sto:<< []>> 
3369_1-NonEquals Sto: << []>> 
3369_1-Useless: []
3369_1-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (16, 0), (12, 64), (11, 32)]
3369_1-ContextAliasing: []

.....
-----
Block: 3200_2
3200_2Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_2-Stack size: 34 
3200_2-Equals Mem:<< []>> 
3200_2-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_2-Equals Sto:<< []>> 
3200_2-NonEquals Sto: << []>> 
3200_2-Useless: []
3200_2-Constancy: [(33, 32), (32, 64), (27, 64), (26, 0), (20, 0), (16, 64), (15, 32)]
3200_2-ContextAliasing: [(4, 30)]

.....
-----
Block: 3251_2
3251_2Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_2-Stack size: 37 
3251_2-Equals Mem:<< []>> 
3251_2-NonEquals Mem: << [<12,6>]>> 
3251_2-Equals Sto:<< []>> 
3251_2-NonEquals Sto: << []>> 
3251_2-Useless: []
3251_2-Constancy: [(36, 32), (35, 64), (30, 64), (29, 0), (23, 0), (19, 64), (18, 32), (5, 32)]
3251_2-ContextAliasing: [(7, 30)]

.....
-----
Block: 3046_5
3046_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_5-Stack size: 32 
3046_5-Equals Mem:<< []>> 
3046_5-NonEquals Mem: << [<5,8>]>> 
3046_5-Equals Sto:<< []>> 
3046_5-NonEquals Sto: << []>> 
3046_5-Useless: []
3046_5-Constancy: [(31, 32), (30, 64), (25, 64), (24, 0), (18, 0), (14, 64), (13, 32)]
3046_5-ContextAliasing: []

.....
-----
Block: 3046_4
3046_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_4-Stack size: 33 
3046_4-Equals Mem:<< []>> 
3046_4-NonEquals Mem: << [<5,8>]>> 
3046_4-Equals Sto:<< []>> 
3046_4-NonEquals Sto: << []>> 
3046_4-Useless: []
3046_4-Constancy: [(32, 32), (31, 64), (26, 64), (25, 0), (19, 0), (15, 64), (14, 32), (3, 32)]
3046_4-ContextAliasing: []

.....
-----
Block: 3539_0
3539_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3539_0-Stack size: 23 
3539_0-Equals Mem:<< []>> 
3539_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3539_0-Equals Sto:<< []>> 
3539_0-NonEquals Sto: << []>> 
3539_0-Useless: []
3539_0-Constancy: [(22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (5, 64), (4, 32)]
3539_0-ContextAliasing: []

.....
-----
Block: 5374
5374Instr:<<['JUMPDEST', 'DUP10', 'DUP9', 'MSTORE', 'PUSH1 0x02', 'DUP4', 'MSTORE', 'PUSH2 0x151a', 'DUP12', 'PUSH2 0x1515', 'DUP7', 'DUP12', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
5374-Stack size: 21 
5374-Equals Mem:<< []>> 
5374-NonEquals Mem: << [<3,6>]>> 
5374-Equals Sto:<< []>> 
5374-NonEquals Sto: << []>> 
5374-Useless: []
5374-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (3, 64), (2, 32)]
5374-ContextAliasing: []

.....
-----
Block: 6466
6466Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466-Stack size: 33 
6466-Equals Mem:<< []>> 
6466-NonEquals Mem: << [<3,5>]>> 
6466-Equals Sto:<< []>> 
6466-NonEquals Sto: << []>> 
6466-Useless: [3, 5]
6466-Constancy: [(32, 32), (31, 64), (26, 64), (25, 0), (19, 0), (15, 64), (14, 32), (1, 32)]
6466-ContextAliasing: []

.....
-----
Block: 3484
3484Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484-Stack size: 32 
3484-Equals Mem:<< []>> 
3484-NonEquals Mem: << [<3,10>]>> 
3484-Equals Sto:<< []>> 
3484-NonEquals Sto: << []>> 
3484-Useless: []
3484-Constancy: [(31, 32), (30, 64), (25, 64), (24, 0), (18, 0), (14, 64), (13, 32)]
3484-ContextAliasing: []

.....
-----
Block: 3484_0
3484_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484_0-Stack size: 29 
3484_0-Equals Mem:<< []>> 
3484_0-NonEquals Mem: << [<3,10>]>> 
3484_0-Equals Sto:<< []>> 
3484_0-NonEquals Sto: << []>> 
3484_0-Useless: []
3484_0-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (15, 0), (11, 64), (10, 32)]
3484_0-ContextAliasing: []

.....
-----
Block: 5411
5411Instr:<<['DUP4', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP5', 'SWAP1', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x7a6521', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5411-Stack size: 21 
5411-Equals Mem:<< []>> 
5411-NonEquals Mem: << [<6,1>, <12,1>, <17,1>, <22,1>, <29,1>]>> 
5411-Equals Sto:<< []>> 
5411-NonEquals Sto: << []>> 
5411-Useless: []
5411-Constancy: [(20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (3, 64), (2, 32)]
5411-ContextAliasing: []

.....
-----
Block: 3427_0
3427_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427_0-Stack size: 23 
3427_0-Equals Mem:<< []>> 
3427_0-NonEquals Mem: << [<5,8>]>> 
3427_0-Equals Sto:<< []>> 
3427_0-NonEquals Sto: << []>> 
3427_0-Useless: []
3427_0-Constancy: [(22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (5, 64), (4, 32)]
3427_0-ContextAliasing: []

.....
-----
Block: 3637_0
3637_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637_0-Stack size: 27 
3637_0-Equals Mem:<< []>> 
3637_0-NonEquals Mem: << [<5,8>]>> 
3637_0-Equals Sto:<< []>> 
3637_0-NonEquals Sto: << []>> 
3637_0-Useless: []
3637_0-Constancy: [(26, 32), (25, 64), (20, 64), (19, 0), (13, 0), (9, 64), (8, 32)]
3637_0-ContextAliasing: []

.....
-----
Block: 3369_0
3369_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369_0-Stack size: 29 
3369_0-Equals Mem:<< []>> 
3369_0-NonEquals Mem: << [<7,2>]>> 
3369_0-Equals Sto:<< []>> 
3369_0-NonEquals Sto: << []>> 
3369_0-Useless: []
3369_0-Constancy: [(28, 32), (27, 64), (22, 64), (21, 0), (15, 0), (11, 64), (10, 32)]
3369_0-ContextAliasing: []

.....
-----
Block: 3200_1
3200_1Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_1-Stack size: 33 
3200_1-Equals Mem:<< []>> 
3200_1-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_1-Equals Sto:<< []>> 
3200_1-NonEquals Sto: << []>> 
3200_1-Useless: []
3200_1-Constancy: [(32, 32), (31, 64), (26, 64), (25, 0), (19, 0), (15, 64), (14, 32)]
3200_1-ContextAliasing: [(4, 29)]

.....
-----
Block: 3251_1
3251_1Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_1-Stack size: 36 
3251_1-Equals Mem:<< []>> 
3251_1-NonEquals Mem: << [<12,6>]>> 
3251_1-Equals Sto:<< []>> 
3251_1-NonEquals Sto: << []>> 
3251_1-Useless: []
3251_1-Constancy: [(35, 32), (34, 64), (29, 64), (28, 0), (22, 0), (18, 64), (17, 32), (5, 32)]
3251_1-ContextAliasing: [(7, 29)]

.....
-----
Block: 3046_3
3046_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_3-Stack size: 31 
3046_3-Equals Mem:<< []>> 
3046_3-NonEquals Mem: << [<5,8>]>> 
3046_3-Equals Sto:<< []>> 
3046_3-NonEquals Sto: << []>> 
3046_3-Useless: []
3046_3-Constancy: [(30, 32), (29, 64), (24, 64), (23, 0), (17, 0), (13, 64), (12, 32)]
3046_3-ContextAliasing: []

.....
-----
Block: 3637
3637Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637-Stack size: 30 
3637-Equals Mem:<< []>> 
3637-NonEquals Mem: << [<5,8>]>> 
3637-Equals Sto:<< []>> 
3637-NonEquals Sto: << []>> 
3637-Useless: []
3637-Constancy: [(29, 32), (28, 64), (23, 64), (22, 0), (16, 0), (12, 64), (11, 32)]
3637-ContextAliasing: []

.....
-----
Block: 3369
3369Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369-Stack size: 32 
3369-Equals Mem:<< []>> 
3369-NonEquals Mem: << [<7,2>]>> 
3369-Equals Sto:<< []>> 
3369-NonEquals Sto: << []>> 
3369-Useless: []
3369-Constancy: [(31, 32), (30, 64), (25, 64), (24, 0), (18, 0), (14, 64), (13, 32)]
3369-ContextAliasing: []

.....
-----
Block: 3200_0
3200_0Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200_0-Stack size: 36 
3200_0-Equals Mem:<< []>> 
3200_0-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200_0-Equals Sto:<< []>> 
3200_0-NonEquals Sto: << []>> 
3200_0-Useless: []
3200_0-Constancy: [(35, 32), (34, 64), (29, 64), (28, 0), (22, 0), (18, 64), (17, 32)]
3200_0-ContextAliasing: [(4, 32)]

.....
-----
Block: 3251_0
3251_0Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251_0-Stack size: 39 
3251_0-Equals Mem:<< []>> 
3251_0-NonEquals Mem: << [<12,6>]>> 
3251_0-Equals Sto:<< []>> 
3251_0-NonEquals Sto: << []>> 
3251_0-Useless: []
3251_0-Constancy: [(38, 32), (37, 64), (32, 64), (31, 0), (25, 0), (21, 64), (20, 32), (5, 32)]
3251_0-ContextAliasing: [(7, 32)]

.....
-----
Block: 3046_2
3046_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_2-Stack size: 34 
3046_2-Equals Mem:<< []>> 
3046_2-NonEquals Mem: << [<5,8>]>> 
3046_2-Equals Sto:<< []>> 
3046_2-NonEquals Sto: << []>> 
3046_2-Useless: []
3046_2-Constancy: [(33, 32), (32, 64), (27, 64), (26, 0), (20, 0), (16, 64), (15, 32)]
3046_2-ContextAliasing: []

.....
-----
Block: 3046_1
3046_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_1-Stack size: 35 
3046_1-Equals Mem:<< []>> 
3046_1-NonEquals Mem: << [<5,8>]>> 
3046_1-Equals Sto:<< []>> 
3046_1-NonEquals Sto: << []>> 
3046_1-Useless: []
3046_1-Constancy: [(34, 32), (33, 64), (28, 64), (27, 0), (21, 0), (17, 64), (16, 32), (3, 32)]
3046_1-ContextAliasing: []

.....
-----
Block: 3539
3539Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3539-Stack size: 25 
3539-Equals Mem:<< []>> 
3539-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3539-Equals Sto:<< []>> 
3539-NonEquals Sto: << []>> 
3539-Useless: []
3539-Constancy: [(24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (7, 64), (6, 32)]
3539-ContextAliasing: []

.....
-----
Block: 5490
5490Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x84', 'SWAP2', 'MLOAD', 'SWAP1', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP3', 'MSTORE', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x656421', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
5490-Stack size: 20 
5490-Equals Mem:<< []>> 
5490-NonEquals Mem: << [<10,4>, <14,4>, <19,4>, <24,4>, <31,4>]>> 
5490-Equals Sto:<< []>> 
5490-NonEquals Sto: << []>> 
5490-Useless: []
5490-Constancy: [(19, 32), (18, 64), (13, 64), (12, 0), (6, 0), (2, 64), (1, 32)]
5490-ContextAliasing: []

.....
-----
Block: 5585
5585Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5585-Stack size: 18 
5585-Equals Mem:<< []>> 
5585-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5585-Equals Sto:<< []>> 
5585-NonEquals Sto: << []>> 
5585-Useless: []
5585-Constancy: [(17, 32), (16, 64), (11, 64), (10, 0), (4, 0)]
5585-ContextAliasing: []

.....
-----
Block: 5664
5664Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5664-Stack size: 17 
5664-Equals Mem:<< []>> 
5664-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <27,2>]>> 
5664-Equals Sto:<< []>> 
5664-NonEquals Sto: << []>> 
5664-Useless: []
5664-Constancy: [(16, 32), (15, 64), (10, 64), (9, 0), (3, 0)]
5664-ContextAliasing: []

.....
-----
Block: 5782
5782Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5782-Stack size: 15 
5782-Equals Mem:<< []>> 
5782-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5782-Equals Sto:<< []>> 
5782-NonEquals Sto: << []>> 
5782-Useless: []
5782-Constancy: [(14, 32), (13, 64), (8, 64), (7, 0), (1, 0)]
5782-ContextAliasing: []

.....
-----
Block: 5869
5869Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5869-Stack size: 15 
5869-Equals Mem:<< []>> 
5869-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5869-Equals Sto:<< []>> 
5869-NonEquals Sto: << []>> 
5869-Useless: []
5869-Constancy: [(14, 32), (13, 64), (8, 64), (7, 0), (1, 0)]
5869-ContextAliasing: []

.....
-----
Block: 5950
5950Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5950-Stack size: 15 
5950-Equals Mem:<< []>> 
5950-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5950-Equals Sto:<< []>> 
5950-NonEquals Sto: << []>> 
5950-Useless: []
5950-Constancy: [(14, 32), (13, 64), (8, 64), (7, 0), (1, 0)]
5950-ContextAliasing: []

.....
-----
Block: 2604
2604Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH9 0x3635c9adc5dea00000', 'DUP2', 'MSTORE', 'RETURN']>> 
2604-Stack size: 2 
2604-Equals Mem:<< []>> 
2604-NonEquals Mem: << [<5,2>]>> 
2604-Equals Sto:<< []>> 
2604-NonEquals Sto: << []>> 
2604-Useless: []
2604-Constancy: [(1, 0), (0, 64)]
2604-ContextAliasing: []

.....
-----
Block: 2640
2640Instr:<<['PUSH1 0x14', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
2640-Stack size: 2 
2640-Equals Mem:<< []>> 
2640-NonEquals Mem: << [<13,3>]>> 
2640-Equals Sto:<< []>> 
2640-NonEquals Sto: << []>> 
2640-Useless: []
2640-Constancy: [(1, 0), (0, 64)]
2640-ContextAliasing: []

.....
-----
Block: 3750
3750Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3750-Stack size: 7 
3750-Equals Mem:<< []>> 
3750-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3750-Equals Sto:<< []>> 
3750-NonEquals Sto: << []>> 
3750-Useless: []
3750-Constancy: [(6, 0), (5, 32), (4, 64)]
3750-ContextAliasing: []

.....
-----
Block: 3830
3830Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3830-Stack size: 8 
3830-Equals Mem:<< []>> 
3830-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3830-Equals Sto:<< []>> 
3830-NonEquals Sto: << []>> 
3830-Useless: []
3830-Constancy: [(7, 0), (6, 32), (5, 64)]
3830-ContextAliasing: []

.....
-----
Block: 2737
2737Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP3', 'MSTORE', 'PUSH6 0x14d958dc995d', 'PUSH1 0xd2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0c80', 'JUMP']>> 
2737-Stack size: 4 
2737-Equals Mem:<< []>> 
2737-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
2737-Equals Sto:<< []>> 
2737-NonEquals Sto: << []>> 
2737-Useless: []
2737-Constancy: [(3, 0), (0, 64)]
2737-ContextAliasing: []

.....
-----
Block: 3046_0
3046_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046_0-Stack size: 6 
3046_0-Equals Mem:<< []>> 
3046_0-NonEquals Mem: << [<5,8>]>> 
3046_0-Equals Sto:<< []>> 
3046_0-NonEquals Sto: << []>> 
3046_0-Useless: []
3046_0-Constancy: [(5, 0), (2, 64)]
3046_0-ContextAliasing: []

.....
-----
Block: 2921
2921Instr:<<['DUP1', 'DUP7', 'SHL', 'DUP3', 'ADD', 'DUP5', 'ADD', 'MLOAD', 'DUP4', 'AND', 'DUP8', 'MSTORE', 'PUSH1 0x10', 'DUP5', 'MSTORE', 'DUP5', 'DUP8', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x0b8f', 'SWAP1', 'PUSH2 0x17fa', 'JUMP']>> 
2921-Stack size: 8 
2921-Equals Mem:<< []>> 
2921-NonEquals Mem: << [<11,14>]>> 
2921-Equals Sto:<< [<19,26>]>> 
2921-NonEquals Sto: << []>> 
2921-Useless: []
2921-Constancy: [(7, 0), (6, 0), (4, 64), (3, 32)]
2921-ContextAliasing: []

.....
-----
Block: 3427
3427Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427-Stack size: 9 
3427-Equals Mem:<< []>> 
3427-NonEquals Mem: << [<5,8>]>> 
3427-Equals Sto:<< []>> 
3427-NonEquals Sto: << []>> 
3427-Useless: []
3427-Constancy: [(8, 0), (7, 0), (5, 64), (4, 32)]
3427-ContextAliasing: []

.....
-----
Block: 3293
3293Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293-Stack size: 8 
3293-Equals Mem:<< []>> 
3293-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3293-Equals Sto:<< []>> 
3293-NonEquals Sto: << []>> 
3293-Useless: []
3293-Constancy: [(7, 0), (6, 0), (4, 64), (3, 32)]
3293-ContextAliasing: []

.....
-----
Block: 3046
3046Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046-Stack size: 11 
3046-Equals Mem:<< []>> 
3046-NonEquals Mem: << [<5,8>]>> 
3046-Equals Sto:<< []>> 
3046-NonEquals Sto: << []>> 
3046-Useless: []
3046-Constancy: [(10, 0), (9, 0), (7, 64), (6, 32)]
3046-ContextAliasing: []

.....
-----
Block: 3003
3003Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0x41', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP7', 'REVERT']>> 
3003-Stack size: 8 
3003-Equals Mem:<< []>> 
3003-NonEquals Mem: << [<5,8>]>> 
3003-Equals Sto:<< []>> 
3003-NonEquals Sto: << []>> 
3003-Useless: []
3003-Constancy: [(7, 0), (6, 0), (4, 64), (3, 32)]
3003-ContextAliasing: []

.....
-----
Block: 972
972Instr:<<['JUMPDEST', 'SWAP3', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP6', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'DUP8', 'PUSH1 0x15', 'SLOAD', 'AND', 'OR', 'PUSH1 0x15', 'SSTORE', 'DUP4', 'MLOAD', 'SWAP3', 'PUSH2 0x03ee', 'DUP5', 'PUSH2 0x0c16', 'JUMP']>> 
972-Stack size: 6 
972-Equals Mem:<< []>> 
972-NonEquals Mem: << []>> 
972-Equals Sto:<< [<12,16>]>> 
972-NonEquals Sto: << []>> 
972-Useless: []
972-Constancy: [(4, 0), (2, 64), (1, 32)]
972-ContextAliasing: []

.....
-----
Block: 1210
1210Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x15', 'SLOAD', 'AND', 'PUSH1 0x15', 'SSTORE', 'DUP1', 'RETURN']>> 
1210-Stack size: 3 
1210-Equals Mem:<< []>> 
1210-NonEquals Mem: << []>> 
1210-Equals Sto:<< [<4,7>]>> 
1210-NonEquals Sto: << []>> 
1210-Useless: []
1210-Constancy: [(1, 0)]
1210-ContextAliasing: []

.....
-----
Block: 1514
1514Instr:<<['JUMPDEST', 'CALLDATALOAD', 'PUSH1 0x08', 'SSTORE', 'PUSH1 0x24', 'CALLDATALOAD', 'PUSH1 0x0a', 'SSTORE', 'PUSH1 0x44', 'CALLDATALOAD', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x64', 'CALLDATALOAD', 'PUSH1 0x0b', 'SSTORE', 'DUP1', 'RETURN']>> 
1514-Stack size: 6 
1514-Equals Mem:<< []>> 
1514-NonEquals Mem: << []>> 
1514-Equals Sto:<< []>> 
1514-NonEquals Sto: << [<3,7>, <3,11>, <3,15>, <7,11>, <7,15>, <11,15>]>> 
1514-Useless: []
1514-Constancy: [(5, 0), (4, 64), (1, 0)]
1514-ContextAliasing: []

.....
-----
Block: 1728
1728Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0xa0', 'SHL', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
1728-Stack size: 6 
1728-Equals Mem:<< []>> 
1728-NonEquals Mem: << []>> 
1728-Equals Sto:<< [<3,23>]>> 
1728-NonEquals Sto: << []>> 
1728-Useless: []
1728-Constancy: [(5, 0), (4, 64), (1, 0)]
1728-ContextAliasing: []

.....
-----
Block: 2212
2212Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0xb0', 'SHL', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
2212-Stack size: 6 
2212-Equals Mem:<< []>> 
2212-NonEquals Mem: << []>> 
2212-Equals Sto:<< [<3,23>]>> 
2212-NonEquals Sto: << []>> 
2212-Useless: []
2212-Constancy: [(5, 0), (4, 64), (1, 0)]
2212-ContextAliasing: []

.....
-----
Block: 4038
4038Instr:<<['JUMPDEST', 'PUSH1 0x0c', 'SLOAD', 'SWAP1', 'DUP4', 'PUSH1 0x0d', 'SLOAD', 'SWAP3', 'PUSH2 0x0fd9', 'SWAP1', 'DUP4', 'PUSH2 0x1891', 'JUMP']>> 
4038-Stack size: 17 
4038-Equals Mem:<< []>> 
4038-NonEquals Mem: << []>> 
4038-Equals Sto:<< []>> 
4038-NonEquals Sto: << [<2,6>]>> 
4038-Useless: []
4038-Constancy: [(16, 32), (15, 64), (10, 64), (9, 0), (3, 0), (2, 32), (1, 64)]
4038-ContextAliasing: []

.....
-----
Block: 4505
4505Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SSTORE', 'PUSH1 0x07', 'SLOAD', 'SWAP1', 'PUSH2 0x11a9', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4505-Stack size: 18 
4505-Equals Mem:<< []>> 
4505-NonEquals Mem: << []>> 
4505-Equals Sto:<< []>> 
4505-NonEquals Sto: << [<2,4>]>> 
4505-Useless: []
4505-Constancy: [(17, 32), (16, 64), (11, 64), (10, 0), (3, 32), (2, 64)]
4505-ContextAliasing: []

.....
-----
Block: 4569
4569Instr:<<['JUMPDEST', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
4569-Stack size: 10 
4569-Equals Mem:<< []>> 
4569-NonEquals Mem: << []>> 
4569-Equals Sto:<< []>> 
4569-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
4569-Useless: []
4569-Constancy: [(9, 32), (8, 64), (3, 64), (2, 0)]
4569-ContextAliasing: []

.....
-----
Block: 4631
4631Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'PUSH2 0x0fbe', 'JUMP']>> 
4631-Stack size: 17 
4631-Equals Mem:<< []>> 
4631-NonEquals Mem: << []>> 
4631-Equals Sto:<< []>> 
4631-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4631-Useless: []
4631-Constancy: [(16, 32), (15, 64), (10, 64), (9, 0), (3, 0), (2, 32), (1, 64)]
4631-ContextAliasing: []

.....
-----
Block: 4662
4662Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'PUSH2 0x1207', 'JUMP']>> 
4662-Stack size: 19 
4662-Equals Mem:<< []>> 
4662-NonEquals Mem: << []>> 
4662-Equals Sto:<< []>> 
4662-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
4662-Useless: []
4662-Constancy: [(18, 32), (17, 64), (12, 64), (11, 0), (5, 0), (4, 32), (3, 64)]
4662-ContextAliasing: []

.....
-----
Block: 5121
5121Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x15', 'SLOAD', 'AND', 'PUSH1 0x15', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x1418', 'JUMPI']>> 
5121-Stack size: 17 
5121-Equals Mem:<< []>> 
5121-NonEquals Mem: << []>> 
5121-Equals Sto:<< [<3,6>]>> 
5121-NonEquals Sto: << []>> 
5121-Useless: []
5121-Constancy: [(16, 32), (15, 64), (10, 64), (9, 0), (3, 0)]
5121-ContextAliasing: []

.....
-----
Block: 6168
6168Instr:<<['PUSH1 0x0e', 'SSTORE', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH0', 'PUSH1 0x0c', 'SSTORE', 'PUSH0', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
6168-Stack size: 19 
6168-Equals Mem:<< []>> 
6168-NonEquals Mem: << []>> 
6168-Equals Sto:<< [<3,11>]>> 
6168-NonEquals Sto: << [<1,3>, <1,5>, <1,8>, <1,11>, <3,5>, <3,8>, <5,8>, <5,11>, <8,11>]>> 
6168-Useless: []
6168-Constancy: [(18, 32), (17, 64), (12, 64), (11, 0), (5, 0), (4, 32), (3, 64)]
6168-ContextAliasing: []

.....
-----
Block: 5121_0
5121_0Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x15', 'SLOAD', 'AND', 'PUSH1 0x15', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x1418', 'JUMPI']>> 
5121_0-Stack size: 11 
5121_0-Equals Mem:<< []>> 
5121_0-NonEquals Mem: << []>> 
5121_0-Equals Sto:<< [<3,6>]>> 
5121_0-NonEquals Sto: << []>> 
5121_0-Useless: []
5121_0-Constancy: [(10, 0), (9, 32), (8, 64), (3, 0)]
5121_0-ContextAliasing: []

.....
-----
Block: 4662_0
4662_0Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'PUSH2 0x1207', 'JUMP']>> 
4662_0-Stack size: 13 
4662_0-Equals Mem:<< []>> 
4662_0-NonEquals Mem: << []>> 
4662_0-Equals Sto:<< []>> 
4662_0-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
4662_0-Useless: []
4662_0-Constancy: [(12, 0), (11, 32), (10, 64), (5, 0), (4, 32), (3, 64)]
4662_0-ContextAliasing: []

.....
-----
Block: 4038_0
4038_0Instr:<<['JUMPDEST', 'PUSH1 0x0c', 'SLOAD', 'SWAP1', 'DUP4', 'PUSH1 0x0d', 'SLOAD', 'SWAP3', 'PUSH2 0x0fd9', 'SWAP1', 'DUP4', 'PUSH2 0x1891', 'JUMP']>> 
4038_0-Stack size: 11 
4038_0-Equals Mem:<< []>> 
4038_0-NonEquals Mem: << []>> 
4038_0-Equals Sto:<< []>> 
4038_0-NonEquals Sto: << [<2,6>]>> 
4038_0-Useless: []
4038_0-Constancy: [(10, 0), (9, 32), (8, 64), (3, 0), (2, 32), (1, 64)]
4038_0-ContextAliasing: []

.....
-----
Block: 4505_0
4505_0Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SSTORE', 'PUSH1 0x07', 'SLOAD', 'SWAP1', 'PUSH2 0x11a9', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4505_0-Stack size: 12 
4505_0-Equals Mem:<< []>> 
4505_0-NonEquals Mem: << []>> 
4505_0-Equals Sto:<< []>> 
4505_0-NonEquals Sto: << [<2,4>]>> 
4505_0-Useless: []
4505_0-Constancy: [(11, 0), (10, 32), (9, 64), (3, 32), (2, 64)]
4505_0-ContextAliasing: []

.....
-----
Block: 4569_0
4569_0Instr:<<['JUMPDEST', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
4569_0-Stack size: 4 
4569_0-Equals Mem:<< []>> 
4569_0-NonEquals Mem: << []>> 
4569_0-Equals Sto:<< []>> 
4569_0-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
4569_0-Useless: []
4569_0-Constancy: [(3, 0), (2, 32), (1, 64)]
4569_0-ContextAliasing: []

.....
-----
Block: 6168_0
6168_0Instr:<<['PUSH1 0x0e', 'SSTORE', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH0', 'PUSH1 0x0c', 'SSTORE', 'PUSH0', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
6168_0-Stack size: 13 
6168_0-Equals Mem:<< []>> 
6168_0-NonEquals Mem: << []>> 
6168_0-Equals Sto:<< [<3,11>]>> 
6168_0-NonEquals Sto: << [<1,3>, <1,5>, <1,8>, <1,11>, <3,5>, <3,8>, <5,8>, <5,11>, <8,11>]>> 
6168_0-Useless: []
6168_0-Constancy: [(12, 0), (11, 32), (10, 64), (5, 0), (4, 32), (3, 64)]
6168_0-ContextAliasing: []

.....
-----
Block: 4631_0
4631_0Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'PUSH2 0x0fbe', 'JUMP']>> 
4631_0-Stack size: 11 
4631_0-Equals Mem:<< []>> 
4631_0-NonEquals Mem: << []>> 
4631_0-Equals Sto:<< []>> 
4631_0-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4631_0-Useless: []
4631_0-Constancy: [(10, 0), (9, 32), (8, 64), (3, 0), (2, 32), (1, 64)]
4631_0-ContextAliasing: []

.....
-----
Block: 3042_1
3042_1Instr:<<['PUSH1 0x40', 'MSTORE', 'JUMP']>> 
3042_1-Stack size: 4 
3042_1-Equals Mem:<< []>> 
3042_1-NonEquals Mem: << []>> 
3042_1-Equals Sto:<< []>> 
3042_1-NonEquals Sto: << []>> 
3042_1-Useless: [1]
3042_1-Constancy: [(2, 0)]
3042_1-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.8771285300026648s

*************************************************************
FILERES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Ownable;25;28;3;5;4;0;0.010338641004636884
FILERES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_SafeMath;1;1;0;0;0;0;0.0005681999609805644
FILERES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret;413;1428;81;544;383;26;1.811654378019739


Aux path: /tmp/0x00//ethir_9180e7ffd8e94e7597b4da7e58099074
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 174
174Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
174-Stack size: 4 
174-Equals Mem:<< []>> 
174-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
174-Equals Sto:<< []>> 
174-NonEquals Sto: << []>> 
174-Useless: []
174-Constancy: [(3, 0)]
174-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '38', 'mstore'), 2), (('s(9)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(11)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Ownable_174_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_174_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Ownable_174;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Ownable;174;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;84;33;79;132;28;15;-48;5;True;False;False;False;2.1518842260120437;2;4;0;0

Block: 283
283Instr:<<['SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
283-Stack size: 1 
283-Equals Mem:<< []>> 
283-NonEquals Mem: << [<12,2>]>> 
283-Equals Sto:<< []>> 
283-NonEquals Sto: << []>> 
283-Useless: []
283-Constancy: [(0, 0)]
283-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{0: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{0: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SLOAD PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_283_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_283_statistics.csv

Estimated initial gas: 2142
Estimated gas optimized: 2124

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 32

Initial number of instructions: 16
Final number of instructions: 10

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Ownable_283;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Ownable;283;2;False;True;True;SLOAD PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2142;21;16;2124;32;10;18;-11;6;True;False;False;False;0.12168017501244321;2;0;2100;2100

Block: 403
403Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
403-Stack size: 5 
403-Equals Mem:<< []>> 
403-NonEquals Mem: << [<13,3>, <23,3>, <8,3>, <18,3>]>> 
403-Equals Sto:<< []>> 
403-NonEquals Sto: << []>> 
403-Useless: []
403-Constancy: [(4, 0)]
403-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Ownable_403_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_403_statistics.csv

Estimated initial gas: 70
Estimated gas optimized: 64

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 94

Initial number of instructions: 25
Final number of instructions: 23

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Ownable_403;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Ownable;403;2;False;True;True;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT;70;68;25;64;94;23;6;-26;2;True;False;False;False;0.6506036589853466;1;3;0;0

Block: 484
484Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
484-Stack size: 6 
484-Equals Mem:<< []>> 
484-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
484-Equals Sto:<< []>> 
484-NonEquals Sto: << []>> 
484-Useless: []
484-Constancy: [(5, 0), (0, 64)]
484-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '38', 'mstore'), 2), (('s(9)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(11)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_484_optimized.txt
Optimality results stored in /tmp/0x00/Secret_484_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 94

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_484;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;484;2;True;False;False;JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT;JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT;94;82;33;94;82;33;0;0;0;True;False;False;False;2.1214086490217596;2;4;0;0

Block: 658
658Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP4', 'DUP5', 'AND', 'DUP3', 'MSTORE', 'SWAP4', 'DUP7', 'MSTORE', 'KECCAK256', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'SWAP1', 'DUP4', 'MSTORE', 'DUP2', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
658-Stack size: 7 
658-Equals Mem:<< [<10,20>, <13,23>]>> 
658-NonEquals Mem: << [<10,29>, <10,13>, <10,23>, <10,32>, <13,29>, <13,20>, <13,32>, <20,29>, <20,23>, <20,32>, <23,29>, <23,32>, <32,14>, <32,26>, <32,29>, <14,29>, <26,29>]>> 
658-Equals Sto:<< []>> 
658-NonEquals Sto: << []>> 
658-Useless: []
658-Constancy: [(6, 32), (5, 64), (2, 64), (1, 0)]
658-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<9,19>, <12,22>], 'memory_deps_noneqs': [<9,28>, <9,12>, <9,22>, <9,31>, <12,28>, <12,19>, <12,31>, <19,28>, <19,22>, <19,31>, <22,28>, <22,31>, <13,31>, <25,31>, <28,31>, <13,28>, <25,28>]}
{'memory_deps_eqs': [<9,19>, <12,22>], 'memory_deps_noneqs': [<9,28>, <9,12>, <9,22>, <9,31>, <12,28>, <12,19>, <12,31>, <19,28>, <19,22>, <19,31>, <22,28>, <22,31>, <13,31>, <25,31>, <28,31>, <13,28>, <25,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{26: ((('s(16)', 'sload0'), 1), 2)}
Storage order: [(('s(5)', 's(4)', 'keccak2560'), 2), (('0', 's(1)', 'keccak2561'), 2), (('s(16)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(5)', 's(8)', 'mstore'), 2), (('s(0)', 's(2)', 'mstore'), 2), (('s(5)', 's(4)', 'keccak2560'), 2), (('0', 's(1)', 'keccak2561'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(17)', 'mstore'), 2)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{26: ((('s(16)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP3 MSTORE SWAP4 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP3 MSTORE SWAP4 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_658_optimized.txt
Optimality results stored in /tmp/0x00/Secret_658_statistics.csv

Estimated initial gas: 2247
Estimated gas optimized: 2247

Estimated initial size in bytes: 37
Estimated size optimized in bytes: 37

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_658;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;658;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP3 MSTORE SWAP4 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP3 MSTORE SWAP4 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;2247;37;34;2247;37;34;0;0;0;True;False;False;False;2.1405322970240377;4;4;2100;2100

Block: 851
851Instr:<<['PUSH2 0x036e', 'SWAP2', 'DUP11', 'MSTORE', 'DUP5', 'PUSH1 0x20', 'MSTORE', 'DUP6', 'DUP11', 'KECCAK256', 'DUP8', 'PUSH1 0xff', 'NOT', 'DUP3', 'SLOAD', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x17fa', 'JUMP']>> 
851-Stack size: 10 
851-Equals Mem:<< []>> 
851-NonEquals Mem: << [<3,6>]>> 
851-Equals Sto:<< [<14,18>]>> 
851-NonEquals Sto: << []>> 
851-Useless: []
851-Constancy: [(9, 0), (5, 64)]
851-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [<14,18>], 'storage_deps_noneqs': []}
{14: ((('s(11)', 'sload0'), 1), 1), 18: ((('s(11)', 's(12)', 'sstore'), 2), 2)}
Storage order: [(('s(0)', 's(4)', 'keccak2560'), 2), (('s(11)', 'sload0'), 1), (('s(11)', 's(12)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(0)', 's(8)', 'mstore'), 2), (('32', 's(5)', 'mstore'), 2), (('s(0)', 's(4)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{14: ((('s(11)', 'sload0'), 1), 1), 18: ((('s(11)', 's(12)', 'sstore'), 2), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH2 0x036e SWAP2 DUP11 MSTORE DUP5 PUSH1 0x20 MSTORE DUP6 DUP11 KECCAK256 DUP8 PUSH1 0xff NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17fa JUMP

Optimized sequence (basic block per line):
PUSH2 0x036e SWAP2 DUP11 MSTORE DUP5 PUSH1 0x20 MSTORE DUP6 DUP11 KECCAK256 DUP8 PUSH1 0xff NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17fa JUMP

Optimized code stored in /tmp/0x00/Secret_851_optimized.txt
Optimality results stored in /tmp/0x00/Secret_851_statistics.csv

Estimated initial gas: 5089
Estimated gas optimized: 5089

Estimated initial size in bytes: 27
Estimated size optimized in bytes: 27

Initial number of instructions: 21
Final number of instructions: 21

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_851;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;851;2;True;False;False;PUSH2 0x036e SWAP2 DUP11 MSTORE DUP5 PUSH1 0x20 MSTORE DUP6 DUP11 KECCAK256 DUP8 PUSH1 0xff NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17fa JUMP;PUSH2 0x036e SWAP2 DUP11 MSTORE DUP5 PUSH1 0x20 MSTORE DUP6 DUP11 KECCAK256 DUP8 PUSH1 0xff NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17fa JUMP;5089;27;21;5089;27;21;0;0;0;True;True;False;False;2.1502881519845687;1;2;5000;5000

Block: 952
952Instr:<<['ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x02', 'DUP2', 'MSTORE', 'PUSH2 0x03cc', 'DUP3', 'DUP6', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
952-Stack size: 4 
952-Equals Mem:<< []>> 
952-NonEquals Mem: << [<2,6>]>> 
952-Equals Sto:<< []>> 
952-NonEquals Sto: << []>> 
952-Useless: []
952-Constancy: [(2, 0), (0, 64)]
952-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(2)', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(9)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('s(0)', 's(2)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(7)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
ADDRESS DUP4 MSTORE PUSH1 0x20 PUSH1 0x02 DUP2 MSTORE PUSH2 0x03cc DUP3 DUP6 KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized sequence (basic block per line):
ADDRESS DUP4 MSTORE PUSH1 0x20 PUSH1 0x02 DUP2 MSTORE PUSH2 0x03cc DUP3 DUP6 KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized code stored in /tmp/0x00/Secret_952_optimized.txt
Optimality results stored in /tmp/0x00/Secret_952_statistics.csv

Estimated initial gas: 2170
Estimated gas optimized: 2170

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 20

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_952;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;952;2;False;True;True;ADDRESS DUP4 MSTORE PUSH1 0x20 PUSH1 0x02 DUP2 MSTORE PUSH2 0x03cc DUP3 DUP6 KECCAK256 SLOAD PUSH2 0x0d77 JUMP;ADDRESS DUP4 MSTORE PUSH1 0x20 PUSH1 0x02 DUP2 MSTORE PUSH2 0x03cc DUP3 DUP6 KECCAK256 SLOAD PUSH2 0x0d77 JUMP;2170;20;14;2170;20;14;0;0;0;True;False;False;False;0.1835056190029718;0;2;2100;2100

Block: 1110
1110Instr:<<['SWAP7', 'SWAP4', 'SWAP2', 'SWAP3', 'DUP9', 'SWAP6', 'SWAP4', 'DUP8', 'MLOAD', 'SWAP9', 'DUP10', 'SWAP7', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP9', 'MSTORE', 'PUSH1 0xa4', 'DUP9', 'ADD', 'SWAP4', 'DUP9', 'ADD', 'MSTORE', 'DUP8', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP4', 'SWAP3', 'DUP8', 'SWAP1']>> 
1110-Stack size: 10 
1110-Equals Mem:<< []>> 
1110-NonEquals Mem: << [<16,8>, <16,34>, <23,8>, <23,34>, <28,8>, <28,34>, <33,8>, <33,34>, <37,8>, <37,34>, <8,34>]>> 
1110-Equals Sto:<< []>> 
1110-NonEquals Sto: << []>> 
1110-Useless: []
1110-Constancy: [(8, 0), (6, 64), (2, 32)]
1110-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<8,16>, <16,34>, <8,23>, <23,34>, <8,28>, <28,34>, <8,33>, <33,34>, <8,37>, <34,37>, <8,34>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<8,16>, <16,34>, <8,23>, <23,34>, <8,28>, <28,34>, <8,33>, <33,34>, <8,37>, <34,37>, <8,34>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(14)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2), (('s(19)', 's(1)', 'mstore'), 2), (('s(21)', 's(0)', 'mstore'), 2), (('s(23)', '160', 'mstore'), 2), (('s(8)', 'mload1'), 1), (('s(25)', 's(12)', 'mstore'), 2)]
Memory dep: [(4, 6), (3, 6), (2, 6), (1, 6), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 6), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP7 SWAP4 SWAP2 SWAP3 DUP9 SWAP6 SWAP4 DUP8 MLOAD SWAP9 DUP10 SWAP7 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP9 MSTORE PUSH1 0xa4 DUP9 ADD SWAP4 DUP9 ADD MSTORE DUP8 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP4 SWAP3 DUP8 SWAP1

Optimized sequence (basic block per line):
SWAP7 SWAP4 SWAP2 SWAP3 DUP9 SWAP6 SWAP4 DUP8 MLOAD SWAP9 DUP10 SWAP7 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP9 MSTORE PUSH1 0xa4 DUP9 ADD SWAP4 DUP9 ADD MSTORE DUP8 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP4 SWAP3 DUP8 SWAP1

Optimized code stored in /tmp/0x00/Secret_1110_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1110_statistics.csv

Estimated initial gas: 135
Estimated gas optimized: 135

Estimated initial size in bytes: 55
Estimated size optimized in bytes: 55

Initial number of instructions: 45
Final number of instructions: 45

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1110;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1110;2;True;False;False;SWAP7 SWAP4 SWAP2 SWAP3 DUP9 SWAP6 SWAP4 DUP8 MLOAD SWAP9 DUP10 SWAP7 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP9 MSTORE PUSH1 0xa4 DUP9 ADD SWAP4 DUP9 ADD MSTORE DUP8 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP4 SWAP3 DUP8 SWAP1;SWAP7 SWAP4 SWAP2 SWAP3 DUP9 SWAP6 SWAP4 DUP8 MLOAD SWAP9 DUP10 SWAP7 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP9 MSTORE PUSH1 0xa4 DUP9 ADD SWAP4 DUP9 ADD MSTORE DUP8 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP4 SWAP3 DUP8 SWAP1;135;55;45;135;55;45;0;0;0;True;False;False;False;2.5110311510507017;1;4;0;0

Block: 1246
1246Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'DUP2', 'AND', 'DUP7', 'MSTORE', 'DUP12', 'SWAP9', 'POP', 'DUP11', 'SWAP8', 'POP', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP4', 'DUP3', 'ADD', 'SWAP4', 'PUSH1 0x01', 'SWAP1', 'SWAP2', 'ADD', 'SWAP1', 'PUSH2 0x048d', 'JUMP']>> 
1246-Stack size: 13 
1246-Equals Mem:<< []>> 
1246-NonEquals Mem: << [<6,2>]>> 
1246-Equals Sto:<< []>> 
1246-NonEquals Sto: << []>> 
1246-Useless: []
1246-Constancy: [(11, 0), (9, 64), (8, 0), (2, 32)]
1246-ContextAliasing: [(10, 5)]


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(7)', 'mload0'), 1), (('s(6)', 's(16)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP5 MLOAD DUP2 AND DUP7 MSTORE DUP12 SWAP9 POP DUP11 SWAP8 POP SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x01 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x048d JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP5 MLOAD DUP2 AND DUP7 MSTORE DUP12 SWAP9 POP DUP11 SWAP8 POP SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x01 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x048d JUMP

Optimized code stored in /tmp/0x00/Secret_1246_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1246_statistics.csv

Estimated initial gas: 85
Estimated gas optimized: 85

Estimated initial size in bytes: 31
Estimated size optimized in bytes: 31

Initial number of instructions: 28
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1246;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1246;2;True;False;False;JUMPDEST DUP5 MLOAD DUP2 AND DUP7 MSTORE DUP12 SWAP9 POP DUP11 SWAP8 POP SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x01 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x048d JUMP;JUMPDEST DUP5 MLOAD DUP2 AND DUP7 MSTORE DUP12 SWAP9 POP DUP11 SWAP8 POP SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x01 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x048d JUMP;85;31;28;85;31;28;0;0;0;True;False;False;False;2.2442413139506243;0;0;0;0

Block: 1407
1407Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x10', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1407-Stack size: 7 
1407-Equals Mem:<< []>> 
1407-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
1407-Equals Sto:<< []>> 
1407-NonEquals Sto: << []>> 
1407-Useless: []
1407-Constancy: [(6, 32), (5, 64), (3, 64), (2, 0)]
1407-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{7: ((('s(11)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(3)', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(8)', 'mstore'), 2), (('s(0)', '16', 'mstore'), 2), (('s(4)', 's(3)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(14)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{7: ((('s(11)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND PUSH1 0x10 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Secret_1407_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1407_statistics.csv

Estimated initial gas: 2173
Estimated gas optimized: 2170

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 18

Initial number of instructions: 18
Final number of instructions: 17

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1407;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1407;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;JUMPDEST AND PUSH1 0x10 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN;2173;19;18;2170;18;17;3;1;1;True;False;False;False;0.5933489120216109;0;2;2100;2100

Block: 1468
1468Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1468-Stack size: 2 
1468-Equals Mem:<< []>> 
1468-NonEquals Mem: << [<4,1>]>> 
1468-Equals Sto:<< []>> 
1468-NonEquals Sto: << []>> 
1468-Useless: []
1468-Constancy: [(0, 64), (1, 32)]
1468-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(1)', '1', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_1468_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1468_statistics.csv

Estimated initial gas: 13
Estimated gas optimized: 13

Estimated initial size in bytes: 7
Estimated size optimized in bytes: 7

Initial number of instructions: 6
Final number of instructions: 6

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1468;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1468;2;False;True;True;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;13;7;6;13;7;6;0;0;0;True;False;False;False;0.008757719013374299;0;0;0;0

Block: 1618
1618Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP3', 'MSTORE', 'PUSH6 0x1370eb1b70eb', 'PUSH1 0xd2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0c80', 'JUMP']>> 
1618-Stack size: 4 
1618-Equals Mem:<< []>> 
1618-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
1618-Equals Sto:<< []>> 
1618-NonEquals Sto: << []>> 
1618-Useless: []
1618-Constancy: [(3, 0), (0, 64)]
1618-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('210', '21375701709035', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '6', 'mstore'), 2), (('s(9)', '35173814578155785116739343009908914101260987326193703208066023672306823331840', 'mstore'), 2), (('s(2)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x06 DUP3 MSTORE PUSH6 0x1370eb1b70eb PUSH1 0xd2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0c80 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4dc3ac6dc3ac0000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x6 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xc80 JUMP

Optimized code stored in /tmp/0x00/Secret_1618_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1618_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1618;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1618;2;False;True;True;JUMPDEST PUSH1 0x06 DUP3 MSTORE PUSH6 0x1370eb1b70eb PUSH1 0xd2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0c80 JUMP;JUMPDEST PUSH32 0x4dc3ac6dc3ac0000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x6 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xc80 JUMP;57;29;18;51;52;16;6;-23;2;True;False;False;False;0.2672435310087167;1;0;0;0

Block: 3200
3200Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3200-Stack size: 6 
3200-Equals Mem:<< []>> 
3200-NonEquals Mem: << [<4,6>, <12,6>]>> 
3200-Equals Sto:<< []>> 
3200-NonEquals Sto: << []>> 
3200-Useless: []
3200-Constancy: []
3200-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,5>, <5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,5>, <5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', '32', 'mstore'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0

Optimized sequence (basic block per line):
JUMPDEST DUP2 MLOAD DUP1 PUSH1 0x20 DUP4 MSTORE DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x20 SWAP4 SWAP3 PUSH1 0x0

Optimized code stored in /tmp/0x00/Secret_3200_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3200_statistics.csv

Estimated initial gas: 48
Estimated gas optimized: 43

Estimated initial size in bytes: 18
Estimated size optimized in bytes: 19

Initial number of instructions: 17
Final number of instructions: 15

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3200;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3200;2;False;True;True;JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0;JUMPDEST DUP2 MLOAD DUP1 PUSH1 0x20 DUP4 MSTORE DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x20 SWAP4 SWAP3 PUSH1 0x0;48;18;17;43;19;15;5;-1;2;True;False;False;False;1.7587612179922871;0;1;0;0

Block: 3251
3251Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c92', 'JUMP']>> 
3251-Stack size: 9 
3251-Equals Mem:<< []>> 
3251-NonEquals Mem: << [<12,6>]>> 
3251-Equals Sto:<< []>> 
3251-NonEquals Sto: << []>> 
3251-Useless: []
3251-Constancy: [(5, 32)]
3251-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0c92 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0c92 JUMP

Optimized code stored in /tmp/0x00/Secret_3251_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3251_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 54

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 20

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3251;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3251;2;False;True;True;JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0c92 JUMP;JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0c92 JUMP;54;20;17;54;20;17;0;0;0;True;False;False;False;0.9640724969794974;0;0;0;0

Block: 1670
1670Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x17', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1670-Stack size: 2 
1670-Equals Mem:<< []>> 
1670-NonEquals Mem: << [<8,5>]>> 
1670-Equals Sto:<< []>> 
1670-NonEquals Sto: << []>> 
1670-Useless: []
1670-Constancy: [(1, 0), (0, 64)]
1670-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('23', 'sload0'), 1), 0)}
Storage order: [(('23', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('23', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x17 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x17 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_1670_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1670_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1670;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1670;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x17 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x17 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.03591198899084702;0;0;2100;2100

Block: 1782
1782Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1782-Stack size: 2 
1782-Equals Mem:<< []>> 
1782-NonEquals Mem: << [<13,3>]>> 
1782-Equals Sto:<< []>> 
1782-NonEquals Sto: << []>> 
1782-Useless: []
1782-Constancy: [(1, 0), (0, 64)]
1782-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_1782_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1782_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2121

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 30

Initial number of instructions: 17
Final number of instructions: 9

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1782;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1782;2;False;True;True;SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2145;21;17;2121;30;9;24;-9;8;True;False;False;False;0.08649639197392389;2;0;2100;2100

Block: 1843
1843Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x11', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1843-Stack size: 6 
1843-Equals Mem:<< []>> 
1843-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
1843-Equals Sto:<< []>> 
1843-NonEquals Sto: << []>> 
1843-Useless: []
1843-Constancy: [(5, 32), (4, 64), (3, 64), (2, 0)]
1843-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{7: ((('s(9)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', 's(2)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(7)', 'mstore'), 2), (('s(0)', '17', 'mstore'), 2), (('s(3)', 's(2)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(6)', 's(10)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{7: ((('s(9)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND DUP2 PUSH1 0x11 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Secret_1843_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1843_statistics.csv

Estimated initial gas: 2164
Estimated gas optimized: 2161

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 15

Initial number of instructions: 15
Final number of instructions: 14

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1843;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1843;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x11 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST AND DUP2 PUSH1 0x11 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN;2164;16;15;2161;15;14;3;1;1;True;False;False;False;0.3075324509991333;0;2;2100;2100

Block: 1878
1878Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x16', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1878-Stack size: 2 
1878-Equals Mem:<< []>> 
1878-NonEquals Mem: << [<8,5>]>> 
1878-Equals Sto:<< []>> 
1878-NonEquals Sto: << []>> 
1878-Useless: []
1878-Constancy: [(1, 0), (0, 64)]
1878-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('22', 'sload0'), 1), 0)}
Storage order: [(('22', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('22', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x16 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x16 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_1878_optimized.txt
Optimality results stored in /tmp/0x00/Secret_1878_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1878;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;1878;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x16 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x16 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.0353434489807114;0;0;2100;2100

Block: 2072
2072Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
2072-Stack size: 7 
2072-Equals Mem:<< []>> 
2072-NonEquals Mem: << [<3,6>]>> 
2072-Equals Sto:<< []>> 
2072-NonEquals Sto: << []>> 
2072-Useless: []
2072-Constancy: [(6, 32), (5, 64), (3, 64), (2, 0)]
2072-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{7: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(3)', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(9)', 'mstore'), 2), (('s(0)', '2', 'mstore'), 2), (('s(4)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{7: ((('s(7)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x02 DUP6 MSTORE KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x02 DUP6 MSTORE KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized code stored in /tmp/0x00/Secret_2072_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2072_statistics.csv

Estimated initial gas: 2160
Estimated gas optimized: 2160

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 11
Final number of instructions: 11

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2072;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2072;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x02 DUP6 MSTORE KECCAK256 SLOAD PUSH2 0x0d77 JUMP;JUMPDEST AND DUP2 MSTORE PUSH1 0x02 DUP6 MSTORE KECCAK256 SLOAD PUSH2 0x0d77 JUMP;2160;14;11;2160;14;11;0;0;0;True;False;False;False;0.056096798973158;0;2;2100;2100

Block: 2086
2086Instr:<<['JUMPDEST', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2086-Stack size: 3 
2086-Equals Mem:<< []>> 
2086-NonEquals Mem: << [<5,2>]>> 
2086-Equals Sto:<< []>> 
2086-NonEquals Sto: << []>> 
2086-Useless: []
2086-Constancy: [(2, 32), (1, 64)]
2086-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(1)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Secret_2086_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2086_statistics.csv

Estimated initial gas: 16
Estimated gas optimized: 13

Estimated initial size in bytes: 7
Estimated size optimized in bytes: 6

Initial number of instructions: 7
Final number of instructions: 6

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2086;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2086;2;False;True;True;JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST DUP2 MLOAD MSTORE MLOAD RETURN;16;7;7;13;6;6;3;1;1;True;False;False;False;0.010644952009897679;0;0;0;0

Block: 2296
2296Instr:<<['JUMPDEST', 'AND', 'DUP3', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x20', 'MSTORE', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
2296-Stack size: 4 
2296-Equals Mem:<< []>> 
2296-NonEquals Mem: << [<3,6>]>> 
2296-Equals Sto:<< [<10,15>]>> 
2296-NonEquals Sto: << []>> 
2296-Useless: []
2296-Constancy: [(3, 0), (2, 64)]
2296-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [<9,14>], 'storage_deps_noneqs': []}
{9: ((('s(5)', 'sload0'), 1), 1), 14: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
Storage order: [(('s(0)', 's(1)', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(5)', 's(6)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(0)', 's(4)', 'mstore'), 2), (('32', '16', 'mstore'), 2), (('s(0)', 's(1)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{9: ((('s(5)', 'sload0'), 1), 1), 14: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP1 SSTORE DUP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST AND PUSH1 0x10 PUSH1 0x20 MSTORE DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 AND DUP3 SWAP2 SSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_2296_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2296_statistics.csv

Estimated initial gas: 5070
Estimated gas optimized: 5067

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 51

Initial number of instructions: 18
Final number of instructions: 17

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2296;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2296;2;False;True;True;JUMPDEST AND DUP3 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP1 SSTORE DUP1 RETURN;JUMPDEST AND PUSH1 0x10 PUSH1 0x20 MSTORE DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 AND DUP3 SWAP2 SSTORE RETURN;5070;21;18;5067;51;17;3;-30;1;True;True;False;False;0.521173715009354;1;2;5000;5000

Block: 2336
2336Instr:<<['PUSH1 0x15', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
2336-Stack size: 2 
2336-Equals Mem:<< []>> 
2336-NonEquals Mem: << [<13,3>]>> 
2336-Equals Sto:<< []>> 
2336-NonEquals Sto: << []>> 
2336-Useless: []
2336-Constancy: [(1, 0), (0, 64)]
2336-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('21', 'sload0'), 1), 0)}
Storage order: [(('21', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('21', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x15 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x15 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Secret_2336_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2336_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2124

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 32

Initial number of instructions: 17
Final number of instructions: 10

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2336;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2336;2;False;True;True;PUSH1 0x15 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x15 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2145;22;17;2124;32;10;21;-10;7;True;False;False;False;0.10705611202865839;2;0;2100;2100

Block: 2377
2377Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2377-Stack size: 2 
2377-Equals Mem:<< []>> 
2377-NonEquals Mem: << [<5,2>]>> 
2377-Equals Sto:<< []>> 
2377-NonEquals Sto: << []>> 
2377-Useless: []
2377-Constancy: [(1, 0), (0, 64)]
2377-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', '9', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_2377_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2377_statistics.csv

Estimated initial gas: 18
Estimated gas optimized: 18

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 7
Final number of instructions: 7

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2377;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2377;2;False;True;True;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;18;9;7;18;9;7;0;0;0;True;False;False;False;0.01566417800495401;0;0;0;0

Block: 2405
2405Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x18', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2405-Stack size: 2 
2405-Equals Mem:<< []>> 
2405-NonEquals Mem: << [<8,5>]>> 
2405-Equals Sto:<< []>> 
2405-NonEquals Sto: << []>> 
2405-Useless: []
2405-Constancy: [(1, 0), (0, 64)]
2405-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('24', 'sload0'), 1), 0)}
Storage order: [(('24', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('24', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x18 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x18 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_2405_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2405_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2405;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2405;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x18 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x18 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.03634717600652948;0;0;2100;2100

Block: 3983
3983Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x01', 'SWAP1', 'DUP4', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'SWAP2', 'PUSH1 0x05', 'DUP4', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'PUSH1 0xff', 'DUP4', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1277', 'JUMPI']>> 
3983-Stack size: 10 
3983-Equals Mem:<< []>> 
3983-NonEquals Mem: << [<6,11>]>> 
3983-Equals Sto:<< []>> 
3983-NonEquals Sto: << []>> 
3983-Useless: []
3983-Constancy: [(2, 0)]
3983-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{16: ((('s(10)', 'sload0'), 1), 1)}
Storage order: [(('s(1)', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 's(0)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('s(1)', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
********************IT*********************
{16: ((('s(10)', 'sload0'), 1), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3983 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4068
4068Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'SWAP3', 'DUP4', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'DIV', 'SWAP3', 'PUSH2 0x101a', 'SWAP1', 'DUP4', 'PUSH2 0x1891', 'JUMP']>> 
4068-Stack size: 15 
4068-Equals Mem:<< []>> 
4068-NonEquals Mem: << [<3,11>]>> 
4068-Equals Sto:<< []>> 
4068-NonEquals Sto: << []>> 
4068-Useless: [3, 11]
4068-Constancy: [(2, 32), (7, 0), (6, 32), (5, 64)]
4068-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('48', '133987247277381046251773491657223960440914194664852469110370927', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', '26', 'mstore'), 2), (('s(9)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f PUSH1 0x30 SHL SWAP3 DUP4 SWAP2 ADD MSTORE PUSH1 0x64 SWAP1 DIV SWAP3 PUSH2 0x101a SWAP1 DUP4 PUSH2 0x1891 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP4 ADD PUSH1 0x1a PUSH1 0x64 SWAP3 MSTORE SWAP2 DIV SWAP4 DUP3 PUSH2 0x101a SWAP3 MSTORE DUP4 PUSH2 0x1891 JUMP

Optimized code stored in /tmp/0x00/Secret_4068_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4068_statistics.csv

Estimated initial gas: 68
Estimated gas optimized: 62

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 57

Initial number of instructions: 21
Final number of instructions: 19

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4068;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4068;2;True;True;False;JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f PUSH1 0x30 SHL SWAP3 DUP4 SWAP2 ADD MSTORE PUSH1 0x64 SWAP1 DIV SWAP3 PUSH2 0x101a SWAP1 DUP4 PUSH2 0x1891 JUMP;JUMPDEST DUP1 PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP4 ADD PUSH1 0x1a PUSH1 0x64 SWAP3 MSTORE SWAP2 DIV SWAP4 DUP3 PUSH2 0x101a SWAP3 MSTORE DUP4 PUSH2 0x1891 JUMP;68;54;21;62;57;19;6;-3;2;True;False;False;False;2.075587722007185;1;0;0;0

Block: 4135
4135Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'DIV', 'SWAP5', 'DUP4', 'MLOAD', 'SWAP2', 'PUSH2 0x103e', 'DUP4', 'PUSH2 0x0bfa', 'JUMP']>> 
4135-Stack size: 16 
4135-Equals Mem:<< []>> 
4135-NonEquals Mem: << [<3,5>, <5,11>, <3,11>]>> 
4135-Equals Sto:<< []>> 
4135-NonEquals Sto: << []>> 
4135-Useless: [3, 5]
4135-Constancy: [(7, 32), (6, 64), (1, 32), (8, 0)]
4135-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>, <4,10>, <2,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>, <4,10>, <2,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(8)', '26', 'mstore'), 2), (('s(13)', 's(6)', 'mstore'), 2), (('s(2)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH1 0x64 SWAP1 DIV SWAP5 DUP4 MLOAD SWAP2 PUSH2 0x103e DUP4 PUSH2 0x0bfa JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH1 0x64 SWAP1 DIV SWAP5 DUP4 MLOAD SWAP2 PUSH2 0x103e DUP4 PUSH2 0x0bfa JUMP

Optimized code stored in /tmp/0x00/Secret_4135_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4135_statistics.csv

Estimated initial gas: 56
Estimated gas optimized: 56

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 23

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4135;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4135;2;True;False;False;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH1 0x64 SWAP1 DIV SWAP5 DUP4 MLOAD SWAP2 PUSH2 0x103e DUP4 PUSH2 0x0bfa JUMP;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH1 0x64 SWAP1 DIV SWAP5 DUP4 MLOAD SWAP2 PUSH2 0x103e DUP4 PUSH2 0x0bfa JUMP;56;23;17;56;23;17;0;0;0;True;False;False;False;2.085648749023676;0;0;0;0

Block: 4158
4158Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'SWAP2', 'DUP3', 'DUP5', 'MSTORE', 'DUP6', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP5', 'DUP6', 'DUP10', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x1077', 'SWAP1', 'DUP8', 'DUP6', 'PUSH2 0x0d49', 'JUMP']>> 
4158-Stack size: 14 
4158-Equals Mem:<< []>> 
4158-NonEquals Mem: << [<5,13>]>> 
4158-Equals Sto:<< []>> 
4158-NonEquals Sto: << []>> 
4158-Useless: []
4158-Constancy: [(1, 0), (5, 32), (4, 64)]
4158-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', '30', 'mstore'), 2), (('s(13)', '37714057306925736537727343956344029380455708191757305005271024775623175766016', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1e SWAP2 DUP3 DUP5 MSTORE DUP6 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP5 DUP6 DUP10 DUP3 ADD MSTORE PUSH2 0x1077 SWAP1 DUP8 DUP6 PUSH2 0x0d49 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1e SWAP2 DUP6 PUSH2 0x1077 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP6 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP11 DUP3 ADD MSTORE DUP8 DUP7 DUP3 MSTORE DUP6 PUSH2 0xd49 JUMP

Optimized code stored in /tmp/0x00/Secret_4158_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4158_statistics.csv

Estimated initial gas: 63
Estimated gas optimized: 60

Estimated initial size in bytes: 57
Estimated size optimized in bytes: 88

Initial number of instructions: 20
Final number of instructions: 19

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4158;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4158;2;True;True;False;JUMPDEST PUSH1 0x1e SWAP2 DUP3 DUP5 MSTORE DUP6 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP5 DUP6 DUP10 DUP3 ADD MSTORE PUSH2 0x1077 SWAP1 DUP8 DUP6 PUSH2 0x0d49 JUMP;JUMPDEST PUSH1 0x1e SWAP2 DUP6 PUSH2 0x1077 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP6 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP11 DUP3 ADD MSTORE DUP8 DUP7 DUP3 MSTORE DUP6 PUSH2 0xd49 JUMP;63;57;20;60;88;19;3;-31;1;True;False;False;False;2.1252326690009795;0;0;0;0

Block: 4226
4226Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'DUP11', 'DUP8', 'DUP12', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1094', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4226-Stack size: 18 
4226-Equals Mem:<< []>> 
4226-NonEquals Mem: << [<3,9>]>> 
4226-Equals Sto:<< []>> 
4226-NonEquals Sto: << []>> 
4226-Useless: []
4226-Constancy: [(8, 64), (2, 64), (3, 0), (9, 32)]
4226-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 's(5)', 'mstore'), 2), (('s(14)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 DUP2 MSTORE DUP11 DUP8 DUP12 DUP4 ADD MSTORE PUSH2 0x1094 SWAP3 PUSH2 0x0d49 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 DUP2 MSTORE DUP11 DUP8 DUP12 DUP4 ADD MSTORE PUSH2 0x1094 SWAP3 PUSH2 0x0d49 JUMP

Optimized code stored in /tmp/0x00/Secret_4226_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4226_statistics.csv

Estimated initial gas: 45
Estimated gas optimized: 45

Estimated initial size in bytes: 18
Estimated size optimized in bytes: 18

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4226;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4226;2;False;True;True;JUMPDEST DUP6 DUP2 MSTORE DUP11 DUP8 DUP12 DUP4 ADD MSTORE PUSH2 0x1094 SWAP3 PUSH2 0x0d49 JUMP;JUMPDEST DUP6 DUP2 MSTORE DUP11 DUP8 DUP12 DUP4 ADD MSTORE PUSH2 0x1094 SWAP3 PUSH2 0x0d49 JUMP;45;18;14;45;18;14;0;0;0;True;False;False;False;0.3292489619925618;0;0;0;0

Block: 4296
4296Instr:<<['JUMPDEST', 'DUP8', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x10db', 'SWAP1', 'DUP8', 'DUP5', 'PUSH2 0x0d49', 'JUMP']>> 
4296-Stack size: 20 
4296-Equals Mem:<< []>> 
4296-NonEquals Mem: << [<3,8>]>> 
4296-Equals Sto:<< []>> 
4296-NonEquals Sto: << []>> 
4296-Useless: []
4296-Constancy: [(5, 0), (10, 64), (11, 32), (4, 64)]
4296-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(11)', 's(4)', 'mstore'), 2), (('s(16)', 's(3)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP8 DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE PUSH2 0x10db SWAP1 DUP8 DUP5 PUSH2 0x0d49 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP8 DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE PUSH2 0x10db SWAP1 DUP8 DUP5 PUSH2 0x0d49 JUMP

Optimized code stored in /tmp/0x00/Secret_4296_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4296_statistics.csv

Estimated initial gas: 48
Estimated gas optimized: 48

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 15
Final number of instructions: 15

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4296;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4296;2;False;True;True;JUMPDEST DUP8 DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE PUSH2 0x10db SWAP1 DUP8 DUP5 PUSH2 0x0d49 JUMP;JUMPDEST DUP8 DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE PUSH2 0x10db SWAP1 DUP8 DUP5 PUSH2 0x0d49 JUMP;48;19;15;48;19;15;0;0;0;True;False;False;False;0.41303055302705616;0;0;0;0

Block: 4328
4328Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'DUP10', 'DUP14', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x10f9', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4328-Stack size: 21 
4328-Equals Mem:<< []>> 
4328-NonEquals Mem: << [<3,8>]>> 
4328-Equals Sto:<< []>> 
4328-NonEquals Sto: << []>> 
4328-Useless: []
4328-Constancy: [(5, 64), (11, 64), (6, 0), (12, 32)]
4328-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(11)', 's(4)', 'mstore'), 2), (('s(15)', 's(3)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x10f9 SWAP3 PUSH2 0x0d49 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x10f9 SWAP3 PUSH2 0x0d49 JUMP

Optimized code stored in /tmp/0x00/Secret_4328_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4328_statistics.csv

Estimated initial gas: 42
Estimated gas optimized: 42

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 17

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4328;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4328;2;False;True;True;JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x10f9 SWAP3 PUSH2 0x0d49 JUMP;JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x10f9 SWAP3 PUSH2 0x0d49 JUMP;42;17;13;42;17;13;0;0;0;True;False;False;False;0.2210895029711537;0;0;0;0

Block: 4345
4345Instr:<<['JUMPDEST', 'SWAP1', 'DUP13', 'DUP6', 'MSTORE', 'PUSH1 0x02', 'DUP12', 'MSTORE', 'DUP4', 'DUP6', 'KECCAK256', 'SLOAD', 'SWAP1', 'DUP5', 'MLOAD', 'SWAP1', 'PUSH2 0x1112', 'DUP3', 'PUSH2 0x0bfa', 'JUMP']>> 
4345-Stack size: 19 
4345-Equals Mem:<< []>> 
4345-NonEquals Mem: << [<10,14>, <4,14>, <4,7>, <7,14>]>> 
4345-Equals Sto:<< []>> 
4345-NonEquals Sto: << []>> 
4345-Useless: []
4345-Constancy: [(10, 32), (3, 64), (4, 0), (9, 64)]
4345-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>, <3,13>, <3,6>, <6,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>, <3,13>, <3,6>, <6,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(20)', 'sload0'), 1), 1)}
Storage order: [(('s(8)', 's(9)', 'keccak2560'), 2), (('s(20)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(8)', 's(0)', 'mstore'), 2), (('s(2)', '2', 'mstore'), 2), (('s(8)', 's(9)', 'keccak2560'), 2), (('s(9)', 'mload0'), 1)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{10: ((('s(20)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x1112 DUP3 PUSH2 0x0bfa JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x1112 DUP3 PUSH2 0x0bfa JUMP

Optimized code stored in /tmp/0x00/Secret_4345_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4345_statistics.csv

Estimated initial gas: 2187
Estimated gas optimized: 2187

Estimated initial size in bytes: 25
Estimated size optimized in bytes: 25

Initial number of instructions: 20
Final number of instructions: 20

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4345;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4345;2;True;True;False;JUMPDEST SWAP1 DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x1112 DUP3 PUSH2 0x0bfa JUMP;JUMPDEST SWAP1 DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SLOAD SWAP1 DUP5 MLOAD SWAP1 PUSH2 0x1112 DUP3 PUSH2 0x0bfa JUMP;2187;25;20;2187;25;20;0;0;0;True;False;False;False;2.1859782190294936;0;2;2100;2100

Block: 4370
4370Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'DUP10', 'DUP14', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1123', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4370-Stack size: 21 
4370-Equals Mem:<< []>> 
4370-NonEquals Mem: << [<3,8>]>> 
4370-Equals Sto:<< []>> 
4370-NonEquals Sto: << []>> 
4370-Useless: []
4370-Constancy: [(5, 64), (11, 64), (6, 0), (12, 32)]
4370-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(11)', 's(4)', 'mstore'), 2), (('s(15)', 's(3)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x1123 SWAP3 PUSH2 0x0d49 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x1123 SWAP3 PUSH2 0x0d49 JUMP

Optimized code stored in /tmp/0x00/Secret_4370_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4370_statistics.csv

Estimated initial gas: 42
Estimated gas optimized: 42

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 17

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4370;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4370;2;False;True;True;JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x1123 SWAP3 PUSH2 0x0d49 JUMP;JUMPDEST DUP9 DUP3 MSTORE DUP10 DUP14 DUP4 ADD MSTORE PUSH2 0x1123 SWAP3 PUSH2 0x0d49 JUMP;42;17;13;42;17;13;0;0;0;True;False;False;False;0.22090401902096346;0;0;0;0

Block: 4387
4387Instr:<<['JUMPDEST', 'DUP13', 'DUP6', 'MSTORE', 'PUSH1 0x02', 'DUP12', 'MSTORE', 'DUP4', 'DUP6', 'KECCAK256', 'SSTORE', 'DUP13', 'DUP5', 'MSTORE', 'DUP3', 'DUP5', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x113f', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4387-Stack size: 19 
4387-Equals Mem:<< [<3,13>]>> 
4387-NonEquals Mem: << [<3,6>, <6,13>]>> 
4387-Equals Sto:<< [<10,17>]>> 
4387-NonEquals Sto: << []>> 
4387-Useless: []
4387-Constancy: [(10, 32), (3, 64), (4, 0), (9, 64)]
4387-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<2,12>], 'memory_deps_noneqs': [<2,5>, <5,12>]}
{'memory_deps_eqs': [<2,12>], 'memory_deps_noneqs': [<2,5>, <5,12>], 'storage_deps_eqs': [<9,16>], 'storage_deps_noneqs': []}
{9: ((('s(18)', 's(13)', 'sstore'), 2), 1), 16: ((('s(16)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('s(9)', 's(10)', 'keccak2560'), 2), (('s(18)', 's(13)', 'sstore'), 2), (('s(9)', 's(10)', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(9)', 's(1)', 'mstore'), 2), (('s(3)', '2', 'mstore'), 2), (('s(9)', 's(10)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{9: ((('s(18)', 's(13)', 'sstore'), 2), 1), 16: ((('s(16)', 'sload0'), 1), 3)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SSTORE DUP13 DUP5 MSTORE DUP3 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x113f SWAP2 PUSH2 0x1837 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SSTORE DUP13 DUP5 MSTORE DUP3 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x113f SWAP2 PUSH2 0x1837 JUMP

Optimized code stored in /tmp/0x00/Secret_4387_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4387_statistics.csv

Estimated initial gas: 5220
Estimated gas optimized: 5220

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 28

Initial number of instructions: 23
Final number of instructions: 23

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4387;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4387;2;True;False;False;JUMPDEST DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SSTORE DUP13 DUP5 MSTORE DUP3 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x113f SWAP2 PUSH2 0x1837 JUMP;JUMPDEST DUP13 DUP6 MSTORE PUSH1 0x02 DUP12 MSTORE DUP4 DUP6 KECCAK256 SSTORE DUP13 DUP5 MSTORE DUP3 DUP5 KECCAK256 SLOAD SWAP1 PUSH2 0x113f SWAP2 PUSH2 0x1837 JUMP;5220;28;23;5220;28;23;0;0;0;True;True;False;False;2.1447988330037333;2;2;5100;5100

Block: 4415
4415Instr:<<['JUMPDEST', 'DUP13', 'DUP5', 'MSTORE', 'PUSH1 0x02', 'DUP11', 'MSTORE', 'DUP3', 'DUP5', 'KECCAK256', 'SSTORE', 'PUSH2 0x1152', 'PUSH2 0x190c', 'JUMP']>> 
4415-Stack size: 18 
4415-Equals Mem:<< []>> 
4415-NonEquals Mem: << [<3,6>]>> 
4415-Equals Sto:<< []>> 
4415-NonEquals Sto: << []>> 
4415-Useless: []
4415-Constancy: [(8, 64), (2, 64), (3, 0), (9, 32)]
4415-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{9: ((('s(14)', 's(12)', 'sstore'), 2), 1)}
Storage order: [(('s(9)', 's(10)', 'keccak2560'), 2), (('s(14)', 's(12)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(9)', 's(0)', 'mstore'), 2), (('s(3)', '2', 'mstore'), 2), (('s(9)', 's(10)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{9: ((('s(14)', 's(12)', 'sstore'), 2), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP13 DUP5 MSTORE PUSH1 0x02 DUP11 MSTORE DUP3 DUP5 KECCAK256 SSTORE PUSH2 0x1152 PUSH2 0x190c JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP13 DUP5 MSTORE PUSH1 0x02 DUP11 MSTORE DUP3 DUP5 KECCAK256 SSTORE PUSH2 0x1152 PUSH2 0x190c JUMP

Optimized code stored in /tmp/0x00/Secret_4415_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4415_statistics.csv

Estimated initial gas: 5069
Estimated gas optimized: 5069

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4415;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4415;2;False;True;True;JUMPDEST DUP13 DUP5 MSTORE PUSH1 0x02 DUP11 MSTORE DUP3 DUP5 KECCAK256 SSTORE PUSH2 0x1152 PUSH2 0x190c JUMP;JUMPDEST DUP13 DUP5 MSTORE PUSH1 0x02 DUP11 MSTORE DUP3 DUP5 KECCAK256 SSTORE PUSH2 0x1152 PUSH2 0x190c JUMP;5069;19;14;5069;19;14;0;0;0;True;False;False;False;0.15434435399947688;0;2;5000;5000

Block: 4443
4443Instr:<<['JUMPDEST', 'ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x02', 'DUP10', 'MSTORE', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x1170', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4443-Stack size: 17 
4443-Equals Mem:<< []>> 
4443-NonEquals Mem: << [<3,6>]>> 
4443-Equals Sto:<< []>> 
4443-NonEquals Sto: << []>> 
4443-Useless: []
4443-Constancy: [(1, 64), (8, 32), (2, 0), (7, 64)]
4443-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{9: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(6)', 's(7)', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(6)', 's(14)', 'mstore'), 2), (('s(0)', '2', 'mstore'), 2), (('s(6)', 's(7)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{9: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST ADDRESS DUP4 MSTORE PUSH1 0x02 DUP10 MSTORE DUP2 DUP4 KECCAK256 SLOAD SWAP1 PUSH2 0x1170 SWAP2 PUSH2 0x1837 JUMP

Optimized sequence (basic block per line):
JUMPDEST ADDRESS DUP4 MSTORE PUSH1 0x2 DUP10 MSTORE PUSH2 0x1170 SWAP1 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0x1837 JUMP

Optimized code stored in /tmp/0x00/Secret_4443_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4443_statistics.csv

Estimated initial gas: 2174
Estimated gas optimized: 2171

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 20

Initial number of instructions: 16
Final number of instructions: 15

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4443;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4443;2;False;True;True;JUMPDEST ADDRESS DUP4 MSTORE PUSH1 0x02 DUP10 MSTORE DUP2 DUP4 KECCAK256 SLOAD SWAP1 PUSH2 0x1170 SWAP2 PUSH2 0x1837 JUMP;JUMPDEST ADDRESS DUP4 MSTORE PUSH1 0x2 DUP10 MSTORE PUSH2 0x1170 SWAP1 DUP3 DUP5 KECCAK256 SLOAD PUSH2 0x1837 JUMP;2174;21;16;2171;20;15;3;1;1;True;False;False;False;0.43270200298866257;0;2;2100;2100

Block: 4464
4464Instr:<<['JUMPDEST', 'SWAP2', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'SWAP3', 'DUP6', 'MLOAD', 'SWAP3', 'PUSH2 0x118a', 'DUP5', 'PUSH2 0x0bfa', 'JUMP']>> 
4464-Stack size: 17 
4464-Equals Mem:<< []>> 
4464-NonEquals Mem: << [<4,14>, <4,7>, <7,14>, <8,14>]>> 
4464-Equals Sto:<< []>> 
4464-NonEquals Sto: << [<9,11>]>> 
4464-Useless: []
4464-Constancy: [(1, 64), (8, 32), (2, 0), (7, 64)]
4464-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>, <3,6>, <6,13>, <7,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>, <3,6>, <6,13>, <7,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<8,10>]}
{8: ((('s(15)', 's(8)', 'sstore'), 2), 1), 10: ((('6', 'sload0'), 1), 2)}
Storage order: [(('s(6)', 's(7)', 'keccak2560'), 2), (('s(15)', 's(8)', 'sstore'), 2), (('6', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(6)', 's(14)', 'mstore'), 2), (('s(0)', '2', 'mstore'), 2), (('s(6)', 's(7)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{8: ((('s(15)', 's(8)', 'sstore'), 2), 1), 10: ((('6', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP2 ADDRESS DUP2 MSTORE PUSH1 0x02 DUP10 MSTORE KECCAK256 SSTORE PUSH1 0x06 SLOAD SWAP3 DUP6 MLOAD SWAP3 PUSH2 0x118a DUP5 PUSH2 0x0bfa JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP2 ADDRESS DUP2 MSTORE PUSH1 0x02 DUP10 MSTORE KECCAK256 SSTORE PUSH1 0x06 SLOAD SWAP3 DUP6 MLOAD SWAP3 PUSH2 0x118a DUP5 PUSH2 0x0bfa JUMP

Optimized code stored in /tmp/0x00/Secret_4464_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4464_statistics.csv

Estimated initial gas: 7183
Estimated gas optimized: 7183

Estimated initial size in bytes: 26
Estimated size optimized in bytes: 26

Initial number of instructions: 20
Final number of instructions: 20

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4464;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4464;2;True;False;False;JUMPDEST SWAP2 ADDRESS DUP2 MSTORE PUSH1 0x02 DUP10 MSTORE KECCAK256 SSTORE PUSH1 0x06 SLOAD SWAP3 DUP6 MLOAD SWAP3 PUSH2 0x118a DUP5 PUSH2 0x0bfa JUMP;JUMPDEST SWAP2 ADDRESS DUP2 MSTORE PUSH1 0x02 DUP10 MSTORE KECCAK256 SSTORE PUSH1 0x06 SLOAD SWAP3 DUP6 MLOAD SWAP3 PUSH2 0x118a DUP5 PUSH2 0x0bfa JUMP;7183;26;20;7183;26;20;0;0;0;True;True;False;False;2.120185412990395;0;2;7100;7100

Block: 4490
4490Instr:<<['JUMPDEST', 'DUP4', 'MSTORE', 'DUP7', 'DUP4', 'ADD', 'MSTORE', 'PUSH2 0x1199', 'SWAP3', 'PUSH2 0x0d49', 'JUMP']>> 
4490-Stack size: 16 
4490-Equals Mem:<< []>> 
4490-NonEquals Mem: << [<2,6>]>> 
4490-Equals Sto:<< []>> 
4490-NonEquals Sto: << []>> 
4490-Useless: []
4490-Constancy: [(7, 32), (6, 64)]
4490-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(7)', 'mstore'), 2), (('s(8)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP4 MSTORE DUP7 DUP4 ADD MSTORE PUSH2 0x1199 SWAP3 PUSH2 0x0d49 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP4 MSTORE DUP7 DUP4 ADD MSTORE PUSH2 0x1199 SWAP3 PUSH2 0x0d49 JUMP

Optimized code stored in /tmp/0x00/Secret_4490_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4490_statistics.csv

Estimated initial gas: 36
Estimated gas optimized: 36

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 11
Final number of instructions: 11

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4490;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4490;2;False;True;True;JUMPDEST DUP4 MSTORE DUP7 DUP4 ADD MSTORE PUSH2 0x1199 SWAP3 PUSH2 0x0d49 JUMP;JUMPDEST DUP4 MSTORE DUP7 DUP4 ADD MSTORE PUSH2 0x1199 SWAP3 PUSH2 0x0d49 JUMP;36;15;11;36;15;11;0;0;0;True;False;False;False;0.055340552993584424;0;0;0;0

Block: 2478
2478Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'DUP6', 'MLOAD', 'SWAP2', 'SWAP1', 'PUSH2 0x09d3', 'DUP4', 'PUSH2 0x0c16', 'JUMP']>> 
2478-Stack size: 9 
2478-Equals Mem:<< [<9,17>, <11,19>]>> 
2478-NonEquals Mem: << [<9,23>, <9,11>, <9,19>, <11,23>, <11,17>, <17,23>, <17,19>, <19,23>, <14,23>, <20,23>]>> 
2478-Equals Sto:<< []>> 
2478-NonEquals Sto: << []>> 
2478-Useless: []
2478-Constancy: [(8, 32), (7, 64), (2, 64), (1, 0)]
2478-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<8,16>, <10,18>], 'memory_deps_noneqs': [<8,22>, <8,10>, <8,18>, <10,22>, <10,16>, <16,22>, <16,18>, <18,22>, <13,22>, <19,22>]}
{'memory_deps_eqs': [<8,16>, <10,18>], 'memory_deps_noneqs': [<8,22>, <8,10>, <8,18>, <10,22>, <10,16>, <16,22>, <16,18>, <18,22>, <13,22>, <19,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(12)', 'sload0'), 1), 2)}
Storage order: [(('s(7)', 's(6)', 'keccak2560'), 2), (('s(7)', 's(6)', 'keccak2561'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(7)', 's(15)', 'mstore'), 2), (('s(0)', 's(8)', 'mstore'), 2), (('s(7)', 's(6)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(12)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP3 MSTORE DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 PUSH2 0x09d3 DUP4 PUSH2 0x0c16 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP9 MSTORE PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP6 AND DUP2 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 DUP3 SWAP7 SWAP7 SWAP2 PUSH2 0xc16 SWAP1 SWAP3 PUSH2 0x9d3 SWAP2 JUMP

Optimized code stored in /tmp/0x00/Secret_2478_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2478_statistics.csv

Estimated initial gas: 2243
Estimated gas optimized: 2199

Estimated initial size in bytes: 37
Estimated size optimized in bytes: 48

Initial number of instructions: 30
Final number of instructions: 24

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2478;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2478;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP3 MSTORE DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 PUSH2 0x09d3 DUP4 PUSH2 0x0c16 JUMP;JUMPDEST DUP9 MSTORE PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP6 AND DUP2 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 DUP3 SWAP7 SWAP7 SWAP2 PUSH2 0xc16 SWAP1 SWAP3 PUSH2 0x9d3 SWAP2 JUMP;2243;37;30;2199;48;24;44;-11;6;True;False;False;False;2.1572306570014916;4;4;2100;2100

Block: 2515
2515Instr:<<['JUMPDEST', 'PUSH1 0x28', 'DUP4', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'DUP9', 'DUP5', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'DUP8', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0d49', 'JUMP']>> 
2515-Stack size: 8 
2515-Equals Mem:<< []>> 
2515-NonEquals Mem: << [<3,8>, <3,15>, <8,15>]>> 
2515-Equals Sto:<< []>> 
2515-NonEquals Sto: << []>> 
2515-Useless: []
2515-Constancy: [(7, 32), (6, 64)]
2515-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>, <2,14>, <7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>, <2,14>, <7,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('192', '7812742012107383653', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', '40', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859100820671745083778533502622993977909345', 'mstore'), 2), (('s(10)', '49041376442327685983450583443845300569967147870487584211451521639864848089088', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x28 DUP4 MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP9 DUP5 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL DUP8 DUP5 ADD MSTORE PUSH2 0x0d49 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x6c6c6f77616e6365000000000000000000000000000000000000000000000000 DUP4 DUP9 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP4 DUP10 ADD MSTORE PUSH1 0x28 DUP4 MSTORE PUSH2 0xd49 JUMP

Optimized code stored in /tmp/0x00/Secret_2515_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2515_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 62
Estimated size optimized in bytes: 83

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2515;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2515;2;False;True;True;JUMPDEST PUSH1 0x28 DUP4 MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP9 DUP5 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL DUP8 DUP5 ADD MSTORE PUSH2 0x0d49 JUMP;JUMPDEST PUSH32 0x6c6c6f77616e6365000000000000000000000000000000000000000000000000 DUP4 DUP9 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP4 DUP10 ADD MSTORE PUSH1 0x28 DUP4 MSTORE PUSH2 0xd49 JUMP;57;62;18;51;83;16;6;-21;2;True;False;False;False;0.3220356020028703;1;0;0;0

Block: 6327
6327Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6327-Stack size: 15 
6327-Equals Mem:<< []>> 
6327-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6327-Equals Sto:<< []>> 
6327-NonEquals Sto: << []>> 
6327-Useless: []
6327-Constancy: []
6327-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '119', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '33', 'mstore'), 2), (('s(9)', '37714057306925736537727341711534603569002632158006504148307520321239491439727', 'mstore'), 2), (('s(11)', '53825228981408700216425575062632269666168469434418855940216611316178368856064', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_6327_optimized.txt
Optimality results stored in /tmp/0x00/Secret_6327_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_6327;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;6327;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;79;33;79;132;28;15;-53;5;True;False;False;False;2.1373994440073147;2;4;0;0

Block: 6220
6220Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
6220-Stack size: 12 
6220-Equals Mem:<< []>> 
6220-NonEquals Mem: << [<22,2>, <7,2>, <17,2>, <12,2>]>> 
6220-Equals Sto:<< []>> 
6220-NonEquals Sto: << []>> 
6220-Useless: []
6220-Constancy: []
6220-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '27', 'mstore'), 2), (('s(9)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1b DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Secret_6220_optimized.txt
Optimality results stored in /tmp/0x00/Secret_6220_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 67

Estimated initial size in bytes: 69
Estimated size optimized in bytes: 95

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_6220;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;6220;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1b DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;73;69;26;67;95;24;6;-26;2;True;False;False;False;0.4590084620285779;1;3;0;0

Block: 4774
4774Instr:<<['DUP6', 'DUP6', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x10', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP4', 'DUP4', 'DUP9', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x15c1', 'JUMPI']>> 
4774-Stack size: 12 
4774-Equals Mem:<< []>> 
4774-NonEquals Mem: << [<2,6>]>> 
4774-Equals Sto:<< []>> 
4774-NonEquals Sto: << []>> 
4774-Useless: []
4774-Constancy: [(4, 0)]
4774-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(1)', '64', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 's(0)', 'mstore'), 2), (('32', '16', 'mstore'), 2), (('s(1)', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP6 MSTORE PUSH1 0x20 PUSH1 0x10 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP4 DUP4 DUP9 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x15c1 JUMPI

Optimized sequence (basic block per line):
DUP6 DUP6 MSTORE PUSH1 0x20 PUSH1 0x10 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP4 DUP4 DUP9 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x15c1 JUMPI

Optimized code stored in /tmp/0x00/Secret_4774_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4774_statistics.csv

Estimated initial gas: 2188
Estimated gas optimized: 2188

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 24

Initial number of instructions: 19
Final number of instructions: 19

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4774;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4774;2;False;True;True;DUP6 DUP6 MSTORE PUSH1 0x20 PUSH1 0x10 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP4 DUP4 DUP9 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x15c1 JUMPI;DUP6 DUP6 MSTORE PUSH1 0x20 PUSH1 0x10 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP4 DUP4 DUP9 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x15c1 JUMPI;2188;24;19;2188;24;19;0;0;0;True;False;False;False;0.8269616409670562;0;2;2100;2100

Block: 4815
4815Instr:<<['JUMPDEST', 'ADDRESS', 'DUP9', 'MSTORE', 'PUSH1 0x02', 'DUP4', 'MSTORE', 'PUSH2 0x12e2', 'DUP5', 'DUP10', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
4815-Stack size: 15 
4815-Equals Mem:<< []>> 
4815-NonEquals Mem: << [<3,6>]>> 
4815-Equals Sto:<< []>> 
4815-NonEquals Sto: << []>> 
4815-Useless: []
4815-Constancy: [(2, 32), (3, 64), (7, 0)]
4815-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(11)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(4)', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(13)', 'mstore'), 2), (('s(5)', '2', 'mstore'), 2), (('s(0)', 's(4)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{10: ((('s(11)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST ADDRESS DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x12e2 DUP5 DUP10 KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized sequence (basic block per line):
JUMPDEST ADDRESS DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x12e2 DUP5 DUP10 KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized code stored in /tmp/0x00/Secret_4815_optimized.txt
Optimality results stored in /tmp/0x00/Secret_4815_statistics.csv

Estimated initial gas: 2168
Estimated gas optimized: 2168

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4815;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;4815;2;False;True;True;JUMPDEST ADDRESS DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x12e2 DUP5 DUP10 KECCAK256 SLOAD PUSH2 0x0d77 JUMP;JUMPDEST ADDRESS DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x12e2 DUP5 DUP10 KECCAK256 SLOAD PUSH2 0x0d77 JUMP;2168;19;14;2168;19;14;0;0;0;True;False;False;False;0.15342117799445987;0;2;2100;2100

Block: 5022
5022Instr:<<['SWAP2', 'DUP9', 'SWAP4', 'SWAP2', 'SWAP6', 'SWAP3', 'DUP6', 'MLOAD', 'SWAP7', 'DUP8', 'SWAP5', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP7', 'MSTORE', 'PUSH1 0xa4', 'DUP7', 'ADD', 'SWAP2', 'PUSH1 0x04', 'DUP8', 'ADD', 'MSTORE', 'DUP7', 'PUSH1 0x24', 'DUP8', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP8', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP2', 'MSTORE', 'PUSH1 0xc4', 'DUP6', 'ADD', 'SWAP3', 'SWAP2', 'DUP7']>> 
5022-Stack size: 16 
5022-Equals Mem:<< []>> 
5022-NonEquals Mem: << [<33,34>, <28,7>, <37,34>, <33,7>, <7,34>, <37,7>, <15,34>, <15,7>, <23,7>, <23,34>, <28,34>]>> 
5022-Equals Sto:<< []>> 
5022-NonEquals Sto: << []>> 
5022-Useless: []
5022-Constancy: [(0, 32), (4, 64), (8, 0)]
5022-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<33,34>, <7,28>, <34,37>, <7,33>, <7,34>, <7,37>, <15,34>, <7,15>, <7,23>, <23,34>, <28,34>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<33,34>, <7,28>, <34,37>, <7,33>, <7,34>, <7,37>, <15,34>, <7,15>, <7,23>, <23,34>, <28,34>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 'mload0'), 1), (('s(15)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2), (('s(20)', 's(7)', 'mstore'), 2), (('s(22)', 's(0)', 'mstore'), 2), (('s(24)', '160', 'mstore'), 2), (('s(3)', 'mload1'), 1), (('s(26)', 's(13)', 'mstore'), 2)]
Memory dep: [(4, 6), (3, 6), (2, 6), (1, 6), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 6), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP2 DUP9 SWAP4 SWAP2 SWAP6 SWAP3 DUP6 MLOAD SWAP7 DUP8 SWAP5 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP7 MSTORE PUSH1 0xa4 DUP7 ADD SWAP2 PUSH1 0x04 DUP8 ADD MSTORE DUP7 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xc4 DUP6 ADD SWAP3 SWAP2 DUP7

Optimized sequence (basic block per line):
SWAP2 DUP9 SWAP4 SWAP2 SWAP6 SWAP3 DUP6 MLOAD SWAP7 DUP8 SWAP5 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP7 MSTORE PUSH1 0xa4 DUP7 ADD SWAP2 PUSH1 0x04 DUP8 ADD MSTORE DUP7 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xc4 DUP6 ADD SWAP3 SWAP2 DUP7

Optimized code stored in /tmp/0x00/Secret_5022_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5022_statistics.csv

Estimated initial gas: 132
Estimated gas optimized: 132

Estimated initial size in bytes: 55
Estimated size optimized in bytes: 55

Initial number of instructions: 44
Final number of instructions: 44

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5022;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5022;2;True;False;False;SWAP2 DUP9 SWAP4 SWAP2 SWAP6 SWAP3 DUP6 MLOAD SWAP7 DUP8 SWAP5 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP7 MSTORE PUSH1 0xa4 DUP7 ADD SWAP2 PUSH1 0x04 DUP8 ADD MSTORE DUP7 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xc4 DUP6 ADD SWAP3 SWAP2 DUP7;SWAP2 DUP9 SWAP4 SWAP2 SWAP6 SWAP3 DUP6 MLOAD SWAP7 DUP8 SWAP5 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP7 MSTORE PUSH1 0xa4 DUP7 ADD SWAP2 PUSH1 0x04 DUP8 ADD MSTORE DUP7 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP8 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xc4 DUP6 ADD SWAP3 SWAP2 DUP7;132;55;44;132;55;44;0;0;0;True;False;False;False;2.4804466330097057;1;4;0;0

Block: 5186
5186Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'DUP13', 'AND', 'DUP6', 'MSTORE', 'DUP13', 'SWAP8', 'POP', 'DUP10', 'SWAP7', 'POP', 'SWAP4', 'DUP2', 'ADD', 'SWAP4', 'SWAP3', 'DUP2', 'ADD', 'SWAP3', 'PUSH1 0x01', 'ADD', 'PUSH2 0x13d5', 'JUMP']>> 
5186-Stack size: 20 
5186-Equals Mem:<< []>> 
5186-NonEquals Mem: << [<6,2>]>> 
5186-Equals Sto:<< []>> 
5186-NonEquals Sto: << []>> 
5186-Useless: []
5186-Constancy: [(8, 64), (12, 0), (7, 0), (1, 32)]
5186-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(9)', 'mload0'), 1), (('s(8)', 's(17)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP4 MLOAD DUP13 AND DUP6 MSTORE DUP13 SWAP8 POP DUP10 SWAP7 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x01 ADD PUSH2 0x13d5 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP4 MLOAD DUP13 AND DUP6 MSTORE DUP13 SWAP8 POP DUP10 SWAP7 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x01 ADD PUSH2 0x13d5 JUMP

Optimized code stored in /tmp/0x00/Secret_5186_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5186_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 76

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 28

Initial number of instructions: 25
Final number of instructions: 25

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5186;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5186;2;True;False;False;JUMPDEST DUP4 MLOAD DUP13 AND DUP6 MSTORE DUP13 SWAP8 POP DUP10 SWAP7 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x01 ADD PUSH2 0x13d5 JUMP;JUMPDEST DUP4 MLOAD DUP13 AND DUP6 MSTORE DUP13 SWAP8 POP DUP10 SWAP7 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x01 ADD PUSH2 0x13d5 JUMP;76;28;25;76;28;25;0;0;0;True;False;False;False;2.219175398000516;0;0;0;0

Block: 6046
6046Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6046-Stack size: 12 
6046-Equals Mem:<< []>> 
6046-NonEquals Mem: << [<5,8>]>> 
6046-Equals Sto:<< []>> 
6046-NonEquals Sto: << []>> 
6046-Useless: []
6046-Constancy: []
6046-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_6046 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5284
5284Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'DUP9', 'DUP8', 'MSTORE', 'PUSH1 0x05', 'DUP3', 'MSTORE', 'DUP3', 'DUP8', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH0', 'PUSH2 0x1313', 'JUMP']>> 
5284-Stack size: 15 
5284-Equals Mem:<< []>> 
5284-NonEquals Mem: << [<5,8>]>> 
5284-Equals Sto:<< []>> 
5284-NonEquals Sto: << []>> 
5284-Useless: []
5284-Constancy: [(2, 32), (3, 64), (7, 0)]
5284-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(2)', 's(6)', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 's(0)', 'mstore'), 2), (('s(7)', '5', 'mstore'), 2), (('s(2)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 POP DUP9 DUP8 MSTORE PUSH1 0x05 DUP3 MSTORE DUP3 DUP8 KECCAK256 SLOAD AND ISZERO PUSH0 PUSH2 0x1313 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 POP DUP9 DUP8 MSTORE PUSH1 0x05 DUP3 MSTORE DUP3 DUP8 KECCAK256 SLOAD AND ISZERO PUSH0 PUSH2 0x1313 JUMP

Optimized code stored in /tmp/0x00/Secret_5284_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5284_statistics.csv

Estimated initial gas: 2179
Estimated gas optimized: 2179

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 21

Initial number of instructions: 18
Final number of instructions: 18

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5284;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5284;2;True;True;False;JUMPDEST SWAP1 POP DUP9 DUP8 MSTORE PUSH1 0x05 DUP3 MSTORE DUP3 DUP8 KECCAK256 SLOAD AND ISZERO PUSH0 PUSH2 0x1313 JUMP;JUMPDEST SWAP1 POP DUP9 DUP8 MSTORE PUSH1 0x05 DUP3 MSTORE DUP3 DUP8 KECCAK256 SLOAD AND ISZERO PUSH0 PUSH2 0x1313 JUMP;2179;21;18;2179;21;18;0;0;0;True;False;False;False;2.1608311840100214;0;2;2100;2100

Block: 5305
5305Instr:<<['JUMPDEST', 'DUP9', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP4', 'MSTORE', 'DUP4', 'DUP9', 'KECCAK256', 'SLOAD', 'DUP2', 'AND', 'ISZERO', 'SWAP2', 'POP', 'PUSH2 0x130d', 'JUMP']>> 
5305-Stack size: 15 
5305-Equals Mem:<< []>> 
5305-NonEquals Mem: << [<3,6>]>> 
5305-Equals Sto:<< []>> 
5305-NonEquals Sto: << []>> 
5305-Useless: []
5305-Constancy: [(2, 32), (3, 64), (7, 0)]
5305-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{9: ((('s(11)', 'sload0'), 1), 1)}
Storage order: [(('s(1)', 's(5)', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 's(0)', 'mstore'), 2), (('s(6)', '5', 'mstore'), 2), (('s(1)', 's(5)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{9: ((('s(11)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x05 DUP4 MSTORE DUP4 DUP9 KECCAK256 SLOAD DUP2 AND ISZERO SWAP2 POP PUSH2 0x130d JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x05 DUP4 MSTORE DUP4 DUP9 KECCAK256 SLOAD DUP2 AND ISZERO SWAP2 POP PUSH2 0x130d JUMP

Optimized code stored in /tmp/0x00/Secret_5305_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5305_statistics.csv

Estimated initial gas: 2180
Estimated gas optimized: 2180

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 21

Initial number of instructions: 18
Final number of instructions: 18

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5305;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5305;2;False;True;True;JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x05 DUP4 MSTORE DUP4 DUP9 KECCAK256 SLOAD DUP2 AND ISZERO SWAP2 POP PUSH2 0x130d JUMP;JUMPDEST DUP9 DUP9 MSTORE PUSH1 0x05 DUP4 MSTORE DUP4 DUP9 KECCAK256 SLOAD DUP2 AND ISZERO SWAP2 POP PUSH2 0x130d JUMP;2180;21;18;2180;21;18;0;0;0;True;False;False;False;1.477327453030739;0;2;2100;2100

Block: 5374
5374Instr:<<['JUMPDEST', 'DUP10', 'DUP9', 'MSTORE', 'PUSH1 0x02', 'DUP4', 'MSTORE', 'PUSH2 0x151a', 'DUP12', 'PUSH2 0x1515', 'DUP7', 'DUP12', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d77', 'JUMP']>> 
5374-Stack size: 15 
5374-Equals Mem:<< []>> 
5374-NonEquals Mem: << [<3,6>]>> 
5374-Equals Sto:<< []>> 
5374-NonEquals Sto: << []>> 
5374-Useless: []
5374-Constancy: [(2, 32), (3, 64), (7, 0)]
5374-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{12: ((('s(16)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', 's(7)', 'keccak2560'), 2), (('s(16)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(1)', 'mstore'), 2), (('s(8)', '2', 'mstore'), 2), (('s(3)', 's(7)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{12: ((('s(16)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP10 DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x151a DUP12 PUSH2 0x1515 DUP7 DUP12 KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP10 DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x151a DUP12 PUSH2 0x1515 DUP7 DUP12 KECCAK256 SLOAD PUSH2 0x0d77 JUMP

Optimized code stored in /tmp/0x00/Secret_5374_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5374_statistics.csv

Estimated initial gas: 2175
Estimated gas optimized: 2175

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 23

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5374;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5374;2;False;True;True;JUMPDEST DUP10 DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x151a DUP12 PUSH2 0x1515 DUP7 DUP12 KECCAK256 SLOAD PUSH2 0x0d77 JUMP;JUMPDEST DUP10 DUP9 MSTORE PUSH1 0x02 DUP4 MSTORE PUSH2 0x151a DUP12 PUSH2 0x1515 DUP7 DUP12 KECCAK256 SLOAD PUSH2 0x0d77 JUMP;2175;23;16;2175;23;16;0;0;0;True;False;False;False;0.37409334897529334;0;2;2100;2100

Block: 6466
6466Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'PUSH9 0x3635c9adc5dea00000', 'SWAP2', 'DUP3', 'DUP2', 'DIV', 'DUP2', 'LT', 'PUSH2 0x1960', 'JUMPI']>> 
6466-Stack size: 12 
6466-Equals Mem:<< []>> 
6466-NonEquals Mem: << [<3,5>]>> 
6466-Equals Sto:<< []>> 
6466-NonEquals Sto: << []>> 
6466-Useless: [3, 5]
6466-Constancy: [(1, 32)]
6466-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', '26', 'mstore'), 2), (('s(7)', 's(2)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH9 0x3635c9adc5dea00000 SWAP2 DUP3 DUP2 DIV DUP2 LT PUSH2 0x1960 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH9 0x3635c9adc5dea00000 SWAP2 DUP3 DUP2 DIV DUP2 LT PUSH2 0x1960 JUMPI

Optimized code stored in /tmp/0x00/Secret_6466_optimized.txt
Optimality results stored in /tmp/0x00/Secret_6466_statistics.csv

Estimated initial gas: 52
Estimated gas optimized: 52

Estimated initial size in bytes: 27
Estimated size optimized in bytes: 27

Initial number of instructions: 15
Final number of instructions: 15

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_6466;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;6466;2;False;True;True;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH9 0x3635c9adc5dea00000 SWAP2 DUP3 DUP2 DIV DUP2 LT PUSH2 0x1960 JUMPI;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE PUSH9 0x3635c9adc5dea00000 SWAP2 DUP3 DUP2 DIV DUP2 LT PUSH2 0x1960 JUMPI;52;27;15;52;27;15;0;0;0;True;False;False;False;0.5251676480402239;0;0;0;0

Block: 3484
3484Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f', 'PUSH1 0x30', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'DUP4', 'ISZERO', 'ISZERO', 'PUSH2 0x0d21', 'JUMP']>> 
3484-Stack size: 8 
3484-Equals Mem:<< []>> 
3484-NonEquals Mem: << [<3,10>]>> 
3484-Equals Sto:<< []>> 
3484-NonEquals Sto: << []>> 
3484-Useless: []
3484-Constancy: []
3484-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('48', '133987247277381046251773491657223960440914194664852469110370927', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', '26', 'mstore'), 2), (('s(8)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f PUSH1 0x30 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP4 ISZERO ISZERO PUSH2 0x0d21 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1a DUP2 MSTORE DUP4 ISZERO ISZERO PUSH2 0xd21 JUMP

Optimized code stored in /tmp/0x00/Secret_3484_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3484_statistics.csv

Estimated initial gas: 51
Estimated gas optimized: 45

Estimated initial size in bytes: 47
Estimated size optimized in bytes: 50

Initial number of instructions: 16
Final number of instructions: 14

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3484;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3484;2;False;True;True;JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH26 0x536166654d6174683a206469766973696f6e206279207a65726f PUSH1 0x30 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP4 ISZERO ISZERO PUSH2 0x0d21 JUMP;JUMPDEST PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1a DUP2 MSTORE DUP4 ISZERO ISZERO PUSH2 0xd21 JUMP;51;47;16;45;50;14;6;-3;2;True;False;False;False;0.09765902801882476;1;0;0;0

Block: 5411
5411Instr:<<['DUP4', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP5', 'SWAP1', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x7a6521', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5411-Stack size: 15 
5411-Equals Mem:<< []>> 
5411-NonEquals Mem: << [<6,1>, <12,1>, <17,1>, <22,1>, <29,1>]>> 
5411-Equals Sto:<< []>> 
5411-NonEquals Sto: << []>> 
5411-Useless: []
5411-Constancy: [(2, 32), (3, 64), (7, 0)]
5411-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,12>, <1,17>, <1,22>, <1,29>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,12>, <1,17>, <1,22>, <1,29>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '8021281', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(6)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(9)', 's(1)', 'mstore'), 2), (('s(11)', '35', 'mstore'), 2), (('s(13)', '38134379698562468715998076148172710925835430712004076010897878425883314778985', 'mstore'), 2), (('s(15)', '55360846838330560287438445937721320998262483827399850437580607468401040818176', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Secret_5411_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5411_statistics.csv

Estimated initial gas: 96
Estimated gas optimized: 96

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 79

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5411;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5411;2;True;False;False;DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2042616c616e636520657863656564732077616c6c6574207369 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x7a6521 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;96;79;33;96;79;33;0;0;0;True;False;False;False;2.159479590016417;2;4;0;0

Block: 3637
3637Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3637-Stack size: 6 
3637-Equals Mem:<< []>> 
3637-NonEquals Mem: << [<5,8>]>> 
3637-Equals Sto:<< []>> 
3637-NonEquals Sto: << []>> 
3637-Useless: []
3637-Constancy: []
3637-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3637 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3369
3369Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0d45', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c80', 'JUMP']>> 
3369-Stack size: 8 
3369-Equals Mem:<< []>> 
3369-NonEquals Mem: << [<7,2>]>> 
3369-Equals Sto:<< []>> 
3369-NonEquals Sto: << []>> 
3369-Useless: []
3369-Constancy: []
3369-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(7)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x0d45 SWAP1 PUSH1 0x04 DUP4 ADD PUSH2 0x0c80 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xd45 DUP2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 PUSH1 0x4 DUP4 ADD PUSH2 0xc80 JUMP

Optimized code stored in /tmp/0x00/Secret_3369_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3369_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 45

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 14

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3369;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3369;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x0d45 SWAP1 PUSH1 0x04 DUP4 ADD PUSH2 0x0c80 JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xd45 DUP2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 PUSH1 0x4 DUP4 ADD PUSH2 0xc80 JUMP;57;28;18;45;52;14;12;-24;4;True;False;False;False;0.1975616940180771;1;0;0;0

Block: 3539
3539Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3539-Stack size: 4 
3539-Equals Mem:<< []>> 
3539-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3539-Equals Sto:<< []>> 
3539-NonEquals Sto: << []>> 
3539-Useless: []
3539-Constancy: []
3539-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('176', '478848393423832921108083', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '42', 'mstore'), 2), (('s(9)', '29593690747763536770200911942998446292484964844061988840046503391719982899314', 'mstore'), 2), (('s(11)', '45864564229551173125737521983127142047231388901599435807126209818687898124288', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666c656374696f6e7300000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_3539_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3539_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 88
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3539;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3539;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65666c656374696f6e7300000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;88;33;79;132;28;15;-44;5;True;False;False;False;2.1440978280152194;2;4;0;0

Block: 5490
5490Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x84', 'SWAP2', 'MLOAD', 'SWAP1', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP3', 'MSTORE', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a20596f7572206163636f756e7420697320626c61636b6c697374', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x656421', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
5490-Stack size: 14 
5490-Equals Mem:<< []>> 
5490-NonEquals Mem: << [<31,4>, <10,4>, <14,4>, <19,4>, <24,4>]>> 
5490-Equals Sto:<< []>> 
5490-NonEquals Sto: << []>> 
5490-Useless: []
5490-Constancy: [(6, 0), (1, 32), (2, 64)]
5490-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,30>, <3,9>, <3,13>, <3,18>, <3,23>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,30>, <3,9>, <3,13>, <3,18>, <3,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6644769', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', 's(1)', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '38134379698562468860715563338408605869982762239514017917373468355097573028724', 'mstore'), 2), (('s(12)', '45860510171017187747269055276226648138658102913899647299760730924050624282624', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5490 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5585
5585Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5585-Stack size: 12 
5585-Equals Mem:<< []>> 
5585-NonEquals Mem: << [<22,2>, <7,2>, <17,2>, <12,2>]>> 
5585-Equals Sto:<< []>> 
5585-NonEquals Sto: << []>> 
5585-Useless: []
5585-Constancy: [(4, 0)]
5585-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '28', 'mstore'), 2), (('s(9)', '38134379698562468785047320251781113445918095690164057140225611213515220058112', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1c PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1c DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Secret_5585_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5585_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 67

Estimated initial size in bytes: 69
Estimated size optimized in bytes: 95

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5585;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5585;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1c PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1c DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x544f4b454e3a204d6178205472616e73616374696f6e204c696d697400000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;73;69;26;67;95;24;6;-26;2;True;False;False;False;0.45171253295848146;1;3;0;0

Block: 5664
5664Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5664-Stack size: 11 
5664-Equals Mem:<< []>> 
5664-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <27,2>]>> 
5664-Equals Sto:<< []>> 
5664-NonEquals Sto: << []>> 
5664-Useless: []
5664-Constancy: [(3, 0)]
5664-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '63', 'mstore'), 2), (('s(9)', '38134379698562468829157266163386992238735058556305927349619618234822913057824', 'mstore'), 2), (('s(11)', '52665151681294734183140160111090079679145105358601051293675531338603408221184', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_5664_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5664_statistics.csv

Estimated initial gas: 88
Estimated gas optimized: 79

Estimated initial size in bytes: 107
Estimated size optimized in bytes: 132

Initial number of instructions: 31
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5664;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5664;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544f4b454e3a2054686973206163636f756e742063616e6e6f742073656e6420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746f6b656e7320756e74696c2074726164696e6720697320656e61626c656400 DUP2 PUSH1 0x64 ADD MSTORE REVERT;88;107;31;79;132;28;9;-25;3;True;False;False;False;2.1172376389731653;1;4;0;0

Block: 5782
5782Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5782-Stack size: 9 
5782-Equals Mem:<< []>> 
5782-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5782-Equals Sto:<< []>> 
5782-NonEquals Sto: << []>> 
5782-Useless: []
5782-Constancy: [(1, 0)]
5782-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '41', 'mstore'), 2), (('s(9)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(11)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_5782_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5782_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 87
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5782;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5782;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;87;33;79;132;28;15;-45;5;True;False;False;False;2.138905587955378;2;4;0;0

Block: 5869
5869Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5869-Stack size: 9 
5869-Equals Mem:<< []>> 
5869-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5869-Equals Sto:<< []>> 
5869-NonEquals Sto: << []>> 
5869-Useless: []
5869-Constancy: [(1, 0)]
5869-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '35', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(11)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_5869_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5869_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5869;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5869;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;79;132;28;15;-51;5;True;False;False;False;2.1383905799593776;2;4;0;0

Block: 5950
5950Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5950-Stack size: 9 
5950-Equals Mem:<< []>> 
5950-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5950-Equals Sto:<< []>> 
5950-NonEquals Sto: << []>> 
5950-Useless: []
5950-Constancy: [(1, 0)]
5950-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '37', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(11)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_5950_optimized.txt
Optimality results stored in /tmp/0x00/Secret_5950_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5950;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;5950;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;83;33;79;132;28;15;-49;5;True;False;False;False;2.1234830520115793;2;4;0;0

Block: 2604
2604Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH9 0x3635c9adc5dea00000', 'DUP2', 'MSTORE', 'RETURN']>> 
2604-Stack size: 2 
2604-Equals Mem:<< []>> 
2604-NonEquals Mem: << [<5,2>]>> 
2604-Equals Sto:<< []>> 
2604-NonEquals Sto: << []>> 
2604-Useless: []
2604-Constancy: [(1, 0), (0, 64)]
2604-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', '1000000000000000000000', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH9 0x3635c9adc5dea00000 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH9 0x3635c9adc5dea00000 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Secret_2604_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2604_statistics.csv

Estimated initial gas: 18
Estimated gas optimized: 18

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 17

Initial number of instructions: 7
Final number of instructions: 7

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2604;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2604;2;False;True;True;PUSH1 0x20 SWAP1 MLOAD PUSH9 0x3635c9adc5dea00000 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH9 0x3635c9adc5dea00000 DUP2 MSTORE RETURN;18;17;7;18;17;7;0;0;0;True;False;False;False;0.01741027197567746;0;0;0;0

Block: 2640
2640Instr:<<['PUSH1 0x14', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
2640-Stack size: 2 
2640-Equals Mem:<< []>> 
2640-NonEquals Mem: << [<13,3>]>> 
2640-Equals Sto:<< []>> 
2640-NonEquals Sto: << []>> 
2640-Useless: []
2640-Constancy: [(1, 0), (0, 64)]
2640-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('20', 'sload0'), 1), 0)}
Storage order: [(('20', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('20', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x14 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x14 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Secret_2640_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2640_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2124

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 32

Initial number of instructions: 17
Final number of instructions: 10

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2640;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2640;2;False;True;True;PUSH1 0x14 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x14 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2145;22;17;2124;32;10;21;-10;7;True;False;False;False;0.10663512995233759;2;0;2100;2100

Block: 3750
3750Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3750-Stack size: 6 
3750-Equals Mem:<< []>> 
3750-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3750-Equals Sto:<< []>> 
3750-NonEquals Sto: << []>> 
3750-Useless: []
3750-Constancy: []
3750-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '34', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(11)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_3750_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3750_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3750;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3750;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;80;33;79;132;28;15;-52;5;True;False;False;False;2.1198932050028816;2;4;0;0

Block: 3830
3830Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3830-Stack size: 7 
3830-Equals Mem:<< []>> 
3830-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3830-Equals Sto:<< []>> 
3830-NonEquals Sto: << []>> 
3830-Useless: []
3830-Constancy: []
3830-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '36', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(11)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_3830_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3830_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 82

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 133

Initial number of instructions: 33
Final number of instructions: 29

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3830;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3830;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;82;133;29;12;-52;4;True;False;False;False;2.1163017280050553;2;4;0;0

Block: 2737
2737Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP3', 'MSTORE', 'PUSH6 0x14d958dc995d', 'PUSH1 0xd2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0c80', 'JUMP']>> 
2737-Stack size: 4 
2737-Equals Mem:<< []>> 
2737-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
2737-Equals Sto:<< []>> 
2737-NonEquals Sto: << []>> 
2737-Useless: []
2737-Constancy: [(3, 0), (0, 64)]
2737-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('210', '22923731310941', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '6', 'mstore'), 2), (('s(9)', '37721104342960240463948301807942867642503519997673202150391228779828382531584', 'mstore'), 2), (('s(2)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x06 DUP3 MSTORE PUSH6 0x14d958dc995d PUSH1 0xd2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0c80 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x5365637265740000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x6 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xc80 JUMP

Optimized code stored in /tmp/0x00/Secret_2737_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2737_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2737;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2737;2;False;True;True;JUMPDEST PUSH1 0x06 DUP3 MSTORE PUSH6 0x14d958dc995d PUSH1 0xd2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0c80 JUMP;JUMPDEST PUSH32 0x5365637265740000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x6 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xc80 JUMP;57;29;18;51;52;16;6;-23;2;True;False;False;False;0.2799583000014536;1;0;0;0

Block: 2921
2921Instr:<<['DUP1', 'DUP7', 'SHL', 'DUP3', 'ADD', 'DUP5', 'ADD', 'MLOAD', 'DUP4', 'AND', 'DUP8', 'MSTORE', 'PUSH1 0x10', 'DUP5', 'MSTORE', 'DUP5', 'DUP8', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x0b8f', 'SWAP1', 'PUSH2 0x17fa', 'JUMP']>> 
2921-Stack size: 8 
2921-Equals Mem:<< []>> 
2921-NonEquals Mem: << [<11,14>]>> 
2921-Equals Sto:<< [<19,26>]>> 
2921-NonEquals Sto: << []>> 
2921-Useless: []
2921-Constancy: [(7, 0), (6, 0), (4, 64), (3, 32)]
2921-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [<19,26>], 'storage_deps_noneqs': []}
{19: ((('s(14)', 'sload0'), 1), 1), 26: ((('s(14)', 's(15)', 'sstore'), 2), 2)}
Storage order: [(('s(0)', 's(2)', 'keccak2560'), 2), (('s(14)', 'sload0'), 1), (('s(14)', 's(15)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(10)', 'mload0'), 1), (('s(0)', 's(9)', 'mstore'), 2), (('s(3)', '16', 'mstore'), 2), (('s(0)', 's(2)', 'keccak2560'), 2)]
Memory dep: [(2, 3), (1, 3), (0, 1), (0, 2)]
Memory dep simplified: [(2, 3), (1, 3), (0, 1), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{19: ((('s(14)', 'sload0'), 1), 1), 26: ((('s(14)', 's(15)', 'sstore'), 2), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP1 DUP7 SHL DUP3 ADD DUP5 ADD MLOAD DUP4 AND DUP8 MSTORE PUSH1 0x10 DUP5 MSTORE DUP5 DUP8 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE PUSH2 0x0b8f SWAP1 PUSH2 0x17fa JUMP

Optimized sequence (basic block per line):
DUP1 DUP7 SHL DUP3 ADD DUP5 ADD MLOAD DUP4 AND DUP8 MSTORE PUSH1 0x10 DUP5 MSTORE DUP5 DUP8 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE PUSH2 0x0b8f SWAP1 PUSH2 0x17fa JUMP

Optimized code stored in /tmp/0x00/Secret_2921_optimized.txt
Optimality results stored in /tmp/0x00/Secret_2921_statistics.csv

Estimated initial gas: 5119
Estimated gas optimized: 5119

Estimated initial size in bytes: 38
Estimated size optimized in bytes: 38

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2921;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;2921;2;True;False;False;DUP1 DUP7 SHL DUP3 ADD DUP5 ADD MLOAD DUP4 AND DUP8 MSTORE PUSH1 0x10 DUP5 MSTORE DUP5 DUP8 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE PUSH2 0x0b8f SWAP1 PUSH2 0x17fa JUMP;DUP1 DUP7 SHL DUP3 ADD DUP5 ADD MLOAD DUP4 AND DUP8 MSTORE PUSH1 0x10 DUP5 MSTORE DUP5 DUP8 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE PUSH2 0x0b8f SWAP1 PUSH2 0x17fa JUMP;5119;38;31;5119;38;31;0;0;0;True;True;False;False;2.284522261994425;1;4;5000;5000

Block: 3427
3427Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3427-Stack size: 6 
3427-Equals Mem:<< []>> 
3427-NonEquals Mem: << [<5,8>]>> 
3427-Equals Sto:<< []>> 
3427-NonEquals Sto: << []>> 
3427-Useless: []
3427-Constancy: []
3427-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3427 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3293
3293Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3293-Stack size: 5 
3293-Equals Mem:<< []>> 
3293-NonEquals Mem: << [<13,3>, <23,3>, <8,3>, <18,3>]>> 
3293-Equals Sto:<< []>> 
3293-NonEquals Sto: << []>> 
3293-Useless: []
3293-Constancy: []
3293-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Secret_3293_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3293_statistics.csv

Estimated initial gas: 70
Estimated gas optimized: 64

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 94

Initial number of instructions: 25
Final number of instructions: 23

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3293;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3293;2;False;True;True;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT;70;68;25;64;94;23;6;-26;2;True;False;False;False;0.6883735160226934;1;3;0;0

Block: 3046
3046Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3046-Stack size: 4 
3046-Equals Mem:<< []>> 
3046-NonEquals Mem: << [<5,8>]>> 
3046-Equals Sto:<< []>> 
3046-NonEquals Sto: << []>> 
3046-Useless: []
3046-Constancy: []
3046-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3046 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3003
3003Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0x41', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP7', 'REVERT']>> 
3003-Stack size: 8 
3003-Equals Mem:<< []>> 
3003-NonEquals Mem: << [<5,8>]>> 
3003-Equals Sto:<< []>> 
3003-NonEquals Sto: << []>> 
3003-Useless: []
3003-Constancy: [(7, 0), (6, 0), (4, 64), (3, 32)]
3003-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('s(6)', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0x41 PUSH1 0x24 SWAP2 MSTORE DUP7 REVERT

Optimized code stored in /tmp/0x00/Secret_3003_optimized.txt
Optimality results stored in /tmp/0x00/Secret_3003_statistics.csv

Estimated initial gas: 31
Estimated gas optimized: 25

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 44

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_3003;0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol;Secret;3003;2;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT;JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP8 MSTORE PUSH1 0x41 PUSH1 0x24 SWAP2 MSTORE DUP7 REVERT;31;19;12;25;44;10;6;-25;2;True;False;False;False;0.04670386103680357;1;0;0;0

Block: 972
972Instr:<<['JUMPDEST', 'SWAP3', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP6', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'DUP8', 'PUSH1 0x15', 'SLOAD', 'AND', 'OR', 'PUSH1 0x15', 'SSTORE', 'DUP4', 'MLOAD', 'SWAP3', 'PUSH2 0x03ee', 'DUP5', 'PUSH2 0x0c16', 'JUMP']>> 
972-Stack size: 6 
972-Equals Mem:<< []>> 
972-NonEquals Mem: << []>> 
972-Equals Sto:<< [<12,16>]>> 
972-NonEquals Sto: << []>> 
972-Useless: []
972-Constancy: [(4, 0), (2, 64), (1, 32)]
972-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<11,15>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '255', 'shl')
[RULE]: Evaluate expression ('168', '1', 'shl')
{11: ((('21', 'sload0'), 1), 0), 15: ((('21', 's(14)', 'sstore'), 2), 1)}
Storage order: [(('21', 'sload0'), 1), (('21', 's(14)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: [(('s(3)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{11: ((('21', 'sload0'), 1), 0), 15: ((('21', 's(14)', 'sstore'), 2), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_972 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1210
1210Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x15', 'SLOAD', 'AND', 'PUSH1 0x15', 'SSTORE', 'DUP1', 'RETURN']>> 
1210-Stack size: 3 
1210-Equals Mem:<< []>> 
1210-NonEquals Mem: << []>> 
1210-Equals Sto:<< [<4,7>]>> 
1210-NonEquals Sto: << []>> 
1210-Useless: []
1210-Constancy: [(1, 0)]
1210-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,6>], 'storage_deps_noneqs': []}
{2: ((('21', 'sload0'), 1), 0), 5: ((('21', 's(3)', 'sstore'), 2), 1)}
Storage order: [(('21', 'sload0'), 1), (('21', 's(3)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('21', 'sload0'), 1), 0), 5: ((('21', 's(3)', 'sstore'), 2), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1210 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1514
1514Instr:<<['JUMPDEST', 'CALLDATALOAD', 'PUSH1 0x08', 'SSTORE', 'PUSH1 0x24', 'CALLDATALOAD', 'PUSH1 0x0a', 'SSTORE', 'PUSH1 0x44', 'CALLDATALOAD', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x64', 'CALLDATALOAD', 'PUSH1 0x0b', 'SSTORE', 'DUP1', 'RETURN']>> 
1514-Stack size: 6 
1514-Equals Mem:<< []>> 
1514-NonEquals Mem: << []>> 
1514-Equals Sto:<< []>> 
1514-NonEquals Sto: << [<3,7>, <3,11>, <3,15>, <7,11>, <7,15>, <11,15>]>> 
1514-Useless: []
1514-Constancy: [(5, 0), (4, 64), (1, 0)]
1514-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,6>, <2,10>, <2,14>, <6,10>, <6,14>, <10,14>]}
{2: ((('8', 's(2)', 'sstore'), 2), 0), 6: ((('10', 's(3)', 'sstore'), 2), 1), 10: ((('9', 's(4)', 'sstore'), 2), 2), 14: ((('11', 's(5)', 'sstore'), 2), 3)}
Storage order: [(('8', 's(2)', 'sstore'), 2), (('10', 's(3)', 'sstore'), 2), (('9', 's(4)', 'sstore'), 2), (('11', 's(5)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('8', 's(2)', 'sstore'), 2), 0), 6: ((('10', 's(3)', 'sstore'), 2), 1), 10: ((('9', 's(4)', 'sstore'), 2), 2), 14: ((('11', 's(5)', 'sstore'), 2), 3)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1514 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1728
1728Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0xa0', 'SHL', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
1728-Stack size: 6 
1728-Equals Mem:<< []>> 
1728-NonEquals Mem: << []>> 
1728-Equals Sto:<< [<3,23>]>> 
1728-NonEquals Sto: << []>> 
1728-Useless: []
1728-Constancy: [(5, 0), (4, 64), (1, 0)]
1728-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '255', 'shl')
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('21', 'sload0'), 1), 0), 22: ((('21', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('21', 'sload0'), 1), (('21', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('21', 'sload0'), 1), 0), 22: ((('21', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_1728 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2212
2212Instr:<<['JUMPDEST', 'PUSH1 0x15', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0xb0', 'SHL', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
2212-Stack size: 6 
2212-Equals Mem:<< []>> 
2212-NonEquals Mem: << []>> 
2212-Equals Sto:<< [<3,23>]>> 
2212-NonEquals Sto: << []>> 
2212-Useless: []
2212-Constancy: [(5, 0), (4, 64), (1, 0)]
2212-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('176', '255', 'shl')
[RULE]: Evaluate expression ('176', '255', 'shl')
{2: ((('21', 'sload0'), 1), 0), 22: ((('21', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('21', 'sload0'), 1), (('21', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('21', 'sload0'), 1), 0), 22: ((('21', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_2212 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4038
4038Instr:<<['JUMPDEST', 'PUSH1 0x0c', 'SLOAD', 'SWAP1', 'DUP4', 'PUSH1 0x0d', 'SLOAD', 'SWAP3', 'PUSH2 0x0fd9', 'SWAP1', 'DUP4', 'PUSH2 0x1891', 'JUMP']>> 
4038-Stack size: 11 
4038-Equals Mem:<< []>> 
4038-NonEquals Mem: << []>> 
4038-Equals Sto:<< []>> 
4038-NonEquals Sto: << [<2,6>]>> 
4038-Useless: []
4038-Constancy: [(2, 32), (1, 64), (3, 0)]
4038-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,5>]}
{1: ((('12', 'sload0'), 1), 0), 5: ((('13', 'sload1'), 1), 1)}
Storage order: [(('12', 'sload0'), 1), (('13', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('12', 'sload0'), 1), 0), 5: ((('13', 'sload1'), 1), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4038 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4505
4505Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SSTORE', 'PUSH1 0x07', 'SLOAD', 'SWAP1', 'PUSH2 0x11a9', 'SWAP2', 'PUSH2 0x1837', 'JUMP']>> 
4505-Stack size: 12 
4505-Equals Mem:<< []>> 
4505-NonEquals Mem: << []>> 
4505-Equals Sto:<< []>> 
4505-NonEquals Sto: << [<2,4>]>> 
4505-Useless: []
4505-Constancy: [(3, 32), (2, 64)]
4505-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
{1: ((('6', 's(1)', 'sstore'), 2), 0), 3: ((('7', 'sload0'), 1), 1)}
Storage order: [(('6', 's(1)', 'sstore'), 2), (('7', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('6', 's(1)', 'sstore'), 2), 0), 3: ((('7', 'sload0'), 1), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4505 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4569
4569Instr:<<['JUMPDEST', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
4569-Stack size: 4 
4569-Equals Mem:<< []>> 
4569-NonEquals Mem: << []>> 
4569-Equals Sto:<< []>> 
4569-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
4569-Useless: []
4569-Constancy: []
4569-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]}
{1: ((('14', 'sload0'), 1), 0), 3: ((('12', 's(0)', 'sstore'), 2), 1), 5: ((('15', 'sload1'), 1), 2), 7: ((('13', 's(1)', 'sstore'), 2), 3)}
Storage order: [(('14', 'sload0'), 1), (('12', 's(0)', 'sstore'), 2), (('15', 'sload1'), 1), (('13', 's(1)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('14', 'sload0'), 1), 0), 3: ((('12', 's(0)', 'sstore'), 2), 1), 5: ((('15', 'sload1'), 1), 2), 7: ((('13', 's(1)', 'sstore'), 2), 3)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4569 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4631
4631Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'PUSH2 0x0fbe', 'JUMP']>> 
4631-Stack size: 11 
4631-Equals Mem:<< []>> 
4631-NonEquals Mem: << []>> 
4631-Equals Sto:<< []>> 
4631-NonEquals Sto: << [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]>> 
4631-Useless: []
4631-Constancy: [(2, 32), (1, 64), (3, 0)]
4631-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]}
{1: ((('10', 'sload0'), 1), 0), 3: ((('12', 's(1)', 'sstore'), 2), 1), 5: ((('11', 'sload1'), 1), 2), 7: ((('13', 's(2)', 'sstore'), 2), 3)}
Storage order: [(('10', 'sload0'), 1), (('12', 's(1)', 'sstore'), 2), (('11', 'sload1'), 1), (('13', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('10', 'sload0'), 1), 0), 3: ((('12', 's(1)', 'sstore'), 2), 1), 5: ((('11', 'sload1'), 1), 2), 7: ((('13', 's(2)', 'sstore'), 2), 3)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4631 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4662
4662Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SLOAD', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH1 0x0d', 'SSTORE', 'PUSH2 0x1207', 'JUMP']>> 
4662-Stack size: 13 
4662-Equals Mem:<< []>> 
4662-NonEquals Mem: << []>> 
4662-Equals Sto:<< []>> 
4662-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <4,8>, <6,8>]>> 
4662-Useless: []
4662-Constancy: [(4, 32), (3, 64), (5, 0)]
4662-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>, <1,5>, <1,7>, <3,5>, <3,7>, <5,7>]}
{1: ((('8', 'sload0'), 1), 0), 3: ((('12', 's(1)', 'sstore'), 2), 1), 5: ((('9', 'sload1'), 1), 2), 7: ((('13', 's(2)', 'sstore'), 2), 3)}
Storage order: [(('8', 'sload0'), 1), (('12', 's(1)', 'sstore'), 2), (('9', 'sload1'), 1), (('13', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('8', 'sload0'), 1), 0), 3: ((('12', 's(1)', 'sstore'), 2), 1), 5: ((('9', 'sload1'), 1), 2), 7: ((('13', 's(2)', 'sstore'), 2), 3)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_4662 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5121
5121Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x15', 'SLOAD', 'AND', 'PUSH1 0x15', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x1418', 'JUMPI']>> 
5121-Stack size: 11 
5121-Equals Mem:<< []>> 
5121-NonEquals Mem: << []>> 
5121-Equals Sto:<< [<3,6>]>> 
5121-NonEquals Sto: << []>> 
5121-Useless: []
5121-Constancy: [(3, 0)]
5121-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,5>], 'storage_deps_noneqs': []}
{1: ((('21', 'sload0'), 1), 0), 4: ((('21', 's(3)', 'sstore'), 2), 1)}
Storage order: [(('21', 'sload0'), 1), (('21', 's(3)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('21', 'sload0'), 1), 0), 4: ((('21', 's(3)', 'sstore'), 2), 1)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_5121 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6168
6168Instr:<<['PUSH1 0x0e', 'SSTORE', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH0', 'PUSH1 0x0c', 'SSTORE', 'PUSH0', 'PUSH1 0x0d', 'SSTORE', 'JUMP']>> 
6168-Stack size: 13 
6168-Equals Mem:<< []>> 
6168-NonEquals Mem: << []>> 
6168-Equals Sto:<< [<3,11>]>> 
6168-NonEquals Sto: << [<1,3>, <1,5>, <3,5>, <1,8>, <3,8>, <1,11>, <5,8>, <5,11>, <8,11>]>> 
6168-Useless: []
6168-Constancy: [(4, 32), (3, 64), (5, 0)]
6168-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,11>], 'storage_deps_noneqs': [<1,3>, <1,5>, <3,5>, <1,8>, <3,8>, <1,11>, <5,8>, <5,11>, <8,11>]}
{1: ((('14', 's(0)', 'sstore'), 2), 0), 3: ((('13', 'sload0'), 1), 1), 5: ((('15', 's(1)', 'sstore'), 2), 2), 8: ((('12', '0', 'sstore'), 2), 3), 11: ((('13', '0', 'sstore'), 2), 4)}
Storage order: [(('14', 's(0)', 'sstore'), 2), (('13', 'sload0'), 1), (('15', 's(1)', 'sstore'), 2), (('12', '0', 'sstore'), 2), (('13', '0', 'sstore'), 2)]
Storage dep: [(1, 4)]
Storage dep simplified: [(1, 4)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('14', 's(0)', 'sstore'), 2), 0), 3: ((('13', 'sload0'), 1), 1), 5: ((('15', 's(1)', 'sstore'), 2), 2), 8: ((('12', '0', 'sstore'), 2), 3), 11: ((('13', '0', 'sstore'), 2), 4)}
BLOCK 0x00a8d5c934fde9566a0745fa17010a9d1d589660.sol_Secret_6168 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
