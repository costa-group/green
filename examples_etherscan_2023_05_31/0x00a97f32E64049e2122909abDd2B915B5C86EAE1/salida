incomplete push instruction at 43
Green Main
*************************************************************
Compilation time: 1.0883216640213504s
*************************************************************
File: OBAMA
Build CFG: 0.3258717739954591s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis OBAMA
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> mem40 3329_11:1 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--openTrading()
MEMRES: NOT Found read (potential optimization) -> mem40 3329_10:1 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--openTrading()
MEMRES: NOT Found read (potential optimization) -> <slot21,0> 4323_0:3 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot21,32> 4323_0:9 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot24,0> 5018_0:3 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot24,32> 5018_0:5 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot63,0> 4323:3 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot63,32> 4323:9 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot66,0> 5018:3 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot66,32> 5018:5 --> 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol OBAMA--transferFrom(address,address,uint256)
GASOL: Useless accesses found: {'3329_11': [1], '3329_10': [1], '4323_0': [3, 9], '5018_0': [3, 5], '4323': [3, 9], '5018': [3, 5]}
Free memory analyss finished


SLOTS Contract OBAMA: 80
Memory read accesses ContractOBAMA: 296
Memory write accesses ContractOBAMA: 615
********************************** INIT
GASOL: Adding block useless 3329_11
GASOL: Adding block useless 3329_10
GASOL: Adding block useless 4323_0
GASOL: Adding block useless 5018_0
GASOL: Adding block useless 4323
GASOL: Adding block useless 5018
CONTEXT: Detected context equality 0 <slot2,0> 10 <slot2,0>
CONTEXT: Detected context equality 2 <slot4,0> 4 <slot4,0>
CONTEXT: Detected context equality 2 <slot4,0> 4 <slot4,0>
CONTEXT: Detected context equality 15 <slot15,0> 16 <slot15,0>
CONTEXT: Detected context equality 15 <slot15,0> 16 <slot15,0>
CONTEXT: Detected context equality 23 <slot17,0> 24 <slot17,0>
CONTEXT: Detected context equality 23 <slot17,0> 24 <slot17,0>
CONTEXT: Detected context equality 20 <slot18,0> 21 <slot18,0>
CONTEXT: Detected context equality 20 <slot18,0> 21 <slot18,0>
CONTEXT: Detected context equality 13 <slot23,0> 16 <slot23,0>
CONTEXT: Detected context equality 15 <slot22,0> 28 <slot22,0>
CONTEXT: Detected context equality 15 <slot22,0> 24 <slot22,0>
CONTEXT: Detected context equality 5 <slot34,0> 4 <slot34,0>
CONTEXT: Detected context equality 5 <slot34,0> 8 <slot34,0>
CONTEXT: Detected context equality 4 <slot34,0> 8 <slot34,0>
CONTEXT: Detected context equality 5 <slot34,0> 4 <slot34,0>
CONTEXT: Detected context equality 5 <slot34,0> 8 <slot34,0>
CONTEXT: Detected context equality 4 <slot34,0> 8 <slot34,0>
CONTEXT: Detected context equality 3 <slot44,0> 6 <slot44,0>
CONTEXT: Detected context equality 5 <slot43,0> 17 <slot43,0>
CONTEXT: Detected context equality 5 <slot43,0> 13 <slot43,0>
CONTEXT: Detected context equality 0 <slot46,0> 10 <slot46,0>
CONTEXT: Detected context equality 10 <slot56,0> 11 <slot56,0>
CONTEXT: Detected context equality 10 <slot56,0> 11 <slot56,0>
CONTEXT: Detected context equality 20 <slot57,0> 21 <slot57,0>
CONTEXT: Detected context equality 20 <slot57,0> 21 <slot57,0>
CONTEXT: Detected context equality 28 <slot59,0> 29 <slot59,0>
CONTEXT: Detected context equality 28 <slot59,0> 29 <slot59,0>
CONTEXT: Detected context equality 25 <slot60,0> 26 <slot60,0>
CONTEXT: Detected context equality 25 <slot60,0> 26 <slot60,0>
CONTEXT: Detected context equality 18 <slot65,0> 21 <slot65,0>
CONTEXT: Detected context equality 20 <slot64,0> 33 <slot64,0>
CONTEXT: Detected context equality 20 <slot64,0> 29 <slot64,0>
CONTEXT: Detected context equality 3 <slot80,0> 4 <slot80,0>
CONTEXT: Detected context equality 3 <slot80,0> 7 <slot80,0>
CONTEXT: Detected context equality 4 <slot80,0> 7 <slot80,0>
CONTEXT: Detected context equality 2 <slot4,0> 4 <slot4,0>
CONTEXT: Detected context equality 2 <slot4,0> 4 <slot4,0>
COMPACT CLONES: True
CONTRACT: OBAMA
-----
Block: 424
424Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'DUP5', 'MSTORE', 'PUSH1 0x02', 'DUP7', 'MSTORE', 'SWAP3', 'KECCAK256', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'SWAP1', 'DUP4', 'MSTORE', 'DUP2', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
424-Stack size: 9 
424-Equals Mem:<< [<10,21>, <13,24>]>> 
424-NonEquals Mem: << [<10,30>, <10,13>, <10,24>, <10,33>, <13,30>, <13,21>, <13,33>, <21,30>, <21,24>, <21,33>, <24,30>, <24,33>, <33,15>, <33,27>, <33,30>, <15,30>, <27,30>]>> 
424-Equals Sto:<< []>> 
424-NonEquals Sto: << []>> 
424-Useless: []
424-Constancy: [(8, 0), (5, 32), (4, 64), (3, 0), (1, 64)]
424-ContextAliasing: []

.....
-----
Block: 528
528Instr:<<['JUMPDEST', 'MLOAD', 'AND', 'DUP5', 'MSTORE', 'DUP3', 'PUSH1 0x20', 'MSTORE', 'DUP5', 'DUP5', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0xff', 'NOT', 'DUP3', 'SLOAD', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x0f35', 'JUMP']>> 
528-Stack size: 9 
528-Equals Mem:<< []>> 
528-NonEquals Mem: << [<4,1>, <4,7>, <7,1>, <1,10>]>> 
528-Equals Sto:<< [<15,19>]>> 
528-NonEquals Sto: << []>> 
528-Useless: []
528-Constancy: [(6, 64), (5, 0)]
528-ContextAliasing: []

.....
-----
Block: 3574_19
3574_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_19-Stack size: 7 
3574_19-Equals Mem:<< []>> 
3574_19-NonEquals Mem: << [<5,8>]>> 
3574_19-Equals Sto:<< []>> 
3574_19-NonEquals Sto: << []>> 
3574_19-Useless: []
3574_19-Constancy: [(4, 64), (3, 0)]
3574_19-ContextAliasing: []

.....
-----
Block: 5974_6
5974_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974_6-Stack size: 11 
5974_6-Equals Mem:<< []>> 
5974_6-NonEquals Mem: << [<5,8>]>> 
5974_6-Equals Sto:<< []>> 
5974_6-NonEquals Sto: << []>> 
5974_6-Useless: []
5974_6-Constancy: [(8, 64), (7, 0)]
5974_6-ContextAliasing: [(10, 10)]

.....
-----
Block: 3485_3
3485_3Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3485_3-Stack size: 6 
3485_3-Equals Mem:<< []>> 
3485_3-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3485_3-Equals Sto:<< []>> 
3485_3-NonEquals Sto: << []>> 
3485_3-Useless: []
3485_3-Constancy: [(3, 64), (2, 0)]
3485_3-ContextAliasing: []

.....
-----
Block: 3223_36
3223_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_36-Stack size: 12 
3223_36-Equals Mem:<< []>> 
3223_36-NonEquals Mem: << [<5,8>]>> 
3223_36-Equals Sto:<< []>> 
3223_36-NonEquals Sto: << []>> 
3223_36-Useless: []
3223_36-Constancy: [(11, 0), (9, 64), (6, 32)]
3223_36-ContextAliasing: []

.....
-----
Block: 3223_35
3223_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_35-Stack size: 8 
3223_35-Equals Mem:<< []>> 
3223_35-NonEquals Mem: << [<5,8>]>> 
3223_35-Equals Sto:<< []>> 
3223_35-NonEquals Sto: << []>> 
3223_35-Useless: []
3223_35-Constancy: [(7, 0), (5, 64), (2, 32)]
3223_35-ContextAliasing: []

.....
-----
Block: 3223_31
3223_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_31-Stack size: 8 
3223_31-Equals Mem:<< []>> 
3223_31-NonEquals Mem: << [<5,8>]>> 
3223_31-Equals Sto:<< []>> 
3223_31-NonEquals Sto: << []>> 
3223_31-Useless: []
3223_31-Constancy: [(7, 0), (4, 32), (2, 32)]
3223_31-ContextAliasing: [(5, 4)]

.....
-----
Block: 3223_30
3223_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_30-Stack size: 8 
3223_30-Equals Mem:<< []>> 
3223_30-NonEquals Mem: << [<5,8>]>> 
3223_30-Equals Sto:<< []>> 
3223_30-NonEquals Sto: << []>> 
3223_30-Useless: []
3223_30-Constancy: [(7, 0), (4, 32)]
3223_30-ContextAliasing: [(5, 4)]

.....
-----
Block: 3223_29
3223_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_29-Stack size: 11 
3223_29-Equals Mem:<< []>> 
3223_29-NonEquals Mem: << [<5,8>]>> 
3223_29-Equals Sto:<< []>> 
3223_29-NonEquals Sto: << []>> 
3223_29-Useless: []
3223_29-Constancy: [(10, 0), (7, 32), (6, 64), (4, 96)]
3223_29-ContextAliasing: []

.....
-----
Block: 3223_32
3223_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_32-Stack size: 13 
3223_32-Equals Mem:<< []>> 
3223_32-NonEquals Mem: << [<5,8>]>> 
3223_32-Equals Sto:<< []>> 
3223_32-NonEquals Sto: << []>> 
3223_32-Useless: []
3223_32-Constancy: [(12, 0), (9, 32), (8, 64), (2, 32)]
3223_32-ContextAliasing: []

.....
-----
Block: 3223_28
3223_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_28-Stack size: 13 
3223_28-Equals Mem:<< []>> 
3223_28-NonEquals Mem: << [<5,8>]>> 
3223_28-Equals Sto:<< []>> 
3223_28-NonEquals Sto: << []>> 
3223_28-Useless: []
3223_28-Constancy: [(12, 0), (9, 32), (8, 64)]
3223_28-ContextAliasing: []

.....
-----
Block: 3223_33
3223_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_33-Stack size: 16 
3223_33-Equals Mem:<< []>> 
3223_33-NonEquals Mem: << [<5,8>]>> 
3223_33-Equals Sto:<< []>> 
3223_33-NonEquals Sto: << []>> 
3223_33-Useless: []
3223_33-Constancy: [(15, 0), (12, 32), (11, 64), (7, 32), (2, 32)]
3223_33-ContextAliasing: []

.....
-----
Block: 3223_27
3223_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_27-Stack size: 16 
3223_27-Equals Mem:<< []>> 
3223_27-NonEquals Mem: << [<5,8>]>> 
3223_27-Equals Sto:<< []>> 
3223_27-NonEquals Sto: << []>> 
3223_27-Useless: []
3223_27-Constancy: [(15, 0), (12, 32), (11, 64), (7, 32)]
3223_27-ContextAliasing: []

.....
-----
Block: 3223_34
3223_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_34-Stack size: 15 
3223_34-Equals Mem:<< []>> 
3223_34-NonEquals Mem: << [<5,8>]>> 
3223_34-Equals Sto:<< []>> 
3223_34-NonEquals Sto: << []>> 
3223_34-Useless: []
3223_34-Constancy: [(14, 0), (11, 32), (10, 64), (5, 32), (2, 32)]
3223_34-ContextAliasing: []

.....
-----
Block: 3223_26
3223_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_26-Stack size: 15 
3223_26-Equals Mem:<< []>> 
3223_26-NonEquals Mem: << [<5,8>]>> 
3223_26-Equals Sto:<< []>> 
3223_26-NonEquals Sto: << []>> 
3223_26-Useless: []
3223_26-Constancy: [(14, 0), (11, 32), (10, 64), (5, 32)]
3223_26-ContextAliasing: []

.....
-----
Block: 1333
1333Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1333-Stack size: 7 
1333-Equals Mem:<< []>> 
1333-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
1333-Equals Sto:<< []>> 
1333-NonEquals Sto: << []>> 
1333-Useless: []
1333-Constancy: [(6, 0), (2, 64)]
1333-ContextAliasing: []

.....
-----
Block: 1411
1411Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
1411-Stack size: 8 
1411-Equals Mem:<< []>> 
1411-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
1411-Equals Sto:<< []>> 
1411-NonEquals Sto: << []>> 
1411-Useless: []
1411-Constancy: [(7, 0), (3, 64)]
1411-ContextAliasing: []

.....
-----
Block: 1490
1490Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x64', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1490-Stack size: 5 
1490-Equals Mem:<< []>> 
1490-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>]>> 
1490-Equals Sto:<< []>> 
1490-NonEquals Sto: << []>> 
1490-Useless: []
1490-Constancy: [(4, 0), (0, 64)]
1490-ContextAliasing: []

.....
-----
Block: 3485_2
3485_2Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3485_2-Stack size: 5 
3485_2-Equals Mem:<< []>> 
3485_2-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3485_2-Equals Sto:<< []>> 
3485_2-NonEquals Sto: << []>> 
3485_2-Useless: []
3485_2-Constancy: [(4, 0), (3, 64)]
3485_2-ContextAliasing: []

.....
-----
Block: 1576
1576Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0xff', 'PUSH1 0x06', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1576-Stack size: 5 
1576-Equals Mem:<< []>> 
1576-NonEquals Mem: << [<12,7>]>> 
1576-Equals Sto:<< []>> 
1576-NonEquals Sto: << []>> 
1576-Useless: []
1576-Constancy: [(4, 0), (1, 0), (0, 64)]
1576-ContextAliasing: []

.....
-----
Block: 1612
1612Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x11', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1612-Stack size: 5 
1612-Equals Mem:<< []>> 
1612-NonEquals Mem: << [<8,5>]>> 
1612-Equals Sto:<< []>> 
1612-NonEquals Sto: << []>> 
1612-Useless: []
1612-Constancy: [(4, 0), (1, 0), (0, 64)]
1612-ContextAliasing: []

.....
-----
Block: 4011_0
4011_0Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP4', 'PUSH1 0x01', 'DUP6', 'MSTORE', 'PUSH1 0x40', 'SWAP4', 'DUP5', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP3', 'PUSH2 0x0ffc', 'DUP7', 'MLOAD', 'PUSH2 0x0fcb', 'DUP2', 'PUSH2 0x0cab', 'JUMP']>> 
4011_0-Stack size: 14 
4011_0-Equals Mem:<< []>> 
4011_0-NonEquals Mem: << [<3,18>, <3,8>, <8,18>, <13,18>]>> 
4011_0-Equals Sto:<< []>> 
4011_0-NonEquals Sto: << []>> 
4011_0-Useless: []
4011_0-Constancy: [(13, 0), (10, 0), (9, 32), (8, 64), (0, 0)]
4011_0-ContextAliasing: []

.....
-----
Block: 4043_0
4043_0Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP4', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP7', 'DUP8', 'DUP12', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
4043_0-Stack size: 19 
4043_0-Equals Mem:<< []>> 
4043_0-NonEquals Mem: << [<3,11>]>> 
4043_0-Equals Sto:<< []>> 
4043_0-NonEquals Sto: << []>> 
4043_0-Useless: []
4043_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64), (2, 0)]
4043_0-ContextAliasing: []

.....
-----
Block: 4092_0
4092_0Instr:<<['JUMPDEST', 'DUP10', 'DUP3', 'MSTORE', 'PUSH1 0x01', 'DUP9', 'MSTORE', 'DUP7', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP10', 'DUP2', 'MSTORE', 'DUP6', 'PUSH2 0x1036', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x1030', 'DUP4', 'MLOAD', 'PUSH2 0x1020', 'DUP2', 'PUSH2 0x0cab', 'JUMP']>> 
4092_0-Stack size: 18 
4092_0-Equals Mem:<< [<3,13>]>> 
4092_0-NonEquals Mem: << [<3,22>, <3,6>, <6,22>, <6,13>, <13,22>, <9,22>, <18,22>]>> 
4092_0-Equals Sto:<< [<10,19>]>> 
4092_0-NonEquals Sto: << []>> 
4092_0-Useless: []
4092_0-Constancy: [(17, 0), (14, 0), (13, 32), (12, 64), (7, 32), (6, 64), (1, 0)]
4092_0-ContextAliasing: []

.....
-----
Block: 4128_0
4128_0Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'DUP8', 'DUP8', 'PUSH2 0x0de1', 'JUMP']>> 
4128_0-Stack size: 22 
4128_0-Equals Mem:<< []>> 
4128_0-NonEquals Mem: << [<3,8>]>> 
4128_0-Equals Sto:<< []>> 
4128_0-NonEquals Sto: << []>> 
4128_0-Useless: []
4128_0-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
4128_0-ContextAliasing: []

.....
-----
Block: 4150_0
4150_0Instr:<<['JUMPDEST', 'SWAP2', 'DUP12', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP3', 'PUSH2 0x104c', 'DUP5', 'PUSH2 0x0cab', 'JUMP']>> 
4150_0-Stack size: 19 
4150_0-Equals Mem:<< []>> 
4150_0-NonEquals Mem: << [<4,11>, <4,7>, <7,11>, <8,11>]>> 
4150_0-Equals Sto:<< []>> 
4150_0-NonEquals Sto: << []>> 
4150_0-Useless: []
4150_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64), (2, 0), (1, 64)]
4150_0-ContextAliasing: []

.....
-----
Block: 4172_0
4172_0Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP5', 'MSTORE', 'DUP7', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
4172_0-Stack size: 17 
4172_0-Equals Mem:<< []>> 
4172_0-NonEquals Mem: << [<3,7>]>> 
4172_0-Equals Sto:<< []>> 
4172_0-NonEquals Sto: << []>> 
4172_0-Useless: []
4172_0-Constancy: [(16, 0), (13, 0), (12, 32), (11, 64), (6, 32), (5, 64)]
4172_0-ContextAliasing: []

.....
-----
Block: 1666
1666Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1666-Stack size: 6 
1666-Equals Mem:<< []>> 
1666-NonEquals Mem: << [<4,1>]>> 
1666-Equals Sto:<< []>> 
1666-NonEquals Sto: << []>> 
1666-Useless: []
1666-Constancy: [(5, 0), (2, 0), (1, 32), (0, 64)]
1666-ContextAliasing: []

.....
-----
Block: 3574_16
3574_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_16-Stack size: 14 
3574_16-Equals Mem:<< []>> 
3574_16-NonEquals Mem: << [<5,8>]>> 
3574_16-Equals Sto:<< []>> 
3574_16-NonEquals Sto: << []>> 
3574_16-Useless: []
3574_16-Constancy: [(13, 0), (10, 0), (9, 32), (8, 64), (3, 32), (2, 64)]
3574_16-ContextAliasing: []

.....
-----
Block: 3594_5
3594_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594_5-Stack size: 16 
3594_5-Equals Mem:<< []>> 
3594_5-NonEquals Mem: << [<7,2>]>> 
3594_5-Equals Sto:<< []>> 
3594_5-NonEquals Sto: << []>> 
3594_5-Useless: []
3594_5-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (5, 32), (4, 64)]
3594_5-ContextAliasing: []

.....
-----
Block: 3084_7
3084_7Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_7-Stack size: 20 
3084_7-Equals Mem:<< []>> 
3084_7-NonEquals Mem: << [<4,6>, <12,6>]>> 
3084_7-Equals Sto:<< []>> 
3084_7-NonEquals Sto: << []>> 
3084_7-Useless: []
3084_7-Constancy: [(19, 0), (16, 0), (15, 32), (14, 64), (9, 32), (8, 64)]
3084_7-ContextAliasing: [(4, 16)]

.....
-----
Block: 3135_7
3135_7Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_7-Stack size: 23 
3135_7-Equals Mem:<< []>> 
3135_7-NonEquals Mem: << [<12,6>]>> 
3135_7-Equals Sto:<< []>> 
3135_7-NonEquals Sto: << []>> 
3135_7-Useless: []
3135_7-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (12, 32), (11, 64), (5, 32)]
3135_7-ContextAliasing: [(7, 16)]

.....
-----
Block: 3223_24
3223_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_24-Stack size: 19 
3223_24-Equals Mem:<< []>> 
3223_24-NonEquals Mem: << [<5,8>]>> 
3223_24-Equals Sto:<< []>> 
3223_24-NonEquals Sto: << []>> 
3223_24-Useless: []
3223_24-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64)]
3223_24-ContextAliasing: []

.....
-----
Block: 5779_2
5779_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5779_2-Stack size: 20 
5779_2-Equals Mem:<< []>> 
5779_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5779_2-Equals Sto:<< []>> 
5779_2-NonEquals Sto: << []>> 
5779_2-Useless: []
5779_2-Constancy: [(19, 0), (16, 0), (15, 32), (14, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
5779_2-ContextAliasing: []

.....
-----
Block: 3574_15
3574_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_15-Stack size: 22 
3574_15-Equals Mem:<< []>> 
3574_15-NonEquals Mem: << [<5,8>]>> 
3574_15-Equals Sto:<< []>> 
3574_15-NonEquals Sto: << []>> 
3574_15-Useless: []
3574_15-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3574_15-ContextAliasing: []

.....
-----
Block: 3574_14
3574_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_14-Stack size: 22 
3574_14-Equals Mem:<< []>> 
3574_14-NonEquals Mem: << [<5,8>]>> 
3574_14-Equals Sto:<< []>> 
3574_14-NonEquals Sto: << []>> 
3574_14-Useless: []
3574_14-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3574_14-ContextAliasing: []

.....
-----
Block: 3594_4
3594_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594_4-Stack size: 24 
3594_4-Equals Mem:<< []>> 
3594_4-NonEquals Mem: << [<7,2>]>> 
3594_4-Equals Sto:<< []>> 
3594_4-NonEquals Sto: << []>> 
3594_4-Useless: []
3594_4-Constancy: [(23, 0), (20, 0), (19, 32), (18, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3594_4-ContextAliasing: []

.....
-----
Block: 3084_6
3084_6Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_6-Stack size: 28 
3084_6-Equals Mem:<< []>> 
3084_6-NonEquals Mem: << [<4,6>, <12,6>]>> 
3084_6-Equals Sto:<< []>> 
3084_6-NonEquals Sto: << []>> 
3084_6-Useless: []
3084_6-Constancy: [(27, 0), (24, 0), (23, 32), (22, 64), (17, 32), (16, 64), (11, 0), (10, 64)]
3084_6-ContextAliasing: [(4, 24)]

.....
-----
Block: 3135_6
3135_6Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_6-Stack size: 31 
3135_6-Equals Mem:<< []>> 
3135_6-NonEquals Mem: << [<12,6>]>> 
3135_6-Equals Sto:<< []>> 
3135_6-NonEquals Sto: << []>> 
3135_6-Useless: []
3135_6-Constancy: [(30, 0), (27, 0), (26, 32), (25, 64), (20, 32), (19, 64), (14, 0), (13, 64), (5, 32)]
3135_6-ContextAliasing: [(7, 24)]

.....
-----
Block: 3223_23
3223_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_23-Stack size: 24 
3223_23-Equals Mem:<< []>> 
3223_23-NonEquals Mem: << [<5,8>]>> 
3223_23-Equals Sto:<< []>> 
3223_23-NonEquals Sto: << []>> 
3223_23-Useless: []
3223_23-Constancy: [(23, 0), (20, 0), (19, 32), (18, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3223_23-ContextAliasing: []

.....
-----
Block: 3574_13
3574_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_13-Stack size: 19 
3574_13-Equals Mem:<< []>> 
3574_13-NonEquals Mem: << [<5,8>]>> 
3574_13-Equals Sto:<< []>> 
3574_13-NonEquals Sto: << []>> 
3574_13-Useless: []
3574_13-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64), (2, 0)]
3574_13-ContextAliasing: []

.....
-----
Block: 3594_3
3594_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594_3-Stack size: 21 
3594_3-Equals Mem:<< []>> 
3594_3-NonEquals Mem: << [<7,2>]>> 
3594_3-Equals Sto:<< []>> 
3594_3-NonEquals Sto: << []>> 
3594_3-Useless: []
3594_3-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (10, 32), (9, 64), (4, 0)]
3594_3-ContextAliasing: []

.....
-----
Block: 3084_5
3084_5Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_5-Stack size: 25 
3084_5-Equals Mem:<< []>> 
3084_5-NonEquals Mem: << [<4,6>, <12,6>]>> 
3084_5-Equals Sto:<< []>> 
3084_5-NonEquals Sto: << []>> 
3084_5-Useless: []
3084_5-Constancy: [(24, 0), (21, 0), (20, 32), (19, 64), (14, 32), (13, 64), (8, 0)]
3084_5-ContextAliasing: [(4, 21)]

.....
-----
Block: 3135_5
3135_5Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_5-Stack size: 28 
3135_5-Equals Mem:<< []>> 
3135_5-NonEquals Mem: << [<12,6>]>> 
3135_5-Equals Sto:<< []>> 
3135_5-NonEquals Sto: << []>> 
3135_5-Useless: []
3135_5-Constancy: [(27, 0), (24, 0), (23, 32), (22, 64), (17, 32), (16, 64), (11, 0), (5, 32)]
3135_5-ContextAliasing: [(7, 21)]

.....
-----
Block: 3223_22
3223_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_22-Stack size: 21 
3223_22-Equals Mem:<< []>> 
3223_22-NonEquals Mem: << [<5,8>]>> 
3223_22-Equals Sto:<< []>> 
3223_22-NonEquals Sto: << []>> 
3223_22-Useless: []
3223_22-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (10, 32), (9, 64), (4, 0)]
3223_22-ContextAliasing: []

.....
-----
Block: 4193_0
4193_0Instr:<<['JUMPDEST', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH2 0x1077', 'DUP5', 'PUSH1 0x40', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x167e', 'JUMP']>> 
4193_0-Stack size: 14 
4193_0-Equals Mem:<< []>> 
4193_0-NonEquals Mem: << [<3,6>]>> 
4193_0-Equals Sto:<< []>> 
4193_0-NonEquals Sto: << []>> 
4193_0-Useless: []
4193_0-Constancy: [(13, 0), (10, 0), (9, 32), (8, 64), (0, 0)]
4193_0-ContextAliasing: []

.....
-----
Block: 5779_1
5779_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5779_1-Stack size: 16 
5779_1-Equals Mem:<< []>> 
5779_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5779_1-Equals Sto:<< []>> 
5779_1-NonEquals Sto: << []>> 
5779_1-Useless: []
5779_1-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (2, 0)]
5779_1-ContextAliasing: []

.....
-----
Block: 3574_12
3574_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_12-Stack size: 18 
3574_12-Equals Mem:<< []>> 
3574_12-NonEquals Mem: << [<5,8>]>> 
3574_12-Equals Sto:<< []>> 
3574_12-NonEquals Sto: << []>> 
3574_12-Useless: []
3574_12-Constancy: [(17, 0), (14, 0), (13, 32), (12, 64), (4, 0)]
3574_12-ContextAliasing: []

.....
-----
Block: 4246_0
4246_0Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'SWAP3', 'PUSH1 0x20', 'SWAP4', 'DUP1', 'DUP6', 'MSTORE', 'PUSH1 0xff', 'SWAP2', 'PUSH1 0x40', 'SWAP1', 'DUP4', 'DUP3', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x1568', 'JUMPI']>> 
4246_0-Stack size: 13 
4246_0-Equals Mem:<< []>> 
4246_0-NonEquals Mem: << [<5,12>]>> 
4246_0-Equals Sto:<< []>> 
4246_0-NonEquals Sto: << []>> 
4246_0-Useless: []
4246_0-Constancy: [(12, 0), (9, 0), (8, 32), (7, 64), (3, 0), (1, 0)]
4246_0-ContextAliasing: []

.....
-----
Block: 4323_0
4323_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'SWAP10', 'DUP11', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'DUP1', 'SWAP2', 'DIV', 'SWAP9', 'DUP7', 'PUSH1 0x06', 'SLOAD', 'AND', 'PUSH2 0x149b', 'JUMPI']>> 
4323_0-Stack size: 19 
4323_0-Equals Mem:<< []>> 
4323_0-NonEquals Mem: << [<3,9>]>> 
4323_0-Equals Sto:<< []>> 
4323_0-NonEquals Sto: << []>> 
4323_0-Useless: [3, 9]
4323_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (9, 32), (7, 0), (4, 64), (3, 32)]
4323_0-ContextAliasing: []

.....
-----
Block: 4423_0
4423_0Instr:<<['JUMPDEST', 'POP', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'DUP3', 'DUP7', 'MSTORE', 'DUP7', 'DUP11', 'KECCAK256', 'SLOAD', 'SWAP2', 'DUP1', 'DUP11', 'PUSH1 0xa8', 'SHR', 'AND', 'ISZERO', 'SWAP2', 'DUP3', 'PUSH2 0x1367', 'JUMPI']>> 
4423_0-Stack size: 21 
4423_0-Equals Mem:<< []>> 
4423_0-NonEquals Mem: << [<4,9>]>> 
4423_0-Equals Sto:<< []>> 
4423_0-NonEquals Sto: << []>> 
4423_0-Useless: []
4423_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4423_0-ContextAliasing: []

.....
-----
Block: 4639_0
4639_0Instr:<<['SWAP9', 'SWAP6', 'SWAP4', 'SWAP1', 'SWAP2', 'SWAP3', 'DUP11', 'SWAP8', 'SWAP6', 'SWAP4', 'DUP10', 'MLOAD', 'SWAP11', 'DUP12', 'SWAP9', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP11', 'MSTORE', 'PUSH1 0xa4', 'DUP11', 'ADD', 'SWAP4', 'DUP11', 'ADD', 'MSTORE', 'DUP10', 'PUSH1 0x24', 'DUP11', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP11', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP9', 'ADD', 'SWAP6', 'SWAP4', 'DUP10', 'SWAP1']>> 
4639_0-Stack size: 23 
4639_0-Equals Mem:<< []>> 
4639_0-NonEquals Mem: << [<19,11>, <19,37>, <26,11>, <26,37>, <31,11>, <31,37>, <36,11>, <36,37>, <40,11>, <40,37>, <11,37>]>> 
4639_0-Equals Sto:<< []>> 
4639_0-NonEquals Sto: << []>> 
4639_0-Useless: []
4639_0-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (10, 0), (8, 64), (2, 32)]
4639_0-ContextAliasing: []

.....
-----
Block: 3223_21
3223_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_21-Stack size: 17 
3223_21-Equals Mem:<< []>> 
3223_21-NonEquals Mem: << [<5,8>]>> 
3223_21-Equals Sto:<< []>> 
3223_21-NonEquals Sto: << []>> 
3223_21-Useless: []
3223_21-Constancy: [(16, 0), (13, 0), (12, 32), (11, 64), (2, 0)]
3223_21-ContextAliasing: []

.....
-----
Block: 4843_0
4843_0Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP9', 'MSTORE', 'DUP14', 'SWAP11', 'POP', 'DUP13', 'SWAP10', 'POP', 'SWAP7', 'DUP3', 'ADD', 'SWAP7', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x1259', 'JUMP']>> 
4843_0-Stack size: 26 
4843_0-Equals Mem:<< []>> 
4843_0-NonEquals Mem: << [<6,2>]>> 
4843_0-Equals Sto:<< []>> 
4843_0-NonEquals Sto: << []>> 
4843_0-Useless: []
4843_0-Constancy: [(25, 0), (22, 0), (21, 32), (20, 64), (13, 0), (11, 64), (10, 0), (2, 32)]
4843_0-ContextAliasing: [(12, 16)]

.....
-----
Block: 3719_3
3719_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3719_3-Stack size: 26 
3719_3-Equals Mem:<< []>> 
3719_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3719_3-Equals Sto:<< []>> 
3719_3-NonEquals Sto: << []>> 
3719_3-Useless: []
3719_3-Constancy: [(25, 0), (22, 0), (21, 32), (20, 64), (13, 0), (11, 64), (5, 32)]
3719_3-ContextAliasing: []

.....
-----
Block: 3799_3
3799_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3799_3-Stack size: 27 
3799_3-Equals Mem:<< []>> 
3799_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3799_3-Equals Sto:<< []>> 
3799_3-NonEquals Sto: << []>> 
3799_3-Useless: []
3799_3-Constancy: [(26, 0), (23, 0), (22, 32), (21, 64), (14, 0), (12, 64), (6, 32)]
3799_3-ContextAliasing: []

.....
-----
Block: 5974_5
5974_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974_5-Stack size: 29 
5974_5-Equals Mem:<< []>> 
5974_5-NonEquals Mem: << [<5,8>]>> 
5974_5-Equals Sto:<< []>> 
5974_5-NonEquals Sto: << []>> 
5974_5-Useless: []
5974_5-Constancy: [(28, 0), (25, 0), (24, 32), (23, 64), (16, 0), (14, 64), (8, 32)]
5974_5-ContextAliasing: [(13, 28)]

.....
-----
Block: 3223_25
3223_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_25-Stack size: 30 
3223_25-Equals Mem:<< []>> 
3223_25-NonEquals Mem: << [<5,8>]>> 
3223_25-Equals Sto:<< []>> 
3223_25-NonEquals Sto: << []>> 
3223_25-Useless: []
3223_25-Constancy: [(29, 0), (26, 0), (25, 32), (24, 64), (17, 0), (15, 64), (9, 32), (2, 32)]
3223_25-ContextAliasing: []

.....
-----
Block: 3223_20
3223_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_20-Stack size: 30 
3223_20-Equals Mem:<< []>> 
3223_20-NonEquals Mem: << [<5,8>]>> 
3223_20-Equals Sto:<< []>> 
3223_20-NonEquals Sto: << []>> 
3223_20-Useless: []
3223_20-Constancy: [(29, 0), (26, 0), (25, 32), (24, 64), (17, 0), (15, 64), (9, 32)]
3223_20-ContextAliasing: []

.....
-----
Block: 5974_4
5974_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974_4-Stack size: 25 
5974_4-Equals Mem:<< []>> 
5974_4-NonEquals Mem: << [<5,8>]>> 
5974_4-Equals Sto:<< []>> 
5974_4-NonEquals Sto: << []>> 
5974_4-Useless: []
5974_4-Constancy: [(24, 0), (21, 0), (20, 32), (19, 64), (12, 0), (10, 64), (4, 32)]
5974_4-ContextAliasing: [(9, 24)]

.....
-----
Block: 3223_19
3223_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_19-Stack size: 23 
3223_19-Equals Mem:<< []>> 
3223_19-NonEquals Mem: << [<5,8>]>> 
3223_19-Equals Sto:<< []>> 
3223_19-NonEquals Sto: << []>> 
3223_19-Useless: []
3223_19-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (10, 0), (8, 64), (2, 32)]
3223_19-ContextAliasing: []

.....
-----
Block: 5018_0
5018_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'DIV', 'SWAP10', 'PUSH0', 'PUSH2 0x1147', 'JUMP']>> 
5018_0-Stack size: 24 
5018_0-Equals Mem:<< []>> 
5018_0-NonEquals Mem: << [<3,5>]>> 
5018_0-Equals Sto:<< []>> 
5018_0-NonEquals Sto: << []>> 
5018_0-Useless: [3, 5]
5018_0-Constancy: [(23, 0), (20, 0), (19, 32), (18, 64), (12, 0), (9, 64), (8, 32), (1, 32)]
5018_0-ContextAliasing: []

.....
-----
Block: 3223_18
3223_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_18-Stack size: 26 
3223_18-Equals Mem:<< []>> 
3223_18-NonEquals Mem: << [<5,8>]>> 
3223_18-Equals Sto:<< []>> 
3223_18-NonEquals Sto: << []>> 
3223_18-Useless: []
3223_18-Constancy: [(25, 0), (22, 0), (21, 32), (20, 64), (14, 0), (11, 64), (10, 32), (3, 32)]
3223_18-ContextAliasing: []

.....
-----
Block: 5876_1
5876_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5876_1-Stack size: 23 
5876_1-Equals Mem:<< []>> 
5876_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5876_1-Equals Sto:<< []>> 
5876_1-NonEquals Sto: << []>> 
5876_1-Useless: []
5876_1-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (11, 0), (8, 64), (7, 32)]
5876_1-ContextAliasing: []

.....
-----
Block: 3574_17
3574_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_17-Stack size: 25 
3574_17-Equals Mem:<< []>> 
3574_17-NonEquals Mem: << [<5,8>]>> 
3574_17-Equals Sto:<< []>> 
3574_17-NonEquals Sto: << []>> 
3574_17-Useless: []
3574_17-Constancy: [(24, 0), (21, 0), (20, 32), (19, 64), (13, 0), (10, 64), (9, 32)]
3574_17-ContextAliasing: []

.....
-----
Block: 5063_0
5063_0Instr:<<['DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x01', 'DUP7', 'MSTORE', 'PUSH2 0x13da', 'DUP12', 'DUP9', 'DUP13', 'KECCAK256', 'SLOAD', 'PUSH2 0x0f28', 'JUMP']>> 
5063_0-Stack size: 21 
5063_0-Equals Mem:<< []>> 
5063_0-NonEquals Mem: << [<2,5>]>> 
5063_0-Equals Sto:<< []>> 
5063_0-NonEquals Sto: << []>> 
5063_0-Useless: []
5063_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
5063_0-ContextAliasing: []

.....
-----
Block: 3574_11
3574_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_11-Stack size: 23 
3574_11-Equals Mem:<< []>> 
3574_11-NonEquals Mem: << [<5,8>]>> 
3574_11-Equals Sto:<< []>> 
3574_11-NonEquals Sto: << []>> 
3574_11-Useless: []
3574_11-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (11, 0), (8, 64), (7, 32)]
3574_11-ContextAliasing: []

.....
-----
Block: 5109_0
5109_0Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
5109_0-Stack size: 21 
5109_0-Equals Mem:<< []>> 
5109_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5109_0-Equals Sto:<< []>> 
5109_0-NonEquals Sto: << []>> 
5109_0-Useless: []
5109_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
5109_0-ContextAliasing: []

.....
-----
Block: 3574_10
3574_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_10-Stack size: 23 
3574_10-Equals Mem:<< []>> 
3574_10-NonEquals Mem: << [<5,8>]>> 
3574_10-Equals Sto:<< []>> 
3574_10-NonEquals Sto: << []>> 
3574_10-Useless: []
3574_10-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (11, 0), (8, 64), (7, 32)]
3574_10-ContextAliasing: []

.....
-----
Block: 5175_0
5175_0Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
5175_0-Stack size: 21 
5175_0-Equals Mem:<< []>> 
5175_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5175_0-Equals Sto:<< []>> 
5175_0-NonEquals Sto: << []>> 
5175_0-Useless: []
5175_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
5175_0-ContextAliasing: []

.....
-----
Block: 5241_0
5241_0Instr:<<['JUMPDEST', 'POP', 'DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x03', 'DUP7', 'MSTORE', 'DUP2', 'DUP8', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x1133', 'JUMP']>> 
5241_0-Stack size: 22 
5241_0-Equals Mem:<< []>> 
5241_0-NonEquals Mem: << [<4,7>]>> 
5241_0-Equals Sto:<< []>> 
5241_0-NonEquals Sto: << []>> 
5241_0-Useless: []
5241_0-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (10, 0), (7, 64), (6, 32)]
5241_0-ContextAliasing: []

.....
-----
Block: 5295_0
5295_0Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'DUP5', 'DUP9', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'ISZERO', 'PUSH2 0x14d1', 'JUMPI']>> 
5295_0-Stack size: 19 
5295_0-Equals Mem:<< []>> 
5295_0-NonEquals Mem: << [<2,5>]>> 
5295_0-Equals Sto:<< []>> 
5295_0-NonEquals Sto: << []>> 
5295_0-Useless: []
5295_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (7, 0), (4, 64), (3, 32)]
5295_0-ContextAliasing: []

.....
-----
Block: 5313_0
5313_0Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'NUMBER', 'DUP6', 'DUP10', 'KECCAK256', 'SSTORE', 'PUSH2 0x111d', 'JUMP']>> 
5313_0-Stack size: 19 
5313_0-Equals Mem:<< []>> 
5313_0-NonEquals Mem: << [<2,5>]>> 
5313_0-Equals Sto:<< []>> 
5313_0-NonEquals Sto: << []>> 
5313_0-Useless: []
5313_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (7, 0), (4, 64), (3, 32)]
5313_0-ContextAliasing: []

.....
-----
Block: 5329_0
5329_0Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP8', 'ADD', 'DUP6', 'SWAP1', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'DUP2', 'DUP5', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'SWAP1', 'REVERT']>> 
5329_0-Stack size: 19 
5329_0-Equals Mem:<< []>> 
5329_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>, <35,2>]>> 
5329_0-Equals Sto:<< []>> 
5329_0-NonEquals Sto: << []>> 
5329_0-Useless: []
5329_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (7, 0), (4, 64), (3, 32)]
5329_0-ContextAliasing: []

.....
-----
Block: 3223_17
3223_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_17-Stack size: 21 
3223_17-Equals Mem:<< []>> 
3223_17-NonEquals Mem: << [<5,8>]>> 
3223_17-Equals Sto:<< []>> 
3223_17-NonEquals Sto: << []>> 
3223_17-Useless: []
3223_17-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (11, 32), (9, 0), (6, 64), (5, 32)]
3223_17-ContextAliasing: []

.....
-----
Block: 5876_2
5876_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5876_2-Stack size: 19 
5876_2-Equals Mem:<< []>> 
5876_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5876_2-Equals Sto:<< []>> 
5876_2-NonEquals Sto: << []>> 
5876_2-Useless: []
5876_2-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (9, 32), (7, 0), (4, 64), (3, 32)]
5876_2-ContextAliasing: []

.....
-----
Block: 3574_18
3574_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_18-Stack size: 21 
3574_18-Equals Mem:<< []>> 
3574_18-NonEquals Mem: << [<5,8>]>> 
3574_18-Equals Sto:<< []>> 
3574_18-NonEquals Sto: << []>> 
3574_18-Useless: []
3574_18-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (11, 32), (9, 0), (6, 64), (5, 32)]
3574_18-ContextAliasing: []

.....
-----
Block: 5507_0
5507_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5507_0-Stack size: 12 
5507_0-Equals Mem:<< []>> 
5507_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5507_0-Equals Sto:<< []>> 
5507_0-NonEquals Sto: << []>> 
5507_0-Useless: []
5507_0-Constancy: [(11, 0), (8, 0), (7, 32), (6, 64), (0, 0)]
5507_0-ContextAliasing: []

.....
-----
Block: 5594_0
5594_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5594_0-Stack size: 12 
5594_0-Equals Mem:<< []>> 
5594_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5594_0-Equals Sto:<< []>> 
5594_0-NonEquals Sto: << []>> 
5594_0-Useless: []
5594_0-Constancy: [(11, 0), (8, 0), (7, 32), (6, 64), (0, 0)]
5594_0-ContextAliasing: []

.....
-----
Block: 5675_0
5675_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5675_0-Stack size: 12 
5675_0-Equals Mem:<< []>> 
5675_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5675_0-Equals Sto:<< []>> 
5675_0-NonEquals Sto: << []>> 
5675_0-Useless: []
5675_0-Constancy: [(11, 0), (8, 0), (7, 32), (6, 64), (4, 0)]
5675_0-ContextAliasing: []

.....
-----
Block: 1706
1706Instr:<<['JUMPDEST', 'PUSH1 0x05', 'DUP3', 'MSTORE', 'PUSH5 0x4f42414d41', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0c0c', 'JUMP']>> 
1706-Stack size: 7 
1706-Equals Mem:<< []>> 
1706-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
1706-Equals Sto:<< []>> 
1706-NonEquals Sto: << []>> 
1706-Useless: []
1706-Constancy: [(6, 0), (3, 0), (0, 64)]
1706-ContextAliasing: []

.....
-----
Block: 3084_4
3084_4Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_4-Stack size: 9 
3084_4-Equals Mem:<< []>> 
3084_4-NonEquals Mem: << [<4,6>, <4,12>, <12,6>]>> 
3084_4-Equals Sto:<< []>> 
3084_4-NonEquals Sto: << []>> 
3084_4-Useless: []
3084_4-Constancy: [(8, 0), (5, 0)]
3084_4-ContextAliasing: [(3, 4), (3, 8), (4, 8)]

.....
-----
Block: 3135_4
3135_4Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_4-Stack size: 12 
3135_4-Equals Mem:<< []>> 
3135_4-NonEquals Mem: << [<12,6>]>> 
3135_4-Equals Sto:<< []>> 
3135_4-NonEquals Sto: << []>> 
3135_4-Useless: []
3135_4-Constancy: [(11, 0), (8, 0), (5, 32)]
3135_4-ContextAliasing: [(6, 4), (6, 8), (7, 8)]

.....
-----
Block: 3223_16
3223_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_16-Stack size: 9 
3223_16-Equals Mem:<< []>> 
3223_16-NonEquals Mem: << [<5,8>]>> 
3223_16-Equals Sto:<< []>> 
3223_16-NonEquals Sto: << []>> 
3223_16-Useless: []
3223_16-Constancy: [(8, 0), (5, 0), (2, 64)]
3223_16-ContextAliasing: []

.....
-----
Block: 1757
1757Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x10', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1757-Stack size: 5 
1757-Equals Mem:<< []>> 
1757-NonEquals Mem: << [<8,5>]>> 
1757-Equals Sto:<< []>> 
1757-NonEquals Sto: << []>> 
1757-Useless: []
1757-Constancy: [(4, 0), (1, 0), (0, 64)]
1757-ContextAliasing: []

.....
-----
Block: 1788
1788Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1788-Stack size: 5 
1788-Equals Mem:<< []>> 
1788-NonEquals Mem: << [<13,3>]>> 
1788-Equals Sto:<< []>> 
1788-NonEquals Sto: << []>> 
1788-Useless: []
1788-Constancy: [(4, 0), (1, 0), (0, 64)]
1788-ContextAliasing: []

.....
-----
Block: 1828
1828Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0f', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1828-Stack size: 5 
1828-Equals Mem:<< []>> 
1828-NonEquals Mem: << [<8,5>]>> 
1828-Equals Sto:<< []>> 
1828-NonEquals Sto: << []>> 
1828-Useless: []
1828-Constancy: [(4, 0), (1, 0), (0, 64)]
1828-ContextAliasing: []

.....
-----
Block: 3485_1
3485_1Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3485_1-Stack size: 8 
3485_1-Equals Mem:<< []>> 
3485_1-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3485_1-Equals Sto:<< []>> 
3485_1-NonEquals Sto: << []>> 
3485_1-Useless: []
3485_1-Constancy: [(7, 0), (4, 0), (2, 32), (1, 64)]
3485_1-ContextAliasing: []

.....
-----
Block: 3485_0
3485_0Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3485_0-Stack size: 9 
3485_0-Equals Mem:<< []>> 
3485_0-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3485_0-Equals Sto:<< []>> 
3485_0-NonEquals Sto: << []>> 
3485_0-Useless: []
3485_0-Constancy: [(8, 0), (5, 64), (4, 0), (2, 0)]
3485_0-ContextAliasing: []

.....
-----
Block: 2085
2085Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2085-Stack size: 9 
2085-Equals Mem:<< []>> 
2085-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
2085-Equals Sto:<< []>> 
2085-NonEquals Sto: << []>> 
2085-Useless: []
2085-Constancy: [(8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
2085-ContextAliasing: []

.....
-----
Block: 2145
2145Instr:<<['ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'PUSH1 0x20', 'SWAP1', 'DUP4', 'DUP3', 'MSTORE', 'DUP3', 'DUP6', 'KECCAK256', 'SLOAD', 'SWAP4', 'DUP5', 'PUSH2 0x0894', 'JUMPI']>> 
2145-Stack size: 5 
2145-Equals Mem:<< []>> 
2145-NonEquals Mem: << [<2,9>]>> 
2145-Equals Sto:<< []>> 
2145-NonEquals Sto: << []>> 
2145-Useless: []
2145-Constancy: [(4, 0), (2, 0), (0, 64)]
2145-ContextAliasing: []

.....
-----
Block: 2332
2332Instr:<<['SWAP8', 'SWAP5', 'SWAP3', 'DUP10', 'SWAP7', 'SWAP5', 'SWAP2', 'SWAP3', 'DUP9', 'MLOAD', 'SWAP10', 'DUP11', 'SWAP8', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP10', 'MSTORE', 'PUSH1 0xa4', 'DUP10', 'ADD', 'SWAP4', 'DUP10', 'ADD', 'MSTORE', 'DUP9', 'PUSH1 0x24', 'DUP10', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP10', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP8', 'ADD', 'SWAP5', 'SWAP4', 'DUP9', 'SWAP1']>> 
2332-Stack size: 12 
2332-Equals Mem:<< []>> 
2332-NonEquals Mem: << [<17,9>, <17,35>, <24,9>, <24,35>, <29,9>, <29,35>, <34,9>, <34,35>, <38,9>, <38,35>, <9,35>]>> 
2332-Equals Sto:<< []>> 
2332-NonEquals Sto: << []>> 
2332-Useless: []
2332-Constancy: [(11, 0), (9, 0), (7, 64), (2, 32)]
2332-ContextAliasing: []

.....
-----
Block: 3223_14
3223_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_14-Stack size: 5 
3223_14-Equals Mem:<< []>> 
3223_14-NonEquals Mem: << [<5,8>]>> 
3223_14-Equals Sto:<< []>> 
3223_14-NonEquals Sto: << []>> 
3223_14-Useless: []
3223_14-Constancy: [(4, 0), (2, 0)]
3223_14-ContextAliasing: []

.....
-----
Block: 2478
2478Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP13', 'SWAP10', 'POP', 'DUP12', 'SWAP9', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x0954', 'JUMP']>> 
2478-Stack size: 15 
2478-Equals Mem:<< []>> 
2478-NonEquals Mem: << [<6,2>]>> 
2478-Equals Sto:<< []>> 
2478-NonEquals Sto: << []>> 
2478-Useless: []
2478-Constancy: [(14, 0), (12, 0), (10, 64), (9, 0), (2, 32)]
2478-ContextAliasing: [(11, 6)]

.....
-----
Block: 3719_2
3719_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3719_2-Stack size: 15 
3719_2-Equals Mem:<< []>> 
3719_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3719_2-Equals Sto:<< []>> 
3719_2-NonEquals Sto: << []>> 
3719_2-Useless: []
3719_2-Constancy: [(14, 0), (12, 0), (10, 64), (5, 32)]
3719_2-ContextAliasing: []

.....
-----
Block: 3799_2
3799_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3799_2-Stack size: 16 
3799_2-Equals Mem:<< []>> 
3799_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3799_2-Equals Sto:<< []>> 
3799_2-NonEquals Sto: << []>> 
3799_2-Useless: []
3799_2-Constancy: [(15, 0), (13, 0), (11, 64), (6, 32)]
3799_2-ContextAliasing: []

.....
-----
Block: 5974_3
5974_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974_3-Stack size: 18 
5974_3-Equals Mem:<< []>> 
5974_3-NonEquals Mem: << [<5,8>]>> 
5974_3-Equals Sto:<< []>> 
5974_3-NonEquals Sto: << []>> 
5974_3-Useless: []
5974_3-Constancy: [(17, 0), (15, 0), (13, 64), (8, 32)]
5974_3-ContextAliasing: [(12, 17)]

.....
-----
Block: 3223_15
3223_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_15-Stack size: 19 
3223_15-Equals Mem:<< []>> 
3223_15-NonEquals Mem: << [<5,8>]>> 
3223_15-Equals Sto:<< []>> 
3223_15-NonEquals Sto: << []>> 
3223_15-Useless: []
3223_15-Constancy: [(18, 0), (16, 0), (14, 64), (9, 32), (2, 32)]
3223_15-ContextAliasing: []

.....
-----
Block: 3223_13
3223_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_13-Stack size: 19 
3223_13-Equals Mem:<< []>> 
3223_13-NonEquals Mem: << [<5,8>]>> 
3223_13-Equals Sto:<< []>> 
3223_13-NonEquals Sto: << []>> 
3223_13-Useless: []
3223_13-Constancy: [(18, 0), (16, 0), (14, 64), (9, 32)]
3223_13-ContextAliasing: []

.....
-----
Block: 5974_2
5974_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974_2-Stack size: 14 
5974_2-Equals Mem:<< []>> 
5974_2-NonEquals Mem: << [<5,8>]>> 
5974_2-Equals Sto:<< []>> 
5974_2-NonEquals Sto: << []>> 
5974_2-Useless: []
5974_2-Constancy: [(13, 0), (11, 0), (9, 64), (4, 32)]
5974_2-ContextAliasing: [(8, 13)]

.....
-----
Block: 3223_12
3223_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_12-Stack size: 12 
3223_12-Equals Mem:<< []>> 
3223_12-NonEquals Mem: << [<5,8>]>> 
3223_12-Equals Sto:<< []>> 
3223_12-NonEquals Sto: << []>> 
3223_12-Useless: []
3223_12-Constancy: [(11, 0), (9, 0), (7, 64), (2, 32)]
3223_12-ContextAliasing: []

.....
-----
Block: 2595
2595Instr:<<['JUMPDEST', 'AND', 'DUP3', 'MSTORE', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
2595-Stack size: 8 
2595-Equals Mem:<< []>> 
2595-NonEquals Mem: << [<3,10>, <3,5>, <3,15>, <5,10>, <5,15>, <15,6>, <15,10>, <6,10>]>> 
2595-Equals Sto:<< []>> 
2595-NonEquals Sto: << []>> 
2595-Useless: []
2595-Constancy: [(7, 32), (6, 64), (4, 64), (3, 0)]
2595-ContextAliasing: []

.....
-----
Block: 2677
2677Instr:<<['JUMPDEST', 'MLOAD', 'AND', 'DUP5', 'MSTORE', 'DUP3', 'PUSH1 0x20', 'MSTORE', 'DUP5', 'DUP5', 'KECCAK256', 'PUSH1 0xff', 'NOT', 'DUP2', 'SLOAD', 'AND', 'SWAP1', 'SSTORE', 'PUSH2 0x0f35', 'JUMP']>> 
2677-Stack size: 9 
2677-Equals Mem:<< []>> 
2677-NonEquals Mem: << [<4,1>, <4,7>, <7,1>, <1,10>]>> 
2677-Equals Sto:<< [<14,17>]>> 
2677-NonEquals Sto: << []>> 
2677-Useless: []
2677-Constancy: [(6, 64), (5, 0)]
2677-ContextAliasing: []

.....
-----
Block: 3574_9
3574_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_9-Stack size: 7 
3574_9-Equals Mem:<< []>> 
3574_9-NonEquals Mem: << [<5,8>]>> 
3574_9-Equals Sto:<< []>> 
3574_9-NonEquals Sto: << []>> 
3574_9-Useless: []
3574_9-Constancy: [(4, 64), (3, 0)]
3574_9-ContextAliasing: []

.....
-----
Block: 5974_1
5974_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974_1-Stack size: 11 
5974_1-Equals Mem:<< []>> 
5974_1-NonEquals Mem: << [<5,8>]>> 
5974_1-Equals Sto:<< []>> 
5974_1-NonEquals Sto: << []>> 
5974_1-Useless: []
5974_1-Constancy: [(8, 64), (7, 0)]
5974_1-ContextAliasing: [(10, 10)]

.....
-----
Block: 3485
3485Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3485-Stack size: 6 
3485-Equals Mem:<< []>> 
3485-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3485-Equals Sto:<< []>> 
3485-NonEquals Sto: << []>> 
3485-Useless: []
3485-Constancy: [(3, 64), (2, 0)]
3485-ContextAliasing: []

.....
-----
Block: 3223_11
3223_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_11-Stack size: 12 
3223_11-Equals Mem:<< []>> 
3223_11-NonEquals Mem: << [<5,8>]>> 
3223_11-Equals Sto:<< []>> 
3223_11-NonEquals Sto: << []>> 
3223_11-Useless: []
3223_11-Constancy: [(11, 0), (9, 64), (6, 32)]
3223_11-ContextAliasing: []

.....
-----
Block: 3223_10
3223_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_10-Stack size: 8 
3223_10-Equals Mem:<< []>> 
3223_10-NonEquals Mem: << [<5,8>]>> 
3223_10-Equals Sto:<< []>> 
3223_10-NonEquals Sto: << []>> 
3223_10-Useless: []
3223_10-Constancy: [(7, 0), (5, 64), (2, 32)]
3223_10-ContextAliasing: []

.....
-----
Block: 2725
2725Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2725-Stack size: 5 
2725-Equals Mem:<< []>> 
2725-NonEquals Mem: << [<5,2>]>> 
2725-Equals Sto:<< []>> 
2725-NonEquals Sto: << []>> 
2725-Useless: []
2725-Constancy: [(4, 0), (1, 0), (0, 64)]
2725-ContextAliasing: []

.....
-----
Block: 4011
4011Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP4', 'PUSH1 0x01', 'DUP6', 'MSTORE', 'PUSH1 0x40', 'SWAP4', 'DUP5', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP3', 'PUSH2 0x0ffc', 'DUP7', 'MLOAD', 'PUSH2 0x0fcb', 'DUP2', 'PUSH2 0x0cab', 'JUMP']>> 
4011-Stack size: 19 
4011-Equals Mem:<< []>> 
4011-NonEquals Mem: << [<3,18>, <3,8>, <8,18>, <13,18>]>> 
4011-Equals Sto:<< []>> 
4011-NonEquals Sto: << []>> 
4011-Useless: []
4011-Constancy: [(18, 0), (15, 32), (14, 64), (9, 64), (8, 0), (0, 0)]
4011-ContextAliasing: []

.....
-----
Block: 4043
4043Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP4', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP7', 'DUP8', 'DUP12', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
4043-Stack size: 24 
4043-Equals Mem:<< []>> 
4043-NonEquals Mem: << [<3,11>]>> 
4043-Equals Sto:<< []>> 
4043-NonEquals Sto: << []>> 
4043-Useless: []
4043-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64), (2, 0)]
4043-ContextAliasing: []

.....
-----
Block: 4092
4092Instr:<<['JUMPDEST', 'DUP10', 'DUP3', 'MSTORE', 'PUSH1 0x01', 'DUP9', 'MSTORE', 'DUP7', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP10', 'DUP2', 'MSTORE', 'DUP6', 'PUSH2 0x1036', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x1030', 'DUP4', 'MLOAD', 'PUSH2 0x1020', 'DUP2', 'PUSH2 0x0cab', 'JUMP']>> 
4092-Stack size: 23 
4092-Equals Mem:<< [<3,13>]>> 
4092-NonEquals Mem: << [<3,22>, <3,6>, <6,22>, <6,13>, <13,22>, <9,22>, <18,22>]>> 
4092-Equals Sto:<< [<10,19>]>> 
4092-NonEquals Sto: << []>> 
4092-Useless: []
4092-Constancy: [(22, 0), (19, 32), (18, 64), (13, 64), (12, 0), (7, 32), (6, 64), (1, 0)]
4092-ContextAliasing: []

.....
-----
Block: 4128
4128Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'DUP8', 'DUP8', 'PUSH2 0x0de1', 'JUMP']>> 
4128-Stack size: 27 
4128-Equals Mem:<< []>> 
4128-NonEquals Mem: << [<3,8>]>> 
4128-Equals Sto:<< []>> 
4128-NonEquals Sto: << []>> 
4128-Useless: []
4128-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
4128-ContextAliasing: []

.....
-----
Block: 4150
4150Instr:<<['JUMPDEST', 'SWAP2', 'DUP12', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP3', 'PUSH2 0x104c', 'DUP5', 'PUSH2 0x0cab', 'JUMP']>> 
4150-Stack size: 24 
4150-Equals Mem:<< []>> 
4150-NonEquals Mem: << [<4,11>, <4,7>, <7,11>, <8,11>]>> 
4150-Equals Sto:<< []>> 
4150-NonEquals Sto: << []>> 
4150-Useless: []
4150-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64), (2, 0), (1, 64)]
4150-ContextAliasing: []

.....
-----
Block: 4172
4172Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP5', 'MSTORE', 'DUP7', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
4172-Stack size: 22 
4172-Equals Mem:<< []>> 
4172-NonEquals Mem: << [<3,7>]>> 
4172-Equals Sto:<< []>> 
4172-NonEquals Sto: << []>> 
4172-Useless: []
4172-Constancy: [(21, 0), (18, 32), (17, 64), (12, 64), (11, 0), (6, 32), (5, 64)]
4172-ContextAliasing: []

.....
-----
Block: 2795
2795Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'DUP6', 'MLOAD', 'SWAP2', 'SWAP1', 'PUSH2 0x0b12', 'DUP4', 'PUSH2 0x0cc7', 'JUMP']>> 
2795-Stack size: 11 
2795-Equals Mem:<< [<9,18>, <12,20>]>> 
2795-NonEquals Mem: << [<9,24>, <9,12>, <9,20>, <12,24>, <12,18>, <18,24>, <18,20>, <20,24>, <15,24>, <21,24>]>> 
2795-Equals Sto:<< []>> 
2795-NonEquals Sto: << []>> 
2795-Useless: []
2795-Constancy: [(10, 0), (7, 32), (6, 64), (1, 64), (0, 0)]
2795-ContextAliasing: []

.....
-----
Block: 2834
2834Instr:<<['JUMPDEST', 'PUSH1 0x28', 'DUP4', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'DUP9', 'DUP5', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'DUP8', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
2834-Stack size: 11 
2834-Equals Mem:<< []>> 
2834-NonEquals Mem: << [<3,8>, <3,15>, <8,15>]>> 
2834-Equals Sto:<< []>> 
2834-NonEquals Sto: << []>> 
2834-Useless: []
2834-Constancy: [(10, 0), (7, 32), (6, 64)]
2834-ContextAliasing: []

.....
-----
Block: 1666_0
1666_0Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1666_0-Stack size: 5 
1666_0-Equals Mem:<< []>> 
1666_0-NonEquals Mem: << [<4,1>]>> 
1666_0-Equals Sto:<< []>> 
1666_0-NonEquals Sto: << []>> 
1666_0-Useless: []
1666_0-Constancy: [(4, 0), (1, 32), (0, 64)]
1666_0-ContextAliasing: []

.....
-----
Block: 3719_1
3719_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3719_1-Stack size: 9 
3719_1-Equals Mem:<< []>> 
3719_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3719_1-Equals Sto:<< []>> 
3719_1-NonEquals Sto: << []>> 
3719_1-Useless: []
3719_1-Constancy: [(8, 0), (5, 32), (4, 64)]
3719_1-ContextAliasing: []

.....
-----
Block: 3799_1
3799_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3799_1-Stack size: 10 
3799_1-Equals Mem:<< []>> 
3799_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3799_1-Equals Sto:<< []>> 
3799_1-NonEquals Sto: << []>> 
3799_1-Useless: []
3799_1-Constancy: [(9, 0), (6, 32), (5, 64)]
3799_1-ContextAliasing: []

.....
-----
Block: 3574_6
3574_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_6-Stack size: 9 
3574_6-Equals Mem:<< []>> 
3574_6-NonEquals Mem: << [<5,8>]>> 
3574_6-Equals Sto:<< []>> 
3574_6-NonEquals Sto: << []>> 
3574_6-Useless: []
3574_6-Constancy: [(8, 0), (5, 32), (4, 64)]
3574_6-ContextAliasing: []

.....
-----
Block: 3594_2
3594_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594_2-Stack size: 11 
3594_2-Equals Mem:<< []>> 
3594_2-NonEquals Mem: << [<7,2>]>> 
3594_2-Equals Sto:<< []>> 
3594_2-NonEquals Sto: << []>> 
3594_2-Useless: []
3594_2-Constancy: [(10, 0), (7, 32), (6, 64)]
3594_2-ContextAliasing: []

.....
-----
Block: 3084_3
3084_3Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_3-Stack size: 15 
3084_3-Equals Mem:<< []>> 
3084_3-NonEquals Mem: << [<4,6>, <12,6>]>> 
3084_3-Equals Sto:<< []>> 
3084_3-NonEquals Sto: << []>> 
3084_3-Useless: []
3084_3-Constancy: [(14, 0), (11, 32), (10, 64)]
3084_3-ContextAliasing: [(4, 11)]

.....
-----
Block: 3135_3
3135_3Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_3-Stack size: 18 
3135_3-Equals Mem:<< []>> 
3135_3-NonEquals Mem: << [<12,6>]>> 
3135_3-Equals Sto:<< []>> 
3135_3-NonEquals Sto: << []>> 
3135_3-Useless: []
3135_3-Constancy: [(17, 0), (14, 32), (13, 64), (5, 32)]
3135_3-ContextAliasing: [(7, 11)]

.....
-----
Block: 3223_8
3223_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_8-Stack size: 13 
3223_8-Equals Mem:<< []>> 
3223_8-NonEquals Mem: << [<5,8>]>> 
3223_8-Equals Sto:<< []>> 
3223_8-NonEquals Sto: << []>> 
3223_8-Useless: []
3223_8-Constancy: [(12, 0), (9, 32), (8, 64)]
3223_8-ContextAliasing: []

.....
-----
Block: 3574_5
3574_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_5-Stack size: 19 
3574_5-Equals Mem:<< []>> 
3574_5-NonEquals Mem: << [<5,8>]>> 
3574_5-Equals Sto:<< []>> 
3574_5-NonEquals Sto: << []>> 
3574_5-Useless: []
3574_5-Constancy: [(18, 0), (15, 32), (14, 64), (9, 64), (8, 0), (3, 32), (2, 64)]
3574_5-ContextAliasing: []

.....
-----
Block: 3594_1
3594_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594_1-Stack size: 21 
3594_1-Equals Mem:<< []>> 
3594_1-NonEquals Mem: << [<7,2>]>> 
3594_1-Equals Sto:<< []>> 
3594_1-NonEquals Sto: << []>> 
3594_1-Useless: []
3594_1-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (5, 32), (4, 64)]
3594_1-ContextAliasing: []

.....
-----
Block: 3084_2
3084_2Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_2-Stack size: 25 
3084_2-Equals Mem:<< []>> 
3084_2-NonEquals Mem: << [<4,6>, <12,6>]>> 
3084_2-Equals Sto:<< []>> 
3084_2-NonEquals Sto: << []>> 
3084_2-Useless: []
3084_2-Constancy: [(24, 0), (21, 32), (20, 64), (15, 64), (14, 0), (9, 32), (8, 64)]
3084_2-ContextAliasing: [(4, 21)]

.....
-----
Block: 3135_2
3135_2Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_2-Stack size: 28 
3135_2-Equals Mem:<< []>> 
3135_2-NonEquals Mem: << [<12,6>]>> 
3135_2-Equals Sto:<< []>> 
3135_2-NonEquals Sto: << []>> 
3135_2-Useless: []
3135_2-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (12, 32), (11, 64), (5, 32)]
3135_2-ContextAliasing: [(7, 21)]

.....
-----
Block: 3223_7
3223_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_7-Stack size: 24 
3223_7-Equals Mem:<< []>> 
3223_7-NonEquals Mem: << [<5,8>]>> 
3223_7-Equals Sto:<< []>> 
3223_7-NonEquals Sto: << []>> 
3223_7-Useless: []
3223_7-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64)]
3223_7-ContextAliasing: []

.....
-----
Block: 5779_0
5779_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5779_0-Stack size: 25 
5779_0-Equals Mem:<< []>> 
5779_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5779_0-Equals Sto:<< []>> 
5779_0-NonEquals Sto: << []>> 
5779_0-Useless: []
5779_0-Constancy: [(24, 0), (21, 32), (20, 64), (15, 64), (14, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
5779_0-ContextAliasing: []

.....
-----
Block: 3574_4
3574_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_4-Stack size: 27 
3574_4-Equals Mem:<< []>> 
3574_4-NonEquals Mem: << [<5,8>]>> 
3574_4-Equals Sto:<< []>> 
3574_4-NonEquals Sto: << []>> 
3574_4-Useless: []
3574_4-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3574_4-ContextAliasing: []

.....
-----
Block: 3574_3
3574_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_3-Stack size: 27 
3574_3-Equals Mem:<< []>> 
3574_3-NonEquals Mem: << [<5,8>]>> 
3574_3-Equals Sto:<< []>> 
3574_3-NonEquals Sto: << []>> 
3574_3-Useless: []
3574_3-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3574_3-ContextAliasing: []

.....
-----
Block: 3594_0
3594_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594_0-Stack size: 29 
3594_0-Equals Mem:<< []>> 
3594_0-NonEquals Mem: << [<7,2>]>> 
3594_0-Equals Sto:<< []>> 
3594_0-NonEquals Sto: << []>> 
3594_0-Useless: []
3594_0-Constancy: [(28, 0), (25, 32), (24, 64), (19, 64), (18, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3594_0-ContextAliasing: []

.....
-----
Block: 3084_1
3084_1Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_1-Stack size: 33 
3084_1-Equals Mem:<< []>> 
3084_1-NonEquals Mem: << [<4,6>, <12,6>]>> 
3084_1-Equals Sto:<< []>> 
3084_1-NonEquals Sto: << []>> 
3084_1-Useless: []
3084_1-Constancy: [(32, 0), (29, 32), (28, 64), (23, 64), (22, 0), (17, 32), (16, 64), (11, 0), (10, 64)]
3084_1-ContextAliasing: [(4, 29)]

.....
-----
Block: 3135_1
3135_1Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_1-Stack size: 36 
3135_1-Equals Mem:<< []>> 
3135_1-NonEquals Mem: << [<12,6>]>> 
3135_1-Equals Sto:<< []>> 
3135_1-NonEquals Sto: << []>> 
3135_1-Useless: []
3135_1-Constancy: [(35, 0), (32, 32), (31, 64), (26, 64), (25, 0), (20, 32), (19, 64), (14, 0), (13, 64), (5, 32)]
3135_1-ContextAliasing: [(7, 29)]

.....
-----
Block: 3223_6
3223_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_6-Stack size: 29 
3223_6-Equals Mem:<< []>> 
3223_6-NonEquals Mem: << [<5,8>]>> 
3223_6-Equals Sto:<< []>> 
3223_6-NonEquals Sto: << []>> 
3223_6-Useless: []
3223_6-Constancy: [(28, 0), (25, 32), (24, 64), (19, 64), (18, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3223_6-ContextAliasing: []

.....
-----
Block: 3574_2
3574_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_2-Stack size: 24 
3574_2-Equals Mem:<< []>> 
3574_2-NonEquals Mem: << [<5,8>]>> 
3574_2-Equals Sto:<< []>> 
3574_2-NonEquals Sto: << []>> 
3574_2-Useless: []
3574_2-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64), (2, 0)]
3574_2-ContextAliasing: []

.....
-----
Block: 3594
3594Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594-Stack size: 26 
3594-Equals Mem:<< []>> 
3594-NonEquals Mem: << [<7,2>]>> 
3594-Equals Sto:<< []>> 
3594-NonEquals Sto: << []>> 
3594-Useless: []
3594-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (10, 32), (9, 64), (4, 0)]
3594-ContextAliasing: []

.....
-----
Block: 3084_0
3084_0Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084_0-Stack size: 30 
3084_0-Equals Mem:<< []>> 
3084_0-NonEquals Mem: << [<4,6>, <12,6>]>> 
3084_0-Equals Sto:<< []>> 
3084_0-NonEquals Sto: << []>> 
3084_0-Useless: []
3084_0-Constancy: [(29, 0), (26, 32), (25, 64), (20, 64), (19, 0), (14, 32), (13, 64), (8, 0)]
3084_0-ContextAliasing: [(4, 26)]

.....
-----
Block: 3135_0
3135_0Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0c1e', 'JUMP']>> 
3135_0-Stack size: 33 
3135_0-Equals Mem:<< []>> 
3135_0-NonEquals Mem: << [<12,6>]>> 
3135_0-Equals Sto:<< []>> 
3135_0-NonEquals Sto: << []>> 
3135_0-Useless: []
3135_0-Constancy: [(32, 0), (29, 32), (28, 64), (23, 64), (22, 0), (17, 32), (16, 64), (11, 0), (5, 32)]
3135_0-ContextAliasing: [(7, 26)]

.....
-----
Block: 3223_5
3223_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_5-Stack size: 26 
3223_5-Equals Mem:<< []>> 
3223_5-NonEquals Mem: << [<5,8>]>> 
3223_5-Equals Sto:<< []>> 
3223_5-NonEquals Sto: << []>> 
3223_5-Useless: []
3223_5-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (10, 32), (9, 64), (4, 0)]
3223_5-ContextAliasing: []

.....
-----
Block: 4193
4193Instr:<<['JUMPDEST', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH2 0x1077', 'DUP5', 'PUSH1 0x40', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x167e', 'JUMP']>> 
4193-Stack size: 19 
4193-Equals Mem:<< []>> 
4193-NonEquals Mem: << [<3,6>]>> 
4193-Equals Sto:<< []>> 
4193-NonEquals Sto: << []>> 
4193-Useless: []
4193-Constancy: [(18, 0), (15, 32), (14, 64), (9, 64), (8, 0), (0, 0)]
4193-ContextAliasing: []

.....
-----
Block: 5779
5779Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5779-Stack size: 21 
5779-Equals Mem:<< []>> 
5779-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5779-Equals Sto:<< []>> 
5779-NonEquals Sto: << []>> 
5779-Useless: []
5779-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (2, 0)]
5779-ContextAliasing: []

.....
-----
Block: 3574_1
3574_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_1-Stack size: 23 
3574_1-Equals Mem:<< []>> 
3574_1-NonEquals Mem: << [<5,8>]>> 
3574_1-Equals Sto:<< []>> 
3574_1-NonEquals Sto: << []>> 
3574_1-Useless: []
3574_1-Constancy: [(22, 0), (19, 32), (18, 64), (13, 64), (12, 0), (4, 0)]
3574_1-ContextAliasing: []

.....
-----
Block: 4246
4246Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'SWAP3', 'PUSH1 0x20', 'SWAP4', 'DUP1', 'DUP6', 'MSTORE', 'PUSH1 0xff', 'SWAP2', 'PUSH1 0x40', 'SWAP1', 'DUP4', 'DUP3', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x1568', 'JUMPI']>> 
4246-Stack size: 18 
4246-Equals Mem:<< []>> 
4246-NonEquals Mem: << [<5,12>]>> 
4246-Equals Sto:<< []>> 
4246-NonEquals Sto: << []>> 
4246-Useless: []
4246-Constancy: [(17, 0), (14, 32), (13, 64), (8, 64), (7, 0), (3, 0), (1, 0)]
4246-ContextAliasing: []

.....
-----
Block: 4323
4323Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'SWAP10', 'DUP11', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'DUP1', 'SWAP2', 'DIV', 'SWAP9', 'DUP7', 'PUSH1 0x06', 'SLOAD', 'AND', 'PUSH2 0x149b', 'JUMPI']>> 
4323-Stack size: 24 
4323-Equals Mem:<< []>> 
4323-NonEquals Mem: << [<3,9>]>> 
4323-Equals Sto:<< []>> 
4323-NonEquals Sto: << []>> 
4323-Useless: [3, 9]
4323-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (9, 32), (7, 0), (4, 64), (3, 32)]
4323-ContextAliasing: []

.....
-----
Block: 4423
4423Instr:<<['JUMPDEST', 'POP', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'DUP3', 'DUP7', 'MSTORE', 'DUP7', 'DUP11', 'KECCAK256', 'SLOAD', 'SWAP2', 'DUP1', 'DUP11', 'PUSH1 0xa8', 'SHR', 'AND', 'ISZERO', 'SWAP2', 'DUP3', 'PUSH2 0x1367', 'JUMPI']>> 
4423-Stack size: 26 
4423-Equals Mem:<< []>> 
4423-NonEquals Mem: << [<4,9>]>> 
4423-Equals Sto:<< []>> 
4423-NonEquals Sto: << []>> 
4423-Useless: []
4423-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4423-ContextAliasing: []

.....
-----
Block: 4639
4639Instr:<<['SWAP9', 'SWAP6', 'SWAP4', 'SWAP1', 'SWAP2', 'SWAP3', 'DUP11', 'SWAP8', 'SWAP6', 'SWAP4', 'DUP10', 'MLOAD', 'SWAP11', 'DUP12', 'SWAP9', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP11', 'MSTORE', 'PUSH1 0xa4', 'DUP11', 'ADD', 'SWAP4', 'DUP11', 'ADD', 'MSTORE', 'DUP10', 'PUSH1 0x24', 'DUP11', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP11', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP9', 'ADD', 'SWAP6', 'SWAP4', 'DUP10', 'SWAP1']>> 
4639-Stack size: 28 
4639-Equals Mem:<< []>> 
4639-NonEquals Mem: << [<19,11>, <19,37>, <26,11>, <26,37>, <31,11>, <31,37>, <36,11>, <36,37>, <40,11>, <40,37>, <11,37>]>> 
4639-Equals Sto:<< []>> 
4639-NonEquals Sto: << []>> 
4639-Useless: []
4639-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (10, 0), (8, 64), (2, 32)]
4639-ContextAliasing: []

.....
-----
Block: 3223_4
3223_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_4-Stack size: 22 
3223_4-Equals Mem:<< []>> 
3223_4-NonEquals Mem: << [<5,8>]>> 
3223_4-Equals Sto:<< []>> 
3223_4-NonEquals Sto: << []>> 
3223_4-Useless: []
3223_4-Constancy: [(21, 0), (18, 32), (17, 64), (12, 64), (11, 0), (2, 0)]
3223_4-ContextAliasing: []

.....
-----
Block: 4843
4843Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP9', 'MSTORE', 'DUP14', 'SWAP11', 'POP', 'DUP13', 'SWAP10', 'POP', 'SWAP7', 'DUP3', 'ADD', 'SWAP7', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x1259', 'JUMP']>> 
4843-Stack size: 31 
4843-Equals Mem:<< []>> 
4843-NonEquals Mem: << [<6,2>]>> 
4843-Equals Sto:<< []>> 
4843-NonEquals Sto: << []>> 
4843-Useless: []
4843-Constancy: [(30, 0), (27, 32), (26, 64), (21, 64), (20, 0), (13, 0), (11, 64), (10, 0), (2, 32)]
4843-ContextAliasing: [(12, 21)]

.....
-----
Block: 3719_0
3719_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3719_0-Stack size: 31 
3719_0-Equals Mem:<< []>> 
3719_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3719_0-Equals Sto:<< []>> 
3719_0-NonEquals Sto: << []>> 
3719_0-Useless: []
3719_0-Constancy: [(30, 0), (27, 32), (26, 64), (21, 64), (20, 0), (13, 0), (11, 64), (5, 32)]
3719_0-ContextAliasing: []

.....
-----
Block: 3799_0
3799_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3799_0-Stack size: 32 
3799_0-Equals Mem:<< []>> 
3799_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3799_0-Equals Sto:<< []>> 
3799_0-NonEquals Sto: << []>> 
3799_0-Useless: []
3799_0-Constancy: [(31, 0), (28, 32), (27, 64), (22, 64), (21, 0), (14, 0), (12, 64), (6, 32)]
3799_0-ContextAliasing: []

.....
-----
Block: 5974_0
5974_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974_0-Stack size: 34 
5974_0-Equals Mem:<< []>> 
5974_0-NonEquals Mem: << [<5,8>]>> 
5974_0-Equals Sto:<< []>> 
5974_0-NonEquals Sto: << []>> 
5974_0-Useless: []
5974_0-Constancy: [(33, 0), (30, 32), (29, 64), (24, 64), (23, 0), (16, 0), (14, 64), (8, 32)]
5974_0-ContextAliasing: [(13, 33)]

.....
-----
Block: 3223_9
3223_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_9-Stack size: 35 
3223_9-Equals Mem:<< []>> 
3223_9-NonEquals Mem: << [<5,8>]>> 
3223_9-Equals Sto:<< []>> 
3223_9-NonEquals Sto: << []>> 
3223_9-Useless: []
3223_9-Constancy: [(34, 0), (31, 32), (30, 64), (25, 64), (24, 0), (17, 0), (15, 64), (9, 32), (2, 32)]
3223_9-ContextAliasing: []

.....
-----
Block: 3223_3
3223_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_3-Stack size: 35 
3223_3-Equals Mem:<< []>> 
3223_3-NonEquals Mem: << [<5,8>]>> 
3223_3-Equals Sto:<< []>> 
3223_3-NonEquals Sto: << []>> 
3223_3-Useless: []
3223_3-Constancy: [(34, 0), (31, 32), (30, 64), (25, 64), (24, 0), (17, 0), (15, 64), (9, 32)]
3223_3-ContextAliasing: []

.....
-----
Block: 5974
5974Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974-Stack size: 30 
5974-Equals Mem:<< []>> 
5974-NonEquals Mem: << [<5,8>]>> 
5974-Equals Sto:<< []>> 
5974-NonEquals Sto: << []>> 
5974-Useless: []
5974-Constancy: [(29, 0), (26, 32), (25, 64), (20, 64), (19, 0), (12, 0), (10, 64), (4, 32)]
5974-ContextAliasing: [(9, 29)]

.....
-----
Block: 3223_2
3223_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_2-Stack size: 28 
3223_2-Equals Mem:<< []>> 
3223_2-NonEquals Mem: << [<5,8>]>> 
3223_2-Equals Sto:<< []>> 
3223_2-NonEquals Sto: << []>> 
3223_2-Useless: []
3223_2-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (10, 0), (8, 64), (2, 32)]
3223_2-ContextAliasing: []

.....
-----
Block: 5018
5018Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'DIV', 'SWAP10', 'PUSH0', 'PUSH2 0x1147', 'JUMP']>> 
5018-Stack size: 29 
5018-Equals Mem:<< []>> 
5018-NonEquals Mem: << [<3,5>]>> 
5018-Equals Sto:<< []>> 
5018-NonEquals Sto: << []>> 
5018-Useless: [3, 5]
5018-Constancy: [(28, 0), (25, 32), (24, 64), (19, 64), (18, 0), (12, 0), (9, 64), (8, 32), (1, 32)]
5018-ContextAliasing: []

.....
-----
Block: 3223_1
3223_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_1-Stack size: 31 
3223_1-Equals Mem:<< []>> 
3223_1-NonEquals Mem: << [<5,8>]>> 
3223_1-Equals Sto:<< []>> 
3223_1-NonEquals Sto: << []>> 
3223_1-Useless: []
3223_1-Constancy: [(30, 0), (27, 32), (26, 64), (21, 64), (20, 0), (14, 0), (11, 64), (10, 32), (3, 32)]
3223_1-ContextAliasing: []

.....
-----
Block: 5876
5876Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5876-Stack size: 28 
5876-Equals Mem:<< []>> 
5876-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5876-Equals Sto:<< []>> 
5876-NonEquals Sto: << []>> 
5876-Useless: []
5876-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (8, 64), (7, 32)]
5876-ContextAliasing: []

.....
-----
Block: 3574_7
3574_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_7-Stack size: 30 
3574_7-Equals Mem:<< []>> 
3574_7-NonEquals Mem: << [<5,8>]>> 
3574_7-Equals Sto:<< []>> 
3574_7-NonEquals Sto: << []>> 
3574_7-Useless: []
3574_7-Constancy: [(29, 0), (26, 32), (25, 64), (20, 64), (19, 0), (13, 0), (10, 64), (9, 32)]
3574_7-ContextAliasing: []

.....
-----
Block: 5063
5063Instr:<<['DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x01', 'DUP7', 'MSTORE', 'PUSH2 0x13da', 'DUP12', 'DUP9', 'DUP13', 'KECCAK256', 'SLOAD', 'PUSH2 0x0f28', 'JUMP']>> 
5063-Stack size: 26 
5063-Equals Mem:<< []>> 
5063-NonEquals Mem: << [<2,5>]>> 
5063-Equals Sto:<< []>> 
5063-NonEquals Sto: << []>> 
5063-Useless: []
5063-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
5063-ContextAliasing: []

.....
-----
Block: 3574_0
3574_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_0-Stack size: 28 
3574_0-Equals Mem:<< []>> 
3574_0-NonEquals Mem: << [<5,8>]>> 
3574_0-Equals Sto:<< []>> 
3574_0-NonEquals Sto: << []>> 
3574_0-Useless: []
3574_0-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (8, 64), (7, 32)]
3574_0-ContextAliasing: []

.....
-----
Block: 5109
5109Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
5109-Stack size: 26 
5109-Equals Mem:<< []>> 
5109-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5109-Equals Sto:<< []>> 
5109-NonEquals Sto: << []>> 
5109-Useless: []
5109-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
5109-ContextAliasing: []

.....
-----
Block: 3574
3574Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574-Stack size: 28 
3574-Equals Mem:<< []>> 
3574-NonEquals Mem: << [<5,8>]>> 
3574-Equals Sto:<< []>> 
3574-NonEquals Sto: << []>> 
3574-Useless: []
3574-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (8, 64), (7, 32)]
3574-ContextAliasing: []

.....
-----
Block: 5175
5175Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
5175-Stack size: 26 
5175-Equals Mem:<< []>> 
5175-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5175-Equals Sto:<< []>> 
5175-NonEquals Sto: << []>> 
5175-Useless: []
5175-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
5175-ContextAliasing: []

.....
-----
Block: 5241
5241Instr:<<['JUMPDEST', 'POP', 'DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x03', 'DUP7', 'MSTORE', 'DUP2', 'DUP8', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x1133', 'JUMP']>> 
5241-Stack size: 27 
5241-Equals Mem:<< []>> 
5241-NonEquals Mem: << [<4,7>]>> 
5241-Equals Sto:<< []>> 
5241-NonEquals Sto: << []>> 
5241-Useless: []
5241-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (10, 0), (7, 64), (6, 32)]
5241-ContextAliasing: []

.....
-----
Block: 5295
5295Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'DUP5', 'DUP9', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'ISZERO', 'PUSH2 0x14d1', 'JUMPI']>> 
5295-Stack size: 24 
5295-Equals Mem:<< []>> 
5295-NonEquals Mem: << [<2,5>]>> 
5295-Equals Sto:<< []>> 
5295-NonEquals Sto: << []>> 
5295-Useless: []
5295-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (4, 64), (3, 32)]
5295-ContextAliasing: []

.....
-----
Block: 5313
5313Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'NUMBER', 'DUP6', 'DUP10', 'KECCAK256', 'SSTORE', 'PUSH2 0x111d', 'JUMP']>> 
5313-Stack size: 24 
5313-Equals Mem:<< []>> 
5313-NonEquals Mem: << [<2,5>]>> 
5313-Equals Sto:<< []>> 
5313-NonEquals Sto: << []>> 
5313-Useless: []
5313-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (4, 64), (3, 32)]
5313-ContextAliasing: []

.....
-----
Block: 5329
5329Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP8', 'ADD', 'DUP6', 'SWAP1', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'DUP2', 'DUP5', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'SWAP1', 'REVERT']>> 
5329-Stack size: 24 
5329-Equals Mem:<< []>> 
5329-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>, <35,2>]>> 
5329-Equals Sto:<< []>> 
5329-NonEquals Sto: << []>> 
5329-Useless: []
5329-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (4, 64), (3, 32)]
5329-ContextAliasing: []

.....
-----
Block: 3223_0
3223_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223_0-Stack size: 26 
3223_0-Equals Mem:<< []>> 
3223_0-NonEquals Mem: << [<5,8>]>> 
3223_0-Equals Sto:<< []>> 
3223_0-NonEquals Sto: << []>> 
3223_0-Useless: []
3223_0-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (11, 32), (9, 0), (6, 64), (5, 32)]
3223_0-ContextAliasing: []

.....
-----
Block: 5876_0
5876_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5876_0-Stack size: 24 
5876_0-Equals Mem:<< []>> 
5876_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5876_0-Equals Sto:<< []>> 
5876_0-NonEquals Sto: << []>> 
5876_0-Useless: []
5876_0-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (9, 32), (7, 0), (4, 64), (3, 32)]
5876_0-ContextAliasing: []

.....
-----
Block: 3574_8
3574_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574_8-Stack size: 26 
3574_8-Equals Mem:<< []>> 
3574_8-NonEquals Mem: << [<5,8>]>> 
3574_8-Equals Sto:<< []>> 
3574_8-NonEquals Sto: << []>> 
3574_8-Useless: []
3574_8-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (11, 32), (9, 0), (6, 64), (5, 32)]
3574_8-ContextAliasing: []

.....
-----
Block: 5507
5507Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5507-Stack size: 17 
5507-Equals Mem:<< []>> 
5507-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5507-Equals Sto:<< []>> 
5507-NonEquals Sto: << []>> 
5507-Useless: []
5507-Constancy: [(16, 0), (13, 32), (12, 64), (7, 64), (6, 0), (0, 0)]
5507-ContextAliasing: []

.....
-----
Block: 5594
5594Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5594-Stack size: 17 
5594-Equals Mem:<< []>> 
5594-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5594-Equals Sto:<< []>> 
5594-NonEquals Sto: << []>> 
5594-Useless: []
5594-Constancy: [(16, 0), (13, 32), (12, 64), (7, 64), (6, 0), (0, 0)]
5594-ContextAliasing: []

.....
-----
Block: 5675
5675Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5675-Stack size: 17 
5675-Equals Mem:<< []>> 
5675-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5675-Equals Sto:<< []>> 
5675-NonEquals Sto: << []>> 
5675-Useless: []
5675-Constancy: [(16, 0), (13, 32), (12, 64), (7, 64), (6, 0), (4, 0)]
5675-ContextAliasing: []

.....
-----
Block: 2923
2923Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH8 0x016345785d8a0000', 'DUP2', 'MSTORE', 'RETURN']>> 
2923-Stack size: 5 
2923-Equals Mem:<< []>> 
2923-NonEquals Mem: << [<5,2>]>> 
2923-Equals Sto:<< []>> 
2923-NonEquals Sto: << []>> 
2923-Useless: []
2923-Constancy: [(4, 0), (1, 0), (0, 64)]
2923-ContextAliasing: []

.....
-----
Block: 2958
2958Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x12', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2958-Stack size: 5 
2958-Equals Mem:<< []>> 
2958-NonEquals Mem: << [<8,5>]>> 
2958-Equals Sto:<< []>> 
2958-NonEquals Sto: << []>> 
2958-Useless: []
2958-Constancy: [(4, 0), (1, 0), (0, 64)]
2958-ContextAliasing: []

.....
-----
Block: 3719
3719Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3719-Stack size: 10 
3719-Equals Mem:<< []>> 
3719-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3719-Equals Sto:<< []>> 
3719-NonEquals Sto: << []>> 
3719-Useless: []
3719-Constancy: [(9, 0), (6, 0), (5, 32), (4, 64)]
3719-ContextAliasing: []

.....
-----
Block: 3799
3799Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3799-Stack size: 11 
3799-Equals Mem:<< []>> 
3799-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3799-Equals Sto:<< []>> 
3799-NonEquals Sto: << []>> 
3799-Useless: []
3799-Constancy: [(10, 0), (7, 0), (6, 32), (5, 64)]
3799-ContextAliasing: []

.....
-----
Block: 3084
3084Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084-Stack size: 8 
3084-Equals Mem:<< []>> 
3084-NonEquals Mem: << [<4,12>]>> 
3084-Equals Sto:<< []>> 
3084-NonEquals Sto: << []>> 
3084-Useless: []
3084-Constancy: [(7, 0)]
3084-ContextAliasing: [(4, 4), (4, 7), (3, 7)]

.....
-----
Block: 3223
3223Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223-Stack size: 8 
3223-Equals Mem:<< []>> 
3223-NonEquals Mem: << [<5,8>]>> 
3223-Equals Sto:<< []>> 
3223-NonEquals Sto: << []>> 
3223-Useless: []
3223-Constancy: [(7, 0), (2, 64)]
3223-ContextAliasing: []

.....
-----
Block: 361
361Instr:<<['DUP1', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x0a', 'SSTORE', 'DUP1', 'RETURN']>> 
361-Stack size: 2 
361-Equals Mem:<< []>> 
361-NonEquals Mem: << []>> 
361-Equals Sto:<< []>> 
361-NonEquals Sto: << [<2,4>]>> 
361-Useless: []
361-Constancy: [(1, 0)]
361-ContextAliasing: []

.....
-----
Block: 628
628Instr:<<['PUSH1 0x13', 'SLOAD', 'SWAP2', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'PUSH12 0xffffffffffffffffffffffff', 'PUSH1 0xa0', 'SHL', 'SWAP4', 'DUP2', 'DUP6', 'DUP3', 'AND', 'OR', 'PUSH1 0x13', 'SSTORE', 'ADDRESS', 'ISZERO', 'PUSH2 0x0583', 'JUMPI']>> 
628-Stack size: 5 
628-Equals Mem:<< []>> 
628-NonEquals Mem: << []>> 
628-Equals Sto:<< [<1,14>]>> 
628-NonEquals Sto: << []>> 
628-Useless: []
628-Constancy: [(4, 0), (0, 64)]
628-ContextAliasing: []

.....
-----
Block: 1061
1061Instr:<<['JUMPDEST', 'POP', 'POP', 'DUP1', 'SLOAD', 'PUSH3 0xff00ff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH3 0x010001', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
1061-Stack size: 4 
1061-Equals Mem:<< []>> 
1061-NonEquals Mem: << []>> 
1061-Equals Sto:<< [<4,15>]>> 
1061-NonEquals Sto: << []>> 
1061-Useless: []
1061-Constancy: [(3, 0), (1, 0), (0, 0)]
1061-ContextAliasing: []

.....
-----
Block: 2196
2196Instr:<<['JUMPDEST', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP7', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'DUP9', 'PUSH1 0x14', 'SLOAD', 'AND', 'OR', 'PUSH1 0x14', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP4', 'PUSH2 0x08b5', 'DUP6', 'PUSH2 0x0cc7', 'JUMP']>> 
2196-Stack size: 8 
2196-Equals Mem:<< []>> 
2196-NonEquals Mem: << []>> 
2196-Equals Sto:<< [<11,15>]>> 
2196-NonEquals Sto: << []>> 
2196-Useless: []
2196-Constancy: [(7, 0), (5, 0), (3, 64), (2, 32)]
2196-ContextAliasing: []

.....
-----
Block: 2434
2434Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'DUP1', 'DUP3', 'DUP1', 'DUP1', 'DUP1', 'DUP1', 'PUSH2 0x0877', 'JUMP']>> 
2434-Stack size: 4 
2434-Equals Mem:<< []>> 
2434-NonEquals Mem: << []>> 
2434-Equals Sto:<< [<4,7>]>> 
2434-NonEquals Sto: << []>> 
2434-Useless: []
2434-Constancy: [(3, 0), (1, 0)]
2434-ContextAliasing: []

.....
-----
Block: 4285
4285Instr:<<['DUP7', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0b', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x1559', 'JUMPI']>> 
4285-Stack size: 21 
4285-Equals Mem:<< []>> 
4285-NonEquals Mem: << []>> 
4285-Equals Sto:<< []>> 
4285-NonEquals Sto: << [<3,5>]>> 
4285-Useless: []
4285-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (6, 32), (4, 0), (1, 64)]
4285-ContextAliasing: []

.....
-----
Block: 4785
4785Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x12ce', 'JUMPI']>> 
4785-Stack size: 21 
4785-Equals Mem:<< []>> 
4785-NonEquals Mem: << []>> 
4785-Equals Sto:<< [<4,7>]>> 
4785-NonEquals Sto: << []>> 
4785-Useless: []
4785-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (1, 0)]
4785-ContextAliasing: []

.....
-----
Block: 4930
4930Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'LT', 'PUSH2 0x1178', 'JUMP']>> 
4930-Stack size: 26 
4930-Equals Mem:<< []>> 
4930-NonEquals Mem: << []>> 
4930-Equals Sto:<< []>> 
4930-NonEquals Sto: << [<3,5>]>> 
4930-Useless: []
4930-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4930-ContextAliasing: []

.....
-----
Block: 4975
4975Instr:<<['JUMPDEST', 'DUP4', 'SWAP2', 'SWAP12', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x13a8', 'JUMPI']>> 
4975-Stack size: 26 
4975-Equals Mem:<< []>> 
4975-NonEquals Mem: << []>> 
4975-Equals Sto:<< []>> 
4975-NonEquals Sto: << [<6,8>]>> 
4975-Useless: []
4975-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4975-ContextAliasing: []

.....
-----
Block: 4285_0
4285_0Instr:<<['DUP7', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0b', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x1559', 'JUMPI']>> 
4285_0-Stack size: 16 
4285_0-Equals Mem:<< []>> 
4285_0-NonEquals Mem: << []>> 
4285_0-Equals Sto:<< []>> 
4285_0-NonEquals Sto: << [<3,5>]>> 
4285_0-Useless: []
4285_0-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (6, 32), (4, 0), (1, 64)]
4285_0-ContextAliasing: []

.....
-----
Block: 4975_0
4975_0Instr:<<['JUMPDEST', 'DUP4', 'SWAP2', 'SWAP12', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x13a8', 'JUMPI']>> 
4975_0-Stack size: 21 
4975_0-Equals Mem:<< []>> 
4975_0-NonEquals Mem: << []>> 
4975_0-Equals Sto:<< []>> 
4975_0-NonEquals Sto: << [<6,8>]>> 
4975_0-Useless: []
4975_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4975_0-ContextAliasing: []

.....
-----
Block: 4930_0
4930_0Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'LT', 'PUSH2 0x1178', 'JUMP']>> 
4930_0-Stack size: 21 
4930_0-Equals Mem:<< []>> 
4930_0-NonEquals Mem: << []>> 
4930_0-Equals Sto:<< []>> 
4930_0-NonEquals Sto: << [<3,5>]>> 
4930_0-Useless: []
4930_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4930_0-ContextAliasing: []

.....
-----
Block: 4785_0
4785_0Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x12ce', 'JUMPI']>> 
4785_0-Stack size: 16 
4785_0-Equals Mem:<< []>> 
4785_0-NonEquals Mem: << []>> 
4785_0-Equals Sto:<< [<4,7>]>> 
4785_0-NonEquals Sto: << []>> 
4785_0-Useless: []
4785_0-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (1, 0)]
4785_0-ContextAliasing: []

.....
-----
Block: 1061_0
1061_0Instr:<<['JUMPDEST', 'POP', 'POP', 'DUP1', 'SLOAD', 'PUSH3 0xff00ff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH3 0x010001', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
1061_0-Stack size: 4 
1061_0-Equals Mem:<< []>> 
1061_0-NonEquals Mem: << []>> 
1061_0-Equals Sto:<< [<4,15>]>> 
1061_0-NonEquals Sto: << []>> 
1061_0-Useless: []
1061_0-Constancy: [(3, 0), (0, 32)]
1061_0-ContextAliasing: []

.....
-----
Block: 3329_11
3329_11Instr:<<['PUSH1 0x40', 'MSTORE', 'JUMP']>> 
3329_11-Stack size: 8 
3329_11-Equals Mem:<< []>> 
3329_11-NonEquals Mem: << []>> 
3329_11-Equals Sto:<< []>> 
3329_11-NonEquals Sto: << []>> 
3329_11-Useless: [1]
3329_11-Constancy: [(7, 0), (4, 32), (2, 32)]
3329_11-ContextAliasing: [(5, 4)]

.....
-----
Block: 3329_10
3329_10Instr:<<['PUSH1 0x40', 'MSTORE', 'JUMP']>> 
3329_10-Stack size: 8 
3329_10-Equals Mem:<< []>> 
3329_10-NonEquals Mem: << []>> 
3329_10-Equals Sto:<< []>> 
3329_10-NonEquals Sto: << []>> 
3329_10-Useless: [1]
3329_10-Constancy: [(7, 0), (4, 32)]
3329_10-ContextAliasing: [(5, 4)]

.....
********************************** END
Memory Analysis: 0.29464223503600806s

*************************************************************
File: Ownable
Build CFG: 0.0034007030189968646s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 1
Memory read accesses ContractOwnable: 2
Memory write accesses ContractOwnable: 2
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 64
64Instr:<<['SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
64-Stack size: 1 
64-Equals Mem:<< []>> 
64-NonEquals Mem: << [<12,2>]>> 
64-Equals Sto:<< []>> 
64-NonEquals Sto: << []>> 
64-Useless: []
64-Constancy: [(0, 0)]
64-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.004468024999368936s

*************************************************************
File: SafeMath
Build CFG: 0.0004174080095253885s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 0
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 9.747297735884786e-05s

*************************************************************
FILERES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA;369;851;65;305;207;22;0.6542002910282463
FILERES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_Ownable;15;15;1;3;2;0;0.00791134499013424
FILERES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_SafeMath;1;1;0;0;0;0;0.0005277379532344639


Aux path: /tmp/0x00//ethir_a5fe4a2c784343099d741b53b090b923
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 424
424Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'DUP5', 'MSTORE', 'PUSH1 0x02', 'DUP7', 'MSTORE', 'SWAP3', 'KECCAK256', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'SWAP1', 'DUP4', 'MSTORE', 'DUP2', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
424-Stack size: 9 
424-Equals Mem:<< [<10,21>, <13,24>]>> 
424-NonEquals Mem: << [<10,30>, <10,13>, <10,24>, <10,33>, <13,30>, <13,21>, <13,33>, <21,30>, <21,24>, <21,33>, <24,30>, <24,33>, <33,15>, <33,27>, <33,30>, <15,30>, <27,30>]>> 
424-Equals Sto:<< []>> 
424-NonEquals Sto: << []>> 
424-Useless: []
424-Constancy: [(8, 0), (5, 32), (4, 64), (3, 0), (1, 64)]
424-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<9,20>, <12,23>], 'memory_deps_noneqs': [<9,29>, <9,12>, <9,23>, <9,32>, <12,29>, <12,20>, <12,32>, <20,29>, <20,23>, <20,32>, <23,29>, <23,32>, <14,32>, <26,32>, <29,32>, <14,29>, <26,29>]}
{'memory_deps_eqs': [<9,20>, <12,23>], 'memory_deps_noneqs': [<9,29>, <9,12>, <9,23>, <9,32>, <12,29>, <12,20>, <12,32>, <20,29>, <20,23>, <20,32>, <23,29>, <23,32>, <14,32>, <26,32>, <29,32>, <14,29>, <26,29>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{27: ((('s(15)', 'sload0'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'keccak2560'), 2), (('0', 's(1)', 'keccak2561'), 2), (('s(15)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(2)', 's(7)', 'mstore'), 2), (('s(0)', '2', 'mstore'), 2), (('s(2)', 's(4)', 'keccak2560'), 2), (('0', 's(1)', 'keccak2561'), 2), (('s(1)', 'mload0'), 1), (('s(6)', 's(16)', 'mstore'), 2)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{27: ((('s(15)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_424_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_424_statistics.csv

Estimated initial gas: 2250
Estimated gas optimized: 2250

Estimated initial size in bytes: 39
Estimated size optimized in bytes: 39

Initial number of instructions: 35
Final number of instructions: 35

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_424;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;424;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;2250;39;35;2250;39;35;0;0;0;True;False;False;False;2.137069420015905;4;4;2100;2100

Block: 528
528Instr:<<['JUMPDEST', 'MLOAD', 'AND', 'DUP5', 'MSTORE', 'DUP3', 'PUSH1 0x20', 'MSTORE', 'DUP5', 'DUP5', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0xff', 'NOT', 'DUP3', 'SLOAD', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x0f35', 'JUMP']>> 
528-Stack size: 9 
528-Equals Mem:<< []>> 
528-NonEquals Mem: << [<4,1>, <4,7>, <7,1>, <1,10>]>> 
528-Equals Sto:<< [<15,19>]>> 
528-NonEquals Sto: << []>> 
528-Useless: []
528-Constancy: [(6, 64), (5, 0)]
528-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>, <3,6>, <0,6>, <0,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>, <3,6>, <0,6>, <0,9>], 'storage_deps_eqs': [<14,18>], 'storage_deps_noneqs': []}
{14: ((('s(9)', 'sload0'), 1), 1), 18: ((('s(9)', 's(10)', 'sstore'), 2), 2)}
Storage order: [(('s(1)', 's(0)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('s(9)', 's(10)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(6)', 'mload0'), 1), (('s(1)', 's(7)', 'mstore'), 2), (('32', 's(2)', 'mstore'), 2), (('s(1)', 's(0)', 'keccak2560'), 2)]
Memory dep: [(2, 3), (1, 3)]
Memory dep simplified: [(2, 3), (1, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{14: ((('s(9)', 'sload0'), 1), 1), 18: ((('s(9)', 's(10)', 'sstore'), 2), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST MLOAD AND DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 PUSH1 0x01 PUSH1 0xff NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x0f35 JUMP

Optimized sequence (basic block per line):
JUMPDEST MLOAD AND DUP5 MSTORE PUSH2 0xf35 DUP6 DUP5 PUSH1 0x20 MSTORE DUP6 KECCAK256 DUP1 SLOAD PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 AND PUSH1 0x1 OR DUP2 SSTORE POP JUMP

Optimized code stored in /tmp/0x00/OBAMA_528_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_528_statistics.csv

Estimated initial gas: 5090
Estimated gas optimized: 5089

Estimated initial size in bytes: 27
Estimated size optimized in bytes: 58

Initial number of instructions: 22
Final number of instructions: 22

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_528;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;528;2;True;True;False;JUMPDEST MLOAD AND DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 PUSH1 0x01 PUSH1 0xff NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x0f35 JUMP;JUMPDEST MLOAD AND DUP5 MSTORE PUSH2 0xf35 DUP6 DUP5 PUSH1 0x20 MSTORE DUP6 KECCAK256 DUP1 SLOAD PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 AND PUSH1 0x1 OR DUP2 SSTORE POP JUMP;5090;27;22;5089;58;22;1;-31;0;True;True;False;False;2.1526298290118575;1;2;5000;5000

Block: 1333
1333Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1333-Stack size: 7 
1333-Equals Mem:<< []>> 
1333-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
1333-Equals Sto:<< []>> 
1333-NonEquals Sto: << []>> 
1333-Useless: []
1333-Constancy: [(6, 0), (2, 64)]
1333-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1333 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1411
1411Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
1411-Stack size: 8 
1411-Equals Mem:<< []>> 
1411-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
1411-Equals Sto:<< []>> 
1411-NonEquals Sto: << []>> 
1411-Useless: []
1411-Constancy: [(7, 0), (3, 64)]
1411-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(6)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(9)', '32', 'mstore'), 2), (('s(11)', '36', 'mstore'), 2), (('s(13)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(15)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized code stored in /tmp/0x00/OBAMA_1411_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1411_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 94

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 79

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1411;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1411;2;True;False;False;JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;94;79;33;94;79;33;0;0;0;True;False;False;False;2.1405270419782028;2;4;0;0

Block: 1490
1490Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x64', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1490-Stack size: 5 
1490-Equals Mem:<< []>> 
1490-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>]>> 
1490-Equals Sto:<< []>> 
1490-NonEquals Sto: << []>> 
1490-Useless: []
1490-Constancy: [(4, 0), (0, 64)]
1490-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '23', 'mstore'), 2), (('s(9)', '52670383177537149983225730548340231168144935501260929414795948319927108108288', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 DUP3 PUSH1 0x64 SWAP5 SWAP1 ADD MSTORE DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_1490_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1490_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 64

Estimated initial size in bytes: 67
Estimated size optimized in bytes: 92

Initial number of instructions: 26
Final number of instructions: 23

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1490;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1490;2;True;True;False;JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 DUP3 PUSH1 0x64 SWAP5 SWAP1 ADD MSTORE DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE REVERT;73;67;26;64;92;23;9;-25;3;True;False;False;False;2.1065257730078883;1;3;0;0

Block: 1576
1576Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0xff', 'PUSH1 0x06', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1576-Stack size: 5 
1576-Equals Mem:<< []>> 
1576-NonEquals Mem: << [<12,7>]>> 
1576-Equals Sto:<< []>> 
1576-NonEquals Sto: << []>> 
1576-Useless: []
1576-Constancy: [(4, 0), (1, 0), (0, 64)]
1576-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{4: ((('6', 'sload0'), 1), 0)}
Storage order: [(('6', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(7)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
MEJORADO: /tmp/gasol_4bb5192a30594c0b817c60c009227c57/jsons/isolated_block_0_0_input.json --- (6, 5)
{4: ((('6', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0xff PUSH1 0x06 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
MLOAD PUSH1 0x6 SLOAD PUSH1 0xff AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/OBAMA_1576_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1576_statistics.csv

Estimated initial gas: 2136
Estimated gas optimized: 2130

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1576;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1576;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0xff PUSH1 0x06 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;MLOAD PUSH1 0x6 SLOAD PUSH1 0xff AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2136;17;14;2130;15;12;6;2;2;True;False;False;False;0.08758204302284867;0;0;2100;2100

Block: 1612
1612Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x11', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1612-Stack size: 5 
1612-Equals Mem:<< []>> 
1612-NonEquals Mem: << [<8,5>]>> 
1612-Equals Sto:<< []>> 
1612-NonEquals Sto: << []>> 
1612-Useless: []
1612-Constancy: [(4, 0), (1, 0), (0, 64)]
1612-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('17', 'sload0'), 1), 0)}
Storage order: [(('17', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('17', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x11 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_1612_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1612_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1612;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1612;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x11 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.035174986987840384;0;0;2100;2100

Block: 1666
1666Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1666-Stack size: 5 
1666-Equals Mem:<< []>> 
1666-NonEquals Mem: << [<4,1>]>> 
1666-Equals Sto:<< []>> 
1666-NonEquals Sto: << []>> 
1666-Useless: []
1666-Constancy: [(0, 64), (1, 32)]
1666-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(1)', '1', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_1666_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1666_statistics.csv

Estimated initial gas: 13
Estimated gas optimized: 13

Estimated initial size in bytes: 7
Estimated size optimized in bytes: 7

Initial number of instructions: 6
Final number of instructions: 6

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1666;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1666;2;False;True;True;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;13;7;6;13;7;6;0;0;0;True;False;False;False;0.00873348000459373;0;0;0;0

Block: 1706
1706Instr:<<['JUMPDEST', 'PUSH1 0x05', 'DUP3', 'MSTORE', 'PUSH5 0x4f42414d41', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0c0c', 'JUMP']>> 
1706-Stack size: 7 
1706-Equals Mem:<< []>> 
1706-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
1706-Equals Sto:<< []>> 
1706-NonEquals Sto: << []>> 
1706-Useless: []
1706-Constancy: [(6, 0), (3, 0), (0, 64)]
1706-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('216', '340413992257', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '5', 'mstore'), 2), (('s(9)', '35849777640627151762946770873929698192744197560477801472073248664810004938752', 'mstore'), 2), (('s(2)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x05 DUP3 MSTORE PUSH5 0x4f42414d41 PUSH1 0xd8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0c0c JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4f42414d41000000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x5 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xc0c JUMP

Optimized code stored in /tmp/0x00/OBAMA_1706_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1706_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1706;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1706;2;False;True;True;JUMPDEST PUSH1 0x05 DUP3 MSTORE PUSH5 0x4f42414d41 PUSH1 0xd8 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0c0c JUMP;JUMPDEST PUSH32 0x4f42414d41000000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x5 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xc0c JUMP;57;28;18;51;52;16;6;-24;2;True;False;False;False;0.2786496200133115;1;0;0;0

Block: 1757
1757Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x10', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1757-Stack size: 5 
1757-Equals Mem:<< []>> 
1757-NonEquals Mem: << [<8,5>]>> 
1757-Equals Sto:<< []>> 
1757-NonEquals Sto: << []>> 
1757-Useless: []
1757-Constancy: [(4, 0), (1, 0), (0, 64)]
1757-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('16', 'sload0'), 1), 0)}
Storage order: [(('16', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('16', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x10 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_1757_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1757_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1757;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1757;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x10 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.036520048044621944;0;0;2100;2100

Block: 1788
1788Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1788-Stack size: 5 
1788-Equals Mem:<< []>> 
1788-NonEquals Mem: << [<13,3>]>> 
1788-Equals Sto:<< []>> 
1788-NonEquals Sto: << []>> 
1788-Useless: []
1788-Constancy: [(4, 0), (1, 0), (0, 64)]
1788-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_1788_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1788_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2121

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 30

Initial number of instructions: 17
Final number of instructions: 9

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1788;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1788;2;False;True;True;SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2145;21;17;2121;30;9;24;-9;8;True;False;False;False;0.08358541899360716;2;0;2100;2100

Block: 1828
1828Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0f', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1828-Stack size: 5 
1828-Equals Mem:<< []>> 
1828-NonEquals Mem: << [<8,5>]>> 
1828-Equals Sto:<< []>> 
1828-NonEquals Sto: << []>> 
1828-Useless: []
1828-Constancy: [(4, 0), (1, 0), (0, 64)]
1828-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('15', 'sload0'), 1), 0)}
Storage order: [(('15', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('15', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x0f SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0xf SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_1828_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_1828_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1828;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;1828;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x0f SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0xf SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.034904767002444714;0;0;2100;2100

Block: 2085
2085Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2085-Stack size: 9 
2085-Equals Mem:<< []>> 
2085-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
2085-Equals Sto:<< []>> 
2085-NonEquals Sto: << []>> 
2085-Useless: []
2085-Constancy: [(8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
2085-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{7: ((('s(9)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', 's(2)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(7)', 'mstore'), 2), (('s(0)', '1', 'mstore'), 2), (('s(3)', 's(2)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(6)', 's(10)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{7: ((('s(9)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x01 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND DUP2 PUSH1 0x1 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/OBAMA_2085_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2085_statistics.csv

Estimated initial gas: 2164
Estimated gas optimized: 2161

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 15

Initial number of instructions: 15
Final number of instructions: 14

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2085;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2085;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x01 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST AND DUP2 PUSH1 0x1 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN;2164;16;15;2161;15;14;3;1;1;True;False;False;False;0.3061003060429357;0;2;2100;2100

Block: 2145
2145Instr:<<['ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'PUSH1 0x20', 'SWAP1', 'DUP4', 'DUP3', 'MSTORE', 'DUP3', 'DUP6', 'KECCAK256', 'SLOAD', 'SWAP4', 'DUP5', 'PUSH2 0x0894', 'JUMPI']>> 
2145-Stack size: 5 
2145-Equals Mem:<< []>> 
2145-NonEquals Mem: << [<2,9>]>> 
2145-Equals Sto:<< []>> 
2145-NonEquals Sto: << []>> 
2145-Useless: []
2145-Constancy: [(4, 0), (2, 0), (0, 64)]
2145-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(2)', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('s(0)', 's(2)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(8)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
ADDRESS DUP4 MSTORE PUSH1 0x01 SWAP2 PUSH1 0x20 SWAP1 DUP4 DUP3 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP4 DUP5 PUSH2 0x0894 JUMPI

Optimized sequence (basic block per line):
PUSH1 0x1 PUSH1 0x20 ADDRESS DUP6 MSTORE MSTORE PUSH1 0x20 DUP2 DUP5 KECCAK256 SLOAD SWAP3 PUSH1 0x1 DUP5 PUSH2 0x894 JUMPI

Optimized code stored in /tmp/0x00/OBAMA_2145_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2145_statistics.csv

Estimated initial gas: 2184
Estimated gas optimized: 2178

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2145;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2145;2;False;True;True;ADDRESS DUP4 MSTORE PUSH1 0x01 SWAP2 PUSH1 0x20 SWAP1 DUP4 DUP3 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP4 DUP5 PUSH2 0x0894 JUMPI;PUSH1 0x1 PUSH1 0x20 ADDRESS DUP6 MSTORE MSTORE PUSH1 0x20 DUP2 DUP5 KECCAK256 SLOAD SWAP3 PUSH1 0x1 DUP5 PUSH2 0x894 JUMPI;2184;22;18;2178;22;16;6;0;2;True;False;False;False;1.1568707230035216;0;2;2100;2100

Block: 2332
2332Instr:<<['SWAP8', 'SWAP5', 'SWAP3', 'DUP10', 'SWAP7', 'SWAP5', 'SWAP2', 'SWAP3', 'DUP9', 'MLOAD', 'SWAP10', 'DUP11', 'SWAP8', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP10', 'MSTORE', 'PUSH1 0xa4', 'DUP10', 'ADD', 'SWAP4', 'DUP10', 'ADD', 'MSTORE', 'DUP9', 'PUSH1 0x24', 'DUP10', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP10', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP8', 'ADD', 'SWAP5', 'SWAP4', 'DUP9', 'SWAP1']>> 
2332-Stack size: 12 
2332-Equals Mem:<< []>> 
2332-NonEquals Mem: << [<17,9>, <17,35>, <24,9>, <24,35>, <29,9>, <29,35>, <34,9>, <34,35>, <38,9>, <38,35>, <9,35>]>> 
2332-Equals Sto:<< []>> 
2332-NonEquals Sto: << []>> 
2332-Useless: []
2332-Constancy: [(11, 0), (9, 0), (7, 64), (2, 32)]
2332-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,17>, <17,35>, <9,24>, <24,35>, <9,29>, <29,35>, <9,34>, <34,35>, <9,38>, <35,38>, <9,35>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,17>, <17,35>, <9,24>, <24,35>, <9,29>, <29,35>, <9,34>, <34,35>, <9,38>, <35,38>, <9,35>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(15)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2), (('s(20)', 's(1)', 'mstore'), 2), (('s(22)', 's(0)', 'mstore'), 2), (('s(24)', '160', 'mstore'), 2), (('s(9)', 'mload1'), 1), (('s(26)', 's(13)', 'mstore'), 2)]
Memory dep: [(4, 6), (3, 6), (2, 6), (1, 6), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 6), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1

Optimized sequence (basic block per line):
SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1

Optimized code stored in /tmp/0x00/OBAMA_2332_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2332_statistics.csv

Estimated initial gas: 138
Estimated gas optimized: 138

Estimated initial size in bytes: 56
Estimated size optimized in bytes: 56

Initial number of instructions: 46
Final number of instructions: 46

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2332;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2332;2;True;False;False;SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1;SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1;138;56;46;138;56;46;0;0;0;True;False;False;False;2.53229924000334;1;4;0;0

Block: 2478
2478Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP13', 'SWAP10', 'POP', 'DUP12', 'SWAP9', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x0954', 'JUMP']>> 
2478-Stack size: 15 
2478-Equals Mem:<< []>> 
2478-NonEquals Mem: << [<6,2>]>> 
2478-Equals Sto:<< []>> 
2478-NonEquals Sto: << []>> 
2478-Useless: []
2478-Constancy: [(14, 0), (12, 0), (10, 64), (9, 0), (2, 32)]
2478-ContextAliasing: [(11, 6)]


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(7)', 'mload0'), 1), (('s(6)', 's(17)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0954 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0954 JUMP

Optimized code stored in /tmp/0x00/OBAMA_2478_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2478_statistics.csv

Estimated initial gas: 82
Estimated gas optimized: 82

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 29

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2478;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2478;2;True;False;False;JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0954 JUMP;JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0954 JUMP;82;29;27;82;29;27;0;0;0;True;False;False;False;2.22226613300154;0;0;0;0

Block: 2595
2595Instr:<<['JUMPDEST', 'AND', 'DUP3', 'MSTORE', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
2595-Stack size: 8 
2595-Equals Mem:<< []>> 
2595-NonEquals Mem: << [<3,10>, <3,5>, <3,15>, <5,10>, <5,15>, <15,6>, <15,10>, <6,10>]>> 
2595-Equals Sto:<< []>> 
2595-NonEquals Sto: << []>> 
2595-Useless: []
2595-Constancy: [(7, 32), (6, 64), (4, 64), (3, 0)]
2595-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,4>, <2,14>, <4,9>, <4,14>, <5,14>, <9,14>, <5,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,4>, <2,14>, <4,9>, <4,14>, <5,14>, <9,14>, <5,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{6: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(3)', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(9)', 'mstore'), 2), (('s(0)', 's(5)', 'mstore'), 2), (('s(4)', 's(3)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(8)', 's(15)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{6: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/OBAMA_2595_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2595_statistics.csv

Estimated initial gas: 2170
Estimated gas optimized: 2167

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 16

Initial number of instructions: 17
Final number of instructions: 16

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2595;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2595;2;False;True;True;JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN;2170;17;17;2167;16;16;3;1;1;True;False;False;False;0.4349950180039741;0;2;2100;2100

Block: 2677
2677Instr:<<['JUMPDEST', 'MLOAD', 'AND', 'DUP5', 'MSTORE', 'DUP3', 'PUSH1 0x20', 'MSTORE', 'DUP5', 'DUP5', 'KECCAK256', 'PUSH1 0xff', 'NOT', 'DUP2', 'SLOAD', 'AND', 'SWAP1', 'SSTORE', 'PUSH2 0x0f35', 'JUMP']>> 
2677-Stack size: 9 
2677-Equals Mem:<< []>> 
2677-NonEquals Mem: << [<4,1>, <4,7>, <7,1>, <1,10>]>> 
2677-Equals Sto:<< [<14,17>]>> 
2677-NonEquals Sto: << []>> 
2677-Useless: []
2677-Constancy: [(6, 64), (5, 0)]
2677-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>, <3,6>, <0,6>, <0,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>, <3,6>, <0,6>, <0,9>], 'storage_deps_eqs': [<13,16>], 'storage_deps_noneqs': []}
{13: ((('s(9)', 'sload0'), 1), 1), 16: ((('s(9)', 's(10)', 'sstore'), 2), 2)}
Storage order: [(('s(1)', 's(0)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('s(9)', 's(10)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(6)', 'mload0'), 1), (('s(1)', 's(7)', 'mstore'), 2), (('32', 's(2)', 'mstore'), 2), (('s(1)', 's(0)', 'keccak2560'), 2)]
Memory dep: [(2, 3), (1, 3)]
Memory dep simplified: [(2, 3), (1, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{13: ((('s(9)', 'sload0'), 1), 1), 16: ((('s(9)', 's(10)', 'sstore'), 2), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST MLOAD AND DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 PUSH1 0xff NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x0f35 JUMP

Optimized sequence (basic block per line):
JUMPDEST MLOAD AND DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 PUSH1 0xff NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x0f35 JUMP

Optimized code stored in /tmp/0x00/OBAMA_2677_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2677_statistics.csv

Estimated initial gas: 5084
Estimated gas optimized: 5084

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 24

Initial number of instructions: 20
Final number of instructions: 20

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2677;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2677;2;True;False;False;JUMPDEST MLOAD AND DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 PUSH1 0xff NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x0f35 JUMP;JUMPDEST MLOAD AND DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE DUP5 DUP5 KECCAK256 PUSH1 0xff NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x0f35 JUMP;5084;24;20;5084;24;20;0;0;0;True;True;False;False;2.1005008449428715;1;2;5000;5000

Block: 3485
3485Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3485-Stack size: 5 
3485-Equals Mem:<< []>> 
3485-NonEquals Mem: << [<13,3>, <23,3>, <8,3>, <18,3>]>> 
3485-Equals Sto:<< []>> 
3485-NonEquals Sto: << []>> 
3485-Useless: []
3485-Constancy: []
3485-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_3485_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_3485_statistics.csv

Estimated initial gas: 70
Estimated gas optimized: 64

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 94

Initial number of instructions: 25
Final number of instructions: 23

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_3485;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;3485;2;False;True;True;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT;70;68;25;64;94;23;6;-26;2;True;False;False;False;0.6217480719788;1;3;0;0

Block: 2725
2725Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2725-Stack size: 5 
2725-Equals Mem:<< []>> 
2725-NonEquals Mem: << [<5,2>]>> 
2725-Equals Sto:<< []>> 
2725-NonEquals Sto: << []>> 
2725-Useless: []
2725-Constancy: [(4, 0), (1, 0), (0, 64)]
2725-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', '9', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_2725_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2725_statistics.csv

Estimated initial gas: 18
Estimated gas optimized: 18

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 7
Final number of instructions: 7

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2725;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2725;2;False;True;True;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;18;9;7;18;9;7;0;0;0;True;False;False;False;0.01726889202836901;0;0;0;0

Block: 4011
4011Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP4', 'PUSH1 0x01', 'DUP6', 'MSTORE', 'PUSH1 0x40', 'SWAP4', 'DUP5', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP3', 'PUSH2 0x0ffc', 'DUP7', 'MLOAD', 'PUSH2 0x0fcb', 'DUP2', 'PUSH2 0x0cab', 'JUMP']>> 
4011-Stack size: 14 
4011-Equals Mem:<< []>> 
4011-NonEquals Mem: << [<8,18>, <3,8>, <3,18>, <13,18>]>> 
4011-Equals Sto:<< []>> 
4011-NonEquals Sto: << []>> 
4011-Useless: []
4011-Constancy: [(0, 0)]
4011-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,17>, <2,7>, <2,17>, <12,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,17>, <2,7>, <2,17>, <12,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(16)', 'sload0'), 1), 1)}
Storage order: [(('s(5)', '64', 'keccak2560'), 2), (('s(16)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('s(5)', '64', 'keccak2560'), 2), (('64', 'mload0'), 1)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(16)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0ffc DUP7 MLOAD PUSH2 0x0fcb DUP2 PUSH2 0x0cab JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0ffc DUP7 MLOAD PUSH2 0x0fcb DUP2 PUSH2 0x0cab JUMP

Optimized code stored in /tmp/0x00/OBAMA_4011_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4011_statistics.csv

Estimated initial gas: 2196
Estimated gas optimized: 2196

Estimated initial size in bytes: 32
Estimated size optimized in bytes: 32

Initial number of instructions: 23
Final number of instructions: 23

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4011;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4011;2;True;False;False;JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0ffc DUP7 MLOAD PUSH2 0x0fcb DUP2 PUSH2 0x0cab JUMP;JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0ffc DUP7 MLOAD PUSH2 0x0fcb DUP2 PUSH2 0x0cab JUMP;2196;32;23;2196;32;23;0;0;0;True;False;False;False;2.155665025988128;0;2;2100;2100

Block: 4043
4043Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP4', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP7', 'DUP8', 'DUP12', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
4043-Stack size: 19 
4043-Equals Mem:<< []>> 
4043-NonEquals Mem: << [<3,11>]>> 
4043-Equals Sto:<< []>> 
4043-NonEquals Sto: << []>> 
4043-Useless: []
4043-Constancy: [(8, 32), (2, 0), (7, 64)]
4043-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(8)', '30', 'mstore'), 2), (('s(12)', '37714057306925736537727343956344029380455708191757305005271024775623175766016', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP

Optimized code stored in /tmp/0x00/OBAMA_4043_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4043_statistics.csv

Estimated initial gas: 45
Estimated gas optimized: 45

Estimated initial size in bytes: 49
Estimated size optimized in bytes: 49

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4043;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4043;2;False;True;True;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP;45;49;14;45;49;14;0;0;0;True;False;False;False;0.32178383303107694;0;0;0;0

Block: 4092
4092Instr:<<['JUMPDEST', 'DUP10', 'DUP3', 'MSTORE', 'PUSH1 0x01', 'DUP9', 'MSTORE', 'DUP7', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP10', 'DUP2', 'MSTORE', 'DUP6', 'PUSH2 0x1036', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x1030', 'DUP4', 'MLOAD', 'PUSH2 0x1020', 'DUP2', 'PUSH2 0x0cab', 'JUMP']>> 
4092-Stack size: 18 
4092-Equals Mem:<< [<3,13>]>> 
4092-NonEquals Mem: << [<13,22>, <18,22>, <3,6>, <6,13>, <3,22>, <6,22>, <9,22>]>> 
4092-Equals Sto:<< [<10,19>]>> 
4092-NonEquals Sto: << []>> 
4092-Useless: []
4092-Constancy: [(7, 32), (1, 0), (6, 64)]
4092-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<2,12>], 'memory_deps_noneqs': [<12,21>, <17,21>, <2,5>, <5,12>, <2,21>, <5,21>, <8,21>]}
{'memory_deps_eqs': [<2,12>], 'memory_deps_noneqs': [<12,21>, <17,21>, <2,5>, <5,12>, <2,21>, <5,21>, <8,21>], 'storage_deps_eqs': [<9,18>], 'storage_deps_noneqs': []}
{9: ((('s(22)', 's(10)', 'sstore'), 2), 1), 18: ((('s(20)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('s(9)', 's(4)', 'keccak2560'), 2), (('s(22)', 's(10)', 'sstore'), 2), (('s(9)', 's(4)', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(9)', 's(1)', 'mstore'), 2), (('s(3)', '1', 'mstore'), 2), (('s(9)', 's(4)', 'keccak2560'), 2), (('s(4)', 'mload0'), 1)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{9: ((('s(22)', 's(10)', 'sstore'), 2), 1), 18: ((('s(20)', 'sload0'), 1), 3)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x1036 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x1030 DUP4 MLOAD PUSH2 0x1020 DUP2 PUSH2 0x0cab JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x1036 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x1030 DUP4 MLOAD PUSH2 0x1020 DUP2 PUSH2 0x0cab JUMP

Optimized code stored in /tmp/0x00/OBAMA_4092_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4092_statistics.csv

Estimated initial gas: 5232
Estimated gas optimized: 5232

Estimated initial size in bytes: 36
Estimated size optimized in bytes: 36

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4092;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4092;2;True;False;False;JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x1036 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x1030 DUP4 MLOAD PUSH2 0x1020 DUP2 PUSH2 0x0cab JUMP;JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x1036 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x1030 DUP4 MLOAD PUSH2 0x1020 DUP2 PUSH2 0x0cab JUMP;5232;36;27;5232;36;27;0;0;0;True;True;False;False;2.2236650270060636;2;4;5100;5100

Block: 4128
4128Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'DUP8', 'DUP8', 'PUSH2 0x0de1', 'JUMP']>> 
4128-Stack size: 22 
4128-Equals Mem:<< []>> 
4128-NonEquals Mem: << [<3,8>]>> 
4128-Equals Sto:<< []>> 
4128-NonEquals Sto: << []>> 
4128-Useless: []
4128-Constancy: [(5, 0), (10, 64), (11, 32), (4, 64)]
4128-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(11)', '30', 'mstore'), 2), (('s(15)', 's(3)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0de1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0de1 JUMP

Optimized code stored in /tmp/0x00/OBAMA_4128_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4128_statistics.csv

Estimated initial gas: 42
Estimated gas optimized: 42

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4128;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4128;2;False;True;True;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0de1 JUMP;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0de1 JUMP;42;16;13;42;16;13;0;0;0;True;False;False;False;0.16451161296572536;0;0;0;0

Block: 4150
4150Instr:<<['JUMPDEST', 'SWAP2', 'DUP12', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP3', 'PUSH2 0x104c', 'DUP5', 'PUSH2 0x0cab', 'JUMP']>> 
4150-Stack size: 19 
4150-Equals Mem:<< []>> 
4150-NonEquals Mem: << [<4,7>, <7,11>, <8,11>, <4,11>]>> 
4150-Equals Sto:<< []>> 
4150-NonEquals Sto: << []>> 
4150-Useless: []
4150-Constancy: [(1, 64), (8, 32), (2, 0), (7, 64)]
4150-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>, <6,10>, <7,10>, <3,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>, <6,10>, <7,10>, <3,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{8: ((('s(15)', 's(11)', 'sstore'), 2), 1)}
Storage order: [(('s(9)', 's(10)', 'keccak2560'), 2), (('s(15)', 's(11)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(9)', 's(0)', 'mstore'), 2), (('s(3)', '1', 'mstore'), 2), (('s(9)', 's(10)', 'keccak2560'), 2), (('s(4)', 'mload0'), 1)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{8: ((('s(15)', 's(11)', 'sstore'), 2), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x104c DUP5 PUSH2 0x0cab JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x104c DUP5 PUSH2 0x0cab JUMP

Optimized code stored in /tmp/0x00/OBAMA_4150_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4150_statistics.csv

Estimated initial gas: 5078
Estimated gas optimized: 5078

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4150;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4150;2;False;True;True;JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x104c DUP5 PUSH2 0x0cab JUMP;JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x104c DUP5 PUSH2 0x0cab JUMP;5078;22;17;5078;22;17;0;0;0;True;False;False;False;0.6737940139719285;0;2;5000;5000

Block: 4172
4172Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP5', 'MSTORE', 'DUP7', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
4172-Stack size: 17 
4172-Equals Mem:<< []>> 
4172-NonEquals Mem: << [<3,7>]>> 
4172-Equals Sto:<< []>> 
4172-NonEquals Sto: << []>> 
4172-Useless: []
4172-Constancy: [(6, 32), (5, 64)]
4172-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', '30', 'mstore'), 2), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP

Optimized code stored in /tmp/0x00/OBAMA_4172_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4172_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 13
Estimated size optimized in bytes: 13

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4172;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4172;2;False;True;True;JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP;JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP;33;13;10;33;13;10;0;0;0;True;False;False;False;0.04989807499805465;0;0;0;0

Block: 2795
2795Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'DUP6', 'MLOAD', 'SWAP2', 'SWAP1', 'PUSH2 0x0b12', 'DUP4', 'PUSH2 0x0cc7', 'JUMP']>> 
2795-Stack size: 11 
2795-Equals Mem:<< [<9,18>, <12,20>]>> 
2795-NonEquals Mem: << [<9,24>, <9,12>, <9,20>, <12,24>, <12,18>, <18,24>, <18,20>, <20,24>, <15,24>, <21,24>]>> 
2795-Equals Sto:<< []>> 
2795-NonEquals Sto: << []>> 
2795-Useless: []
2795-Constancy: [(10, 0), (7, 32), (6, 64), (1, 64), (0, 0)]
2795-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<8,17>, <11,19>], 'memory_deps_noneqs': [<8,23>, <8,11>, <8,19>, <11,23>, <11,17>, <17,23>, <17,19>, <19,23>, <14,23>, <20,23>]}
{'memory_deps_eqs': [<8,17>, <11,19>], 'memory_deps_noneqs': [<8,23>, <8,11>, <8,19>, <11,23>, <11,17>, <17,23>, <17,19>, <19,23>, <14,23>, <20,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{21: ((('s(12)', 'sload0'), 1), 2)}
Storage order: [(('s(7)', 's(6)', 'keccak2560'), 2), (('s(7)', 's(6)', 'keccak2561'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(7)', 's(15)', 'mstore'), 2), (('s(0)', '2', 'mstore'), 2), (('s(7)', 's(6)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{21: ((('s(12)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x02 DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 PUSH2 0x0b12 DUP4 PUSH2 0x0cc7 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 PUSH1 0x2 DUP11 MSTORE PUSH2 0xb12 SWAP4 SWAP3 SWAP5 SWAP4 SWAP5 SWAP2 SWAP1 MSTORE KECCAK256 SLOAD DUP7 MLOAD SWAP3 DUP4 PUSH2 0xcc7 JUMP

Optimized code stored in /tmp/0x00/OBAMA_2795_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2795_statistics.csv

Estimated initial gas: 2246
Estimated gas optimized: 2202

Estimated initial size in bytes: 39
Estimated size optimized in bytes: 50

Initial number of instructions: 31
Final number of instructions: 25

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2795;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2795;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x02 DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 PUSH2 0x0b12 DUP4 PUSH2 0x0cc7 JUMP;JUMPDEST DUP5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 PUSH1 0x2 DUP11 MSTORE PUSH2 0xb12 SWAP4 SWAP3 SWAP5 SWAP4 SWAP5 SWAP2 SWAP1 MSTORE KECCAK256 SLOAD DUP7 MLOAD SWAP3 DUP4 PUSH2 0xcc7 JUMP;2246;39;31;2202;50;25;44;-11;6;True;False;False;False;2.153884174011182;4;4;2100;2100

Block: 2834
2834Instr:<<['JUMPDEST', 'PUSH1 0x28', 'DUP4', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'DUP9', 'DUP5', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'DUP8', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0de1', 'JUMP']>> 
2834-Stack size: 11 
2834-Equals Mem:<< []>> 
2834-NonEquals Mem: << [<3,8>, <3,15>, <8,15>]>> 
2834-Equals Sto:<< []>> 
2834-NonEquals Sto: << []>> 
2834-Useless: []
2834-Constancy: [(10, 0), (7, 32), (6, 64)]
2834-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>, <2,14>, <7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>, <2,14>, <7,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('192', '7812742012107383653', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', '40', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859100820671745083778533502622993977909345', 'mstore'), 2), (('s(10)', '49041376442327685983450583443845300569967147870487584211451521639864848089088', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x28 DUP4 MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP9 DUP5 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL DUP8 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x6c6c6f77616e6365000000000000000000000000000000000000000000000000 DUP4 DUP9 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP4 DUP10 ADD MSTORE PUSH1 0x28 DUP4 MSTORE PUSH2 0xde1 JUMP

Optimized code stored in /tmp/0x00/OBAMA_2834_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2834_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 62
Estimated size optimized in bytes: 83

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2834;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2834;2;False;True;True;JUMPDEST PUSH1 0x28 DUP4 MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP9 DUP5 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL DUP8 DUP5 ADD MSTORE PUSH2 0x0de1 JUMP;JUMPDEST PUSH32 0x6c6c6f77616e6365000000000000000000000000000000000000000000000000 DUP4 DUP9 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP4 DUP10 ADD MSTORE PUSH1 0x28 DUP4 MSTORE PUSH2 0xde1 JUMP;57;62;18;51;83;16;6;-21;2;True;False;False;False;0.32141475804382935;1;0;0;0

Block: 3594
3594Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0e26', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0c0c', 'JUMP']>> 
3594-Stack size: 11 
3594-Equals Mem:<< []>> 
3594-NonEquals Mem: << [<7,2>]>> 
3594-Equals Sto:<< []>> 
3594-NonEquals Sto: << []>> 
3594-Useless: []
3594-Constancy: []
3594-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(7)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x0e26 SWAP1 PUSH1 0x04 DUP4 ADD PUSH2 0x0c0c JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xe26 DUP2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 PUSH1 0x4 DUP4 ADD PUSH2 0xc0c JUMP

Optimized code stored in /tmp/0x00/OBAMA_3594_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_3594_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 45

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 14

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_3594;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;3594;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x0e26 SWAP1 PUSH1 0x04 DUP4 ADD PUSH2 0x0c0c JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xe26 DUP2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 PUSH1 0x4 DUP4 ADD PUSH2 0xc0c JUMP;57;28;18;45;52;14;12;-24;4;True;False;False;False;0.18069420603569597;1;0;0;0

Block: 4193
4193Instr:<<['JUMPDEST', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH2 0x1077', 'DUP5', 'PUSH1 0x40', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x167e', 'JUMP']>> 
4193-Stack size: 14 
4193-Equals Mem:<< []>> 
4193-NonEquals Mem: << [<3,6>]>> 
4193-Equals Sto:<< []>> 
4193-NonEquals Sto: << []>> 
4193-Useless: []
4193-Constancy: [(0, 0)]
4193-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(10)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('s(3)', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(8)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x1077 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x167e JUMP

Optimized sequence (basic block per line):
JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x1077 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x167e JUMP

Optimized code stored in /tmp/0x00/OBAMA_4193_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4193_statistics.csv

Estimated initial gas: 2171
Estimated gas optimized: 2171

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 15
Final number of instructions: 15

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4193;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4193;2;False;True;True;JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x1077 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x167e JUMP;JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x1077 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x167e JUMP;2171;22;15;2171;22;15;0;0;0;True;False;False;False;0.226748661021702;0;2;2100;2100

Block: 5779
5779Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5779-Stack size: 16 
5779-Equals Mem:<< []>> 
5779-NonEquals Mem: << [<22,2>, <7,2>, <17,2>, <12,2>]>> 
5779-Equals Sto:<< []>> 
5779-NonEquals Sto: << []>> 
5779-Useless: []
5779-Constancy: []
5779-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '27', 'mstore'), 2), (('s(9)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1b DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized code stored in /tmp/0x00/OBAMA_5779_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5779_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 67

Estimated initial size in bytes: 69
Estimated size optimized in bytes: 95

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5779;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5779;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1b DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;73;69;26;67;95;24;6;-26;2;True;False;False;False;0.4552227769745514;1;3;0;0

Block: 4246
4246Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'SWAP3', 'PUSH1 0x20', 'SWAP4', 'DUP1', 'DUP6', 'MSTORE', 'PUSH1 0xff', 'SWAP2', 'PUSH1 0x40', 'SWAP1', 'DUP4', 'DUP3', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x1568', 'JUMPI']>> 
4246-Stack size: 13 
4246-Equals Mem:<< []>> 
4246-NonEquals Mem: << [<5,12>]>> 
4246-Equals Sto:<< []>> 
4246-NonEquals Sto: << []>> 
4246-Useless: []
4246-Constancy: [(1, 0), (3, 0)]
4246-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{20: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', '64', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(0)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('s(3)', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{20: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1568 JUMPI

Optimized sequence (basic block per line):
JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1568 JUMPI

Optimized code stored in /tmp/0x00/OBAMA_4246_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4246_statistics.csv

Estimated initial gas: 2209
Estimated gas optimized: 2209

Estimated initial size in bytes: 33
Estimated size optimized in bytes: 33

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4246;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4246;2;True;False;False;JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1568 JUMPI;JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1568 JUMPI;2209;33;27;2209;33;27;0;0;0;True;False;False;False;2.134188127995003;0;2;2100;2100

Block: 4323
4323Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'SWAP10', 'DUP11', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'DUP1', 'SWAP2', 'DIV', 'SWAP9', 'DUP7', 'PUSH1 0x06', 'SLOAD', 'AND', 'PUSH2 0x149b', 'JUMPI']>> 
4323-Stack size: 19 
4323-Equals Mem:<< []>> 
4323-NonEquals Mem: << [<3,9>]>> 
4323-Equals Sto:<< []>> 
4323-NonEquals Sto: << []>> 
4323-Useless: [9, 3]
4323-Constancy: [(7, 0), (3, 32), (4, 64), (9, 32)]
4323-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{16: ((('6', 'sload0'), 1), 0)}
Storage order: [(('6', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(9)', '26', 'mstore'), 2), (('s(15)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{16: ((('6', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x149b JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x149b JUMPI

Optimized code stored in /tmp/0x00/OBAMA_4323_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4323_statistics.csv

Estimated initial gas: 2167
Estimated gas optimized: 2167

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 21
Final number of instructions: 21

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4323;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4323;2;True;False;False;JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x149b JUMPI;JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x149b JUMPI;2167;58;21;2167;58;21;0;0;0;True;False;False;False;2.145498976984527;0;0;2100;2100

Block: 4423
4423Instr:<<['JUMPDEST', 'POP', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'DUP3', 'DUP7', 'MSTORE', 'DUP7', 'DUP11', 'KECCAK256', 'SLOAD', 'SWAP2', 'DUP1', 'DUP11', 'PUSH1 0xa8', 'SHR', 'AND', 'ISZERO', 'SWAP2', 'DUP3', 'PUSH2 0x1367', 'JUMPI']>> 
4423-Stack size: 21 
4423-Equals Mem:<< []>> 
4423-NonEquals Mem: << [<4,9>]>> 
4423-Equals Sto:<< []>> 
4423-NonEquals Sto: << []>> 
4423-Useless: []
4423-Constancy: [(9, 0), (6, 64), (5, 32)]
4423-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(20)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(20)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(22)', 'mstore'), 2), (('s(4)', '1', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
********************IT*********************
{11: ((('s(20)', 'sload0'), 1), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4423 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4639
4639Instr:<<['SWAP9', 'SWAP6', 'SWAP4', 'SWAP1', 'SWAP2', 'SWAP3', 'DUP11', 'SWAP8', 'SWAP6', 'SWAP4', 'DUP10', 'MLOAD', 'SWAP11', 'DUP12', 'SWAP9', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP11', 'MSTORE', 'PUSH1 0xa4', 'DUP11', 'ADD', 'SWAP4', 'DUP11', 'ADD', 'MSTORE', 'DUP10', 'PUSH1 0x24', 'DUP11', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP11', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP9', 'ADD', 'SWAP6', 'SWAP4', 'DUP10', 'SWAP1']>> 
4639-Stack size: 23 
4639-Equals Mem:<< []>> 
4639-NonEquals Mem: << [<31,37>, <26,11>, <36,37>, <31,11>, <40,37>, <36,11>, <11,37>, <40,11>, <19,37>, <19,11>, <26,37>]>> 
4639-Equals Sto:<< []>> 
4639-NonEquals Sto: << []>> 
4639-Useless: []
4639-Constancy: [(8, 64), (10, 0), (2, 32)]
4639-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<31,37>, <11,26>, <36,37>, <11,31>, <37,40>, <11,36>, <11,37>, <11,40>, <19,37>, <11,19>, <26,37>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<31,37>, <11,26>, <36,37>, <11,31>, <37,40>, <11,36>, <11,37>, <11,40>, <19,37>, <11,19>, <26,37>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(16)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2), (('s(21)', 's(1)', 'mstore'), 2), (('s(23)', 's(0)', 'mstore'), 2), (('s(25)', '160', 'mstore'), 2), (('s(10)', 'mload1'), 1), (('s(27)', 's(14)', 'mstore'), 2)]
Memory dep: [(4, 6), (3, 6), (2, 6), (1, 6), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 6), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1

Optimized sequence (basic block per line):
SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1

Optimized code stored in /tmp/0x00/OBAMA_4639_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4639_statistics.csv

Estimated initial gas: 144
Estimated gas optimized: 144

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 48
Final number of instructions: 48

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4639;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4639;2;True;False;False;SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1;SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1;144;58;48;144;58;48;0;0;0;True;False;False;False;2.5825454409932718;1;4;0;0

Block: 4843
4843Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP9', 'MSTORE', 'DUP14', 'SWAP11', 'POP', 'DUP13', 'SWAP10', 'POP', 'SWAP7', 'DUP3', 'ADD', 'SWAP7', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x1259', 'JUMP']>> 
4843-Stack size: 26 
4843-Equals Mem:<< []>> 
4843-NonEquals Mem: << [<6,2>]>> 
4843-Equals Sto:<< []>> 
4843-NonEquals Sto: << []>> 
4843-Useless: []
4843-Constancy: [(2, 32), (11, 64), (10, 0), (13, 0)]
4843-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(8)', 'mload0'), 1), (('s(6)', 's(18)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1259 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1259 JUMP

Optimized code stored in /tmp/0x00/OBAMA_4843_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_4843_statistics.csv

Estimated initial gas: 82
Estimated gas optimized: 82

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 29

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4843;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;4843;2;True;False;False;JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1259 JUMP;JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1259 JUMP;82;29;27;82;29;27;0;0;0;True;False;False;False;2.2321785140084103;0;0;0;0

Block: 5974
5974Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5974-Stack size: 11 
5974-Equals Mem:<< []>> 
5974-NonEquals Mem: << [<5,8>]>> 
5974-Equals Sto:<< []>> 
5974-NonEquals Sto: << []>> 
5974-Useless: []
5974-Constancy: []
5974-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5974 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5018
5018Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'DIV', 'SWAP10', 'PUSH0', 'PUSH2 0x1147', 'JUMP']>> 
5018-Stack size: 24 
5018-Equals Mem:<< []>> 
5018-NonEquals Mem: << [<3,5>]>> 
5018-Equals Sto:<< []>> 
5018-NonEquals Sto: << []>> 
5018-Useless: [3, 5]
5018-Constancy: [(12, 0), (8, 32), (9, 64), (1, 32)]
5018-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(14)', '26', 'mstore'), 2), (('s(16)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x1147 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x1147 JUMP

Optimized code stored in /tmp/0x00/OBAMA_5018_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5018_statistics.csv

Estimated initial gas: 37
Estimated gas optimized: 37

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 11
Final number of instructions: 11

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5018;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5018;2;False;True;True;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x1147 JUMP;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x1147 JUMP;37;14;11;37;14;11;0;0;0;True;False;False;False;0.178739950992167;0;0;0;0

Block: 5876
5876Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5876-Stack size: 19 
5876-Equals Mem:<< []>> 
5876-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5876-Equals Sto:<< []>> 
5876-NonEquals Sto: << []>> 
5876-Useless: []
5876-Constancy: []
5876-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '119', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '33', 'mstore'), 2), (('s(9)', '37714057306925736537727341711534603569002632158006504148307520321239491439727', 'mstore'), 2), (('s(11)', '53825228981408700216425575062632269666168469434418855940216611316178368856064', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_5876_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5876_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5876;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5876;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;79;33;79;132;28;15;-53;5;True;False;False;False;2.12740658398252;2;4;0;0

Block: 5063
5063Instr:<<['DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x01', 'DUP7', 'MSTORE', 'PUSH2 0x13da', 'DUP12', 'DUP9', 'DUP13', 'KECCAK256', 'SLOAD', 'PUSH2 0x0f28', 'JUMP']>> 
5063-Stack size: 21 
5063-Equals Mem:<< []>> 
5063-NonEquals Mem: << [<2,5>]>> 
5063-Equals Sto:<< []>> 
5063-NonEquals Sto: << []>> 
5063-Useless: []
5063-Constancy: [(9, 0), (6, 64), (5, 32)]
5063-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(18)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(7)', 'keccak2560'), 2), (('s(18)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(0)', 'mstore'), 2), (('s(8)', '1', 'mstore'), 2), (('s(4)', 's(7)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(18)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x13da DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0f28 JUMP

Optimized sequence (basic block per line):
DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x13da DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0f28 JUMP

Optimized code stored in /tmp/0x00/OBAMA_5063_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5063_statistics.csv

Estimated initial gas: 2171
Estimated gas optimized: 2171

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5063;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5063;2;False;True;True;DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x13da DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0f28 JUMP;DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x13da DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0f28 JUMP;2171;19;14;2171;19;14;0;0;0;True;False;False;False;0.3380829759989865;0;2;2100;2100

Block: 5109
5109Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
5109-Stack size: 21 
5109-Equals Mem:<< []>> 
5109-NonEquals Mem: << [<7,2>, <18,2>, <23,2>, <13,2>]>> 
5109-Equals Sto:<< []>> 
5109-NonEquals Sto: << []>> 
5109-Useless: []
5109-Constancy: [(9, 0), (6, 64), (5, 32)]
5109-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(10)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(13)', 's(2)', 'mstore'), 2), (('s(15)', '26', 'mstore'), 2), (('s(17)', '31422294206539596639392900160051577764598592111541354583441290478353383424000', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized code stored in /tmp/0x00/OBAMA_5109_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5109_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 76

Estimated initial size in bytes: 66
Estimated size optimized in bytes: 66

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5109;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5109;2;True;False;False;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;76;66;27;76;66;27;0;0;0;True;False;False;False;2.1418024029699154;1;3;0;0

Block: 3574
3574Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3574-Stack size: 7 
3574-Equals Mem:<< []>> 
3574-NonEquals Mem: << [<5,8>]>> 
3574-Equals Sto:<< []>> 
3574-NonEquals Sto: << []>> 
3574-Useless: []
3574-Constancy: []
3574-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_3574 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5175
5175Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
5175-Stack size: 21 
5175-Equals Mem:<< []>> 
5175-NonEquals Mem: << [<7,2>, <18,2>, <23,2>, <13,2>]>> 
5175-Equals Sto:<< []>> 
5175-NonEquals Sto: << []>> 
5175-Useless: []
5175-Constancy: [(9, 0), (6, 64), (5, 32)]
5175-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(10)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(13)', 's(2)', 'mstore'), 2), (('s(15)', '25', 'mstore'), 2), (('s(17)', '31422294206539596639392900159971917510378963875690889976315079369673265905664', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized code stored in /tmp/0x00/OBAMA_5175_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5175_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 76

Estimated initial size in bytes: 66
Estimated size optimized in bytes: 66

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5175;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5175;2;True;False;False;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;76;66;27;76;66;27;0;0;0;True;False;False;False;2.1575982319773175;1;3;0;0

Block: 5241
5241Instr:<<['JUMPDEST', 'POP', 'DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x03', 'DUP7', 'MSTORE', 'DUP2', 'DUP8', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x1133', 'JUMP']>> 
5241-Stack size: 22 
5241-Equals Mem:<< []>> 
5241-NonEquals Mem: << [<4,7>]>> 
5241-Equals Sto:<< []>> 
5241-NonEquals Sto: << []>> 
5241-Useless: []
5241-Constancy: [(10, 0), (6, 32), (7, 64)]
5241-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(17)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(7)', 'keccak2560'), 2), (('s(17)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(0)', 'mstore'), 2), (('s(8)', '3', 'mstore'), 2), (('s(4)', 's(7)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
********************IT*********************
{10: ((('s(17)', 'sload0'), 1), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5241 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5295
5295Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'DUP5', 'DUP9', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'ISZERO', 'PUSH2 0x14d1', 'JUMPI']>> 
5295-Stack size: 19 
5295-Equals Mem:<< []>> 
5295-NonEquals Mem: << [<2,5>]>> 
5295-Equals Sto:<< []>> 
5295-NonEquals Sto: << []>> 
5295-Useless: []
5295-Constancy: [(7, 0), (3, 32), (4, 64)]
5295-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{9: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(15)', 'mstore'), 2), (('s(4)', '5', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{9: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x14d1 JUMPI

Optimized sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x14d1 JUMPI

Optimized code stored in /tmp/0x00/OBAMA_5295_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5295_statistics.csv

Estimated initial gas: 2174
Estimated gas optimized: 2174

Estimated initial size in bytes: 18
Estimated size optimized in bytes: 18

Initial number of instructions: 15
Final number of instructions: 15

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5295;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5295;2;False;True;True;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x14d1 JUMPI;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x14d1 JUMPI;2174;18;15;2174;18;15;0;0;0;True;False;False;False;0.33984489704016596;0;2;2100;2100

Block: 5313
5313Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'NUMBER', 'DUP6', 'DUP10', 'KECCAK256', 'SSTORE', 'PUSH2 0x111d', 'JUMP']>> 
5313-Stack size: 19 
5313-Equals Mem:<< []>> 
5313-NonEquals Mem: << [<2,5>]>> 
5313-Equals Sto:<< []>> 
5313-NonEquals Sto: << []>> 
5313-Useless: []
5313-Constancy: [(7, 0), (3, 32), (4, 64)]
5313-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(10)', 's(11)', 'sstore'), 2), 1)}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(10)', 's(11)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(9)', 'mstore'), 2), (('s(4)', '5', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{10: ((('s(10)', 's(11)', 'sstore'), 2), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x111d JUMP

Optimized sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x111d JUMP

Optimized code stored in /tmp/0x00/OBAMA_5313_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5313_statistics.csv

Estimated initial gas: 5066
Estimated gas optimized: 5066

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5313;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5313;2;False;True;True;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x111d JUMP;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x111d JUMP;5066;16;13;5066;16;13;0;0;0;True;False;False;False;0.19660108804237098;0;2;5000;5000

Block: 5329
5329Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP8', 'ADD', 'DUP6', 'SWAP1', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'DUP2', 'DUP5', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'SWAP1', 'REVERT']>> 
5329-Stack size: 19 
5329-Equals Mem:<< []>> 
5329-NonEquals Mem: << [<35,2>, <7,2>, <13,2>, <18,2>, <23,2>, <28,2>]>> 
5329-Equals Sto:<< []>> 
5329-NonEquals Sto: << []>> 
5329-Useless: []
5329-Constancy: [(7, 0), (3, 32), (4, 64)]
5329-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,34>, <1,6>, <1,12>, <1,17>, <1,22>, <1,27>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,34>, <1,6>, <1,12>, <1,17>, <1,22>, <1,27>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('185', '298657957751934857751', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(8)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(11)', 's(2)', 'mstore'), 2), (('s(13)', '73', 'mstore'), 2), (('s(15)', '43175464300754785199614199185070010317087193698741912792988322009422349034092', 'mstore'), 2), (('s(17)', '45860600759840658865901563111326240759021334497413467019838167414095995691883', 'mstore'), 2), (('s(19)', '14646143631966502206444807779315018622133502848875313473344638166890690117632', 'mstore'), 2)]
Memory dep: [(5, 6), (4, 6), (3, 6), (2, 6), (1, 6), (4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(5, 6), (4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT

Optimized code stored in /tmp/0x00/OBAMA_5329_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5329_statistics.csv

Estimated initial gas: 112
Estimated gas optimized: 112

Estimated initial size in bytes: 122
Estimated size optimized in bytes: 122

Initial number of instructions: 39
Final number of instructions: 39

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5329;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5329;2;True;False;False;JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT;JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT;112;122;39;112;122;39;0;0;0;True;False;False;False;2.2757388500031084;2;5;0;0

Block: 5507
5507Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5507-Stack size: 12 
5507-Equals Mem:<< []>> 
5507-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5507-Equals Sto:<< []>> 
5507-NonEquals Sto: << []>> 
5507-Useless: []
5507-Constancy: [(0, 0)]
5507-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '41', 'mstore'), 2), (('s(9)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(11)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_5507_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5507_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 87
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5507;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5507;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;87;33;79;132;28;15;-45;5;True;False;False;False;2.1250623670057394;2;4;0;0

Block: 5594
5594Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5594-Stack size: 12 
5594-Equals Mem:<< []>> 
5594-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5594-Equals Sto:<< []>> 
5594-NonEquals Sto: << []>> 
5594-Useless: []
5594-Constancy: [(0, 0)]
5594-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '35', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(11)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_5594_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5594_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5594;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5594;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;79;132;28;15;-51;5;True;False;False;False;2.150669182999991;2;4;0;0

Block: 5675
5675Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5675-Stack size: 12 
5675-Equals Mem:<< []>> 
5675-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5675-Equals Sto:<< []>> 
5675-NonEquals Sto: << []>> 
5675-Useless: []
5675-Constancy: [(4, 0)]
5675-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '37', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(11)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_5675_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_5675_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_5675;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;5675;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;83;33;79;132;28;15;-49;5;True;False;False;False;2.1249772459850647;2;4;0;0

Block: 2923
2923Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH8 0x016345785d8a0000', 'DUP2', 'MSTORE', 'RETURN']>> 
2923-Stack size: 5 
2923-Equals Mem:<< []>> 
2923-NonEquals Mem: << [<5,2>]>> 
2923-Equals Sto:<< []>> 
2923-NonEquals Sto: << []>> 
2923-Useless: []
2923-Constancy: [(4, 0), (1, 0), (0, 64)]
2923-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', '100000000000000000', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH8 0x016345785d8a0000 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH8 0x016345785d8a0000 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_2923_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2923_statistics.csv

Estimated initial gas: 18
Estimated gas optimized: 18

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 7
Final number of instructions: 7

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2923;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2923;2;False;True;True;PUSH1 0x20 SWAP1 MLOAD PUSH8 0x016345785d8a0000 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH8 0x016345785d8a0000 DUP2 MSTORE RETURN;18;16;7;18;16;7;0;0;0;True;False;False;False;0.01643190602771938;0;0;0;0

Block: 2958
2958Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x12', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2958-Stack size: 5 
2958-Equals Mem:<< []>> 
2958-NonEquals Mem: << [<8,5>]>> 
2958-Equals Sto:<< []>> 
2958-NonEquals Sto: << []>> 
2958-Useless: []
2958-Constancy: [(4, 0), (1, 0), (0, 64)]
2958-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('18', 'sload0'), 1), 0)}
Storage order: [(('18', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('18', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/OBAMA_2958_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_2958_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2958;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;2958;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.03832423803396523;0;0;2100;2100

Block: 3719
3719Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3719-Stack size: 9 
3719-Equals Mem:<< []>> 
3719-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3719-Equals Sto:<< []>> 
3719-NonEquals Sto: << []>> 
3719-Useless: []
3719-Constancy: [(5, 32)]
3719-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '34', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(11)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_3719_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_3719_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_3719;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;3719;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;80;33;79;132;28;15;-52;5;True;False;False;False;2.1283746939734556;2;4;0;0

Block: 3799
3799Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3799-Stack size: 10 
3799-Equals Mem:<< []>> 
3799-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3799-Equals Sto:<< []>> 
3799-NonEquals Sto: << []>> 
3799-Useless: []
3799-Constancy: [(6, 32)]
3799-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '36', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(11)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/OBAMA_3799_optimized.txt
Optimality results stored in /tmp/0x00/OBAMA_3799_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 82

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 133

Initial number of instructions: 33
Final number of instructions: 29

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_3799;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;OBAMA;3799;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;82;133;29;12;-52;4;True;False;False;False;2.1074089980102144;2;4;0;0

Block: 3084
3084Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3084-Stack size: 8 
3084-Equals Mem:<< []>> 
3084-NonEquals Mem: << []>> 
3084-Equals Sto:<< []>> 
3084-NonEquals Sto: << []>> 
3084-Useless: []
3084-Constancy: []
3084-ContextAliasing: []

Block: 3223
3223Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3223-Stack size: 5 
3223-Equals Mem:<< []>> 
3223-NonEquals Mem: << [<5,8>]>> 
3223-Equals Sto:<< []>> 
3223-NonEquals Sto: << []>> 
3223-Useless: []
3223-Constancy: []
3223-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_3223 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 361
361Instr:<<['DUP1', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x0a', 'SSTORE', 'DUP1', 'RETURN']>> 
361-Stack size: 2 
361-Equals Mem:<< []>> 
361-NonEquals Mem: << []>> 
361-Equals Sto:<< []>> 
361-NonEquals Sto: << [<2,4>]>> 
361-Useless: []
361-Constancy: [(1, 0)]
361-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{2: ((('9', 's(1)', 'sstore'), 2), 0), 4: ((('10', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('9', 's(1)', 'sstore'), 2), (('10', 's(1)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('9', 's(1)', 'sstore'), 2), 0), 4: ((('10', 's(1)', 'sstore'), 2), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_361 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 628
628Instr:<<['PUSH1 0x13', 'SLOAD', 'SWAP2', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'PUSH12 0xffffffffffffffffffffffff', 'PUSH1 0xa0', 'SHL', 'SWAP4', 'DUP2', 'DUP6', 'DUP3', 'AND', 'OR', 'PUSH1 0x13', 'SSTORE', 'ADDRESS', 'ISZERO', 'PUSH2 0x0583', 'JUMPI']>> 
628-Stack size: 5 
628-Equals Mem:<< []>> 
628-NonEquals Mem: << []>> 
628-Equals Sto:<< [<1,14>]>> 
628-NonEquals Sto: << []>> 
628-Useless: []
628-Constancy: [(4, 0), (0, 64)]
628-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<1,14>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '79228162514264337593543950335', 'shl')
{1: ((('19', 'sload0'), 1), 0), 14: ((('19', 's(11)', 'sstore'), 2), 1)}
Storage order: [(('19', 'sload0'), 1), (('19', 's(11)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('19', 'sload0'), 1), 0), 14: ((('19', 's(11)', 'sstore'), 2), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_628 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1061
1061Instr:<<['JUMPDEST', 'POP', 'POP', 'DUP1', 'SLOAD', 'PUSH3 0xff00ff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH3 0x010001', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
1061-Stack size: 4 
1061-Equals Mem:<< []>> 
1061-NonEquals Mem: << []>> 
1061-Equals Sto:<< [<4,15>]>> 
1061-NonEquals Sto: << []>> 
1061-Useless: []
1061-Constancy: [(3, 0)]
1061-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,14>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '65537', 'shl')
[RULE]: Evaluate expression ('160', '16711935', 'shl')
{2: ((('s(1)', 'sload0'), 1), 0), 14: ((('s(1)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('s(1)', 'sload0'), 1), (('s(1)', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('s(1)', 'sload0'), 1), 0), 14: ((('s(1)', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_1061 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2196
2196Instr:<<['JUMPDEST', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP7', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'DUP9', 'PUSH1 0x14', 'SLOAD', 'AND', 'OR', 'PUSH1 0x14', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP4', 'PUSH2 0x08b5', 'DUP6', 'PUSH2 0x0cc7', 'JUMP']>> 
2196-Stack size: 8 
2196-Equals Mem:<< []>> 
2196-NonEquals Mem: << []>> 
2196-Equals Sto:<< [<11,15>]>> 
2196-NonEquals Sto: << []>> 
2196-Useless: []
2196-Constancy: [(7, 0), (5, 0), (3, 64), (2, 32)]
2196-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<10,14>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '255', 'shl')
[RULE]: Evaluate expression ('168', '1', 'shl')
{10: ((('20', 'sload0'), 1), 0), 14: ((('20', 's(15)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(15)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: [(('s(3)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{10: ((('20', 'sload0'), 1), 0), 14: ((('20', 's(15)', 'sstore'), 2), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2196 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2434
2434Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'DUP1', 'DUP3', 'DUP1', 'DUP1', 'DUP1', 'DUP1', 'PUSH2 0x0877', 'JUMP']>> 
2434-Stack size: 4 
2434-Equals Mem:<< []>> 
2434-NonEquals Mem: << []>> 
2434-Equals Sto:<< [<4,7>]>> 
2434-NonEquals Sto: << []>> 
2434-Useless: []
2434-Constancy: [(3, 0), (1, 0)]
2434-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,6>], 'storage_deps_noneqs': []}
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(9)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(9)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(9)', 'sstore'), 2), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_2434 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4285
4285Instr:<<['DUP7', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0b', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x1559', 'JUMPI']>> 
4285-Stack size: 16 
4285-Equals Mem:<< []>> 
4285-NonEquals Mem: << []>> 
4285-Equals Sto:<< []>> 
4285-NonEquals Sto: << [<3,5>]>> 
4285-Useless: []
4285-Constancy: [(1, 64), (4, 0), (6, 32)]
4285-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,5>]}
{3: ((('14', 'sload0'), 1), 0), 5: ((('11', 'sload1'), 1), 1)}
Storage order: [(('14', 'sload0'), 1), (('11', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
EQ(0,X)
[RULE]: Simplification rule type 2: {'id': 'ISZERO_0', 'opcode': '15', 'disasm': 'ISZERO', 'inpt_sk': ['s(11)'], 'outpt_sk': ['s(10)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Delete rules: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{3: ((('14', 'sload0'), 1), 0), 5: ((('11', 'sload1'), 1), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4285 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4785
4785Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x12ce', 'JUMPI']>> 
4785-Stack size: 16 
4785-Equals Mem:<< []>> 
4785-NonEquals Mem: << []>> 
4785-Equals Sto:<< [<4,7>]>> 
4785-NonEquals Sto: << []>> 
4785-Useless: []
4785-Constancy: [(1, 0)]
4785-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,6>], 'storage_deps_noneqs': []}
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4785 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4930
4930Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'LT', 'PUSH2 0x1178', 'JUMP']>> 
4930-Stack size: 21 
4930-Equals Mem:<< []>> 
4930-NonEquals Mem: << []>> 
4930-Equals Sto:<< []>> 
4930-NonEquals Sto: << [<3,5>]>> 
4930-Useless: []
4930-Constancy: [(9, 0), (6, 64), (5, 32)]
4930-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{1: ((('14', 'sload0'), 1), 0), 3: ((('13', 'sload1'), 1), 1)}
Storage order: [(('14', 'sload0'), 1), (('13', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('14', 'sload0'), 1), 0), 3: ((('13', 'sload1'), 1), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4930 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4975
4975Instr:<<['JUMPDEST', 'DUP4', 'SWAP2', 'SWAP12', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x13a8', 'JUMPI']>> 
4975-Stack size: 21 
4975-Equals Mem:<< []>> 
4975-NonEquals Mem: << []>> 
4975-Equals Sto:<< []>> 
4975-NonEquals Sto: << [<6,8>]>> 
4975-Useless: []
4975-Constancy: [(9, 0), (6, 64), (5, 32)]
4975-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<5,7>]}
{5: ((('14', 'sload0'), 1), 0), 7: ((('12', 'sload1'), 1), 1)}
Storage order: [(('14', 'sload0'), 1), (('12', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
EQ(0,X)
[RULE]: Simplification rule type 2: {'id': 'ISZERO_0', 'opcode': '15', 'disasm': 'ISZERO', 'inpt_sk': ['s(15)'], 'outpt_sk': ['s(14)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Delete rules: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{5: ((('14', 'sload0'), 1), 0), 7: ((('12', 'sload1'), 1), 1)}
BLOCK 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_OBAMA_4975 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 64
64Instr:<<['SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
64-Stack size: 1 
64-Equals Mem:<< []>> 
64-NonEquals Mem: << [<12,2>]>> 
64-Equals Sto:<< []>> 
64-NonEquals Sto: << []>> 
64-Useless: []
64-Constancy: [(0, 0)]
64-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{0: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{0: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SLOAD PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_64_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_64_statistics.csv

Estimated initial gas: 2142
Estimated gas optimized: 2124

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 32

Initial number of instructions: 16
Final number of instructions: 10

GREENRES: 0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol_Ownable_64;0x00a97f32E64049e2122909abDd2B915B5C86EAE1.sol;Ownable;64;2;False;True;True;SLOAD PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2142;21;16;2124;32;10;18;-11;6;True;False;False;False;0.116186777013354;2;0;2100;2100

