incomplete push instruction at 8782
Green Main
*************************************************************
Compilation time: 0.40320210700156167s
*************************************************************
File: Address
Build CFG: 0.002153199980966747s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Address
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Address: 0
Memory read accesses ContractAddress: 0
Memory write accesses ContractAddress: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: Address
********************************** END
Memory Analysis: 0.00012778298696503043s

*************************************************************
File: SafeMath
Build CFG: 0.0006535300053656101s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.00010880699846893549s

*************************************************************
File: SpartanAI
Build CFG: 0.4359021569835022s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SpartanAI
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> <slot34,0> 3780:6 --> 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol SpartanAI--blacklist_Remove_Wallets(address[])
MEMRES: NOT Found read (potential optimization) -> <slot42,0> 3362:6 --> 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol SpartanAI--_set_Fees(uint256,uint256)
GASOL: Useless accesses found: {'3780': [6], '3362': [6]}
Free memory analyss finished


SLOTS Contract SpartanAI: 69
Memory read accesses ContractSpartanAI: 244
Memory write accesses ContractSpartanAI: 414
********************************** INIT
GASOL: Adding block useless 3780
GASOL: Adding block useless 3362
CONTEXT: Detected context equality 9 <slot9,0> 11 <slot9,0>
CONTEXT: Detected context equality 9 <slot9,0> 11 <slot9,0>
CONTEXT: Detected context equality 9 <slot9,0> 15 <slot9,0>
CONTEXT: Detected context equality 9 <slot9,0> 15 <slot9,0>
CONTEXT: Detected context equality 14 <slot21,0> 16 <slot21,0>
CONTEXT: Detected context equality 14 <slot21,0> 16 <slot21,0>
CONTEXT: Detected context equality 14 <slot21,0> 20 <slot21,0>
CONTEXT: Detected context equality 14 <slot21,0> 20 <slot21,0>
CONTEXT: Detected context equality 11 <slot27,0> 13 <slot27,0>
CONTEXT: Detected context equality 11 <slot27,0> 14 <slot27,0>
CONTEXT: Detected context equality 11 <slot27,0> 14 <slot27,0>
CONTEXT: Detected context equality 15 <slot58,0> 17 <slot58,0>
CONTEXT: Detected context equality 15 <slot58,0> 17 <slot58,0>
CONTEXT: Detected context equality 15 <slot58,0> 21 <slot58,0>
CONTEXT: Detected context equality 15 <slot58,0> 21 <slot58,0>
CONTEXT: Detected context equality 12 <slot62,0> 14 <slot62,0>
CONTEXT: Detected context equality 12 <slot62,0> 15 <slot62,0>
CONTEXT: Detected context equality 12 <slot62,0> 15 <slot62,0>
COMPACT CLONES: True
CONTRACT: SpartanAI
-----
Block: 5104
5104Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
5104-Stack size: 3 
5104-Equals Mem:<< []>> 
5104-NonEquals Mem: << [<6,1>]>> 
5104-Equals Sto:<< []>> 
5104-NonEquals Sto: << []>> 
5104-Useless: []
5104-Constancy: []
5104-ContextAliasing: []

.....
-----
Block: 5127
5127Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'DUP3', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP1', 'SWAP2', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH1 0x40', 'MLOAD', 'PUSH32 0x53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159', 'SWAP1', 'PUSH2 0x1454', 'SWAP1', 'DUP4', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
5127-Stack size: 3 
5127-Equals Mem:<< []>> 
5127-NonEquals Mem: << [<31,22>]>> 
5127-Equals Sto:<< [<3,20>]>> 
5127-NonEquals Sto: << []>> 
5127-Useless: []
5127-Constancy: []
5127-ContextAliasing: []

.....
-----
Block: 4873
4873Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4873-Stack size: 3 
4873-Equals Mem:<< []>> 
4873-NonEquals Mem: << [<6,1>]>> 
4873-Equals Sto:<< []>> 
4873-NonEquals Sto: << []>> 
4873-Useless: []
4873-Constancy: []
4873-ContextAliasing: []

.....
-----
Block: 4911
4911Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
4911-Stack size: 3 
4911-Equals Mem:<< []>> 
4911-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4911-Equals Sto:<< []>> 
4911-NonEquals Sto: << []>> 
4911-Useless: []
4911-Constancy: []
4911-ContextAliasing: []

.....
-----
Block: 4800
4800Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4800-Stack size: 3 
4800-Equals Mem:<< []>> 
4800-NonEquals Mem: << [<6,1>]>> 
4800-Equals Sto:<< []>> 
4800-NonEquals Sto: << []>> 
4800-Useless: []
4800-Constancy: []
4800-ContextAliasing: []

.....
-----
Block: 4823
4823Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
4823-Stack size: 3 
4823-Equals Mem:<< []>> 
4823-NonEquals Mem: << [<10,13>]>> 
4823-Equals Sto:<< [<18,23>]>> 
4823-NonEquals Sto: << []>> 
4823-Useless: []
4823-Constancy: []
4823-ContextAliasing: []

.....
-----
Block: 4615
4615Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4615-Stack size: 3 
4615-Equals Mem:<< []>> 
4615-NonEquals Mem: << [<6,1>]>> 
4615-Equals Sto:<< []>> 
4615-NonEquals Sto: << []>> 
4615-Useless: []
4615-Constancy: []
4615-ContextAliasing: []

.....
-----
Block: 4657
4657Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43757272656e746c792070726f63657373696e672c20747279206c617465722e', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
4657-Stack size: 3 
4657-Equals Mem:<< []>> 
4657-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
4657-Equals Sto:<< []>> 
4657-NonEquals Sto: << []>> 
4657-Useless: []
4657-Constancy: []
4657-ContextAliasing: []

.....
-----
Block: 4728
4728Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH1 0x64', 'PUSH2 0x1294', 'DUP5', 'DUP5', 'PUSH2 0x208e', 'JUMP']>> 
4728-Stack size: 3 
4728-Equals Mem:<< []>> 
4728-NonEquals Mem: << [<5,8>]>> 
4728-Equals Sto:<< []>> 
4728-NonEquals Sto: << []>> 
4728-Useless: []
4728-Constancy: []
4728-ContextAliasing: []

.....
-----
Block: 8314_21
8314_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_21-Stack size: 11 
8314_21-Equals Mem:<< []>> 
8314_21-NonEquals Mem: << [<5,8>]>> 
8314_21-Equals Sto:<< []>> 
8314_21-NonEquals Sto: << []>> 
8314_21-Useless: []
8314_21-Constancy: [(6, 0)]
8314_21-ContextAliasing: []

.....
-----
Block: 8364_3
8364_3Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8364_3-Stack size: 9 
8364_3-Equals Mem:<< []>> 
8364_3-NonEquals Mem: << [<4,7>]>> 
8364_3-Equals Sto:<< []>> 
8364_3-NonEquals Sto: << []>> 
8364_3-Useless: []
8364_3-Constancy: [(4, 0), (0, 0)]
8364_3-ContextAliasing: []

.....
-----
Block: 8457_8
8457_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_8-Stack size: 14 
8457_8-Equals Mem:<< []>> 
8457_8-NonEquals Mem: << [<5,8>]>> 
8457_8-Equals Sto:<< []>> 
8457_8-NonEquals Sto: << []>> 
8457_8-Useless: []
8457_8-Constancy: [(1, 0)]
8457_8-ContextAliasing: [(4, 11)]

.....
-----
Block: 7044_1
7044_1Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1ba8', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
7044_1-Stack size: 14 
7044_1-Equals Mem:<< [<18,6>]>> 
7044_1-NonEquals Mem: << []>> 
7044_1-Equals Sto:<< []>> 
7044_1-NonEquals Sto: << []>> 
7044_1-Useless: []
7044_1-Constancy: []
7044_1-ContextAliasing: []

.....
-----
Block: 8457_7
8457_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_7-Stack size: 14 
8457_7-Equals Mem:<< []>> 
8457_7-NonEquals Mem: << [<5,8>]>> 
8457_7-Equals Sto:<< []>> 
8457_7-NonEquals Sto: << []>> 
8457_7-Useless: []
8457_7-Constancy: []
8457_7-ContextAliasing: [(4, 11)]

.....
-----
Block: 5252_3
5252_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x4552523a207a65726f2061646472657373', 'PUSH1 0x78', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5252_3-Stack size: 14 
5252_3-Equals Mem:<< []>> 
5252_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
5252_3-Equals Sto:<< []>> 
5252_3-NonEquals Sto: << []>> 
5252_3-Useless: []
5252_3-Constancy: []
5252_3-ContextAliasing: []

.....
-----
Block: 7137_1
7137_1Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1c19', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x2166', 'JUMP']>> 
7137_1-Stack size: 10 
7137_1-Equals Mem:<< []>> 
7137_1-NonEquals Mem: << [<9,4>]>> 
7137_1-Equals Sto:<< []>> 
7137_1-NonEquals Sto: << []>> 
7137_1-Useless: []
7137_1-Constancy: []
7137_1-ContextAliasing: []

.....
-----
Block: 8550_1
8550_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
8550_1-Stack size: 19 
8550_1-Equals Mem:<< []>> 
8550_1-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
8550_1-Equals Sto:<< []>> 
8550_1-NonEquals Sto: << []>> 
8550_1-Useless: []
8550_1-Constancy: [(4, 0)]
8550_1-ContextAliasing: [(9, 15)]

.....
-----
Block: 8600_1
8600_1Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x218f', 'JUMP']>> 
8600_1-Stack size: 25 
8600_1-Equals Mem:<< []>> 
8600_1-NonEquals Mem: << [<9,1>]>> 
8600_1-Equals Sto:<< []>> 
8600_1-NonEquals Sto: << []>> 
8600_1-Useless: []
8600_1-Constancy: [(10, 0), (5, 0), (3, 32)]
8600_1-ContextAliasing: [(15, 15)]

.....
-----
Block: 1841
1841Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1841-Stack size: 4 
1841-Equals Mem:<< [<12,27>, <17,31>]>> 
1841-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
1841-Equals Sto:<< []>> 
1841-NonEquals Sto: << []>> 
1841-Useless: []
1841-Constancy: []
1841-ContextAliasing: []

.....
-----
Block: 835
835Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
835-Stack size: 2 
835-Equals Mem:<< []>> 
835-NonEquals Mem: << [<5,2>]>> 
835-Equals Sto:<< []>> 
835-NonEquals Sto: << []>> 
835-Useless: []
835-Constancy: []
835-ContextAliasing: []

.....
-----
Block: 4540
4540Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4540-Stack size: 3 
4540-Equals Mem:<< []>> 
4540-NonEquals Mem: << [<6,1>]>> 
4540-Equals Sto:<< []>> 
4540-NonEquals Sto: << []>> 
4540-Useless: []
4540-Constancy: []
4540-ContextAliasing: []

.....
-----
Block: 4288
4288Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4288-Stack size: 4 
4288-Equals Mem:<< []>> 
4288-NonEquals Mem: << [<6,1>]>> 
4288-Equals Sto:<< []>> 
4288-NonEquals Sto: << []>> 
4288-Useless: []
4288-Constancy: []
4288-ContextAliasing: []

.....
-----
Block: 8457_6
8457_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_6-Stack size: 13 
8457_6-Equals Mem:<< []>> 
8457_6-NonEquals Mem: << [<5,8>]>> 
8457_6-Equals Sto:<< []>> 
8457_6-NonEquals Sto: << []>> 
8457_6-Useless: []
8457_6-Constancy: [(4, 0)]
8457_6-ContextAliasing: []

.....
-----
Block: 4376
4376Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x118c', 'JUMPI']>> 
4376-Stack size: 10 
4376-Equals Mem:<< []>> 
4376-NonEquals Mem: << [<8,15>]>> 
4376-Equals Sto:<< []>> 
4376-NonEquals Sto: << []>> 
4376-Useless: []
4376-Constancy: [(1, 0)]
4376-ContextAliasing: []

.....
-----
Block: 8457_5
8457_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_5-Stack size: 14 
8457_5-Equals Mem:<< []>> 
8457_5-NonEquals Mem: << [<5,8>]>> 
8457_5-Equals Sto:<< []>> 
8457_5-NonEquals Sto: << []>> 
8457_5-Useless: []
8457_5-Constancy: [(4, 0)]
8457_5-ContextAliasing: []

.....
-----
Block: 4452
4452Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE']>> 
4452-Stack size: 11 
4452-Equals Mem:<< []>> 
4452-NonEquals Mem: << [<8,15>]>> 
4452-Equals Sto:<< [<21,33>]>> 
4452-NonEquals Sto: << []>> 
4452-Useless: []
4452-Constancy: [(1, 0)]
4452-ContextAliasing: []

.....
-----
Block: 8314_20
8314_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_20-Stack size: 12 
8314_20-Equals Mem:<< []>> 
8314_20-NonEquals Mem: << [<5,8>]>> 
8314_20-Equals Sto:<< []>> 
8314_20-NonEquals Sto: << []>> 
8314_20-Useless: []
8314_20-Constancy: []
8314_20-ContextAliasing: []

.....
-----
Block: 8314_19
8314_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_19-Stack size: 11 
8314_19-Equals Mem:<< []>> 
8314_19-NonEquals Mem: << [<5,8>]>> 
8314_19-Equals Sto:<< []>> 
8314_19-NonEquals Sto: << []>> 
8314_19-Useless: []
8314_19-Constancy: [(1, 0)]
8314_19-ContextAliasing: []

.....
-----
Block: 5559_0
5559_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x15', 'SLOAD', 'PUSH2 0x15db', 'DUP4', 'DUP4', 'PUSH2 0x20f6', 'JUMP']>> 
5559_0-Stack size: 9 
5559_0-Equals Mem:<< []>> 
5559_0-NonEquals Mem: << [<10,13>]>> 
5559_0-Equals Sto:<< []>> 
5559_0-NonEquals Sto: << [<17,19>]>> 
5559_0-Useless: []
5559_0-Constancy: [(4, 0)]
5559_0-ContextAliasing: []

.....
-----
Block: 8314_18
8314_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_18-Stack size: 16 
8314_18-Equals Mem:<< []>> 
8314_18-NonEquals Mem: << [<5,8>]>> 
8314_18-Equals Sto:<< []>> 
8314_18-NonEquals Sto: << []>> 
8314_18-Useless: []
8314_18-Constancy: [(11, 0)]
8314_18-ContextAliasing: []

.....
-----
Block: 5602_0
5602_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x51', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x3a103337b91037b732903bb0b63632ba17', 'PUSH1 0x79', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5602_0-Stack size: 10 
5602_0-Equals Mem:<< []>> 
5602_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>, <33,1>]>> 
5602_0-Equals Sto:<< []>> 
5602_0-NonEquals Sto: << []>> 
5602_0-Useless: []
5602_0-Constancy: [(5, 0)]
5602_0-ContextAliasing: []

.....
-----
Block: 5797_0
5797_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5797_0-Stack size: 9 
5797_0-Equals Mem:<< []>> 
5797_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
5797_0-Equals Sto:<< []>> 
5797_0-NonEquals Sto: << []>> 
5797_0-Useless: []
5797_0-Constancy: [(4, 0)]
5797_0-ContextAliasing: []

.....
-----
Block: 5918_0
5918_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x175d', 'JUMPI']>> 
5918_0-Stack size: 9 
5918_0-Equals Mem:<< []>> 
5918_0-NonEquals Mem: << [<10,13>]>> 
5918_0-Equals Sto:<< []>> 
5918_0-NonEquals Sto: << []>> 
5918_0-Useless: []
5918_0-Constancy: [(4, 0)]
5918_0-ContextAliasing: []

.....
-----
Block: 5952_0
5952_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
5952_0-Stack size: 10 
5952_0-Equals Mem:<< []>> 
5952_0-NonEquals Mem: << [<11,14>]>> 
5952_0-Equals Sto:<< []>> 
5952_0-NonEquals Sto: << []>> 
5952_0-Useless: []
5952_0-Constancy: [(5, 0)]
5952_0-ContextAliasing: []

.....
-----
Block: 5986_0
5986_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x54686973206164647265737320697320626c61636b6c69737465642e20547261', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH18 0x3739b0b1ba34b7b7103932bb32b93a32b217', 'PUSH1 0x71', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5986_0-Stack size: 9 
5986_0-Equals Mem:<< []>> 
5986_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5986_0-Equals Sto:<< []>> 
5986_0-NonEquals Sto: << []>> 
5986_0-Useless: []
5986_0-Constancy: [(4, 0)]
5986_0-ContextAliasing: []

.....
-----
Block: 6121_0
6121_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x4552523a205573696e672030206164647265737321', 'PUSH1 0x58', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
6121_0-Stack size: 9 
6121_0-Equals Mem:<< []>> 
6121_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
6121_0-Equals Sto:<< []>> 
6121_0-NonEquals Sto: << []>> 
6121_0-Useless: []
6121_0-Constancy: [(4, 0)]
6121_0-ContextAliasing: []

.....
-----
Block: 6192_0
6192_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x3d32b93797', 'PUSH1 0xd9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
6192_0-Stack size: 9 
6192_0-Equals Mem:<< []>> 
6192_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6192_0-Equals Sto:<< []>> 
6192_0-NonEquals Sto: << []>> 
6192_0-Useless: []
6192_0-Constancy: [(4, 0)]
6192_0-ContextAliasing: []

.....
-----
Block: 6368_0
6368_0Instr:<<['PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'DUP2', 'GT', 'ISZERO', 'PUSH2 0x1907', 'JUMPI']>> 
6368_0-Stack size: 9 
6368_0-Equals Mem:<< []>> 
6368_0-NonEquals Mem: << [<12,15>]>> 
6368_0-Equals Sto:<< [<2,7>]>> 
6368_0-NonEquals Sto: << [<2,19>, <2,21>, <7,19>, <7,21>, <19,21>]>> 
6368_0-Useless: []
6368_0-Constancy: [(4, 0)]
6368_0-ContextAliasing: []

.....
-----
Block: 8457_4
8457_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_4-Stack size: 19 
8457_4-Equals Mem:<< []>> 
8457_4-NonEquals Mem: << [<5,8>]>> 
8457_4-Equals Sto:<< []>> 
8457_4-NonEquals Sto: << []>> 
8457_4-Useless: []
8457_4-Constancy: [(14, 0), (1, 0)]
8457_4-ContextAliasing: [(4, 16)]

.....
-----
Block: 7044_0
7044_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1ba8', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
7044_0-Stack size: 19 
7044_0-Equals Mem:<< [<18,6>]>> 
7044_0-NonEquals Mem: << []>> 
7044_0-Equals Sto:<< []>> 
7044_0-NonEquals Sto: << []>> 
7044_0-Useless: []
7044_0-Constancy: [(14, 0)]
7044_0-ContextAliasing: []

.....
-----
Block: 8457_3
8457_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_3-Stack size: 19 
8457_3-Equals Mem:<< []>> 
8457_3-NonEquals Mem: << [<5,8>]>> 
8457_3-Equals Sto:<< []>> 
8457_3-NonEquals Sto: << []>> 
8457_3-Useless: []
8457_3-Constancy: [(14, 0)]
8457_3-ContextAliasing: [(4, 16)]

.....
-----
Block: 5252_2
5252_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x4552523a207a65726f2061646472657373', 'PUSH1 0x78', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5252_2-Stack size: 19 
5252_2-Equals Mem:<< []>> 
5252_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
5252_2-Equals Sto:<< []>> 
5252_2-NonEquals Sto: << []>> 
5252_2-Useless: []
5252_2-Constancy: [(14, 0)]
5252_2-ContextAliasing: []

.....
-----
Block: 7137_0
7137_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1c19', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x2166', 'JUMP']>> 
7137_0-Stack size: 15 
7137_0-Equals Mem:<< []>> 
7137_0-NonEquals Mem: << [<9,4>]>> 
7137_0-Equals Sto:<< []>> 
7137_0-NonEquals Sto: << []>> 
7137_0-Useless: []
7137_0-Constancy: [(10, 0)]
7137_0-ContextAliasing: []

.....
-----
Block: 8550_0
8550_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
8550_0-Stack size: 24 
8550_0-Equals Mem:<< []>> 
8550_0-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
8550_0-Equals Sto:<< []>> 
8550_0-NonEquals Sto: << []>> 
8550_0-Useless: []
8550_0-Constancy: [(19, 0), (4, 0)]
8550_0-ContextAliasing: [(9, 20)]

.....
-----
Block: 8600_0
8600_0Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x218f', 'JUMP']>> 
8600_0-Stack size: 30 
8600_0-Equals Mem:<< []>> 
8600_0-NonEquals Mem: << [<9,1>]>> 
8600_0-Equals Sto:<< []>> 
8600_0-NonEquals Sto: << []>> 
8600_0-Useless: []
8600_0-Constancy: [(25, 0), (10, 0), (5, 0), (3, 32)]
8600_0-ContextAliasing: [(15, 20)]

.....
-----
Block: 6424_0
6424_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x01', 'SWAP1', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x1958', 'JUMPI']>> 
6424_0-Stack size: 9 
6424_0-Equals Mem:<< []>> 
6424_0-NonEquals Mem: << [<11,14>]>> 
6424_0-Equals Sto:<< []>> 
6424_0-NonEquals Sto: << []>> 
6424_0-Useless: []
6424_0-Constancy: [(4, 0)]
6424_0-ContextAliasing: []

.....
-----
Block: 6460_0
6460_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
6460_0-Stack size: 11 
6460_0-Equals Mem:<< []>> 
6460_0-NonEquals Mem: << [<11,14>]>> 
6460_0-Equals Sto:<< []>> 
6460_0-NonEquals Sto: << []>> 
6460_0-Useless: []
6460_0-Constancy: [(6, 0)]
6460_0-ContextAliasing: []

.....
-----
Block: 8314_16
8314_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_16-Stack size: 32 
8314_16-Equals Mem:<< []>> 
8314_16-NonEquals Mem: << [<5,8>]>> 
8314_16-Equals Sto:<< []>> 
8314_16-NonEquals Sto: << []>> 
8314_16-Useless: []
8314_16-Constancy: [(27, 0), (12, 0), (11, 0), (8, 0), (7, 0), (6, 0)]
8314_16-ContextAliasing: []

.....
-----
Block: 8364_2
8364_2Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8364_2-Stack size: 30 
8364_2-Equals Mem:<< []>> 
8364_2-NonEquals Mem: << [<4,7>]>> 
8364_2-Equals Sto:<< []>> 
8364_2-NonEquals Sto: << []>> 
8364_2-Useless: []
8364_2-Constancy: [(25, 0), (10, 0), (9, 0), (6, 0), (5, 0), (4, 0), (0, 0)]
8364_2-ContextAliasing: []

.....
-----
Block: 8314_15
8314_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_15-Stack size: 36 
8314_15-Equals Mem:<< []>> 
8314_15-NonEquals Mem: << [<5,8>]>> 
8314_15-Equals Sto:<< []>> 
8314_15-NonEquals Sto: << []>> 
8314_15-Useless: []
8314_15-Constancy: [(31, 0), (16, 0), (15, 0), (12, 0), (11, 0), (9, 0), (5, 0)]
8314_15-ContextAliasing: []

.....
-----
Block: 7372_0
7372_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP2', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x1cf3', 'SWAP1', 'DUP5', 'PUSH2 0x1ddd', 'JUMP']>> 
7372_0-Stack size: 23 
7372_0-Equals Mem:<< []>> 
7372_0-NonEquals Mem: << [<11,14>]>> 
7372_0-Equals Sto:<< []>> 
7372_0-NonEquals Sto: << []>> 
7372_0-Useless: []
7372_0-Constancy: [(18, 0), (3, 0), (2, 0)]
7372_0-ContextAliasing: []

.....
-----
Block: 8314_14
8314_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_14-Stack size: 30 
8314_14-Equals Mem:<< []>> 
8314_14-NonEquals Mem: << [<5,8>]>> 
8314_14-Equals Sto:<< []>> 
8314_14-NonEquals Sto: << []>> 
8314_14-Useless: []
8314_14-Constancy: [(25, 0), (5, 0)]
8314_14-ContextAliasing: []

.....
-----
Block: 7411_0
7411_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP7', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1d21', 'SWAP1', 'DUP4', 'PUSH2 0x1a39', 'JUMP']>> 
7411_0-Stack size: 22 
7411_0-Equals Mem:<< [<12,28>]>> 
7411_0-NonEquals Mem: << [<12,15>, <15,28>]>> 
7411_0-Equals Sto:<< [<23,30>]>> 
7411_0-NonEquals Sto: << []>> 
7411_0-Useless: []
7411_0-Constancy: [(17, 0)]
7411_0-ContextAliasing: []

.....
-----
Block: 8314_13
8314_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_13-Stack size: 30 
8314_13-Equals Mem:<< []>> 
8314_13-NonEquals Mem: << [<5,8>]>> 
8314_13-Equals Sto:<< []>> 
8314_13-NonEquals Sto: << []>> 
8314_13-Useless: []
8314_13-Constancy: [(25, 0), (5, 0)]
8314_13-ContextAliasing: []

.....
-----
Block: 7457_0
7457_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'ADDRESS', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1d4c', 'SWAP1', 'DUP3', 'PUSH2 0x1a39', 'JUMP']>> 
7457_0-Stack size: 22 
7457_0-Equals Mem:<< [<11,25>]>> 
7457_0-NonEquals Mem: << [<11,14>, <14,25>]>> 
7457_0-Equals Sto:<< [<22,27>]>> 
7457_0-NonEquals Sto: << []>> 
7457_0-Useless: []
7457_0-Constancy: [(17, 0)]
7457_0-ContextAliasing: []

.....
-----
Block: 8314_12
8314_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_12-Stack size: 30 
8314_12-Equals Mem:<< []>> 
8314_12-NonEquals Mem: << [<5,8>]>> 
8314_12-Equals Sto:<< []>> 
8314_12-NonEquals Sto: << []>> 
8314_12-Useless: []
8314_12-Constancy: [(25, 0), (5, 0)]
8314_12-ContextAliasing: []

.....
-----
Block: 683
683Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
683-Stack size: 2 
683-Equals Mem:<< []>> 
683-NonEquals Mem: << [<7,2>]>> 
683-Equals Sto:<< []>> 
683-NonEquals Sto: << []>> 
683-Useless: []
683-Constancy: []
683-ContextAliasing: []

.....
-----
Block: 8314_17
8314_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_17-Stack size: 23 
8314_17-Equals Mem:<< []>> 
8314_17-NonEquals Mem: << [<5,8>]>> 
8314_17-Equals Sto:<< []>> 
8314_17-NonEquals Sto: << []>> 
8314_17-Useless: []
8314_17-Constancy: [(18, 0), (5, 0), (2, 0)]
8314_17-ContextAliasing: []

.....
-----
Block: 4205
4205Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4205-Stack size: 3 
4205-Equals Mem:<< []>> 
4205-NonEquals Mem: << [<6,1>]>> 
4205-Equals Sto:<< []>> 
4205-NonEquals Sto: << []>> 
4205-Useless: []
4205-Constancy: []
4205-ContextAliasing: []

.....
-----
Block: 6681_0
6681_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP2', 'SWAP1', 'PUSH2 0x1de8', 'JUMP']>> 
6681_0-Stack size: 14 
6681_0-Equals Mem:<< []>> 
6681_0-NonEquals Mem: << [<6,1>]>> 
6681_0-Equals Sto:<< []>> 
6681_0-NonEquals Sto: << []>> 
6681_0-Useless: []
6681_0-Constancy: [(9, 0), (1, 0)]
6681_0-ContextAliasing: [(2, 13)]

.....
-----
Block: 7656_1
7656_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
7656_1-Stack size: 16 
7656_1-Equals Mem:<< []>> 
7656_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
7656_1-Equals Sto:<< []>> 
7656_1-NonEquals Sto: << []>> 
7656_1-Useless: []
7656_1-Constancy: [(11, 0), (3, 0)]
7656_1-ContextAliasing: [(4, 14)]

.....
-----
Block: 7680_1
7680_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1df7', 'JUMP']>> 
7680_1-Stack size: 20 
7680_1-Equals Mem:<< []>> 
7680_1-NonEquals Mem: << [<11,5>]>> 
7680_1-Equals Sto:<< []>> 
7680_1-NonEquals Sto: << []>> 
7680_1-Useless: []
7680_1-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
7680_1-ContextAliasing: [(8, 14)]

.....
-----
Block: 5252
5252Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x4552523a207a65726f2061646472657373', 'PUSH1 0x78', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5252-Stack size: 9 
5252-Equals Mem:<< []>> 
5252-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
5252-Equals Sto:<< []>> 
5252-NonEquals Sto: << []>> 
5252-Useless: []
5252-Constancy: [(4, 0)]
5252-ContextAliasing: []

.....
-----
Block: 8209_0
8209_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8209_0-Stack size: 8 
8209_0-Equals Mem:<< []>> 
8209_0-NonEquals Mem: << [<4,7>]>> 
8209_0-Equals Sto:<< []>> 
8209_0-NonEquals Sto: << []>> 
8209_0-Useless: []
8209_0-Constancy: [(5, 96)]
8209_0-ContextAliasing: []

.....
-----
Block: 2022
2022Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x0812', 'SWAP1', 'PUSH2 0x1ff2', 'JUMP']>> 
2022-Stack size: 5 
2022-Equals Mem:<< [<17,12>]>> 
2022-NonEquals Mem: << [<17,24>, <24,12>]>> 
2022-Equals Sto:<< []>> 
2022-NonEquals Sto: << []>> 
2022-Useless: []
2022-Constancy: [(2, 96)]
2022-ContextAliasing: []

.....
-----
Block: 8209
8209Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8209-Stack size: 12 
8209-Equals Mem:<< []>> 
8209-NonEquals Mem: << [<4,7>]>> 
8209-Equals Sto:<< []>> 
8209-NonEquals Sto: << []>> 
8209-Useless: []
8209-Constancy: [(9, 96)]
8209-ContextAliasing: []

.....
-----
Block: 7656
7656Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
7656-Stack size: 4 
7656-Equals Mem:<< []>> 
7656-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
7656-Equals Sto:<< []>> 
7656-NonEquals Sto: << []>> 
7656-Useless: []
7656-Constancy: []
7656-ContextAliasing: []

.....
-----
Block: 7680
7680Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1df7', 'JUMP']>> 
7680-Stack size: 8 
7680-Equals Mem:<< []>> 
7680-NonEquals Mem: << [<11,5>]>> 
7680-Equals Sto:<< []>> 
7680-NonEquals Sto: << []>> 
7680-Useless: []
7680-Constancy: [(3, 0), (2, 32)]
7680-ContextAliasing: []

.....
-----
Block: 4039
4039Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4039-Stack size: 3 
4039-Equals Mem:<< []>> 
4039-NonEquals Mem: << [<6,1>]>> 
4039-Equals Sto:<< []>> 
4039-NonEquals Sto: << []>> 
4039-Useless: []
4039-Constancy: []
4039-ContextAliasing: []

.....
-----
Block: 8314_11
8314_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_11-Stack size: 9 
8314_11-Equals Mem:<< []>> 
8314_11-NonEquals Mem: << [<5,8>]>> 
8314_11-Equals Sto:<< []>> 
8314_11-NonEquals Sto: << []>> 
8314_11-Useless: []
8314_11-Constancy: []
8314_11-ContextAliasing: []

.....
-----
Block: 8364_1
8364_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8364_1-Stack size: 7 
8364_1-Equals Mem:<< []>> 
8364_1-NonEquals Mem: << [<4,7>]>> 
8364_1-Equals Sto:<< []>> 
8364_1-NonEquals Sto: << []>> 
8364_1-Useless: []
8364_1-Constancy: [(0, 0)]
8364_1-ContextAliasing: []

.....
-----
Block: 3780
3780Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3780-Stack size: 4 
3780-Equals Mem:<< []>> 
3780-NonEquals Mem: << [<6,1>]>> 
3780-Equals Sto:<< []>> 
3780-NonEquals Sto: << []>> 
3780-Useless: [6]
3780-Constancy: []
3780-ContextAliasing: []

.....
-----
Block: 8457_2
8457_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_2-Stack size: 13 
8457_2-Equals Mem:<< []>> 
8457_2-NonEquals Mem: << [<5,8>]>> 
8457_2-Equals Sto:<< []>> 
8457_2-NonEquals Sto: << []>> 
8457_2-Useless: []
8457_2-Constancy: [(4, 0)]
8457_2-ContextAliasing: []

.....
-----
Block: 3868
3868Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'PUSH2 0x0f90', 'JUMPI']>> 
3868-Stack size: 10 
3868-Equals Mem:<< []>> 
3868-NonEquals Mem: << [<8,15>]>> 
3868-Equals Sto:<< []>> 
3868-NonEquals Sto: << []>> 
3868-Useless: []
3868-Constancy: [(1, 0)]
3868-ContextAliasing: []

.....
-----
Block: 8457_1
8457_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_1-Stack size: 14 
8457_1-Equals Mem:<< []>> 
8457_1-NonEquals Mem: << [<5,8>]>> 
8457_1-Equals Sto:<< []>> 
8457_1-NonEquals Sto: << []>> 
8457_1-Useless: []
8457_1-Constancy: [(6, 0), (4, 0)]
8457_1-ContextAliasing: []

.....
-----
Block: 3944
3944Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE']>> 
3944-Stack size: 11 
3944-Equals Mem:<< []>> 
3944-NonEquals Mem: << [<8,15>]>> 
3944-Equals Sto:<< [<21,33>]>> 
3944-NonEquals Sto: << []>> 
3944-Useless: []
3944-Constancy: [(3, 0), (1, 0)]
3944-ContextAliasing: []

.....
-----
Block: 8314_10
8314_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_10-Stack size: 12 
8314_10-Equals Mem:<< []>> 
8314_10-NonEquals Mem: << [<5,8>]>> 
8314_10-Equals Sto:<< []>> 
8314_10-NonEquals Sto: << []>> 
8314_10-Useless: []
8314_10-Constancy: []
8314_10-ContextAliasing: []

.....
-----
Block: 8314_9
8314_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_9-Stack size: 11 
8314_9-Equals Mem:<< []>> 
8314_9-NonEquals Mem: << [<5,8>]>> 
8314_9-Equals Sto:<< []>> 
8314_9-NonEquals Sto: << []>> 
8314_9-Useless: []
8314_9-Constancy: [(1, 0)]
8314_9-ContextAliasing: []

.....
-----
Block: 795_0
795_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
795_0-Stack size: 2 
795_0-Equals Mem:<< []>> 
795_0-NonEquals Mem: << [<12,2>]>> 
795_0-Equals Sto:<< []>> 
795_0-NonEquals Sto: << []>> 
795_0-Useless: []
795_0-Constancy: []
795_0-ContextAliasing: []

.....
-----
Block: 3671
3671Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3671-Stack size: 3 
3671-Equals Mem:<< []>> 
3671-NonEquals Mem: << [<6,1>]>> 
3671-Equals Sto:<< []>> 
3671-NonEquals Sto: << []>> 
3671-Useless: []
3671-Constancy: []
3671-ContextAliasing: []

.....
-----
Block: 3694
3694Instr:<<['JUMPDEST', 'PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH2 0x0100', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH2 0x0100', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP4', 'DUP5', 'AND', 'DUP2', 'MUL', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP2', 'DUP3', 'SWAP1', 'SSTORE', 'SWAP1', 'DIV', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3694-Stack size: 3 
3694-Equals Mem:<< []>> 
3694-NonEquals Mem: << [<36,39>]>> 
3694-Equals Sto:<< [<3,29>, <44,51>]>> 
3694-NonEquals Sto: << [<3,44>, <3,51>, <29,44>, <29,51>]>> 
3694-Useless: []
3694-Constancy: []
3694-ContextAliasing: []

.....
-----
Block: 835_0
835_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
835_0-Stack size: 3 
835_0-Equals Mem:<< []>> 
835_0-NonEquals Mem: << [<5,2>]>> 
835_0-Equals Sto:<< []>> 
835_0-NonEquals Sto: << []>> 
835_0-Useless: []
835_0-Constancy: []
835_0-ContextAliasing: []

.....
-----
Block: 3602
3602Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3602-Stack size: 3 
3602-Equals Mem:<< []>> 
3602-NonEquals Mem: << [<6,1>]>> 
3602-Equals Sto:<< []>> 
3602-NonEquals Sto: << []>> 
3602-Useless: []
3602-Constancy: []
3602-ContextAliasing: []

.....
-----
Block: 1426
1426Instr:<<['JUMPDEST', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1426-Stack size: 3 
1426-Equals Mem:<< []>> 
1426-NonEquals Mem: << [<3,7>]>> 
1426-Equals Sto:<< []>> 
1426-NonEquals Sto: << []>> 
1426-Useless: []
1426-Constancy: []
1426-ContextAliasing: []

.....
-----
Block: 683_0
683_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
683_0-Stack size: 3 
683_0-Equals Mem:<< []>> 
683_0-NonEquals Mem: << [<7,2>]>> 
683_0-Equals Sto:<< []>> 
683_0-NonEquals Sto: << []>> 
683_0-Useless: []
683_0-Constancy: []
683_0-ContextAliasing: []

.....
-----
Block: 3489
3489Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3489-Stack size: 2 
3489-Equals Mem:<< []>> 
3489-NonEquals Mem: << [<6,1>]>> 
3489-Equals Sto:<< []>> 
3489-NonEquals Sto: << []>> 
3489-Useless: []
3489-Constancy: []
3489-ContextAliasing: []

.....
-----
Block: 1354
1354Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1354-Stack size: 3 
1354-Equals Mem:<< []>> 
1354-NonEquals Mem: << [<10,13>]>> 
1354-Equals Sto:<< []>> 
1354-NonEquals Sto: << []>> 
1354-Useless: []
1354-Constancy: []
1354-ContextAliasing: []

.....
-----
Block: 3362
3362Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3362-Stack size: 4 
3362-Equals Mem:<< []>> 
3362-NonEquals Mem: << [<6,1>]>> 
3362-Equals Sto:<< []>> 
3362-NonEquals Sto: << []>> 
3362-Useless: [6]
3362-Constancy: []
3362-ContextAliasing: []

.....
-----
Block: 8314_8
8314_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_8-Stack size: 10 
8314_8-Equals Mem:<< []>> 
8314_8-NonEquals Mem: << [<5,8>]>> 
8314_8-Equals Sto:<< []>> 
8314_8-NonEquals Sto: << []>> 
8314_8-Useless: []
8314_8-Constancy: []
8314_8-ContextAliasing: []

.....
-----
Block: 3405
3405Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x46656520697320746f6f206869676821', 'PUSH1 0x80', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
3405-Stack size: 4 
3405-Equals Mem:<< []>> 
3405-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3405-Equals Sto:<< []>> 
3405-NonEquals Sto: << []>> 
3405-Useless: []
3405-Constancy: []
3405-ContextAliasing: []

.....
-----
Block: 795
795Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
795-Stack size: 3 
795-Equals Mem:<< []>> 
795-NonEquals Mem: << [<12,2>]>> 
795-Equals Sto:<< []>> 
795-NonEquals Sto: << []>> 
795-Useless: []
795-Constancy: []
795-ContextAliasing: []

.....
-----
Block: 3286
3286Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3286-Stack size: 3 
3286-Equals Mem:<< []>> 
3286-NonEquals Mem: << [<6,1>]>> 
3286-Equals Sto:<< []>> 
3286-NonEquals Sto: << []>> 
3286-Useless: []
3286-Constancy: []
3286-ContextAliasing: []

.....
-----
Block: 3309
3309Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3309-Stack size: 3 
3309-Equals Mem:<< []>> 
3309-NonEquals Mem: << [<10,13>]>> 
3309-Equals Sto:<< [<18,25>]>> 
3309-NonEquals Sto: << []>> 
3309-Useless: []
3309-Constancy: []
3309-ContextAliasing: []

.....
-----
Block: 3215
3215Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0873', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x0a7a', 'SWAP1', 'DUP7', 'PUSH2 0x1a39', 'JUMP']>> 
3215-Stack size: 4 
3215-Equals Mem:<< [<5,23>, <10,26>]>> 
3215-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
3215-Equals Sto:<< []>> 
3215-NonEquals Sto: << []>> 
3215-Useless: []
3215-Constancy: []
3215-ContextAliasing: []

.....
-----
Block: 8314_7
8314_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_7-Stack size: 17 
8314_7-Equals Mem:<< []>> 
8314_7-NonEquals Mem: << [<5,8>]>> 
8314_7-Equals Sto:<< []>> 
8314_7-NonEquals Sto: << []>> 
8314_7-Useless: []
8314_7-Constancy: [(12, 0), (5, 0)]
8314_7-ContextAliasing: []

.....
-----
Block: 3158
3158Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3158-Stack size: 3 
3158-Equals Mem:<< []>> 
3158-NonEquals Mem: << [<6,1>]>> 
3158-Equals Sto:<< []>> 
3158-NonEquals Sto: << []>> 
3158-Useless: []
3158-Constancy: []
3158-ContextAliasing: []

.....
-----
Block: 2790
2790Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
2790-Stack size: 6 
2790-Equals Mem:<< []>> 
2790-NonEquals Mem: << [<6,1>]>> 
2790-Equals Sto:<< []>> 
2790-NonEquals Sto: << []>> 
2790-Useless: []
2790-Constancy: [(0, 0)]
2790-ContextAliasing: []

.....
-----
Block: 2830
2830Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e206e6f742072656d6f7665206e617469766520746f6b656e0000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
2830-Stack size: 6 
2830-Equals Mem:<< []>> 
2830-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
2830-Equals Sto:<< []>> 
2830-NonEquals Sto: << []>> 
2830-Useless: []
2830-Constancy: [(0, 0)]
2830-ContextAliasing: []

.....
-----
Block: 2969
2969Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0bbd', 'SWAP2', 'SWAP1', 'PUSH2 0x20c4', 'JUMP']>> 
2969-Stack size: 11 
2969-Equals Mem:<< [<18,6>]>> 
2969-NonEquals Mem: << []>> 
2969-Equals Sto:<< []>> 
2969-NonEquals Sto: << []>> 
2969-Useless: []
2969-Constancy: [(5, 0), (4, 0)]
2969-ContextAliasing: []

.....
-----
Block: 3095
3095Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0c3b', 'SWAP2', 'SWAP1', 'PUSH2 0x20db', 'JUMP']>> 
3095-Stack size: 11 
3095-Equals Mem:<< [<18,6>]>> 
3095-NonEquals Mem: << []>> 
3095-Equals Sto:<< []>> 
3095-NonEquals Sto: << []>> 
3095-Useless: []
3095-Constancy: [(5, 0)]
3095-ContextAliasing: []

.....
-----
Block: 1021
1021Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0a', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0xff', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
1021-Stack size: 2 
1021-Equals Mem:<< []>> 
1021-NonEquals Mem: << [<11,5>]>> 
1021-Equals Sto:<< []>> 
1021-NonEquals Sto: << []>> 
1021-Useless: []
1021-Constancy: []
1021-ContextAliasing: []

.....
-----
Block: 2715
2715Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
2715-Stack size: 3 
2715-Equals Mem:<< []>> 
2715-NonEquals Mem: << [<6,1>]>> 
2715-Equals Sto:<< []>> 
2715-NonEquals Sto: << []>> 
2715-Useless: []
2715-Constancy: []
2715-ContextAliasing: []

.....
-----
Block: 8314_6
8314_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_6-Stack size: 9 
8314_6-Equals Mem:<< []>> 
8314_6-NonEquals Mem: << [<5,8>]>> 
8314_6-Equals Sto:<< []>> 
8314_6-NonEquals Sto: << []>> 
8314_6-Useless: []
8314_6-Constancy: []
8314_6-ContextAliasing: []

.....
-----
Block: 8364_0
8364_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8364_0-Stack size: 7 
8364_0-Equals Mem:<< []>> 
8364_0-NonEquals Mem: << [<4,7>]>> 
8364_0-Equals Sto:<< []>> 
8364_0-NonEquals Sto: << []>> 
8364_0-Useless: []
8364_0-Constancy: [(0, 0)]
8364_0-ContextAliasing: []

.....
-----
Block: 5559
5559Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x15', 'SLOAD', 'PUSH2 0x15db', 'DUP4', 'DUP4', 'PUSH2 0x20f6', 'JUMP']>> 
5559-Stack size: 10 
5559-Equals Mem:<< []>> 
5559-NonEquals Mem: << [<10,13>]>> 
5559-Equals Sto:<< []>> 
5559-NonEquals Sto: << [<17,19>]>> 
5559-Useless: []
5559-Constancy: [(4, 0)]
5559-ContextAliasing: []

.....
-----
Block: 8314_5
8314_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_5-Stack size: 17 
8314_5-Equals Mem:<< []>> 
8314_5-NonEquals Mem: << [<5,8>]>> 
8314_5-Equals Sto:<< []>> 
8314_5-NonEquals Sto: << []>> 
8314_5-Useless: []
8314_5-Constancy: [(11, 0)]
8314_5-ContextAliasing: []

.....
-----
Block: 5602
5602Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x51', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x3a103337b91037b732903bb0b63632ba17', 'PUSH1 0x79', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5602-Stack size: 11 
5602-Equals Mem:<< []>> 
5602-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>, <33,1>]>> 
5602-Equals Sto:<< []>> 
5602-NonEquals Sto: << []>> 
5602-Useless: []
5602-Constancy: [(5, 0)]
5602-ContextAliasing: []

.....
-----
Block: 5797
5797Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5797-Stack size: 10 
5797-Equals Mem:<< []>> 
5797-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
5797-Equals Sto:<< []>> 
5797-NonEquals Sto: << []>> 
5797-Useless: []
5797-Constancy: [(4, 0)]
5797-ContextAliasing: []

.....
-----
Block: 5918
5918Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x175d', 'JUMPI']>> 
5918-Stack size: 10 
5918-Equals Mem:<< []>> 
5918-NonEquals Mem: << [<10,13>]>> 
5918-Equals Sto:<< []>> 
5918-NonEquals Sto: << []>> 
5918-Useless: []
5918-Constancy: [(4, 0)]
5918-ContextAliasing: []

.....
-----
Block: 5952
5952Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
5952-Stack size: 11 
5952-Equals Mem:<< []>> 
5952-NonEquals Mem: << [<11,14>]>> 
5952-Equals Sto:<< []>> 
5952-NonEquals Sto: << []>> 
5952-Useless: []
5952-Constancy: [(5, 0)]
5952-ContextAliasing: []

.....
-----
Block: 5986
5986Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x54686973206164647265737320697320626c61636b6c69737465642e20547261', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH18 0x3739b0b1ba34b7b7103932bb32b93a32b217', 'PUSH1 0x71', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5986-Stack size: 10 
5986-Equals Mem:<< []>> 
5986-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5986-Equals Sto:<< []>> 
5986-NonEquals Sto: << []>> 
5986-Useless: []
5986-Constancy: [(4, 0)]
5986-ContextAliasing: []

.....
-----
Block: 6121
6121Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x4552523a205573696e672030206164647265737321', 'PUSH1 0x58', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
6121-Stack size: 10 
6121-Equals Mem:<< []>> 
6121-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
6121-Equals Sto:<< []>> 
6121-NonEquals Sto: << []>> 
6121-Useless: []
6121-Constancy: [(4, 0)]
6121-ContextAliasing: []

.....
-----
Block: 6192
6192Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x3d32b93797', 'PUSH1 0xd9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
6192-Stack size: 10 
6192-Equals Mem:<< []>> 
6192-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6192-Equals Sto:<< []>> 
6192-NonEquals Sto: << []>> 
6192-Useless: []
6192-Constancy: [(4, 0)]
6192-ContextAliasing: []

.....
-----
Block: 6368
6368Instr:<<['PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'DUP2', 'GT', 'ISZERO', 'PUSH2 0x1907', 'JUMPI']>> 
6368-Stack size: 10 
6368-Equals Mem:<< []>> 
6368-NonEquals Mem: << [<12,15>]>> 
6368-Equals Sto:<< [<2,7>]>> 
6368-NonEquals Sto: << [<2,19>, <2,21>, <7,19>, <7,21>, <19,21>]>> 
6368-Useless: []
6368-Constancy: [(4, 0)]
6368-ContextAliasing: []

.....
-----
Block: 8457_0
8457_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457_0-Stack size: 20 
8457_0-Equals Mem:<< []>> 
8457_0-NonEquals Mem: << [<5,8>]>> 
8457_0-Equals Sto:<< []>> 
8457_0-NonEquals Sto: << []>> 
8457_0-Useless: []
8457_0-Constancy: [(14, 0), (1, 0)]
8457_0-ContextAliasing: [(4, 17)]

.....
-----
Block: 7044
7044Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1ba8', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
7044-Stack size: 20 
7044-Equals Mem:<< [<18,6>]>> 
7044-NonEquals Mem: << []>> 
7044-Equals Sto:<< []>> 
7044-NonEquals Sto: << []>> 
7044-Useless: []
7044-Constancy: [(14, 0)]
7044-ContextAliasing: []

.....
-----
Block: 8457
8457Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457-Stack size: 20 
8457-Equals Mem:<< []>> 
8457-NonEquals Mem: << [<5,8>]>> 
8457-Equals Sto:<< []>> 
8457-NonEquals Sto: << []>> 
8457-Useless: []
8457-Constancy: [(14, 0)]
8457-ContextAliasing: [(4, 17)]

.....
-----
Block: 5252_1
5252_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x4552523a207a65726f2061646472657373', 'PUSH1 0x78', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5252_1-Stack size: 20 
5252_1-Equals Mem:<< []>> 
5252_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
5252_1-Equals Sto:<< []>> 
5252_1-NonEquals Sto: << []>> 
5252_1-Useless: []
5252_1-Constancy: [(14, 0)]
5252_1-ContextAliasing: []

.....
-----
Block: 7137
7137Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1c19', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x2166', 'JUMP']>> 
7137-Stack size: 16 
7137-Equals Mem:<< []>> 
7137-NonEquals Mem: << [<9,4>]>> 
7137-Equals Sto:<< []>> 
7137-NonEquals Sto: << []>> 
7137-Useless: []
7137-Constancy: [(10, 0)]
7137-ContextAliasing: []

.....
-----
Block: 8550
8550Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
8550-Stack size: 25 
8550-Equals Mem:<< []>> 
8550-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
8550-Equals Sto:<< []>> 
8550-NonEquals Sto: << []>> 
8550-Useless: []
8550-Constancy: [(19, 0), (4, 0)]
8550-ContextAliasing: [(9, 21)]

.....
-----
Block: 8600
8600Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x218f', 'JUMP']>> 
8600-Stack size: 31 
8600-Equals Mem:<< []>> 
8600-NonEquals Mem: << [<9,1>]>> 
8600-Equals Sto:<< []>> 
8600-NonEquals Sto: << []>> 
8600-Useless: []
8600-Constancy: [(25, 0), (10, 0), (5, 0), (3, 32)]
8600-ContextAliasing: [(15, 21)]

.....
-----
Block: 6424
6424Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x01', 'SWAP1', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x1958', 'JUMPI']>> 
6424-Stack size: 10 
6424-Equals Mem:<< []>> 
6424-NonEquals Mem: << [<11,14>]>> 
6424-Equals Sto:<< []>> 
6424-NonEquals Sto: << []>> 
6424-Useless: []
6424-Constancy: [(4, 0)]
6424-ContextAliasing: []

.....
-----
Block: 6460
6460Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
6460-Stack size: 12 
6460-Equals Mem:<< []>> 
6460-NonEquals Mem: << [<11,14>]>> 
6460-Equals Sto:<< []>> 
6460-NonEquals Sto: << []>> 
6460-Useless: []
6460-Constancy: [(6, 0)]
6460-ContextAliasing: []

.....
-----
Block: 8314_3
8314_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_3-Stack size: 33 
8314_3-Equals Mem:<< []>> 
8314_3-NonEquals Mem: << [<5,8>]>> 
8314_3-Equals Sto:<< []>> 
8314_3-NonEquals Sto: << []>> 
8314_3-Useless: []
8314_3-Constancy: [(27, 0), (12, 0), (11, 0), (8, 0), (7, 0), (6, 0)]
8314_3-ContextAliasing: []

.....
-----
Block: 8364
8364Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8364-Stack size: 31 
8364-Equals Mem:<< []>> 
8364-NonEquals Mem: << [<4,7>]>> 
8364-Equals Sto:<< []>> 
8364-NonEquals Sto: << []>> 
8364-Useless: []
8364-Constancy: [(25, 0), (10, 0), (9, 0), (6, 0), (5, 0), (4, 0), (0, 0)]
8364-ContextAliasing: []

.....
-----
Block: 8314_2
8314_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_2-Stack size: 37 
8314_2-Equals Mem:<< []>> 
8314_2-NonEquals Mem: << [<5,8>]>> 
8314_2-Equals Sto:<< []>> 
8314_2-NonEquals Sto: << []>> 
8314_2-Useless: []
8314_2-Constancy: [(31, 0), (16, 0), (15, 0), (12, 0), (11, 0), (9, 0), (5, 0)]
8314_2-ContextAliasing: []

.....
-----
Block: 7372
7372Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP2', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x1cf3', 'SWAP1', 'DUP5', 'PUSH2 0x1ddd', 'JUMP']>> 
7372-Stack size: 24 
7372-Equals Mem:<< []>> 
7372-NonEquals Mem: << [<11,14>]>> 
7372-Equals Sto:<< []>> 
7372-NonEquals Sto: << []>> 
7372-Useless: []
7372-Constancy: [(18, 0), (3, 0), (2, 0)]
7372-ContextAliasing: []

.....
-----
Block: 8314_1
8314_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_1-Stack size: 31 
8314_1-Equals Mem:<< []>> 
8314_1-NonEquals Mem: << [<5,8>]>> 
8314_1-Equals Sto:<< []>> 
8314_1-NonEquals Sto: << []>> 
8314_1-Useless: []
8314_1-Constancy: [(25, 0), (5, 0)]
8314_1-ContextAliasing: []

.....
-----
Block: 7411
7411Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP7', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1d21', 'SWAP1', 'DUP4', 'PUSH2 0x1a39', 'JUMP']>> 
7411-Stack size: 23 
7411-Equals Mem:<< [<12,28>]>> 
7411-NonEquals Mem: << [<12,15>, <15,28>]>> 
7411-Equals Sto:<< [<23,30>]>> 
7411-NonEquals Sto: << []>> 
7411-Useless: []
7411-Constancy: [(17, 0)]
7411-ContextAliasing: []

.....
-----
Block: 8314_0
8314_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_0-Stack size: 31 
8314_0-Equals Mem:<< []>> 
8314_0-NonEquals Mem: << [<5,8>]>> 
8314_0-Equals Sto:<< []>> 
8314_0-NonEquals Sto: << []>> 
8314_0-Useless: []
8314_0-Constancy: [(25, 0), (5, 0)]
8314_0-ContextAliasing: []

.....
-----
Block: 7457
7457Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'ADDRESS', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1d4c', 'SWAP1', 'DUP3', 'PUSH2 0x1a39', 'JUMP']>> 
7457-Stack size: 23 
7457-Equals Mem:<< [<11,25>]>> 
7457-NonEquals Mem: << [<11,14>, <14,25>]>> 
7457-Equals Sto:<< [<22,27>]>> 
7457-NonEquals Sto: << []>> 
7457-Useless: []
7457-Constancy: [(17, 0)]
7457-ContextAliasing: []

.....
-----
Block: 8314
8314Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314-Stack size: 31 
8314-Equals Mem:<< []>> 
8314-NonEquals Mem: << [<5,8>]>> 
8314-Equals Sto:<< []>> 
8314-NonEquals Sto: << []>> 
8314-Useless: []
8314-Constancy: [(25, 0), (5, 0)]
8314-ContextAliasing: []

.....
-----
Block: 6681
6681Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP2', 'SWAP1', 'PUSH2 0x1de8', 'JUMP']>> 
6681-Stack size: 15 
6681-Equals Mem:<< []>> 
6681-NonEquals Mem: << [<6,1>]>> 
6681-Equals Sto:<< []>> 
6681-NonEquals Sto: << []>> 
6681-Useless: []
6681-Constancy: [(9, 0), (1, 0)]
6681-ContextAliasing: [(2, 14)]

.....
-----
Block: 7656_0
7656_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
7656_0-Stack size: 17 
7656_0-Equals Mem:<< []>> 
7656_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
7656_0-Equals Sto:<< []>> 
7656_0-NonEquals Sto: << []>> 
7656_0-Useless: []
7656_0-Constancy: [(11, 0), (3, 0)]
7656_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 7680_0
7680_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1df7', 'JUMP']>> 
7680_0-Stack size: 21 
7680_0-Equals Mem:<< []>> 
7680_0-NonEquals Mem: << [<11,5>]>> 
7680_0-Equals Sto:<< []>> 
7680_0-NonEquals Sto: << []>> 
7680_0-Useless: []
7680_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
7680_0-ContextAliasing: [(8, 15)]

.....
-----
Block: 5252_0
5252_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x4552523a207a65726f2061646472657373', 'PUSH1 0x78', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5252_0-Stack size: 10 
5252_0-Equals Mem:<< []>> 
5252_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
5252_0-Equals Sto:<< []>> 
5252_0-NonEquals Sto: << []>> 
5252_0-Useless: []
5252_0-Constancy: [(4, 0)]
5252_0-ContextAliasing: []

.....
-----
Block: 8314_4
8314_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314_4-Stack size: 24 
8314_4-Equals Mem:<< []>> 
8314_4-NonEquals Mem: << [<5,8>]>> 
8314_4-Equals Sto:<< []>> 
8314_4-NonEquals Sto: << []>> 
8314_4-Useless: []
8314_4-Constancy: [(18, 0), (5, 0), (2, 0)]
8314_4-ContextAliasing: []

.....
-----
Block: 896
896Instr:<<['JUMPDEST', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
896-Stack size: 3 
896-Equals Mem:<< []>> 
896-NonEquals Mem: << [<3,7>]>> 
896-Equals Sto:<< []>> 
896-NonEquals Sto: << []>> 
896-Useless: []
896-Constancy: []
896-ContextAliasing: []

.....
-----
Block: 2191
2191Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
2191-Stack size: 3 
2191-Equals Mem:<< []>> 
2191-NonEquals Mem: << [<6,1>]>> 
2191-Equals Sto:<< []>> 
2191-NonEquals Sto: << []>> 
2191-Useless: []
2191-Constancy: []
2191-ContextAliasing: []

.....
-----
Block: 2287
2287Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0913', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
2287-Stack size: 8 
2287-Equals Mem:<< [<18,6>]>> 
2287-NonEquals Mem: << []>> 
2287-Equals Sto:<< []>> 
2287-NonEquals Sto: << []>> 
2287-Useless: []
2287-Constancy: []
2287-ContextAliasing: []

.....
-----
Block: 2398
2398Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0982', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
2398-Stack size: 11 
2398-Equals Mem:<< [<18,6>]>> 
2398-NonEquals Mem: << []>> 
2398-Equals Sto:<< []>> 
2398-NonEquals Sto: << []>> 
2398-Useless: []
2398-Constancy: []
2398-ContextAliasing: []

.....
-----
Block: 2508
2508Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x09f0', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
2508-Stack size: 8 
2508-Equals Mem:<< [<18,6>]>> 
2508-NonEquals Mem: << []>> 
2508-Equals Sto:<< []>> 
2508-NonEquals Sto: << []>> 
2508-Useless: []
2508-Constancy: []
2508-ContextAliasing: []

.....
-----
Block: 2214_0
2214_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_0-Stack size: 4 
2214_0-Equals Mem:<< []>> 
2214_0-NonEquals Mem: << []>> 
2214_0-Equals Sto:<< []>> 
2214_0-NonEquals Sto: << []>> 
2214_0-Useless: []
2214_0-Constancy: []
2214_0-ContextAliasing: []

.....
-----
Block: 2214_12
2214_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_12-Stack size: 15 
2214_12-Equals Mem:<< []>> 
2214_12-NonEquals Mem: << []>> 
2214_12-Equals Sto:<< []>> 
2214_12-NonEquals Sto: << []>> 
2214_12-Useless: []
2214_12-Constancy: []
2214_12-ContextAliasing: []

.....
-----
Block: 643
643Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
643-Stack size: 2 
643-Equals Mem:<< []>> 
643-NonEquals Mem: << []>> 
643-Equals Sto:<< []>> 
643-NonEquals Sto: << []>> 
643-Useless: []
643-Constancy: []
643-ContextAliasing: []

.....
-----
Block: 2214_7
2214_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_7-Stack size: 5 
2214_7-Equals Mem:<< []>> 
2214_7-NonEquals Mem: << []>> 
2214_7-Equals Sto:<< []>> 
2214_7-NonEquals Sto: << []>> 
2214_7-Useless: []
2214_7-Constancy: []
2214_7-ContextAliasing: []

.....
-----
Block: 2214_11
2214_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_11-Stack size: 11 
2214_11-Equals Mem:<< []>> 
2214_11-NonEquals Mem: << []>> 
2214_11-Equals Sto:<< []>> 
2214_11-NonEquals Sto: << []>> 
2214_11-Useless: []
2214_11-Constancy: [(6, 0)]
2214_11-ContextAliasing: []

.....
-----
Block: 2214
2214Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214-Stack size: 10 
2214-Equals Mem:<< []>> 
2214-NonEquals Mem: << []>> 
2214-Equals Sto:<< []>> 
2214-NonEquals Sto: << []>> 
2214-Useless: []
2214-Constancy: [(5, 0)]
2214-ContextAliasing: []

.....
-----
Block: 2214_10
2214_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_10-Stack size: 20 
2214_10-Equals Mem:<< []>> 
2214_10-NonEquals Mem: << []>> 
2214_10-Equals Sto:<< []>> 
2214_10-NonEquals Sto: << []>> 
2214_10-Useless: []
2214_10-Constancy: [(15, 0)]
2214_10-ContextAliasing: []

.....
-----
Block: 2214_9
2214_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_9-Stack size: 14 
2214_9-Equals Mem:<< []>> 
2214_9-NonEquals Mem: << []>> 
2214_9-Equals Sto:<< []>> 
2214_9-NonEquals Sto: << []>> 
2214_9-Useless: []
2214_9-Constancy: [(9, 0), (1, 0)]
2214_9-ContextAliasing: []

.....
-----
Block: 643_2
643_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
643_2-Stack size: 3 
643_2-Equals Mem:<< []>> 
643_2-NonEquals Mem: << []>> 
643_2-Equals Sto:<< []>> 
643_2-NonEquals Sto: << []>> 
643_2-Useless: []
643_2-Constancy: []
643_2-ContextAliasing: []

.....
-----
Block: 643_0
643_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
643_0-Stack size: 3 
643_0-Equals Mem:<< []>> 
643_0-NonEquals Mem: << []>> 
643_0-Equals Sto:<< []>> 
643_0-NonEquals Sto: << []>> 
643_0-Useless: []
643_0-Constancy: []
643_0-ContextAliasing: []

.....
-----
Block: 2214_8
2214_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_8-Stack size: 3 
2214_8-Equals Mem:<< []>> 
2214_8-NonEquals Mem: << []>> 
2214_8-Equals Sto:<< []>> 
2214_8-NonEquals Sto: << []>> 
2214_8-Useless: []
2214_8-Constancy: []
2214_8-ContextAliasing: []

.....
-----
Block: 643_1
643_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
643_1-Stack size: 3 
643_1-Equals Mem:<< []>> 
643_1-NonEquals Mem: << []>> 
643_1-Equals Sto:<< []>> 
643_1-NonEquals Sto: << []>> 
643_1-Useless: []
643_1-Constancy: []
643_1-ContextAliasing: []

.....
-----
Block: 2214_6
2214_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_6-Stack size: 7 
2214_6-Equals Mem:<< []>> 
2214_6-NonEquals Mem: << []>> 
2214_6-Equals Sto:<< []>> 
2214_6-NonEquals Sto: << []>> 
2214_6-Useless: []
2214_6-Constancy: [(1, 0)]
2214_6-ContextAliasing: []

.....
-----
Block: 2214_5
2214_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_5-Stack size: 12 
2214_5-Equals Mem:<< []>> 
2214_5-NonEquals Mem: << []>> 
2214_5-Equals Sto:<< []>> 
2214_5-NonEquals Sto: << []>> 
2214_5-Useless: []
2214_5-Constancy: [(6, 0)]
2214_5-ContextAliasing: []

.....
-----
Block: 2214_4
2214_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_4-Stack size: 11 
2214_4-Equals Mem:<< []>> 
2214_4-NonEquals Mem: << []>> 
2214_4-Equals Sto:<< []>> 
2214_4-NonEquals Sto: << []>> 
2214_4-Useless: []
2214_4-Constancy: [(5, 0)]
2214_4-ContextAliasing: []

.....
-----
Block: 2214_3
2214_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_3-Stack size: 21 
2214_3-Equals Mem:<< []>> 
2214_3-NonEquals Mem: << []>> 
2214_3-Equals Sto:<< []>> 
2214_3-NonEquals Sto: << []>> 
2214_3-Useless: []
2214_3-Constancy: [(15, 0)]
2214_3-ContextAliasing: []

.....
-----
Block: 2214_2
2214_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_2-Stack size: 15 
2214_2-Equals Mem:<< []>> 
2214_2-NonEquals Mem: << []>> 
2214_2-Equals Sto:<< []>> 
2214_2-NonEquals Sto: << []>> 
2214_2-Useless: []
2214_2-Constancy: [(9, 0), (1, 0)]
2214_2-ContextAliasing: []

.....
-----
Block: 2214_1
2214_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214_1-Stack size: 11 
2214_1-Equals Mem:<< []>> 
2214_1-NonEquals Mem: << []>> 
2214_1-Equals Sto:<< []>> 
2214_1-NonEquals Sto: << []>> 
2214_1-Useless: []
2214_1-Constancy: [(5, 0)]
2214_1-ContextAliasing: []

.....
-----
Block: 2544
2544Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'SWAP2', 'DUP3', 'AND', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH1 0x1a', 'DUP1', 'SLOAD', 'SWAP4', 'SWAP1', 'SWAP3', 'AND', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'POP', 'JUMP']>> 
2544-Stack size: 5 
2544-Equals Mem:<< []>> 
2544-NonEquals Mem: << []>> 
2544-Equals Sto:<< [<3,24>, <27,39>]>> 
2544-NonEquals Sto: << [<3,27>, <3,39>, <24,27>, <24,39>]>> 
2544-Useless: []
2544-Constancy: []
2544-ContextAliasing: []

.....
-----
Block: 3181
3181Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3181-Stack size: 3 
3181-Equals Mem:<< []>> 
3181-NonEquals Mem: << []>> 
3181-Equals Sto:<< [<3,25>]>> 
3181-NonEquals Sto: << []>> 
3181-Useless: []
3181-Constancy: []
3181-ContextAliasing: []

.....
-----
Block: 3463
3463Instr:<<['JUMPDEST', 'PUSH1 0x11', 'SSTORE', 'PUSH1 0x10', 'SSTORE', 'JUMP']>> 
3463-Stack size: 4 
3463-Equals Mem:<< []>> 
3463-NonEquals Mem: << []>> 
3463-Equals Sto:<< []>> 
3463-NonEquals Sto: << [<2,4>]>> 
3463-Useless: []
3463-Constancy: []
3463-ContextAliasing: []

.....
-----
Block: 3625
3625Instr:<<['JUMPDEST', 'PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'SWAP1', 'SWAP3', 'AND', 'PUSH2 0x0100', 'MUL', 'PUSH2 0xff00', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3625-Stack size: 3 
3625-Equals Mem:<< []>> 
3625-NonEquals Mem: << []>> 
3625-Equals Sto:<< [<3,20>]>> 
3625-NonEquals Sto: << []>> 
3625-Useless: []
3625-Constancy: []
3625-ContextAliasing: []

.....
-----
Block: 4228
4228Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xb0', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4228-Stack size: 3 
4228-Equals Mem:<< []>> 
4228-NonEquals Mem: << []>> 
4228-Equals Sto:<< [<3,23>]>> 
4228-NonEquals Sto: << []>> 
4228-Useless: []
4228-Constancy: []
4228-ContextAliasing: []

.....
-----
Block: 4563
4563Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4563-Stack size: 3 
4563-Equals Mem:<< []>> 
4563-NonEquals Mem: << []>> 
4563-Equals Sto:<< [<3,25>]>> 
4563-NonEquals Sto: << []>> 
4563-Useless: []
4563-Constancy: []
4563-ContextAliasing: []

.....
-----
Block: 6594
6594Instr:<<['PUSH1 0x10', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH2 0x19fc', 'JUMP']>> 
6594-Stack size: 11 
6594-Equals Mem:<< []>> 
6594-NonEquals Mem: << []>> 
6594-Equals Sto:<< []>> 
6594-NonEquals Sto: << [<1,3>]>> 
6594-Useless: []
6594-Constancy: [(5, 0)]
6594-ContextAliasing: []

.....
-----
Block: 6731
6731Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x1a67', 'DUP2', 'PUSH2 0x1afa', 'JUMP']>> 
6731-Stack size: 13 
6731-Equals Mem:<< []>> 
6731-NonEquals Mem: << []>> 
6731-Equals Sto:<< [<3,14>]>> 
6731-NonEquals Sto: << []>> 
6731-Useless: []
6731-Constancy: [(7, 0)]
6731-ContextAliasing: []

.....
-----
Block: 6788
6788Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
6788-Stack size: 14 
6788-Equals Mem:<< []>> 
6788-NonEquals Mem: << []>> 
6788-Equals Sto:<< [<5,12>]>> 
6788-NonEquals Sto: << []>> 
6788-Useless: []
6788-Constancy: [(8, 0)]
6788-ContextAliasing: []

.....
-----
Block: 6841
6841Instr:<<['JUMPDEST', 'SWAP2', 'SWAP1', 'PUSH2 0x0100', 'EXP', 'DUP2', 'SLOAD', 'DUP2', 'PUSH1 0xff', 'MUL', 'NOT', 'AND', 'SWAP1', 'DUP4', 'PUSH1 0xff', 'AND', 'MUL', 'OR', 'SWAP1', 'SSTORE', 'POP', 'POP']>> 
6841-Stack size: 20 
6841-Equals Mem:<< []>> 
6841-NonEquals Mem: << []>> 
6841-Equals Sto:<< [<6,19>]>> 
6841-NonEquals Sto: << []>> 
6841-Useless: []
6841-Constancy: [(14, 0), (1, 0)]
6841-ContextAliasing: []

.....
-----
Block: 6884
6884Instr:<<['PUSH2 0x1a08', 'PUSH1 0x12', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x10', 'SSTORE', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x11', 'SSTORE', 'JUMP']>> 
6884-Stack size: 16 
6884-Equals Mem:<< []>> 
6884-NonEquals Mem: << []>> 
6884-Equals Sto:<< []>> 
6884-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <2,10>, <2,12>, <4,6>, <4,8>, <4,10>, <4,12>, <6,8>, <6,10>, <6,12>, <8,10>, <8,12>, <10,12>]>> 
6884-Useless: []
6884-Constancy: [(10, 0)]
6884-ContextAliasing: []

.....
-----
Block: 7328
7328Instr:<<['JUMPDEST', 'PUSH1 0x10', 'DUP1', 'SLOAD', 'PUSH1 0x13', 'SSTORE', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'PUSH1 0x14', 'SSTORE', 'PUSH1 0x0f', 'DUP1', 'SLOAD', 'PUSH1 0x12', 'SSTORE', 'PUSH0', 'SWAP3', 'DUP4', 'SWAP1', 'SSTORE', 'SWAP1', 'DUP3', 'SWAP1', 'SSTORE', 'SSTORE', 'JUMP']>> 
7328-Stack size: 17 
7328-Equals Mem:<< []>> 
7328-NonEquals Mem: << []>> 
7328-Equals Sto:<< [<3,20>, <8,24>, <13,25>]>> 
7328-NonEquals Sto: << [<3,5>, <3,8>, <3,10>, <3,13>, <3,15>, <3,24>, <3,25>, <5,8>, <5,10>, <5,13>, <5,15>, <5,20>, <5,24>, <5,25>, <8,10>, <8,13>, <8,15>, <8,20>, <8,25>, <10,13>, <10,15>, <10,20>, <10,24>, <10,25>, <13,15>, <13,20>, <13,24>, <15,20>, <15,24>, <15,25>, <20,24>, <20,25>, <24,25>]>> 
7328-Useless: []
7328-Constancy: [(11, 0)]
7328-ContextAliasing: []

.....
-----
Block: 6841_0
6841_0Instr:<<['JUMPDEST', 'SWAP2', 'SWAP1', 'PUSH2 0x0100', 'EXP', 'DUP2', 'SLOAD', 'DUP2', 'PUSH1 0xff', 'MUL', 'NOT', 'AND', 'SWAP1', 'DUP4', 'PUSH1 0xff', 'AND', 'MUL', 'OR', 'SWAP1', 'SSTORE', 'POP', 'POP']>> 
6841_0-Stack size: 19 
6841_0-Equals Mem:<< []>> 
6841_0-NonEquals Mem: << []>> 
6841_0-Equals Sto:<< [<6,19>]>> 
6841_0-NonEquals Sto: << []>> 
6841_0-Useless: []
6841_0-Constancy: [(14, 0), (1, 0)]
6841_0-ContextAliasing: []

.....
-----
Block: 6884_0
6884_0Instr:<<['PUSH2 0x1a08', 'PUSH1 0x12', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x10', 'SSTORE', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x11', 'SSTORE', 'JUMP']>> 
6884_0-Stack size: 15 
6884_0-Equals Mem:<< []>> 
6884_0-NonEquals Mem: << []>> 
6884_0-Equals Sto:<< []>> 
6884_0-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <2,10>, <2,12>, <4,6>, <4,8>, <4,10>, <4,12>, <6,8>, <6,10>, <6,12>, <8,10>, <8,12>, <10,12>]>> 
6884_0-Useless: []
6884_0-Constancy: [(10, 0)]
6884_0-ContextAliasing: []

.....
-----
Block: 7328_0
7328_0Instr:<<['JUMPDEST', 'PUSH1 0x10', 'DUP1', 'SLOAD', 'PUSH1 0x13', 'SSTORE', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'PUSH1 0x14', 'SSTORE', 'PUSH1 0x0f', 'DUP1', 'SLOAD', 'PUSH1 0x12', 'SSTORE', 'PUSH0', 'SWAP3', 'DUP4', 'SWAP1', 'SSTORE', 'SWAP1', 'DUP3', 'SWAP1', 'SSTORE', 'SSTORE', 'JUMP']>> 
7328_0-Stack size: 16 
7328_0-Equals Mem:<< []>> 
7328_0-NonEquals Mem: << []>> 
7328_0-Equals Sto:<< [<3,20>, <8,24>, <13,25>]>> 
7328_0-NonEquals Sto: << [<3,5>, <3,8>, <3,10>, <3,13>, <3,15>, <3,24>, <3,25>, <5,8>, <5,10>, <5,13>, <5,15>, <5,20>, <5,24>, <5,25>, <8,10>, <8,13>, <8,15>, <8,20>, <8,25>, <10,13>, <10,15>, <10,20>, <10,24>, <10,25>, <13,15>, <13,20>, <13,24>, <15,20>, <15,24>, <15,25>, <20,24>, <20,25>, <24,25>]>> 
7328_0-Useless: []
7328_0-Constancy: [(11, 0)]
7328_0-ContextAliasing: []

.....
-----
Block: 6594_0
6594_0Instr:<<['PUSH1 0x10', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH2 0x19fc', 'JUMP']>> 
6594_0-Stack size: 10 
6594_0-Equals Mem:<< []>> 
6594_0-NonEquals Mem: << []>> 
6594_0-Equals Sto:<< []>> 
6594_0-NonEquals Sto: << [<1,3>]>> 
6594_0-Useless: []
6594_0-Constancy: [(5, 0)]
6594_0-ContextAliasing: []

.....
-----
Block: 6731_0
6731_0Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x1a67', 'DUP2', 'PUSH2 0x1afa', 'JUMP']>> 
6731_0-Stack size: 12 
6731_0-Equals Mem:<< []>> 
6731_0-NonEquals Mem: << []>> 
6731_0-Equals Sto:<< [<3,14>]>> 
6731_0-NonEquals Sto: << []>> 
6731_0-Useless: []
6731_0-Constancy: [(7, 0)]
6731_0-ContextAliasing: []

.....
-----
Block: 6788_0
6788_0Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
6788_0-Stack size: 13 
6788_0-Equals Mem:<< []>> 
6788_0-NonEquals Mem: << []>> 
6788_0-Equals Sto:<< [<5,12>]>> 
6788_0-NonEquals Sto: << []>> 
6788_0-Useless: []
6788_0-Constancy: [(8, 0)]
6788_0-ContextAliasing: []

.....
-----
Block: 6731_1
6731_1Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x1a67', 'DUP2', 'PUSH2 0x1afa', 'JUMP']>> 
6731_1-Stack size: 7 
6731_1-Equals Mem:<< []>> 
6731_1-NonEquals Mem: << []>> 
6731_1-Equals Sto:<< [<3,14>]>> 
6731_1-NonEquals Sto: << []>> 
6731_1-Useless: []
6731_1-Constancy: []
6731_1-ContextAliasing: []

.....
-----
Block: 6788_1
6788_1Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
6788_1-Stack size: 8 
6788_1-Equals Mem:<< []>> 
6788_1-NonEquals Mem: << []>> 
6788_1-Equals Sto:<< [<5,12>]>> 
6788_1-NonEquals Sto: << []>> 
6788_1-Useless: []
6788_1-Constancy: []
6788_1-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.2330642220331356s

*************************************************************
FILERES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_Address;1;1;0;1;0;0;0.002300708962138742
FILERES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SafeMath;1;1;0;1;0;0;0.0007729280041530728
FILERES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI;562;1081;86;218;169;36;0.6925590820028447


Aux path: /tmp/0x00//ethir_c54f9903cd8348ab856517fcadab2047
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 5104
5104Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
5104-Stack size: 3 
5104-Equals Mem:<< []>> 
5104-NonEquals Mem: << [<6,1>]>> 
5104-Equals Sto:<< []>> 
5104-NonEquals Sto: << []>> 
5104-Useless: []
5104-Constancy: []
5104-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_5104_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_5104_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5104;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;5104;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.032649528002366424;1;0;0;0

Block: 5127
5127Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'DUP3', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP1', 'SWAP2', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH1 0x40', 'MLOAD', 'PUSH32 0x53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159', 'SWAP1', 'PUSH2 0x1454', 'SWAP1', 'DUP4', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
5127-Stack size: 3 
5127-Equals Mem:<< []>> 
5127-NonEquals Mem: << [<31,22>]>> 
5127-Equals Sto:<< [<3,20>]>> 
5127-NonEquals Sto: << []>> 
5127-Useless: []
5127-Constancy: []
5127-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<21,30>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<21,30>], 'storage_deps_eqs': [<2,19>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '255', 'shl')
[RULE]: Evaluate expression ('168', '1', 'shl')
{2: ((('27', 'sload0'), 1), 0), 19: ((('27', 's(6)', 'sstore'), 2), 1)}
Storage order: [(('27', 'sload0'), 1), (('27', 's(6)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: [(('64', 'mload0'), 1), (('s(5)', 's(13)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('27', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(5)', '+'), 2), (('27', 'sload0'), 1), (('s(8)', 115792089237316195423570889601861022891927484329094684320502060868636724166655, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('374144419156711147060143317175368453031918731001856', 's(13)', '*'), 2), (('s(7)', 's(10)', 'or'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(5)', '+'), 2), (('27', 'sload0'), 1), (('s(8)', 115792089237316195423570889601861022891927484329094684320502060868636724166655, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('374144419156711147060143317175368453031918731001856', 's(13)', '*'), 2), (('s(7)', 's(10)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('27', 'sload0'), 1), 0), 19: ((('27', 's(6)', 'sstore'), 2), 1)}
(('27', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(5)', '+'), 2), (('27', 'sload0'), 1), (('s(8)', 115792089237316195423570889601861022891927484329094684320502060868636724166655, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('374144419156711147060143317175368453031918731001856', 's(13)', '*'), 2), (('s(7)', 's(10)', 'or'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(5)', '+'), 2), (('27', 'sload0'), 1), (('s(8)', 115792089237316195423570889601861022891927484329094684320502060868636724166655, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('374144419156711147060143317175368453031918731001856', 's(13)', '*'), 2), (('s(7)', 's(10)', 'or'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1b DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x01 PUSH1 0xa8 SHL MUL PUSH1 0xff PUSH1 0xa8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159 SWAP1 PUSH2 0x1454 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1b DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x01 PUSH1 0xa8 SHL MUL PUSH1 0xff PUSH1 0xa8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159 SWAP1 PUSH2 0x1454 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_5127_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_5127_statistics.csv

Estimated initial gas: 5107
Estimated gas optimized: 5107

Estimated initial size in bytes: 77
Estimated size optimized in bytes: 77

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5127;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;5127;2;True;False;False;JUMPDEST PUSH1 0x1b DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x01 PUSH1 0xa8 SHL MUL PUSH1 0xff PUSH1 0xa8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159 SWAP1 PUSH2 0x1454 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST PUSH1 0x1b DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x01 PUSH1 0xa8 SHL MUL PUSH1 0xff PUSH1 0xa8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc159 SWAP1 PUSH2 0x1454 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;5107;77;36;5107;77;36;0;0;0;True;True;False;False;2.173274255997967;3;0;5000;5000

Block: 4873
4873Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4873-Stack size: 3 
4873-Equals Mem:<< []>> 
4873-NonEquals Mem: << [<6,1>]>> 
4873-Equals Sto:<< []>> 
4873-NonEquals Sto: << []>> 
4873-Useless: []
4873-Constancy: []
4873-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4873_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4873_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4873;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4873;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.029220769996754825;1;0;0;0

Block: 4911
4911Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
4911-Stack size: 3 
4911-Equals Mem:<< []>> 
4911-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4911-Equals Sto:<< []>> 
4911-NonEquals Sto: << []>> 
4911-Useless: []
4911-Constancy: []
4911-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4911_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4911_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 86
Estimated size optimized in bytes: 86

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4911;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4911;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;104;86;33;104;86;33;0;0;0;True;False;False;False;2.1285729949595407;2;4;0;0

Block: 4800
4800Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4800-Stack size: 3 
4800-Equals Mem:<< []>> 
4800-NonEquals Mem: << [<6,1>]>> 
4800-Equals Sto:<< []>> 
4800-NonEquals Sto: << []>> 
4800-Useless: []
4800-Constancy: []
4800-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4800_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4800_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4800;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4800;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.0286604689899832;1;0;0;0

Block: 4823
4823Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
4823-Stack size: 3 
4823-Equals Mem:<< []>> 
4823-NonEquals Mem: << [<10,13>]>> 
4823-Equals Sto:<< [<18,23>]>> 
4823-NonEquals Sto: << []>> 
4823-Useless: []
4823-Constancy: []
4823-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [<17,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1), 22: ((('s(4)', 's(5)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(4)', 's(5)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(1)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(7)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1), 22: ((('s(4)', 's(5)', 'sstore'), 2), 2)}
(('s(4)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(7)', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4823 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4615
4615Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4615-Stack size: 3 
4615-Equals Mem:<< []>> 
4615-NonEquals Mem: << [<6,1>]>> 
4615-Equals Sto:<< []>> 
4615-NonEquals Sto: << []>> 
4615-Useless: []
4615-Constancy: []
4615-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4615_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4615_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4615;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4615;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02706148597644642;1;0;0;0

Block: 4657
4657Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43757272656e746c792070726f63657373696e672c20747279206c617465722e', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
4657-Stack size: 3 
4657-Equals Mem:<< []>> 
4657-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
4657-Equals Sto:<< []>> 
4657-NonEquals Sto: << []>> 
4657-Useless: []
4657-Constancy: []
4657-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '30512471844857353086579417611440086563236046342974895349381679930031059857966', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656e746c792070726f63657373696e672c20747279206c617465722e PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656e746c792070726f63657373696e672c20747279206c617465722e PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4657_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4657_statistics.csv

Estimated initial gas: 86
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 27
Final number of instructions: 24

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4657;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4657;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656e746c792070726f63657373696e672c20747279206c617465722e PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656e746c792070726f63657373696e672c20747279206c617465722e PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP;86;71;27;77;97;24;9;-26;3;True;False;False;False;2.20606403099373;1;3;0;0

Block: 4728
4728Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH1 0x64', 'PUSH2 0x1294', 'DUP5', 'DUP5', 'PUSH2 0x208e', 'JUMP']>> 
4728-Stack size: 3 
4728-Equals Mem:<< []>> 
4728-NonEquals Mem: << [<5,8>]>> 
4728-Equals Sto:<< []>> 
4728-NonEquals Sto: << []>> 
4728-Useless: []
4728-Constancy: []
4728-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('address', 'address'), 0)]
{11: ((('s(8)', 'sload0'), 1), 1)}
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('address', 'address'), 0)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4728 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1841
1841Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1841-Stack size: 4 
1841-Equals Mem:<< [<12,27>, <17,31>]>> 
1841-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
1841-Equals Sto:<< []>> 
1841-NonEquals Sto: << []>> 
1841-Useless: []
1841-Constancy: []
1841-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(11)', 'sload0'), 1)
sload0
[(('s(11)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x2 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_1841_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_1841_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2211

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_1841;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;1841;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x2 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP;2261;42;36;2211;55;30;50;-13;6;True;False;False;False;2.1373546379618347;4;2;2100;2100

Block: 835
835Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
835-Stack size: 2 
835-Equals Mem:<< []>> 
835-NonEquals Mem: << [<5,2>]>> 
835-Equals Sto:<< []>> 
835-NonEquals Sto: << []>> 
835-Useless: []
835-Constancy: []
835-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_835_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_835_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_835;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;835;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.020084520045202225;0;0;0;0

Block: 4540
4540Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4540-Stack size: 3 
4540-Equals Mem:<< []>> 
4540-NonEquals Mem: << [<6,1>]>> 
4540-Equals Sto:<< []>> 
4540-NonEquals Sto: << []>> 
4540-Useless: []
4540-Constancy: []
4540-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4540_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4540_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4540;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4540;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02895099698798731;1;0;0;0

Block: 4288
4288Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4288-Stack size: 4 
4288-Equals Mem:<< []>> 
4288-NonEquals Mem: << [<6,1>]>> 
4288-Equals Sto:<< []>> 
4288-NonEquals Sto: << []>> 
4288-Useless: []
4288-Constancy: []
4288-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4288_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4288_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4288;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4288;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.029528028971981257;1;0;0;0

Block: 4376
4376Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x118c', 'JUMPI']>> 
4376-Stack size: 10 
4376-Equals Mem:<< []>> 
4376-NonEquals Mem: << [<8,15>]>> 
4376-Equals Sto:<< []>> 
4376-NonEquals Sto: << []>> 
4376-Useless: []
4376-Constancy: [(1, 0)]
4376-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{19: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', 's(5)', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 's(7)', 'mstore'), 2), (('s(10)', 's(0)', 'mstore'), 2), (('0', 's(5)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('64', 's(1)', '+'), 2), (('0', 's(5)', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(1)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{19: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('64', 's(1)', '+'), 2), (('0', 's(5)', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xff AND PUSH2 0x118c JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x20 SWAP2 PUSH1 0xff SWAP5 PUSH1 0x40 SWAP4 DUP6 ADD MSTORE AND DUP3 MSTORE ADD PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x118c JUMPI

Optimized code stored in /tmp/0x00/SpartanAI_4376_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4376_statistics.csv

Estimated initial gas: 2203
Estimated gas optimized: 2192

Estimated initial size in bytes: 33
Estimated size optimized in bytes: 47

Initial number of instructions: 25
Final number of instructions: 21

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4376;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4376;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xff AND PUSH2 0x118c JUMPI;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x20 SWAP2 PUSH1 0xff SWAP5 PUSH1 0x40 SWAP4 DUP6 ADD MSTORE AND DUP3 MSTORE ADD PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x118c JUMPI;2203;33;25;2192;47;21;11;-14;4;True;False;False;False;2.1007036379887722;2;2;2100;2100

Block: 4452
4452Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE']>> 
4452-Stack size: 11 
4452-Equals Mem:<< []>> 
4452-NonEquals Mem: << [<8,15>]>> 
4452-Equals Sto:<< [<21,33>]>> 
4452-NonEquals Sto: << []>> 
4452-Useless: []
4452-Constancy: [(1, 0)]
4452-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>], 'storage_deps_eqs': [<20,32>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(9)', 'sload0'), 1), 1), 32: ((('s(9)', 's(11)', 'sstore'), 2), 2)}
Storage order: [(('0', 's(8)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('s(9)', 's(11)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(2)', 's(4)', 'mstore'), 2), (('s(7)', 's(1)', 'mstore'), 2), (('0', 's(8)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(9)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(3)', 'and'), 2), (('s(2)', '32', '+'), 2), (('64', 's(2)', '+'), 2), (('0', 's(8)', 'keccak2560'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('s(9)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(17)', 'and'), 2), (('s(13)', 's(14)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(9)', 'sload0'), 1), 1), 32: ((('s(9)', 's(11)', 'sstore'), 2), 2)}
(('s(9)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(3)', 'and'), 2), (('s(2)', '32', '+'), 2), (('64', 's(2)', '+'), 2), (('0', 's(8)', 'keccak2560'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('s(9)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(17)', 'and'), 2), (('s(13)', 's(14)', 'or'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE

Optimized code stored in /tmp/0x00/SpartanAI_4452_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4452_statistics.csv

Estimated initial gas: 5120
Estimated gas optimized: 5120

Estimated initial size in bytes: 40
Estimated size optimized in bytes: 40

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4452;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4452;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE;5120;40;34;5120;40;34;0;0;0;True;True;False;False;2.214802011032589;3;2;5000;5000

Block: 683
683Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
683-Stack size: 2 
683-Equals Mem:<< []>> 
683-NonEquals Mem: << [<7,2>]>> 
683-Equals Sto:<< []>> 
683-NonEquals Sto: << []>> 
683-Useless: []
683-Constancy: []
683-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_683_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_683_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_683;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;683;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP;39;16;12;39;16;12;0;0;0;True;False;False;False;0.05278958403505385;0;0;0;0

Block: 4205
4205Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4205-Stack size: 3 
4205-Equals Mem:<< []>> 
4205-NonEquals Mem: << [<6,1>]>> 
4205-Equals Sto:<< []>> 
4205-NonEquals Sto: << []>> 
4205-Useless: []
4205-Constancy: []
4205-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4205_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4205_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4205;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4205;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02722063200781122;1;0;0;0

Block: 5252
5252Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x4552523a207a65726f2061646472657373', 'PUSH1 0x78', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5252-Stack size: 9 
5252-Equals Mem:<< []>> 
5252-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
5252-Equals Sto:<< []>> 
5252-NonEquals Sto: << []>> 
5252-Useless: []
5252-Constancy: []
5252-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('120', '23588906960494454961775529056084888482675', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '17', 'mstore'), 2), (('s(10)', '31355035521854896075201883449961776530390909658761319587958150967182806220800', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552523a207a65726f2061646472657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552523a207a65726f2061646472657373000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_5252_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_5252_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 59
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5252;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;5252;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4552523a207a65726f2061646472657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552523a207a65726f2061646472657373000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP;89;59;28;77;97;24;12;-38;4;True;False;False;False;2.0982506169821136;2;3;0;0

Block: 2022
2022Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x0812', 'SWAP1', 'PUSH2 0x1ff2', 'JUMP']>> 
2022-Stack size: 5 
2022-Equals Mem:<< [<17,12>]>> 
2022-NonEquals Mem: << [<17,24>, <24,12>]>> 
2022-Equals Sto:<< []>> 
2022-NonEquals Sto: << []>> 
2022-Useless: []
2022-Constancy: [(2, 96)]
2022-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>]}
{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{28: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(12)', 'mstore'), 2), (('s(10)', 's(1)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('s(0)', 'sload0'), 1)
sload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
(('64', 'mload0'), 1)
mload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
{28: ((('s(0)', 'sload0'), 1), 0)}
(('s(0)', 'sload0'), 1)
sload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
(('64', 'mload0'), 1)
mload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0812 SWAP1 PUSH2 0x1ff2 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0812 SWAP1 PUSH2 0x1ff2 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_2022_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_2022_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2206

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2022;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;2022;2;True;False;False;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0812 SWAP1 PUSH2 0x1ff2 JUMP;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0812 SWAP1 PUSH2 0x1ff2 JUMP;2206;44;34;2206;44;34;0;0;0;True;False;False;False;2.1933353270287625;0;1;2100;2100

Block: 8209
8209Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8209-Stack size: 8 
8209-Equals Mem:<< []>> 
8209-NonEquals Mem: << [<4,7>]>> 
8209-Equals Sto:<< []>> 
8209-NonEquals Sto: << []>> 
8209-Useless: []
8209-Constancy: []
8209-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '34', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_8209 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7656
7656Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
7656-Stack size: 4 
7656-Equals Mem:<< []>> 
7656-NonEquals Mem: << [<12,7>, <5,7>]>> 
7656-Equals Sto:<< []>> 
7656-NonEquals Sto: << []>> 
7656-Useless: []
7656-Constancy: []
7656-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
{}
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/SpartanAI_7656_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_7656_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7656;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;7656;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.14628626400372013;0;1;0;0

Block: 7680
7680Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1df7', 'JUMP']>> 
7680-Stack size: 8 
7680-Equals Mem:<< []>> 
7680-NonEquals Mem: << [<11,5>]>> 
7680-Equals Sto:<< []>> 
7680-NonEquals Sto: << []>> 
7680-Useless: []
7680-Constancy: [(2, 32), (3, 0)]
7680-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
{}
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1df7 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1df7 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_7680_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_7680_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7680;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;7680;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1df7 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1df7 JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6525155350100249;0;0;0;0

Block: 4039
4039Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
4039-Stack size: 3 
4039-Equals Mem:<< []>> 
4039-NonEquals Mem: << [<6,1>]>> 
4039-Equals Sto:<< []>> 
4039-NonEquals Sto: << []>> 
4039-Useless: []
4039-Constancy: []
4039-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_4039_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_4039_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4039;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;4039;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.028187831048853695;1;0;0;0

Block: 3780
3780Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3780-Stack size: 4 
3780-Equals Mem:<< []>> 
3780-NonEquals Mem: << [<6,1>]>> 
3780-Equals Sto:<< []>> 
3780-NonEquals Sto: << []>> 
3780-Useless: [6]
3780-Constancy: []
3780-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3780_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3780_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3780;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3780;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027281702030450106;1;0;0;0

Block: 3868
3868Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'PUSH2 0x0f90', 'JUMPI']>> 
3868-Stack size: 10 
3868-Equals Mem:<< []>> 
3868-NonEquals Mem: << [<8,15>]>> 
3868-Equals Sto:<< []>> 
3868-NonEquals Sto: << []>> 
3868-Useless: []
3868-Constancy: [(1, 0)]
3868-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{19: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', 's(5)', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 's(8)', 'mstore'), 2), (('s(11)', 's(0)', 'mstore'), 2), (('0', 's(5)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('64', 's(1)', '+'), 2), (('0', 's(5)', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(3)', 'iszero'), 1), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(1)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{19: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('64', 's(1)', '+'), 2), (('0', 's(5)', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(3)', 'iszero'), 1), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xff AND ISZERO PUSH2 0x0f90 JUMPI

Optimized sequence (basic block per line):
JUMPDEST DUP2 PUSH1 0x20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP5 SWAP3 PUSH1 0xff SWAP6 AND DUP5 MSTORE ADD MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xf90 JUMPI

Optimized code stored in /tmp/0x00/SpartanAI_3868_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3868_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2195

Estimated initial size in bytes: 34
Estimated size optimized in bytes: 48

Initial number of instructions: 26
Final number of instructions: 22

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3868;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3868;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xff AND ISZERO PUSH2 0x0f90 JUMPI;JUMPDEST DUP2 PUSH1 0x20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP5 SWAP3 PUSH1 0xff SWAP6 AND DUP5 MSTORE ADD MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xf90 JUMPI;2206;34;26;2195;48;22;11;-14;4;True;False;False;False;2.12237575603649;2;2;2100;2100

Block: 3944
3944Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'ADD', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x40', 'ADD', 'PUSH0', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE']>> 
3944-Stack size: 11 
3944-Equals Mem:<< []>> 
3944-NonEquals Mem: << [<8,15>]>> 
3944-Equals Sto:<< [<21,33>]>> 
3944-NonEquals Sto: << []>> 
3944-Useless: []
3944-Constancy: [(3, 0), (1, 0)]
3944-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>], 'storage_deps_eqs': [<20,32>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(9)', 'sload0'), 1), 1), 32: ((('s(9)', 's(11)', 'sstore'), 2), 2)}
Storage order: [(('0', 's(8)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('s(9)', 's(11)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(2)', 's(4)', 'mstore'), 2), (('s(7)', 's(1)', 'mstore'), 2), (('0', 's(8)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(9)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(3)', 'and'), 2), (('s(2)', '32', '+'), 2), (('64', 's(2)', '+'), 2), (('0', 's(8)', 'keccak2560'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('s(9)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(17)', 'and'), 2), (('s(13)', 's(14)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(9)', 'sload0'), 1), 1), 32: ((('s(9)', 's(11)', 'sstore'), 2), 2)}
(('s(9)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(3)', 'and'), 2), (('s(2)', '32', '+'), 2), (('64', 's(2)', '+'), 2), (('0', 's(8)', 'keccak2560'), 2), (('s(0)', 'iszero'), 1), (('s(12)', 'iszero'), 1), (('s(9)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(17)', 'and'), 2), (('s(13)', 's(14)', 'or'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE

Optimized code stored in /tmp/0x00/SpartanAI_3944_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3944_statistics.csv

Estimated initial gas: 5120
Estimated gas optimized: 5120

Estimated initial size in bytes: 40
Estimated size optimized in bytes: 40

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3944;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3944;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE;5120;40;34;5120;40;34;0;0;0;True;True;False;False;2.21457491395995;3;2;5000;5000

Block: 3671
3671Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3671-Stack size: 3 
3671-Equals Mem:<< []>> 
3671-NonEquals Mem: << [<6,1>]>> 
3671-Equals Sto:<< []>> 
3671-NonEquals Sto: << []>> 
3671-Useless: []
3671-Constancy: []
3671-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3671_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3671_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3671;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3671;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.028910766006447375;1;0;0;0

Block: 3694
3694Instr:<<['JUMPDEST', 'PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH2 0x0100', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH2 0x0100', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP4', 'DUP5', 'AND', 'DUP2', 'MUL', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP2', 'DUP3', 'SWAP1', 'SSTORE', 'SWAP1', 'DIV', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3694-Stack size: 3 
3694-Equals Mem:<< []>> 
3694-NonEquals Mem: << [<36,39>]>> 
3694-Equals Sto:<< [<3,29>, <44,51>]>> 
3694-NonEquals Sto: << [<3,44>, <3,51>, <29,44>, <29,51>]>> 
3694-Useless: []
3694-Constancy: []
3694-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<35,38>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<35,38>], 'storage_deps_eqs': [<2,28>, <43,50>], 'storage_deps_noneqs': [<2,43>, <2,50>, <28,43>, <28,50>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('168', '1', 'shl')
[RULE]: Evaluate expression ('374144419156711147060143317175368453031918731001856', '256', '-')
{2: ((('5', 'sload0'), 1), 0), 28: ((('5', 's(1)', 'sstore'), 2), 1), 43: ((('s(23)', 'sload1'), 1), 3), 50: ((('s(23)', 's(24)', 'sstore'), 2), 4)}
Storage order: [(('5', 'sload0'), 1), (('5', 's(1)', 'sstore'), 2), (('0', '64', 'keccak2560'), 2), (('s(23)', 'sload1'), 1), (('s(23)', 's(24)', 'sstore'), 2)]
Storage dep: [(3, 4), (0, 1)]
Storage dep simplified: [(3, 4), (0, 1)]
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('5', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('256', 's(3)', '*'), 2), (('5', 'sload0'), 1), ((115792089237316195423570984634543488696558837605497246864089130975994398638335, 's(9)', 'and'), 2), (('s(2)', 's(6)', 'or'), 2), (('s(1)', '256', '/'), 2), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(23)', 'sload1'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(27)', 'and'), 2), (('1', 's(25)', 'or'), 2)]
(('s(23)', 'sload1'), 1)
sload1
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('256', 's(3)', '*'), 2), (('5', 'sload0'), 1), ((115792089237316195423570984634543488696558837605497246864089130975994398638335, 's(9)', 'and'), 2), (('s(2)', 's(6)', 'or'), 2), (('s(1)', '256', '/'), 2), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(23)', 'sload1'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(27)', 'and'), 2), (('1', 's(25)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('5', 'sload0'), 1), 0), 28: ((('5', 's(1)', 'sstore'), 2), 1), 43: ((('s(23)', 'sload1'), 1), 3), 50: ((('s(23)', 's(24)', 'sstore'), 2), 4)}
(('5', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('256', 's(3)', '*'), 2), (('5', 'sload0'), 1), ((115792089237316195423570984634543488696558837605497246864089130975994398638335, 's(9)', 'and'), 2), (('s(2)', 's(6)', 'or'), 2), (('s(1)', '256', '/'), 2), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(23)', 'sload1'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(27)', 'and'), 2), (('1', 's(25)', 'or'), 2)]
(('s(23)', 'sload1'), 1)
sload1
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('256', 's(3)', '*'), 2), (('5', 'sload0'), 1), ((115792089237316195423570984634543488696558837605497246864089130975994398638335, 's(9)', 'and'), 2), (('s(2)', 's(6)', 'or'), 2), (('s(1)', '256', '/'), 2), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(23)', 'sload1'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(27)', 'and'), 2), (('1', 's(25)', 'or'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x05 DUP1 SLOAD PUSH2 0x0100 PUSH1 0x01 PUSH1 0xa8 SHL SUB NOT AND PUSH2 0x0100 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x05 DUP1 SLOAD PUSH2 0x0100 PUSH1 0x01 PUSH1 0xa8 SHL SUB NOT AND PUSH2 0x0100 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3694_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3694_statistics.csv

Estimated initial gas: 10180
Estimated gas optimized: 10180

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 68

Initial number of instructions: 53
Final number of instructions: 53

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3694;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3694;2;True;False;False;JUMPDEST PUSH1 0x05 DUP1 SLOAD PUSH2 0x0100 PUSH1 0x01 PUSH1 0xa8 SHL SUB NOT AND PUSH2 0x0100 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE JUMP;JUMPDEST PUSH1 0x05 DUP1 SLOAD PUSH2 0x0100 PUSH1 0x01 PUSH1 0xa8 SHL SUB NOT AND PUSH2 0x0100 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 DUP5 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE SWAP1 DIV AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND PUSH1 0x01 OR SWAP1 SSTORE JUMP;10180;68;53;10180;68;53;0;0;0;True;True;False;False;2.3768166399677284;7;2;10000;10000

Block: 3602
3602Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3602-Stack size: 3 
3602-Equals Mem:<< []>> 
3602-NonEquals Mem: << [<6,1>]>> 
3602-Equals Sto:<< []>> 
3602-NonEquals Sto: << []>> 
3602-Useless: []
3602-Constancy: []
3602-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3602_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3602_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3602;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3602;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027468862012028694;1;0;0;0

Block: 1426
1426Instr:<<['JUMPDEST', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1426-Stack size: 3 
1426-Equals Mem:<< []>> 
1426-NonEquals Mem: << [<3,7>]>> 
1426-Equals Sto:<< []>> 
1426-NonEquals Sto: << []>> 
1426-Useless: []
1426-Constancy: []
1426-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '3', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
{10: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_1426 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3489
3489Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3489-Stack size: 2 
3489-Equals Mem:<< []>> 
3489-NonEquals Mem: << [<6,1>]>> 
3489-Equals Sto:<< []>> 
3489-NonEquals Sto: << []>> 
3489-Useless: []
3489-Constancy: []
3489-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3489_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3489_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3489;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3489;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027206645987462252;1;0;0;0

Block: 1354
1354Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1354-Stack size: 3 
1354-Equals Mem:<< []>> 
1354-NonEquals Mem: << [<10,13>]>> 
1354-Equals Sto:<< []>> 
1354-NonEquals Sto: << []>> 
1354-Useless: []
1354-Constancy: []
1354-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{16: ((('s(2)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{16: ((('s(2)', 'sload0'), 1), 1)}
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_1354 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3362
3362Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3362-Stack size: 4 
3362-Equals Mem:<< []>> 
3362-NonEquals Mem: << [<6,1>]>> 
3362-Equals Sto:<< []>> 
3362-NonEquals Sto: << []>> 
3362-Useless: [6]
3362-Constancy: []
3362-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3362_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3362_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3362;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3362;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027007301978301257;1;0;0;0

Block: 3405
3405Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x46656520697320746f6f206869676821', 'PUSH1 0x80', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
3405-Stack size: 4 
3405-Equals Mem:<< []>> 
3405-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3405-Equals Sto:<< []>> 
3405-NonEquals Sto: << []>> 
3405-Useless: []
3405-Constancy: []
3405-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,23>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('128', '93572432778962403732996047258251651105', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '16', 'mstore'), 2), (('s(10)', '31841048904575734233298671363723750648617315239959019049893458670164776058880', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x46656520697320746f6f206869676821 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46656520697320746f6f20686967682100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3405_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3405_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3405;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3405;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x46656520697320746f6f206869676821 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46656520697320746f6f20686967682100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP;89;58;28;77;97;24;12;-39;4;True;False;False;False;2.094143445021473;2;3;0;0

Block: 795
795Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
795-Stack size: 2 
795-Equals Mem:<< []>> 
795-NonEquals Mem: << [<12,2>]>> 
795-Equals Sto:<< []>> 
795-NonEquals Sto: << []>> 
795-Useless: []
795-Constancy: []
795-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_795_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_795_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 39

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 36

Initial number of instructions: 17
Final number of instructions: 12

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_795;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;795;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0283 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP;54;24;17;39;36;12;15;-12;5;True;False;False;False;0.09322309895651415;2;0;0;0

Block: 3286
3286Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3286-Stack size: 3 
3286-Equals Mem:<< []>> 
3286-NonEquals Mem: << [<6,1>]>> 
3286-Equals Sto:<< []>> 
3286-NonEquals Sto: << []>> 
3286-Useless: []
3286-Constancy: []
3286-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3286_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3286_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3286;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3286;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.029195618990343064;1;0;0;0

Block: 3309
3309Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3309-Stack size: 3 
3309-Equals Mem:<< []>> 
3309-NonEquals Mem: << [<10,13>]>> 
3309-Equals Sto:<< [<18,25>]>> 
3309-NonEquals Sto: << []>> 
3309-Useless: []
3309-Constancy: []
3309-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [<17,24>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1), 24: ((('s(4)', 's(5)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(4)', 's(5)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(1)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(8)', 'and'), 2), (('1', 's(6)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1), 24: ((('s(4)', 's(5)', 'sstore'), 2), 2)}
(('s(4)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(8)', 'and'), 2), (('1', 's(6)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3309 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3215
3215Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0873', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x0a7a', 'SWAP1', 'DUP7', 'PUSH2 0x1a39', 'JUMP']>> 
3215-Stack size: 4 
3215-Equals Mem:<< [<5,23>, <10,26>]>> 
3215-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
3215-Equals Sto:<< []>> 
3215-NonEquals Sto: << []>> 
3215-Useless: []
3215-Constancy: []
3215-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>]}
{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{28: ((('s(10)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(17)', 'sload0'), 1)
sload0
[(('s(17)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{28: ((('s(10)', 'sload0'), 1), 2)}
(('s(10)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0873 SWAP2 DUP6 SWAP1 PUSH2 0x0a7a SWAP1 DUP7 PUSH2 0x1a39 JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0873 SWAP2 DUP6 SWAP1 PUSH2 0x0a7a SWAP1 DUP7 PUSH2 0x1a39 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3215_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3215_statistics.csv

Estimated initial gas: 2275
Estimated gas optimized: 2275

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3215;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3215;2;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0873 SWAP2 DUP6 SWAP1 PUSH2 0x0a7a SWAP1 DUP7 PUSH2 0x1a39 JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0873 SWAP2 DUP6 SWAP1 PUSH2 0x0a7a SWAP1 DUP7 PUSH2 0x1a39 JUMP;2275;53;41;2275;53;41;0;0;0;True;False;False;False;2.190788468986284;4;2;2100;2100

Block: 3158
3158Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
3158-Stack size: 3 
3158-Equals Mem:<< []>> 
3158-NonEquals Mem: << [<6,1>]>> 
3158-Equals Sto:<< []>> 
3158-NonEquals Sto: << []>> 
3158-Useless: []
3158-Constancy: []
3158-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_3158_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_3158_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3158;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;3158;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02989946899469942;1;0;0;0

Block: 2790
2790Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
2790-Stack size: 6 
2790-Equals Mem:<< []>> 
2790-NonEquals Mem: << [<6,1>]>> 
2790-Equals Sto:<< []>> 
2790-NonEquals Sto: << []>> 
2790-Useless: []
2790-Constancy: [(0, 0)]
2790-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_2790_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_2790_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2790;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;2790;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027170801011379808;1;0;0;0

Block: 2830
2830Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e206e6f742072656d6f7665206e617469766520746f6b656e0000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
2830-Stack size: 6 
2830-Equals Mem:<< []>> 
2830-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
2830-Equals Sto:<< []>> 
2830-NonEquals Sto: << []>> 
2830-Useless: []
2830-Constancy: [(0, 0)]
2830-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '30477105086808993055311720111775848624989187979531585221239206953560330731520', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e206e6f742072656d6f7665206e617469766520746f6b656e0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e206e6f742072656d6f7665206e617469766520746f6b656e0000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_2830_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_2830_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2830;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;2830;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e206e6f742072656d6f7665206e617469766520746f6b656e0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e206e6f742072656d6f7665206e617469766520746f6b656e0000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.0967665659845807;1;3;0;0

Block: 2969
2969Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0bbd', 'SWAP2', 'SWAP1', 'PUSH2 0x20c4', 'JUMP']>> 
2969-Stack size: 11 
2969-Equals Mem:<< [<18,6>]>> 
2969-NonEquals Mem: << []>> 
2969-Equals Sto:<< []>> 
2969-NonEquals Sto: << []>> 
2969-Useless: []
2969-Constancy: [(5, 0), (4, 0)]
2969-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2969 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3095
3095Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0c3b', 'SWAP2', 'SWAP1', 'PUSH2 0x20db', 'JUMP']>> 
3095-Stack size: 11 
3095-Equals Mem:<< [<18,6>]>> 
3095-NonEquals Mem: << []>> 
3095-Equals Sto:<< []>> 
3095-NonEquals Sto: << []>> 
3095-Useless: []
3095-Constancy: [(5, 0)]
3095-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3095 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1021
1021Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0a', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0xff', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0283', 'JUMP']>> 
1021-Stack size: 2 
1021-Equals Mem:<< []>> 
1021-NonEquals Mem: << [<11,5>]>> 
1021-Equals Sto:<< []>> 
1021-NonEquals Sto: << []>> 
1021-Useless: []
1021-Constancy: []
1021-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{1: ((('10', 'sload0'), 1), 0)}
Storage order: [(('10', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('10', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('10', 'sload0'), 1), (('s(6)', '255', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('10', 'sload0'), 1), (('s(6)', '255', 'and'), 2)]
{1: ((('10', 'sload0'), 1), 0)}
(('10', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('10', 'sload0'), 1), (('s(6)', '255', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('10', 'sload0'), 1), (('s(6)', '255', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_1021 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2715
2715Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
2715-Stack size: 3 
2715-Equals Mem:<< []>> 
2715-NonEquals Mem: << [<6,1>]>> 
2715-Equals Sto:<< []>> 
2715-NonEquals Sto: << []>> 
2715-Useless: []
2715-Constancy: []
2715-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_2715_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_2715_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2715;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;2715;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027488407969940454;1;0;0;0

Block: 5559
5559Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x15', 'SLOAD', 'PUSH2 0x15db', 'DUP4', 'DUP4', 'PUSH2 0x20f6', 'JUMP']>> 
5559-Stack size: 9 
5559-Equals Mem:<< []>> 
5559-NonEquals Mem: << [<10,13>]>> 
5559-Equals Sto:<< []>> 
5559-NonEquals Sto: << [<17,19>]>> 
5559-Useless: []
5559-Constancy: [(4, 0)]
5559-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<17,19>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(8)', 'sload0'), 1), 1), 19: ((('21', 'sload1'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('21', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('21', 'sload1'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('21', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('21', 'sload1'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(8)', 'sload0'), 1), 1), 19: ((('21', 'sload1'), 1), 2)}
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('21', 'sload1'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('21', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('21', 'sload1'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5559 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5602
5602Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x51', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x3a103337b91037b732903bb0b63632ba17', 'PUSH1 0x79', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5602-Stack size: 10 
5602-Equals Mem:<< []>> 
5602-NonEquals Mem: << [<33,1>, <6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
5602-Equals Sto:<< []>> 
5602-NonEquals Sto: << []>> 
5602-Useless: []
5602-Constancy: [(5, 0)]
5602-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,33>, <1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,33>, <1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('121', '19757910866681532193235035960620767951383', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '81', 'mstore'), 2), (('s(10)', '40452771925404328746791902927719005954194050412207279568373094081136342671476', 'mstore'), 2), (('s(12)', '50396478882778904293922974593647171156048209118873621764761674431950884531561', 'mstore'), 2), (('s(14)', '52525536524432206390837418678269007607575653430520398665565348104209711497216', 'mstore'), 2)]
Memory dep: [(5, 6), (4, 6), (3, 6), (2, 6), (1, 6), (4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(5, 6), (4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('164', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2), (('s(3)', '132', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('164', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2), (('s(3)', '132', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x3a103337b91037b732903bb0b63632ba17 PUSH1 0x79 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x3a103337b91037b732903bb0b63632ba17 PUSH1 0x79 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x08a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_5602_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_5602_statistics.csv

Estimated initial gas: 119
Estimated gas optimized: 119

Estimated initial size in bytes: 135
Estimated size optimized in bytes: 135

Initial number of instructions: 38
Final number of instructions: 38

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5602;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;5602;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x3a103337b91037b732903bb0b63632ba17 PUSH1 0x79 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x08a6 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x51 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f2062757920746f6f206d616e792074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6f6b656e732e20596f752068617665207265616368656420746865206c696d69 PUSH1 0x64 DUP3 ADD MSTORE PUSH17 0x3a103337b91037b732903bb0b63632ba17 PUSH1 0x79 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x08a6 JUMP;119;135;38;119;135;38;0;0;0;True;False;False;False;2.1856010159826837;2;5;0;0

Block: 5797
5797Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x3a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5797-Stack size: 9 
5797-Equals Mem:<< []>> 
5797-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
5797-Equals Sto:<< []>> 
5797-NonEquals Sto: << []>> 
5797-Useless: []
5797-Constancy: [(4, 0)]
5797-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '58', 'mstore'), 2), (('s(10)', '40452771925404328746791902927719005954194050412207279535316764211023439818272', 'mstore'), 2), (('s(12)', '52652740481014308531020876277636020295519024082185241070414673913473067384832', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_5797_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_5797_statistics.csv

Estimated initial gas: 98
Estimated gas optimized: 98

Estimated initial size in bytes: 109
Estimated size optimized in bytes: 109

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5797;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;5797;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752061726520747279696e6720746f20627579206d6f7265207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746865206d6178207472616e73616374696f6e206c696d69742e000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;98;109;31;98;109;31;0;0;0;True;False;False;False;2.124321824987419;1;4;0;0

Block: 5918
5918Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x175d', 'JUMPI']>> 
5918-Stack size: 9 
5918-Equals Mem:<< []>> 
5918-NonEquals Mem: << [<10,13>]>> 
5918-Equals Sto:<< []>> 
5918-NonEquals Sto: << []>> 
5918-Useless: []
5918-Constancy: [(4, 0)]
5918-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(15)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5918 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5952
5952Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
5952-Stack size: 10 
5952-Equals Mem:<< []>> 
5952-NonEquals Mem: << [<11,14>]>> 
5952-Equals Sto:<< []>> 
5952-NonEquals Sto: << []>> 
5952-Useless: []
5952-Constancy: [(5, 0)]
5952-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5952 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5986
5986Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x54686973206164647265737320697320626c61636b6c69737465642e20547261', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH18 0x3739b0b1ba34b7b7103932bb32b93a32b217', 'PUSH1 0x71', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
5986-Stack size: 9 
5986-Equals Mem:<< []>> 
5986-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5986-Equals Sto:<< []>> 
5986-NonEquals Sto: << []>> 
5986-Useless: []
5986-Constancy: [(4, 0)]
5986-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('113', '4810806688101814071636635868946544884625943', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '50', 'mstore'), 2), (('s(10)', '38178759162901666468385607030183550681017666013437636530481616574425913913953', 'mstore'), 2), (('s(12)', '49958272907298775041150471342154376932311782047847849857385308085179757101056', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320626c61636b6c69737465642e20547261 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x3739b0b1ba34b7b7103932bb32b93a32b217 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320626c61636b6c69737465642e20547261 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x3739b0b1ba34b7b7103932bb32b93a32b217 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_5986_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_5986_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 98
Estimated size optimized in bytes: 98

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_5986;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;5986;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320626c61636b6c69737465642e20547261 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x3739b0b1ba34b7b7103932bb32b93a32b217 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320697320626c61636b6c69737465642e20547261 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x3739b0b1ba34b7b7103932bb32b93a32b217 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;104;98;33;104;98;33;0;0;0;True;False;False;False;2.126464974018745;2;4;0;0

Block: 6121
6121Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x4552523a205573696e672030206164647265737321', 'PUSH1 0x58', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
6121-Stack size: 9 
6121-Equals Mem:<< []>> 
6121-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
6121-Equals Sto:<< []>> 
6121-NonEquals Sto: << []>> 
6121-Useless: []
6121-Constancy: [(4, 0)]
6121-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('88', '101313583943661339123883785002592785811176032531233', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '21', 'mstore'), 2), (('s(10)', '31355035521839697598667622425990391033741443082358913423638761968721406722048', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552523a205573696e672030206164647265737321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552523a205573696e6720302061646472657373210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_6121_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_6121_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 63
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6121;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;6121;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4552523a205573696e672030206164647265737321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x08a6 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552523a205573696e6720302061646472657373210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x8a6 JUMP;89;63;28;77;97;24;12;-34;4;True;False;False;False;2.1063118879683316;2;3;0;0

Block: 6192
6192Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x3d32b93797', 'PUSH1 0xd9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x08a6', 'JUMP']>> 
6192-Stack size: 9 
6192-Equals Mem:<< []>> 
6192-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6192-Equals Sto:<< []>> 
6192-NonEquals Sto: << []>> 
6192-Useless: []
6192-Constancy: [(4, 0)]
6192-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('217', '262844004247', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '38191140526596203606710197841510866213151276435326332557053627378304215510560', 'mstore'), 2), (('s(12)', '55361408877183095793579875949089069369951977027618801529320380153062211190784', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3d32b93797 PUSH1 0xd9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3d32b93797 PUSH1 0xd9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_6192_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_6192_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6192;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;6192;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3d32b93797 PUSH1 0xd9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546f6b656e2076616c7565206d75737420626520686967686572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3d32b93797 PUSH1 0xd9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x08a6 JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.126967461023014;2;4;0;0

Block: 6368
6368Instr:<<['PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'DUP2', 'GT', 'ISZERO', 'PUSH2 0x1907', 'JUMPI']>> 
6368-Stack size: 9 
6368-Equals Mem:<< []>> 
6368-NonEquals Mem: << [<12,15>]>> 
6368-Equals Sto:<< [<2,7>]>> 
6368-NonEquals Sto: << [<19,21>, <2,19>, <2,21>, <7,19>, <7,21>]>> 
6368-Useless: []
6368-Constancy: [(4, 0)]
6368-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>], 'storage_deps_eqs': [<2,7>], 'storage_deps_noneqs': [<19,21>, <2,19>, <2,21>, <7,19>, <7,21>]}
{2: ((('13', 'sload0'), 1), 0), 7: ((('13', 's(10)', 'sstore'), 2), 1), 19: ((('s(4)', 'sload1'), 1), 3), 21: ((('24', 'sload2'), 1), 4)}
Storage order: [(('13', 'sload0'), 1), (('13', 's(10)', 'sstore'), 2), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload1'), 1), (('24', 'sload2'), 1)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('13', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload1'), 1), (('24', 'sload2'), 1), (('s(5)', 's(6)', 'gt'), 2), (('s(3)', 'iszero'), 1), (('13', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('address', 'address'), 0)]
(('s(4)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload1'), 1), (('24', 'sload2'), 1), (('s(5)', 's(6)', 'gt'), 2), (('s(3)', 'iszero'), 1), (('13', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('address', 'address'), 0)]
(('24', 'sload2'), 1)
sload2
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload1'), 1), (('24', 'sload2'), 1), (('s(5)', 's(6)', 'gt'), 2), (('s(3)', 'iszero'), 1), (('13', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('address', 'address'), 0)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('13', 'sload0'), 1), 0), 7: ((('13', 's(10)', 'sstore'), 2), 1), 19: ((('s(4)', 'sload1'), 1), 3), 21: ((('24', 'sload2'), 1), 4)}
(('13', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload1'), 1), (('24', 'sload2'), 1), (('s(5)', 's(6)', 'gt'), 2), (('s(3)', 'iszero'), 1), (('13', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('address', 'address'), 0)]
(('s(4)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload1'), 1), (('24', 'sload2'), 1), (('s(5)', 's(6)', 'gt'), 2), (('s(3)', 'iszero'), 1), (('13', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('address', 'address'), 0)]
(('24', 'sload2'), 1)
sload2
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload1'), 1), (('24', 'sload2'), 1), (('s(5)', 's(6)', 'gt'), 2), (('s(3)', 'iszero'), 1), (('13', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('address', 'address'), 0)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x0d DUP1 SLOAD PUSH1 0xff NOT AND SWAP1 SSTORE ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x18 SLOAD DUP2 GT ISZERO PUSH2 0x1907 JUMPI

Optimized sequence (basic block per line):
PUSH1 0x0d DUP1 SLOAD PUSH1 0xff NOT AND SWAP1 SSTORE ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x18 SLOAD DUP2 GT ISZERO PUSH2 0x1907 JUMPI

Optimized code stored in /tmp/0x00/SpartanAI_6368_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_6368_statistics.csv

Estimated initial gas: 9301
Estimated gas optimized: 9301

Estimated initial size in bytes: 35
Estimated size optimized in bytes: 35

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6368;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;6368;2;True;False;False;PUSH1 0x0d DUP1 SLOAD PUSH1 0xff NOT AND SWAP1 SSTORE ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x18 SLOAD DUP2 GT ISZERO PUSH2 0x1907 JUMPI;PUSH1 0x0d DUP1 SLOAD PUSH1 0xff NOT AND SWAP1 SSTORE ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x18 SLOAD DUP2 GT ISZERO PUSH2 0x1907 JUMPI;9301;35;27;9301;35;27;0;0;0;True;True;False;False;2.142619458027184;1;2;9200;9200

Block: 7044
7044Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1ba8', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
7044-Stack size: 14 
7044-Equals Mem:<< [<18,6>]>> 
7044-NonEquals Mem: << []>> 
7044-Equals Sto:<< []>> 
7044-NonEquals Sto: << []>> 
7044-Useless: []
7044-Constancy: []
7044-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7044 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8457
8457Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8457-Stack size: 13 
8457-Equals Mem:<< []>> 
8457-NonEquals Mem: << [<5,8>]>> 
8457-Equals Sto:<< []>> 
8457-NonEquals Sto: << []>> 
8457-Useless: []
8457-Constancy: []
8457-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_8457 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7137
7137Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1c19', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x2166', 'JUMP']>> 
7137-Stack size: 10 
7137-Equals Mem:<< []>> 
7137-NonEquals Mem: << [<9,4>]>> 
7137-Equals Sto:<< []>> 
7137-NonEquals Sto: << []>> 
7137-Useless: []
7137-Constancy: []
7137-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{1: ((('26', 'sload0'), 1), 0)}
Storage order: [(('26', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(13)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('26', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('26', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('26', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('26', 'sload0'), 1), 0)}
(('26', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('26', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('26', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1c19 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x2166 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1a SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1c19 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x2166 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_7137_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_7137_statistics.csv

Estimated initial gas: 2208
Estimated gas optimized: 2208

Estimated initial size in bytes: 56
Estimated size optimized in bytes: 56

Initial number of instructions: 37
Final number of instructions: 37

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7137;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;7137;2;True;False;False;JUMPDEST PUSH1 0x1a SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1c19 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x2166 JUMP;JUMPDEST PUSH1 0x1a SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1c19 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x2166 JUMP;2208;56;37;2208;56;37;0;0;0;True;False;False;False;2.2111740079708397;3;0;2100;2100

Block: 8550
8550Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
8550-Stack size: 19 
8550-Equals Mem:<< []>> 
8550-NonEquals Mem: << [<13,21>, <7,21>, <24,21>, <18,21>]>> 
8550-Equals Sto:<< []>> 
8550-NonEquals Sto: << []>> 
8550-Useless: []
8550-Constancy: [(4, 0)]
8550-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('s(15)', 's(1)', 'mstore'), 2), (('s(16)', '160', 'mstore'), 2), (('s(2)', 'mload0'), 1), (('s(17)', 's(12)', 'mstore'), 2)]
Memory dep: [(2, 4), (1, 4), (0, 4), (1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(2, 4), (1, 2), (0, 1)]
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized code stored in /tmp/0x00/SpartanAI_8550_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_8550_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 41
Estimated size optimized in bytes: 41

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_8550;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;8550;2;True;False;False;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;102;41;36;102;41;36;0;0;0;True;False;False;False;2.284215082996525;0;3;0;0

Block: 8600
8600Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x218f', 'JUMP']>> 
8600-Stack size: 25 
8600-Equals Mem:<< []>> 
8600-NonEquals Mem: << [<9,1>]>> 
8600-Equals Sto:<< []>> 
8600-NonEquals Sto: << []>> 
8600-Useless: []
8600-Constancy: [(5, 0), (10, 0), (3, 32)]
8600-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(9)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x218f JUMP

Optimized sequence (basic block per line):
PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x218f JUMP

Optimized code stored in /tmp/0x00/SpartanAI_8600_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_8600_statistics.csv

Estimated initial gas: 71
Estimated gas optimized: 53

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 39

Initial number of instructions: 22
Final number of instructions: 16

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_8600;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;8600;2;True;True;False;DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x218f JUMP;PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x218f JUMP;71;28;22;53;39;16;18;-11;6;True;False;False;False;2.122847158985678;2;0;0;0

Block: 6424
6424Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x01', 'SWAP1', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x1958', 'JUMPI']>> 
6424-Stack size: 9 
6424-Equals Mem:<< []>> 
6424-NonEquals Mem: << [<11,14>]>> 
6424-Equals Sto:<< []>> 
6424-NonEquals Sto: << []>> 
6424-Useless: []
6424-Constancy: [(4, 0)]
6424-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('255', 's(9)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(8)', 'sload0'), 1), 1)}
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('255', 's(9)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6424 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6460
6460Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
6460-Stack size: 11 
6460-Equals Mem:<< []>> 
6460-NonEquals Mem: << [<11,14>]>> 
6460-Equals Sto:<< []>> 
6460-NonEquals Sto: << []>> 
6460-Useless: []
6460-Constancy: [(6, 0)]
6460-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6460 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8364
8364Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8364-Stack size: 7 
8364-Equals Mem:<< []>> 
8364-NonEquals Mem: << [<4,7>]>> 
8364-Equals Sto:<< []>> 
8364-NonEquals Sto: << []>> 
8364-Useless: []
8364-Constancy: [(0, 0)]
8364-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_8364 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7372
7372Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP2', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x1cf3', 'SWAP1', 'DUP5', 'PUSH2 0x1ddd', 'JUMP']>> 
7372-Stack size: 23 
7372-Equals Mem:<< []>> 
7372-NonEquals Mem: << [<11,14>]>> 
7372-Equals Sto:<< []>> 
7372-NonEquals Sto: << []>> 
7372-Useless: []
7372-Constancy: [(18, 0), (2, 0), (3, 0)]
7372-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(9)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(11)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(9)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(9)', 'sload0'), 1), 1)}
(('s(9)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7372 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7411
7411Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP7', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1d21', 'SWAP1', 'DUP4', 'PUSH2 0x1a39', 'JUMP']>> 
7411-Stack size: 22 
7411-Equals Mem:<< [<12,28>]>> 
7411-NonEquals Mem: << [<12,15>, <15,28>]>> 
7411-Equals Sto:<< [<23,30>]>> 
7411-NonEquals Sto: << []>> 
7411-Useless: []
7411-Constancy: [(17, 0)]
7411-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>]}
{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>], 'storage_deps_eqs': [<22,29>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{22: ((('s(14)', 's(5)', 'sstore'), 2), 1), 29: ((('s(9)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(14)', 's(5)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(11)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{22: ((('s(14)', 's(5)', 'sstore'), 2), 1), 29: ((('s(9)', 'sload0'), 1), 3)}
(('s(9)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(9)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1d21 SWAP1 DUP4 PUSH2 0x1a39 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP7 AND PUSH1 0x0 MSTORE DUP6 PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP1 PUSH2 0x1a39 DUP5 SWAP1 SWAP5 SWAP4 SWAP5 SWAP5 SWAP3 SWAP7 SSTORE PUSH2 0x1d21 SWAP4 SWAP1 SWAP2 POP JUMP

Optimized code stored in /tmp/0x00/SpartanAI_7411_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_7411_statistics.csv

Estimated initial gas: 5258
Estimated gas optimized: 5119

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 60

Initial number of instructions: 36
Final number of instructions: 31

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7411;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;7411;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1d21 SWAP1 DUP4 PUSH2 0x1a39 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP7 AND PUSH1 0x0 MSTORE DUP6 PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP1 PUSH2 0x1a39 DUP5 SWAP1 SWAP5 SWAP4 SWAP5 SWAP5 SWAP3 SWAP7 SSTORE PUSH2 0x1d21 SWAP4 SWAP1 SWAP2 POP JUMP;5258;46;36;5119;60;31;139;-14;5;True;True;False;False;2.196276205999311;4;2;5100;5000

Block: 7457
7457Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'ADDRESS', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1d4c', 'SWAP1', 'DUP3', 'PUSH2 0x1a39', 'JUMP']>> 
7457-Stack size: 22 
7457-Equals Mem:<< [<11,25>]>> 
7457-NonEquals Mem: << [<11,14>, <14,25>]>> 
7457-Equals Sto:<< [<22,27>]>> 
7457-NonEquals Sto: << []>> 
7457-Useless: []
7457-Constancy: [(17, 0)]
7457-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<10,24>], 'memory_deps_noneqs': [<10,13>, <13,24>]}
{'memory_deps_eqs': [<10,24>], 'memory_deps_noneqs': [<10,13>, <13,24>], 'storage_deps_eqs': [<21,26>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{21: ((('s(13)', 's(4)', 'sstore'), 2), 1), 26: ((('s(8)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(13)', 's(4)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{21: ((('s(13)', 's(4)', 'sstore'), 2), 1), 26: ((('s(8)', 'sload0'), 1), 3)}
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(8)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('address', 'address'), 0)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE ADDRESS DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1d4c SWAP1 DUP3 PUSH2 0x1a39 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE ADDRESS DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1d4c SWAP1 DUP3 PUSH2 0x1a39 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_7457_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_7457_statistics.csv

Estimated initial gas: 5248
Estimated gas optimized: 5248

Estimated initial size in bytes: 43
Estimated size optimized in bytes: 43

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7457;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;7457;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE ADDRESS DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1d4c SWAP1 DUP3 PUSH2 0x1a39 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE ADDRESS DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1d4c SWAP1 DUP3 PUSH2 0x1a39 JUMP;5248;43;33;5248;43;33;0;0;0;True;True;False;False;2.1183741179993376;4;2;5100;5100

Block: 8314
8314Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
8314-Stack size: 9 
8314-Equals Mem:<< []>> 
8314-NonEquals Mem: << [<5,8>]>> 
8314-Equals Sto:<< []>> 
8314-NonEquals Sto: << []>> 
8314-Useless: []
8314-Constancy: []
8314-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_8314 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6681
6681Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP2', 'SWAP1', 'PUSH2 0x1de8', 'JUMP']>> 
6681-Stack size: 14 
6681-Equals Mem:<< []>> 
6681-NonEquals Mem: << [<6,1>]>> 
6681-Equals Sto:<< []>> 
6681-NonEquals Sto: << []>> 
6681-Useless: []
6681-Constancy: [(1, 0), (9, 0)]
6681-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP2 SWAP1 PUSH2 0x1de8 JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1de8 JUMP

Optimized code stored in /tmp/0x00/SpartanAI_6681_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_6681_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6681;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;6681;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP2 SWAP1 PUSH2 0x1de8 JUMP;PUSH2 0x8a6 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1de8 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07157018699217588;1;0;0;0

Block: 896
896Instr:<<['JUMPDEST', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
896-Stack size: 3 
896-Equals Mem:<< []>> 
896-NonEquals Mem: << [<3,7>]>> 
896-Equals Sto:<< []>> 
896-NonEquals Sto: << []>> 
896-Useless: []
896-Constancy: []
896-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '4', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
{10: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_896 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2191
2191Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x08a6', 'SWAP1', 'PUSH2 0x202a', 'JUMP']>> 
2191-Stack size: 3 
2191-Equals Mem:<< []>> 
2191-NonEquals Mem: << [<6,1>]>> 
2191-Equals Sto:<< []>> 
2191-NonEquals Sto: << []>> 
2191-Useless: []
2191-Constancy: []
2191-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP

Optimized sequence (basic block per line):
PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP

Optimized code stored in /tmp/0x00/SpartanAI_2191_optimized.txt
Optimality results stored in /tmp/0x00/SpartanAI_2191_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2191;0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol;SpartanAI;2191;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x08a6 SWAP1 PUSH2 0x202a JUMP;PUSH2 0x8a6 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x202a JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.029374353995081037;1;0;0;0

Block: 2287
2287Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0913', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
2287-Stack size: 8 
2287-Equals Mem:<< [<18,6>]>> 
2287-NonEquals Mem: << []>> 
2287-Equals Sto:<< []>> 
2287-NonEquals Sto: << []>> 
2287-Useless: []
2287-Constancy: []
2287-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2287 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2398
2398Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0982', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
2398-Stack size: 11 
2398-Equals Mem:<< [<18,6>]>> 
2398-NonEquals Mem: << []>> 
2398-Equals Sto:<< []>> 
2398-NonEquals Sto: << []>> 
2398-Useless: []
2398-Constancy: []
2398-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2398 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2508
2508Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x09f0', 'SWAP2', 'SWAP1', 'PUSH2 0x205f', 'JUMP']>> 
2508-Stack size: 8 
2508-Equals Mem:<< [<18,6>]>> 
2508-NonEquals Mem: << []>> 
2508-Equals Sto:<< []>> 
2508-NonEquals Sto: << []>> 
2508-Useless: []
2508-Constancy: []
2508-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2508 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 643
643Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
643-Stack size: 2 
643-Equals Mem:<< []>> 
643-NonEquals Mem: << []>> 
643-Equals Sto:<< []>> 
643-NonEquals Sto: << []>> 
643-Useless: []
643-Constancy: []
643-ContextAliasing: []

Block: 2214
2214Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
2214-Stack size: 3 
2214-Equals Mem:<< []>> 
2214-NonEquals Mem: << []>> 
2214-Equals Sto:<< []>> 
2214-NonEquals Sto: << []>> 
2214-Useless: []
2214-Constancy: []
2214-ContextAliasing: []

Block: 2544
2544Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'SWAP2', 'DUP3', 'AND', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH1 0x1a', 'DUP1', 'SLOAD', 'SWAP4', 'SWAP1', 'SWAP3', 'AND', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'POP', 'JUMP']>> 
2544-Stack size: 5 
2544-Equals Mem:<< []>> 
2544-NonEquals Mem: << []>> 
2544-Equals Sto:<< [<3,24>, <27,39>]>> 
2544-NonEquals Sto: << [<3,27>, <3,39>, <24,27>, <24,39>]>> 
2544-Useless: []
2544-Constancy: []
2544-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,23>, <26,38>], 'storage_deps_noneqs': [<2,26>, <2,38>, <23,26>, <23,38>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('27', 'sload0'), 1), 0), 23: ((('27', 's(3)', 'sstore'), 2), 1), 26: ((('26', 'sload1'), 1), 2), 38: ((('26', 's(11)', 'sstore'), 2), 3)}
Storage order: [(('27', 'sload0'), 1), (('27', 's(3)', 'sstore'), 2), (('26', 'sload1'), 1), (('26', 's(11)', 'sstore'), 2)]
Storage dep: [(2, 3), (0, 1)]
Storage dep simplified: [(2, 3), (0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(7)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(4)', 's(8)', 'or'), 2), (('26', 'sload1'), 1), (('s(13)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('s(12)', 's(16)', 'or'), 2)]
(('26', 'sload1'), 1)
sload1
[(('27', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(7)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(4)', 's(8)', 'or'), 2), (('26', 'sload1'), 1), (('s(13)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('s(12)', 's(16)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('27', 'sload0'), 1), 0), 23: ((('27', 's(3)', 'sstore'), 2), 1), 26: ((('26', 'sload1'), 1), 2), 38: ((('26', 's(11)', 'sstore'), 2), 3)}
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(7)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(4)', 's(8)', 'or'), 2), (('26', 'sload1'), 1), (('s(13)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('s(12)', 's(16)', 'or'), 2)]
(('26', 'sload1'), 1)
sload1
[(('27', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(7)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('s(4)', 's(8)', 'or'), 2), (('26', 'sload1'), 1), (('s(13)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('s(12)', 's(16)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_2544 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3181
3181Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3181-Stack size: 3 
3181-Equals Mem:<< []>> 
3181-NonEquals Mem: << []>> 
3181-Equals Sto:<< [<3,25>]>> 
3181-NonEquals Sto: << []>> 
3181-Useless: []
3181-Constancy: []
3181-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,24>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('26', 'sload0'), 1), 0), 24: ((('26', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('26', 'sload0'), 1), (('26', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('26', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('26', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(8)', 'and'), 2), (('s(2)', 's(5)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_558814a0581f47c688ab93eab923a08b/jsons/isolated_block_0_0_input.json --- (6, 5)
{2: ((('26', 'sload0'), 1), 0), 24: ((('26', 's(1)', 'sstore'), 2), 1)}
(('26', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('26', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(8)', 'and'), 2), (('s(2)', 's(5)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3181 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3463
3463Instr:<<['JUMPDEST', 'PUSH1 0x11', 'SSTORE', 'PUSH1 0x10', 'SSTORE', 'JUMP']>> 
3463-Stack size: 4 
3463-Equals Mem:<< []>> 
3463-NonEquals Mem: << []>> 
3463-Equals Sto:<< []>> 
3463-NonEquals Sto: << [<2,4>]>> 
3463-Useless: []
3463-Constancy: []
3463-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
{1: ((('17', 's(1)', 'sstore'), 2), 0), 3: ((('16', 's(0)', 'sstore'), 2), 1)}
Storage order: [(('17', 's(1)', 'sstore'), 2), (('16', 's(0)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('17', 's(1)', 'sstore'), 2), 0), 3: ((('16', 's(0)', 'sstore'), 2), 1)}
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3463 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3625
3625Instr:<<['JUMPDEST', 'PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'SWAP1', 'SWAP3', 'AND', 'PUSH2 0x0100', 'MUL', 'PUSH2 0xff00', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3625-Stack size: 3 
3625-Equals Mem:<< []>> 
3625-NonEquals Mem: << []>> 
3625-Equals Sto:<< [<3,20>]>> 
3625-NonEquals Sto: << []>> 
3625-Useless: []
3625-Constancy: []
3625-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,19>], 'storage_deps_noneqs': []}
{2: ((('13', 'sload0'), 1), 0), 19: ((('13', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('13', 'sload0'), 1), (('13', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('13', 'sload0'), 1)
sload0
[(('13', 'sload0'), 1), (('s(3)', 115792089237316195423570985008687907853269984665640564039457584007913129574655, 'and'), 2), (('s(0)', '255', 'and'), 2), (('256', 's(5)', '*'), 2), (('s(2)', 's(4)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_558814a0581f47c688ab93eab923a08b/jsons/isolated_block_0_0_input.json --- (6, 5)
{2: ((('13', 'sload0'), 1), 0), 19: ((('13', 's(1)', 'sstore'), 2), 1)}
(('13', 'sload0'), 1)
sload0
[(('13', 'sload0'), 1), (('s(3)', 115792089237316195423570985008687907853269984665640564039457584007913129574655, 'and'), 2), (('s(0)', '255', 'and'), 2), (('256', 's(5)', '*'), 2), (('s(2)', 's(4)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_3625 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4228
4228Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xb0', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xb0', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4228-Stack size: 3 
4228-Equals Mem:<< []>> 
4228-NonEquals Mem: << []>> 
4228-Equals Sto:<< [<3,23>]>> 
4228-NonEquals Sto: << []>> 
4228-Useless: []
4228-Constancy: []
4228-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('176', '255', 'shl')
[RULE]: Evaluate expression ('176', '1', 'shl')
{2: ((('27', 'sload0'), 1), 0), 22: ((('27', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('27', 'sload0'), 1), (('27', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), (('s(3)', 115792089237316195423546560861005357749589898509895355986843660353153328480255, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('95780971304118053647396689196894323976171195136475136', 's(8)', '*'), 2), (('s(2)', 's(5)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_558814a0581f47c688ab93eab923a08b/jsons/isolated_block_0_0_input.json --- (7, 5)
{2: ((('27', 'sload0'), 1), 0), 22: ((('27', 's(1)', 'sstore'), 2), 1)}
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), (('s(3)', 115792089237316195423546560861005357749589898509895355986843660353153328480255, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('95780971304118053647396689196894323976171195136475136', 's(8)', '*'), 2), (('s(2)', 's(5)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4228 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4563
4563Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4563-Stack size: 3 
4563-Equals Mem:<< []>> 
4563-NonEquals Mem: << []>> 
4563-Equals Sto:<< [<3,25>]>> 
4563-NonEquals Sto: << []>> 
4563-Useless: []
4563-Constancy: []
4563-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,24>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('27', 'sload0'), 1), 0), 24: ((('27', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('27', 'sload0'), 1), (('27', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('27', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('27', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(8)', 'and'), 2), (('s(2)', 's(5)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_558814a0581f47c688ab93eab923a08b/jsons/isolated_block_0_0_input.json --- (6, 5)
{2: ((('27', 'sload0'), 1), 0), 24: ((('27', 's(1)', 'sstore'), 2), 1)}
(('27', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('27', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(8)', 'and'), 2), (('s(2)', 's(5)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_4563 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6594
6594Instr:<<['PUSH1 0x10', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH2 0x19fc', 'JUMP']>> 
6594-Stack size: 10 
6594-Equals Mem:<< []>> 
6594-NonEquals Mem: << []>> 
6594-Equals Sto:<< []>> 
6594-NonEquals Sto: << [<1,3>]>> 
6594-Useless: []
6594-Constancy: [(5, 0)]
6594-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
{1: ((('16', 'sload0'), 1), 0), 3: ((('15', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('16', 'sload0'), 1), (('15', 's(1)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('16', 'sload0'), 1)
sload0
[(('16', 'sload0'), 1)]
{1: ((('16', 'sload0'), 1), 0), 3: ((('15', 's(1)', 'sstore'), 2), 1)}
(('16', 'sload0'), 1)
sload0
[(('16', 'sload0'), 1)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6594 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6731
6731Instr:<<['JUMPDEST', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x1a67', 'DUP2', 'PUSH2 0x1afa', 'JUMP']>> 
6731-Stack size: 7 
6731-Equals Mem:<< []>> 
6731-NonEquals Mem: << []>> 
6731-Equals Sto:<< [<3,14>]>> 
6731-NonEquals Sto: << []>> 
6731-Useless: []
6731-Constancy: []
6731-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,13>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('27', 'sload0'), 1), 0), 13: ((('27', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('27', 'sload0'), 1), (('27', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(8)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(6)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('27', 'sload0'), 1), 0), 13: ((('27', 's(4)', 'sstore'), 2), 1)}
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(8)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(6)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6731 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6788
6788Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x1b', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
6788-Stack size: 8 
6788-Equals Mem:<< []>> 
6788-NonEquals Mem: << []>> 
6788-Equals Sto:<< [<5,12>]>> 
6788-NonEquals Sto: << []>> 
6788-Useless: []
6788-Constancy: []
6788-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<4,11>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '255', 'shl')
{3: ((('27', 'sload0'), 1), 0), 11: ((('27', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('27', 'sload0'), 1), (('27', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(4)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{3: ((('27', 'sload0'), 1), 0), 11: ((('27', 's(2)', 'sstore'), 2), 1)}
(('27', 'sload0'), 1)
sload0
[(('27', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(4)', 'and'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6788 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6841
6841Instr:<<['JUMPDEST', 'SWAP2', 'SWAP1', 'PUSH2 0x0100', 'EXP', 'DUP2', 'SLOAD', 'DUP2', 'PUSH1 0xff', 'MUL', 'NOT', 'AND', 'SWAP1', 'DUP4', 'PUSH1 0xff', 'AND', 'MUL', 'OR', 'SWAP1', 'SSTORE', 'POP', 'POP']>> 
6841-Stack size: 19 
6841-Equals Mem:<< []>> 
6841-NonEquals Mem: << []>> 
6841-Equals Sto:<< [<6,19>]>> 
6841-NonEquals Sto: << []>> 
6841-Useless: []
6841-Constancy: [(1, 0), (14, 0)]
6841-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<5,18>], 'storage_deps_noneqs': []}
{5: ((('s(1)', 'sload0'), 1), 0), 18: ((('s(1)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('s(1)', 'sload0'), 1), (('s(1)', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(1)', 'sload0'), 1)
sload0
[(('255', 's(3)', 'and'), 2), (('256', 's(2)', '^'), 2), (('s(6)', 's(7)', '*'), 2), (('255', 's(7)', '*'), 2), (('s(9)', 'not'), 1), (('s(1)', 'sload0'), 1), (('s(11)', 's(12)', 'and'), 2), (('s(5)', 's(8)', 'or'), 2)]
MEJORADO: /tmp/gasol_558814a0581f47c688ab93eab923a08b/jsons/isolated_block_0_0_input.json --- (12, 10)
{5: ((('s(1)', 'sload0'), 1), 0), 18: ((('s(1)', 's(4)', 'sstore'), 2), 1)}
(('s(1)', 'sload0'), 1)
sload0
[(('255', 's(3)', 'and'), 2), (('256', 's(2)', '^'), 2), (('s(6)', 's(7)', '*'), 2), (('255', 's(7)', '*'), 2), (('s(9)', 'not'), 1), (('s(1)', 'sload0'), 1), (('s(11)', 's(12)', 'and'), 2), (('s(5)', 's(8)', 'or'), 2)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6841 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6884
6884Instr:<<['PUSH2 0x1a08', 'PUSH1 0x12', 'SLOAD', 'PUSH1 0x0f', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x10', 'SSTORE', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x11', 'SSTORE', 'JUMP']>> 
6884-Stack size: 15 
6884-Equals Mem:<< []>> 
6884-NonEquals Mem: << []>> 
6884-Equals Sto:<< []>> 
6884-NonEquals Sto: << [<2,4>, <2,6>, <2,8>, <4,6>, <2,10>, <4,8>, <2,12>, <4,10>, <4,12>, <6,8>, <6,10>, <6,12>, <8,10>, <8,12>, <10,12>]>> 
6884-Useless: []
6884-Constancy: [(10, 0)]
6884-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>, <2,6>, <2,8>, <4,6>, <2,10>, <4,8>, <2,12>, <4,10>, <4,12>, <6,8>, <6,10>, <6,12>, <8,10>, <8,12>, <10,12>]}
{2: ((('18', 'sload0'), 1), 0), 4: ((('15', 's(1)', 'sstore'), 2), 1), 6: ((('19', 'sload1'), 1), 2), 8: ((('16', 's(2)', 'sstore'), 2), 3), 10: ((('20', 'sload2'), 1), 4), 12: ((('17', 's(3)', 'sstore'), 2), 5)}
Storage order: [(('18', 'sload0'), 1), (('15', 's(1)', 'sstore'), 2), (('19', 'sload1'), 1), (('16', 's(2)', 'sstore'), 2), (('20', 'sload2'), 1), (('17', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('18', 'sload0'), 1)
sload0
[(('18', 'sload0'), 1), (('19', 'sload1'), 1), (('20', 'sload2'), 1)]
(('19', 'sload1'), 1)
sload1
[(('18', 'sload0'), 1), (('19', 'sload1'), 1), (('20', 'sload2'), 1)]
(('20', 'sload2'), 1)
sload2
[(('18', 'sload0'), 1), (('19', 'sload1'), 1), (('20', 'sload2'), 1)]
{2: ((('18', 'sload0'), 1), 0), 4: ((('15', 's(1)', 'sstore'), 2), 1), 6: ((('19', 'sload1'), 1), 2), 8: ((('16', 's(2)', 'sstore'), 2), 3), 10: ((('20', 'sload2'), 1), 4), 12: ((('17', 's(3)', 'sstore'), 2), 5)}
(('18', 'sload0'), 1)
sload0
[(('18', 'sload0'), 1), (('19', 'sload1'), 1), (('20', 'sload2'), 1)]
(('19', 'sload1'), 1)
sload1
[(('18', 'sload0'), 1), (('19', 'sload1'), 1), (('20', 'sload2'), 1)]
(('20', 'sload2'), 1)
sload2
[(('18', 'sload0'), 1), (('19', 'sload1'), 1), (('20', 'sload2'), 1)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_6884 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7328
7328Instr:<<['JUMPDEST', 'PUSH1 0x10', 'DUP1', 'SLOAD', 'PUSH1 0x13', 'SSTORE', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'PUSH1 0x14', 'SSTORE', 'PUSH1 0x0f', 'DUP1', 'SLOAD', 'PUSH1 0x12', 'SSTORE', 'PUSH0', 'SWAP3', 'DUP4', 'SWAP1', 'SSTORE', 'SWAP1', 'DUP3', 'SWAP1', 'SSTORE', 'SSTORE', 'JUMP']>> 
7328-Stack size: 16 
7328-Equals Mem:<< []>> 
7328-NonEquals Mem: << []>> 
7328-Equals Sto:<< [<8,24>, <13,25>, <3,20>]>> 
7328-NonEquals Sto: << [<3,5>, <3,8>, <5,8>, <3,10>, <5,10>, <3,13>, <3,15>, <5,13>, <5,15>, <8,10>, <8,13>, <8,15>, <10,13>, <5,20>, <10,15>, <3,24>, <3,25>, <8,20>, <5,24>, <5,25>, <10,20>, <8,25>, <10,24>, <10,25>, <13,15>, <13,20>, <13,24>, <15,20>, <15,24>, <15,25>, <20,24>, <20,25>, <24,25>]>> 
7328-Useless: []
7328-Constancy: [(11, 0)]
7328-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<7,23>, <12,24>, <2,19>], 'storage_deps_noneqs': [<2,4>, <2,7>, <4,7>, <2,9>, <4,9>, <2,12>, <2,14>, <4,12>, <4,14>, <7,9>, <7,12>, <7,14>, <9,12>, <4,19>, <9,14>, <2,23>, <2,24>, <7,19>, <4,23>, <4,24>, <9,19>, <7,24>, <9,23>, <9,24>, <12,14>, <12,19>, <12,23>, <14,19>, <14,23>, <14,24>, <19,23>, <19,24>, <23,24>]}
{2: ((('16', 'sload0'), 1), 0), 4: ((('19', 's(0)', 'sstore'), 2), 1), 7: ((('17', 'sload1'), 1), 2), 9: ((('20', 's(1)', 'sstore'), 2), 3), 12: ((('15', 'sload2'), 1), 4), 14: ((('18', 's(2)', 'sstore'), 2), 5), 19: ((('16', '0', 'sstore'), 2), 6), 23: ((('17', '0', 'sstore'), 2), 7), 24: ((('15', '0', 'sstore'), 2), 8)}
Storage order: [(('16', 'sload0'), 1), (('19', 's(0)', 'sstore'), 2), (('17', 'sload1'), 1), (('20', 's(1)', 'sstore'), 2), (('15', 'sload2'), 1), (('18', 's(2)', 'sstore'), 2), (('16', '0', 'sstore'), 2), (('17', '0', 'sstore'), 2), (('15', '0', 'sstore'), 2)]
Storage dep: [(4, 8), (2, 7), (0, 6)]
Storage dep simplified: [(4, 8), (2, 7), (0, 6)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('16', 'sload0'), 1)
sload0
[(('16', 'sload0'), 1), (('17', 'sload1'), 1), (('15', 'sload2'), 1)]
(('17', 'sload1'), 1)
sload1
[(('16', 'sload0'), 1), (('17', 'sload1'), 1), (('15', 'sload2'), 1)]
(('15', 'sload2'), 1)
sload2
[(('16', 'sload0'), 1), (('17', 'sload1'), 1), (('15', 'sload2'), 1)]
{2: ((('16', 'sload0'), 1), 0), 4: ((('19', 's(0)', 'sstore'), 2), 1), 7: ((('17', 'sload1'), 1), 2), 9: ((('20', 's(1)', 'sstore'), 2), 3), 12: ((('15', 'sload2'), 1), 4), 14: ((('18', 's(2)', 'sstore'), 2), 5), 19: ((('16', '0', 'sstore'), 2), 6), 23: ((('17', '0', 'sstore'), 2), 7), 24: ((('15', '0', 'sstore'), 2), 8)}
(('16', 'sload0'), 1)
sload0
[(('16', 'sload0'), 1), (('17', 'sload1'), 1), (('15', 'sload2'), 1)]
(('17', 'sload1'), 1)
sload1
[(('16', 'sload0'), 1), (('17', 'sload1'), 1), (('15', 'sload2'), 1)]
(('15', 'sload2'), 1)
sload2
[(('16', 'sload0'), 1), (('17', 'sload1'), 1), (('15', 'sload2'), 1)]
BLOCK 0x0063b97f69ED8e0664a84C484D2fd9aEa1eE77fF.sol_SpartanAI_7328 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
