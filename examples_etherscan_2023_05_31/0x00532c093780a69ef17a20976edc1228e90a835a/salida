incomplete push instruction at 660
incomplete push instruction at 13332
incomplete push instruction at 66
incomplete push instruction at 77
Green Main
*************************************************************
Compilation time: 0.6635724999941885s
*************************************************************
File: ERC20
Build CFG: 0.05525532097090036s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis ERC20
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract ERC20: 26
Memory read accesses ContractERC20: 86
Memory write accesses ContractERC20: 159
********************************** INIT
CONTEXT: Detected context equality 12 <slot4,0> 14 <slot4,0>
CONTEXT: Detected context equality 12 <slot4,0> 15 <slot4,0>
CONTEXT: Detected context equality 12 <slot4,0> 15 <slot4,0>
CONTEXT: Detected context equality 11 <slot8,0> 13 <slot8,0>
CONTEXT: Detected context equality 11 <slot8,0> 14 <slot8,0>
CONTEXT: Detected context equality 11 <slot8,0> 14 <slot8,0>
CONTEXT: Detected context equality 13 <slot19,0> 15 <slot19,0>
CONTEXT: Detected context equality 13 <slot19,0> 16 <slot19,0>
CONTEXT: Detected context equality 13 <slot19,0> 16 <slot19,0>
CONTEXT: Detected context equality 12 <slot22,0> 14 <slot22,0>
CONTEXT: Detected context equality 12 <slot22,0> 15 <slot22,0>
CONTEXT: Detected context equality 12 <slot22,0> 15 <slot22,0>
COMPACT CLONES: True
CONTRACT: ERC20
-----
Block: 406
406Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
406-Stack size: 4 
406-Equals Mem:<< [<12,27>, <17,31>]>> 
406-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
406-Equals Sto:<< []>> 
406-NonEquals Sto: << []>> 
406-Useless: []
406-Constancy: []
406-ContextAliasing: []

.....
-----
Block: 239
239Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
239-Stack size: 2 
239-Equals Mem:<< []>> 
239-NonEquals Mem: << [<5,2>]>> 
239-Equals Sto:<< []>> 
239-NonEquals Sto: << []>> 
239-Useless: []
239-Constancy: []
239-ContextAliasing: []

.....
-----
Block: 1186_0
1186_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1186_0-Stack size: 9 
1186_0-Equals Mem:<< []>> 
1186_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1186_0-Equals Sto:<< []>> 
1186_0-NonEquals Sto: << []>> 
1186_0-Useless: []
1186_0-Constancy: [(4, 0)]
1186_0-ContextAliasing: []

.....
-----
Block: 1286_0
1286_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1286_0-Stack size: 9 
1286_0-Equals Mem:<< []>> 
1286_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1286_0-Equals Sto:<< []>> 
1286_0-NonEquals Sto: << []>> 
1286_0-Useless: []
1286_0-Constancy: [(4, 0)]
1286_0-ContextAliasing: []

.....
-----
Block: 1566_2
1566_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566_2-Stack size: 15 
1566_2-Equals Mem:<< []>> 
1566_2-NonEquals Mem: << [<6,1>]>> 
1566_2-Equals Sto:<< []>> 
1566_2-NonEquals Sto: << []>> 
1566_2-Useless: []
1566_2-Constancy: [(10, 0), (1, 0)]
1566_2-ContextAliasing: [(2, 14)]

.....
-----
Block: 1712_3
1712_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_3-Stack size: 17 
1712_3-Equals Mem:<< []>> 
1712_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_3-Equals Sto:<< []>> 
1712_3-NonEquals Sto: << []>> 
1712_3-Useless: []
1712_3-Constancy: [(12, 0), (3, 0)]
1712_3-ContextAliasing: [(4, 15)]

.....
-----
Block: 1736_3
1736_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_3-Stack size: 21 
1736_3-Equals Mem:<< []>> 
1736_3-NonEquals Mem: << [<11,5>]>> 
1736_3-Equals Sto:<< []>> 
1736_3-NonEquals Sto: << []>> 
1736_3-Useless: []
1736_3-Constancy: [(16, 0), (7, 0), (3, 0), (2, 32)]
1736_3-ContextAliasing: [(8, 15)]

.....
-----
Block: 2041_5
2041_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_5-Stack size: 20 
2041_5-Equals Mem:<< []>> 
2041_5-NonEquals Mem: << [<5,8>]>> 
2041_5-Equals Sto:<< []>> 
2041_5-NonEquals Sto: << []>> 
2041_5-Useless: []
2041_5-Constancy: [(15, 0), (6, 0), (5, 0)]
2041_5-ContextAliasing: []

.....
-----
Block: 1429_0
1429_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x05c3', 'SWAP1', 'DUP3', 'PUSH2 0x064b', 'JUMP']>> 
1429_0-Stack size: 10 
1429_0-Equals Mem:<< [<12,29>]>> 
1429_0-NonEquals Mem: << [<12,16>, <16,29>]>> 
1429_0-Equals Sto:<< [<24,31>]>> 
1429_0-NonEquals Sto: << []>> 
1429_0-Useless: []
1429_0-Constancy: [(5, 0)]
1429_0-ContextAliasing: []

.....
-----
Block: 2041_4
2041_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_4-Stack size: 19 
2041_4-Equals Mem:<< []>> 
2041_4-NonEquals Mem: << [<5,8>]>> 
2041_4-Equals Sto:<< []>> 
2041_4-NonEquals Sto: << []>> 
2041_4-Useless: []
2041_4-Constancy: [(14, 0), (6, 0), (5, 0)]
2041_4-ContextAliasing: []

.....
-----
Block: 1634_1
1634_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634_1-Stack size: 14 
1634_1-Equals Mem:<< []>> 
1634_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1634_1-Equals Sto:<< []>> 
1634_1-NonEquals Sto: << []>> 
1634_1-Useless: []
1634_1-Constancy: [(9, 0), (1, 0)]
1634_1-ContextAliasing: []

.....
-----
Block: 1475_0
1475_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x0486', 'JUMP']>> 
1475_0-Stack size: 10 
1475_0-Equals Mem:<< []>> 
1475_0-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
1475_0-Equals Sto:<< []>> 
1475_0-NonEquals Sto: << []>> 
1475_0-Useless: []
1475_0-Constancy: [(5, 0)]
1475_0-ContextAliasing: []

.....
-----
Block: 219
219Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
219-Stack size: 2 
219-Equals Mem:<< []>> 
219-NonEquals Mem: << [<7,2>]>> 
219-Equals Sto:<< []>> 
219-NonEquals Sto: << []>> 
219-Useless: []
219-Constancy: []
219-ContextAliasing: []

.....
-----
Block: 1566_1
1566_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566_1-Stack size: 14 
1566_1-Equals Mem:<< []>> 
1566_1-NonEquals Mem: << [<6,1>]>> 
1566_1-Equals Sto:<< []>> 
1566_1-NonEquals Sto: << []>> 
1566_1-Useless: []
1566_1-Constancy: [(9, 0), (1, 0)]
1566_1-ContextAliasing: [(2, 13)]

.....
-----
Block: 1712_2
1712_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_2-Stack size: 16 
1712_2-Equals Mem:<< []>> 
1712_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_2-Equals Sto:<< []>> 
1712_2-NonEquals Sto: << []>> 
1712_2-Useless: []
1712_2-Constancy: [(11, 0), (3, 0)]
1712_2-ContextAliasing: [(4, 14)]

.....
-----
Block: 1736_2
1736_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_2-Stack size: 20 
1736_2-Equals Mem:<< []>> 
1736_2-NonEquals Mem: << [<11,5>]>> 
1736_2-Equals Sto:<< []>> 
1736_2-NonEquals Sto: << []>> 
1736_2-Useless: []
1736_2-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
1736_2-ContextAliasing: [(8, 14)]

.....
-----
Block: 2041_3
2041_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_3-Stack size: 19 
2041_3-Equals Mem:<< []>> 
2041_3-NonEquals Mem: << [<5,8>]>> 
2041_3-Equals Sto:<< []>> 
2041_3-NonEquals Sto: << []>> 
2041_3-Useless: []
2041_3-Constancy: [(14, 0), (6, 0), (5, 0)]
2041_3-ContextAliasing: []

.....
-----
Block: 889
889Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
889-Stack size: 9 
889-Equals Mem:<< []>> 
889-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
889-Equals Sto:<< []>> 
889-NonEquals Sto: << []>> 
889-Useless: []
889-Constancy: [(4, 0)]
889-ContextAliasing: []

.....
-----
Block: 992
992Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
992-Stack size: 9 
992-Equals Mem:<< []>> 
992-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
992-Equals Sto:<< []>> 
992-NonEquals Sto: << []>> 
992-Useless: []
992-Constancy: [(4, 0)]
992-ContextAliasing: []

.....
-----
Block: 1074
1074Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1074-Stack size: 9 
1074-Equals Mem:<< [<12,27>, <17,30>]>> 
1074-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
1074-Equals Sto:<< []>> 
1074-NonEquals Sto: << []>> 
1074-Useless: []
1074-Constancy: [(4, 0)]
1074-ContextAliasing: []

.....
-----
Block: 2016_0
2016_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2016_0-Stack size: 8 
2016_0-Equals Mem:<< []>> 
2016_0-NonEquals Mem: << [<4,7>]>> 
2016_0-Equals Sto:<< []>> 
2016_0-NonEquals Sto: << []>> 
2016_0-Useless: []
2016_0-Constancy: [(5, 96)]
2016_0-ContextAliasing: []

.....
-----
Block: 463
463Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x01fb', 'SWAP1', 'PUSH2 0x07c1', 'JUMP']>> 
463-Stack size: 5 
463-Equals Mem:<< [<17,12>]>> 
463-NonEquals Mem: << [<17,24>, <24,12>]>> 
463-Equals Sto:<< []>> 
463-NonEquals Sto: << []>> 
463-Useless: []
463-Constancy: [(2, 96)]
463-ContextAliasing: []

.....
-----
Block: 2016
2016Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2016-Stack size: 12 
2016-Equals Mem:<< []>> 
2016-NonEquals Mem: << [<4,7>]>> 
2016-Equals Sto:<< []>> 
2016-NonEquals Sto: << []>> 
2016-Useless: []
2016-Constancy: [(9, 96)]
2016-ContextAliasing: []

.....
-----
Block: 1712
1712Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712-Stack size: 4 
1712-Equals Mem:<< []>> 
1712-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
1712-Equals Sto:<< []>> 
1712-NonEquals Sto: << []>> 
1712-Useless: []
1712-Constancy: []
1712-ContextAliasing: []

.....
-----
Block: 1736
1736Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736-Stack size: 8 
1736-Equals Mem:<< []>> 
1736-NonEquals Mem: << [<11,5>]>> 
1736-Equals Sto:<< []>> 
1736-NonEquals Sto: << []>> 
1736-Useless: []
1736-Constancy: [(3, 0), (2, 32)]
1736-ContextAliasing: []

.....
-----
Block: 320
320Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
320-Stack size: 3 
320-Equals Mem:<< []>> 
320-NonEquals Mem: << [<10,14>]>> 
320-Equals Sto:<< []>> 
320-NonEquals Sto: << []>> 
320-Useless: []
320-Constancy: []
320-ContextAliasing: []

.....
-----
Block: 717
717Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x025c', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x02be', 'SWAP1', 'DUP7', 'PUSH2 0x064b', 'JUMP']>> 
717-Stack size: 4 
717-Equals Mem:<< [<5,23>, <10,26>]>> 
717-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
717-Equals Sto:<< []>> 
717-NonEquals Sto: << []>> 
717-Useless: []
717-Constancy: []
717-ContextAliasing: []

.....
-----
Block: 2041_2
2041_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_2-Stack size: 18 
2041_2-Equals Mem:<< []>> 
2041_2-NonEquals Mem: << [<5,8>]>> 
2041_2-Equals Sto:<< []>> 
2041_2-NonEquals Sto: << []>> 
2041_2-Useless: []
2041_2-Constancy: [(13, 0), (6, 0), (5, 0)]
2041_2-ContextAliasing: []

.....
-----
Block: 1634_0
1634_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634_0-Stack size: 13 
1634_0-Equals Mem:<< []>> 
1634_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1634_0-Equals Sto:<< []>> 
1634_0-NonEquals Sto: << []>> 
1634_0-Useless: []
1634_0-Constancy: [(8, 0), (1, 0)]
1634_0-ContextAliasing: []

.....
-----
Block: 272
272Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
272-Stack size: 1 
272-Equals Mem:<< []>> 
272-NonEquals Mem: << [<5,2>]>> 
272-Equals Sto:<< []>> 
272-NonEquals Sto: << []>> 
272-Useless: []
272-Constancy: []
272-ContextAliasing: []

.....
-----
Block: 1186
1186Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1186-Stack size: 10 
1186-Equals Mem:<< []>> 
1186-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1186-Equals Sto:<< []>> 
1186-NonEquals Sto: << []>> 
1186-Useless: []
1186-Constancy: [(4, 0)]
1186-ContextAliasing: []

.....
-----
Block: 1286
1286Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1286-Stack size: 10 
1286-Equals Mem:<< []>> 
1286-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1286-Equals Sto:<< []>> 
1286-NonEquals Sto: << []>> 
1286-Useless: []
1286-Constancy: [(4, 0)]
1286-ContextAliasing: []

.....
-----
Block: 1566_0
1566_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566_0-Stack size: 16 
1566_0-Equals Mem:<< []>> 
1566_0-NonEquals Mem: << [<6,1>]>> 
1566_0-Equals Sto:<< []>> 
1566_0-NonEquals Sto: << []>> 
1566_0-Useless: []
1566_0-Constancy: [(10, 0), (1, 0)]
1566_0-ContextAliasing: [(2, 15)]

.....
-----
Block: 1712_1
1712_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_1-Stack size: 18 
1712_1-Equals Mem:<< []>> 
1712_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_1-Equals Sto:<< []>> 
1712_1-NonEquals Sto: << []>> 
1712_1-Useless: []
1712_1-Constancy: [(12, 0), (3, 0)]
1712_1-ContextAliasing: [(4, 16)]

.....
-----
Block: 1736_1
1736_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_1-Stack size: 22 
1736_1-Equals Mem:<< []>> 
1736_1-NonEquals Mem: << [<11,5>]>> 
1736_1-Equals Sto:<< []>> 
1736_1-NonEquals Sto: << []>> 
1736_1-Useless: []
1736_1-Constancy: [(16, 0), (7, 0), (3, 0), (2, 32)]
1736_1-ContextAliasing: [(8, 16)]

.....
-----
Block: 2041_1
2041_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_1-Stack size: 21 
2041_1-Equals Mem:<< []>> 
2041_1-NonEquals Mem: << [<5,8>]>> 
2041_1-Equals Sto:<< []>> 
2041_1-NonEquals Sto: << []>> 
2041_1-Useless: []
2041_1-Constancy: [(15, 0), (6, 0), (5, 0)]
2041_1-ContextAliasing: []

.....
-----
Block: 1429
1429Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x05c3', 'SWAP1', 'DUP3', 'PUSH2 0x064b', 'JUMP']>> 
1429-Stack size: 11 
1429-Equals Mem:<< [<12,29>]>> 
1429-NonEquals Mem: << [<12,16>, <16,29>]>> 
1429-Equals Sto:<< [<24,31>]>> 
1429-NonEquals Sto: << []>> 
1429-Useless: []
1429-Constancy: [(5, 0)]
1429-ContextAliasing: []

.....
-----
Block: 2041_0
2041_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_0-Stack size: 20 
2041_0-Equals Mem:<< []>> 
2041_0-NonEquals Mem: << [<5,8>]>> 
2041_0-Equals Sto:<< []>> 
2041_0-NonEquals Sto: << []>> 
2041_0-Useless: []
2041_0-Constancy: [(14, 0), (6, 0), (5, 0)]
2041_0-ContextAliasing: []

.....
-----
Block: 1634
1634Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634-Stack size: 15 
1634-Equals Mem:<< []>> 
1634-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1634-Equals Sto:<< []>> 
1634-NonEquals Sto: << []>> 
1634-Useless: []
1634-Constancy: [(9, 0), (1, 0)]
1634-ContextAliasing: []

.....
-----
Block: 1475
1475Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x0486', 'JUMP']>> 
1475-Stack size: 11 
1475-Equals Mem:<< []>> 
1475-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
1475-Equals Sto:<< []>> 
1475-NonEquals Sto: << []>> 
1475-Useless: []
1475-Constancy: [(5, 0)]
1475-ContextAliasing: []

.....
-----
Block: 1566
1566Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566-Stack size: 15 
1566-Equals Mem:<< []>> 
1566-NonEquals Mem: << [<6,1>]>> 
1566-Equals Sto:<< []>> 
1566-NonEquals Sto: << []>> 
1566-Useless: []
1566-Constancy: [(9, 0), (1, 0)]
1566-ContextAliasing: [(2, 14)]

.....
-----
Block: 1712_0
1712_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_0-Stack size: 17 
1712_0-Equals Mem:<< []>> 
1712_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_0-Equals Sto:<< []>> 
1712_0-NonEquals Sto: << []>> 
1712_0-Useless: []
1712_0-Constancy: [(11, 0), (3, 0)]
1712_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 1736_0
1736_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_0-Stack size: 21 
1736_0-Equals Mem:<< []>> 
1736_0-NonEquals Mem: << [<11,5>]>> 
1736_0-Equals Sto:<< []>> 
1736_0-NonEquals Sto: << []>> 
1736_0-Useless: []
1736_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
1736_0-ContextAliasing: [(8, 15)]

.....
-----
Block: 2041
2041Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041-Stack size: 20 
2041-Equals Mem:<< []>> 
2041-NonEquals Mem: << [<5,8>]>> 
2041-Equals Sto:<< []>> 
2041-NonEquals Sto: << []>> 
2041-Useless: []
2041-Constancy: [(14, 0), (6, 0), (5, 0)]
2041-ContextAliasing: []

.....
-----
Block: 889_0
889_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
889_0-Stack size: 10 
889_0-Equals Mem:<< []>> 
889_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
889_0-Equals Sto:<< []>> 
889_0-NonEquals Sto: << []>> 
889_0-Useless: []
889_0-Constancy: [(4, 0)]
889_0-ContextAliasing: []

.....
-----
Block: 992_0
992_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
992_0-Stack size: 10 
992_0-Equals Mem:<< []>> 
992_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
992_0-Equals Sto:<< []>> 
992_0-NonEquals Sto: << []>> 
992_0-Useless: []
992_0-Constancy: [(4, 0)]
992_0-ContextAliasing: []

.....
-----
Block: 1074_0
1074_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1074_0-Stack size: 10 
1074_0-Equals Mem:<< [<12,27>, <17,30>]>> 
1074_0-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
1074_0-Equals Sto:<< []>> 
1074_0-NonEquals Sto: << []>> 
1074_0-Useless: []
1074_0-Constancy: [(4, 0)]
1074_0-ContextAliasing: []

.....
-----
Block: 191
191Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
191-Stack size: 2 
191-Equals Mem:<< []>> 
191-NonEquals Mem: << []>> 
191-Equals Sto:<< []>> 
191-NonEquals Sto: << []>> 
191-Useless: []
191-Constancy: []
191-ContextAliasing: []

.....
-----
Block: 968
968Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968-Stack size: 10 
968-Equals Mem:<< []>> 
968-NonEquals Mem: << []>> 
968-Equals Sto:<< []>> 
968-NonEquals Sto: << []>> 
968-Useless: []
968-Constancy: [(5, 0)]
968-ContextAliasing: []

.....
-----
Block: 968_7
968_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_7-Stack size: 15 
968_7-Equals Mem:<< []>> 
968_7-NonEquals Mem: << []>> 
968_7-Equals Sto:<< []>> 
968_7-NonEquals Sto: << []>> 
968_7-Useless: []
968_7-Constancy: [(10, 0), (1, 0)]
968_7-ContextAliasing: []

.....
-----
Block: 968_6
968_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_6-Stack size: 15 
968_6-Equals Mem:<< []>> 
968_6-NonEquals Mem: << []>> 
968_6-Equals Sto:<< []>> 
968_6-NonEquals Sto: << []>> 
968_6-Useless: []
968_6-Constancy: [(10, 0), (2, 0)]
968_6-ContextAliasing: []

.....
-----
Block: 968_5
968_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_5-Stack size: 14 
968_5-Equals Mem:<< []>> 
968_5-NonEquals Mem: << []>> 
968_5-Equals Sto:<< []>> 
968_5-NonEquals Sto: << []>> 
968_5-Useless: []
968_5-Constancy: [(9, 0)]
968_5-ContextAliasing: []

.....
-----
Block: 968_4
968_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_4-Stack size: 11 
968_4-Equals Mem:<< []>> 
968_4-NonEquals Mem: << []>> 
968_4-Equals Sto:<< []>> 
968_4-NonEquals Sto: << []>> 
968_4-Useless: []
968_4-Constancy: [(5, 0)]
968_4-ContextAliasing: []

.....
-----
Block: 968_3
968_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_3-Stack size: 16 
968_3-Equals Mem:<< []>> 
968_3-NonEquals Mem: << []>> 
968_3-Equals Sto:<< []>> 
968_3-NonEquals Sto: << []>> 
968_3-Useless: []
968_3-Constancy: [(10, 0), (1, 0)]
968_3-ContextAliasing: []

.....
-----
Block: 968_2
968_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_2-Stack size: 16 
968_2-Equals Mem:<< []>> 
968_2-NonEquals Mem: << []>> 
968_2-Equals Sto:<< []>> 
968_2-NonEquals Sto: << []>> 
968_2-Useless: []
968_2-Constancy: [(10, 0), (2, 0)]
968_2-ContextAliasing: []

.....
-----
Block: 968_1
968_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_1-Stack size: 15 
968_1-Equals Mem:<< []>> 
968_1-NonEquals Mem: << []>> 
968_1-Equals Sto:<< []>> 
968_1-NonEquals Sto: << []>> 
968_1-Useless: []
968_1-Constancy: [(9, 0), (1, 0)]
968_1-ContextAliasing: []

.....
-----
Block: 968_0
968_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_0-Stack size: 11 
968_0-Equals Mem:<< []>> 
968_0-NonEquals Mem: << []>> 
968_0-Equals Sto:<< []>> 
968_0-NonEquals Sto: << []>> 
968_0-Useless: []
968_0-Constancy: [(5, 0)]
968_0-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.05723420099820942s

*************************************************************
File: Ownable
Build CFG: 0.006322001980151981s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 6
Memory read accesses ContractOwnable: 14
Memory write accesses ContractOwnable: 15
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 310
310Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
310-Stack size: 3 
310-Equals Mem:<< []>> 
310-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
310-Equals Sto:<< []>> 
310-NonEquals Sto: << []>> 
310-Useless: []
310-Constancy: []
310-ContextAliasing: []

.....
-----
Block: 396
396Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
396-Stack size: 3 
396-Equals Mem:<< []>> 
396-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
396-Equals Sto:<< []>> 
396-NonEquals Sto: << []>> 
396-Useless: []
396-Constancy: []
396-ContextAliasing: []

.....
-----
Block: 77
77Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
77-Stack size: 1 
77-Equals Mem:<< [<5,16>]>> 
77-NonEquals Mem: << [<15,5>, <15,16>]>> 
77-Equals Sto:<< []>> 
77-NonEquals Sto: << []>> 
77-Useless: []
77-Constancy: []
77-ContextAliasing: []

.....
-----
Block: 144
144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD']>> 
144-Stack size: 2 
144-Equals Mem:<< []>> 
144-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
144-Equals Sto:<< []>> 
144-NonEquals Sto: << []>> 
144-Useless: []
144-Constancy: []
144-ContextAliasing: []

.....
-----
Block: 211_0
211_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211_0-Stack size: 4 
211_0-Equals Mem:<< []>> 
211_0-NonEquals Mem: << []>> 
211_0-Equals Sto:<< []>> 
211_0-NonEquals Sto: << []>> 
211_0-Useless: []
211_0-Constancy: []
211_0-ContextAliasing: []

.....
-----
Block: 211
211Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211-Stack size: 3 
211-Equals Mem:<< []>> 
211-NonEquals Mem: << []>> 
211-Equals Sto:<< []>> 
211-NonEquals Sto: << []>> 
211-Useless: []
211-Constancy: []
211-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.00400121696293354s

*************************************************************
File: SPUNKY
Build CFG: 1.7371603050269186s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SPUNKY
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> <slot52,0> 6512:6 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--disableTransferDelay()
MEMRES: NOT Found read (potential optimization) -> <slot94,0> 3938_1:16 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot94,*> 3938_1:22 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot99,0> 4117_1:16 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot99,*> 4117_1:22 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot149,0> 4602:6 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--removeLimits()
MEMRES: NOT Found read (potential optimization) -> <slot153,0> 4188:6 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--renounceOwnership()
MEMRES: NOT Found read (potential optimization) -> <slot167,0> 3938_0:16 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--swapBack()
MEMRES: NOT Found read (potential optimization) -> <slot167,*> 3938_0:22 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--swapBack()
MEMRES: NOT Found read (potential optimization) -> <slot172,0> 4117_0:16 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--swapBack()
MEMRES: NOT Found read (potential optimization) -> <slot172,*> 4117_0:22 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--swapBack()
MEMRES: NOT Found read (potential optimization) -> <slot209,0> 3938:16 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot209,*> 3938:22 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot214,0> 4117:16 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot214,*> 4117:22 --> 0x00532c093780a69ef17a20976edc1228e90a835a.sol SPUNKY--transferFrom(address,address,uint256)
GASOL: Useless accesses found: {'6512': [6], '3938_1': [16, 22], '4117_1': [16, 22], '4602': [6], '4188': [6], '3938_0': [16, 22], '4117_0': [16, 22], '3938': [16, 22], '4117': [16, 22]}
Free memory analyss finished


SLOTS Contract SPUNKY: 217
Memory read accesses ContractSPUNKY: 703
Memory write accesses ContractSPUNKY: 1407
********************************** INIT
GASOL: Adding block useless 6512
GASOL: Adding block useless 3938_1
GASOL: Adding block useless 4117_1
GASOL: Adding block useless 4602
GASOL: Adding block useless 4188
GASOL: Adding block useless 3938_0
GASOL: Adding block useless 4117_0
GASOL: Adding block useless 3938
GASOL: Adding block useless 4117
CONTEXT: Detected context equality 13 <slot37,0> 15 <slot37,0>
CONTEXT: Detected context equality 13 <slot37,0> 16 <slot37,0>
CONTEXT: Detected context equality 13 <slot37,0> 16 <slot37,0>
CONTEXT: Detected context equality 13 <slot41,0> 15 <slot41,0>
CONTEXT: Detected context equality 13 <slot41,0> 16 <slot41,0>
CONTEXT: Detected context equality 13 <slot41,0> 16 <slot41,0>
CONTEXT: Detected context equality 16 <slot72,0> 18 <slot72,0>
CONTEXT: Detected context equality 16 <slot72,0> 19 <slot72,0>
CONTEXT: Detected context equality 16 <slot72,0> 19 <slot72,0>
CONTEXT: Detected context equality 24 <slot82,0> 26 <slot82,0>
CONTEXT: Detected context equality 24 <slot82,0> 27 <slot82,0>
CONTEXT: Detected context equality 24 <slot82,0> 27 <slot82,0>
CONTEXT: Detected context equality 20 <slot84,0> 22 <slot84,0>
CONTEXT: Detected context equality 20 <slot84,0> 22 <slot84,0>
CONTEXT: Detected context equality 20 <slot84,0> 26 <slot84,0>
CONTEXT: Detected context equality 20 <slot84,0> 26 <slot84,0>
CONTEXT: Detected context equality 26 <slot88,0> 28 <slot88,0>
CONTEXT: Detected context equality 26 <slot88,0> 29 <slot88,0>
CONTEXT: Detected context equality 26 <slot88,0> 29 <slot88,0>
CONTEXT: Detected context equality 27 <slot90,0> 29 <slot90,0>
CONTEXT: Detected context equality 27 <slot90,0> 30 <slot90,0>
CONTEXT: Detected context equality 27 <slot90,0> 30 <slot90,0>
CONTEXT: Detected context equality 28 <slot92,0> 30 <slot92,0>
CONTEXT: Detected context equality 28 <slot92,0> 31 <slot92,0>
CONTEXT: Detected context equality 28 <slot92,0> 31 <slot92,0>
CONTEXT: Detected context equality 22 <slot103,0> 24 <slot103,0>
CONTEXT: Detected context equality 22 <slot103,0> 25 <slot103,0>
CONTEXT: Detected context equality 22 <slot103,0> 25 <slot103,0>
CONTEXT: Detected context equality 22 <slot107,0> 24 <slot107,0>
CONTEXT: Detected context equality 22 <slot107,0> 25 <slot107,0>
CONTEXT: Detected context equality 22 <slot107,0> 25 <slot107,0>
CONTEXT: Detected context equality 21 <slot113,0> 23 <slot113,0>
CONTEXT: Detected context equality 21 <slot113,0> 24 <slot113,0>
CONTEXT: Detected context equality 21 <slot113,0> 24 <slot113,0>
CONTEXT: Detected context equality 21 <slot117,0> 23 <slot117,0>
CONTEXT: Detected context equality 21 <slot117,0> 24 <slot117,0>
CONTEXT: Detected context equality 21 <slot117,0> 24 <slot117,0>
CONTEXT: Detected context equality 21 <slot122,0> 23 <slot122,0>
CONTEXT: Detected context equality 21 <slot122,0> 24 <slot122,0>
CONTEXT: Detected context equality 21 <slot122,0> 24 <slot122,0>
CONTEXT: Detected context equality 21 <slot127,0> 23 <slot127,0>
CONTEXT: Detected context equality 21 <slot127,0> 24 <slot127,0>
CONTEXT: Detected context equality 21 <slot127,0> 24 <slot127,0>
CONTEXT: Detected context equality 11 <slot131,0> 13 <slot131,0>
CONTEXT: Detected context equality 11 <slot131,0> 14 <slot131,0>
CONTEXT: Detected context equality 11 <slot131,0> 14 <slot131,0>
CONTEXT: Detected context equality 14 <slot155,0> 16 <slot155,0>
CONTEXT: Detected context equality 14 <slot155,0> 17 <slot155,0>
CONTEXT: Detected context equality 14 <slot155,0> 17 <slot155,0>
CONTEXT: Detected context equality 10 <slot157,0> 12 <slot157,0>
CONTEXT: Detected context equality 10 <slot157,0> 12 <slot157,0>
CONTEXT: Detected context equality 10 <slot157,0> 16 <slot157,0>
CONTEXT: Detected context equality 10 <slot157,0> 16 <slot157,0>
CONTEXT: Detected context equality 16 <slot161,0> 18 <slot161,0>
CONTEXT: Detected context equality 16 <slot161,0> 19 <slot161,0>
CONTEXT: Detected context equality 16 <slot161,0> 19 <slot161,0>
CONTEXT: Detected context equality 17 <slot163,0> 19 <slot163,0>
CONTEXT: Detected context equality 17 <slot163,0> 20 <slot163,0>
CONTEXT: Detected context equality 17 <slot163,0> 20 <slot163,0>
CONTEXT: Detected context equality 18 <slot165,0> 20 <slot165,0>
CONTEXT: Detected context equality 18 <slot165,0> 21 <slot165,0>
CONTEXT: Detected context equality 18 <slot165,0> 21 <slot165,0>
CONTEXT: Detected context equality 17 <slot183,0> 19 <slot183,0>
CONTEXT: Detected context equality 17 <slot183,0> 20 <slot183,0>
CONTEXT: Detected context equality 17 <slot183,0> 20 <slot183,0>
CONTEXT: Detected context equality 25 <slot197,0> 27 <slot197,0>
CONTEXT: Detected context equality 25 <slot197,0> 28 <slot197,0>
CONTEXT: Detected context equality 25 <slot197,0> 28 <slot197,0>
CONTEXT: Detected context equality 21 <slot199,0> 23 <slot199,0>
CONTEXT: Detected context equality 21 <slot199,0> 23 <slot199,0>
CONTEXT: Detected context equality 21 <slot199,0> 27 <slot199,0>
CONTEXT: Detected context equality 21 <slot199,0> 27 <slot199,0>
CONTEXT: Detected context equality 27 <slot203,0> 29 <slot203,0>
CONTEXT: Detected context equality 27 <slot203,0> 30 <slot203,0>
CONTEXT: Detected context equality 27 <slot203,0> 30 <slot203,0>
CONTEXT: Detected context equality 28 <slot205,0> 30 <slot205,0>
CONTEXT: Detected context equality 28 <slot205,0> 31 <slot205,0>
CONTEXT: Detected context equality 28 <slot205,0> 31 <slot205,0>
CONTEXT: Detected context equality 29 <slot207,0> 31 <slot207,0>
CONTEXT: Detected context equality 29 <slot207,0> 32 <slot207,0>
CONTEXT: Detected context equality 29 <slot207,0> 32 <slot207,0>
CONTEXT: Detected context equality 23 <slot218,0> 25 <slot218,0>
CONTEXT: Detected context equality 23 <slot218,0> 26 <slot218,0>
CONTEXT: Detected context equality 23 <slot218,0> 26 <slot218,0>
CONTEXT: Detected context equality 23 <slot222,0> 25 <slot222,0>
CONTEXT: Detected context equality 23 <slot222,0> 26 <slot222,0>
CONTEXT: Detected context equality 23 <slot222,0> 26 <slot222,0>
CONTEXT: Detected context equality 22 <slot228,0> 24 <slot228,0>
CONTEXT: Detected context equality 22 <slot228,0> 25 <slot228,0>
CONTEXT: Detected context equality 22 <slot228,0> 25 <slot228,0>
CONTEXT: Detected context equality 22 <slot232,0> 24 <slot232,0>
CONTEXT: Detected context equality 22 <slot232,0> 25 <slot232,0>
CONTEXT: Detected context equality 22 <slot232,0> 25 <slot232,0>
CONTEXT: Detected context equality 22 <slot237,0> 24 <slot237,0>
CONTEXT: Detected context equality 22 <slot237,0> 25 <slot237,0>
CONTEXT: Detected context equality 22 <slot237,0> 25 <slot237,0>
CONTEXT: Detected context equality 22 <slot242,0> 24 <slot242,0>
CONTEXT: Detected context equality 22 <slot242,0> 25 <slot242,0>
CONTEXT: Detected context equality 22 <slot242,0> 25 <slot242,0>
COMPACT CLONES: True
CONTRACT: SPUNKY
-----
Block: 6870
6870Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6870-Stack size: 4 
6870-Equals Mem:<< []>> 
6870-NonEquals Mem: << [<6,1>]>> 
6870-Equals Sto:<< []>> 
6870-NonEquals Sto: << []>> 
6870-Useless: []
6870-Constancy: [(0, 0)]
6870-ContextAliasing: []

.....
-----
Block: 12699_96
12699_96Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_96-Stack size: 9 
12699_96-Equals Mem:<< []>> 
12699_96-NonEquals Mem: << [<5,8>]>> 
12699_96-Equals Sto:<< []>> 
12699_96-NonEquals Sto: << []>> 
12699_96-Useless: []
12699_96-Constancy: [(5, 0)]
12699_96-ContextAliasing: []

.....
-----
Block: 6916
6916Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6916-Stack size: 4 
6916-Equals Mem:<< []>> 
6916-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
6916-Equals Sto:<< []>> 
6916-NonEquals Sto: << []>> 
6916-Useless: []
6916-Constancy: [(0, 0)]
6916-ContextAliasing: []

.....
-----
Block: 6998
6998Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x06b656e7320696e204c5', 'PUSH1 0xb4', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6998-Stack size: 4 
6998-Equals Mem:<< []>> 
6998-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6998-Equals Sto:<< []>> 
6998-NonEquals Sto: << []>> 
6998-Useless: []
6998-Constancy: [(0, 0)]
6998-ContextAliasing: []

.....
-----
Block: 7192
7192Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1c3c', 'SWAP2', 'SWAP1', 'PUSH2 0x320b', 'JUMP']>> 
7192-Stack size: 9 
7192-Equals Mem:<< [<18,6>]>> 
7192-NonEquals Mem: << []>> 
7192-Equals Sto:<< []>> 
7192-NonEquals Sto: << []>> 
7192-Useless: []
7192-Constancy: [(5, 0), (4, 0)]
7192-ContextAliasing: []

.....
-----
Block: 11031_11
11031_11Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_11-Stack size: 9 
11031_11-Equals Mem:<< [<11,6>]>> 
11031_11-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_11-Equals Sto:<< []>> 
11031_11-NonEquals Sto: << []>> 
11031_11-Useless: []
11031_11-Constancy: [(5, 0), (3, 0)]
11031_11-ContextAliasing: []

.....
-----
Block: 12065_11
12065_11Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_11-Stack size: 16 
12065_11-Equals Mem:<< []>> 
12065_11-NonEquals Mem: << [<6,1>]>> 
12065_11-Equals Sto:<< []>> 
12065_11-NonEquals Sto: << []>> 
12065_11-Useless: []
12065_11-Constancy: [(12, 0), (10, 0), (6, 0), (1, 0)]
12065_11-ContextAliasing: [(2, 15)]

.....
-----
Block: 12101_29
12101_29Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_29-Stack size: 18 
12101_29-Equals Mem:<< []>> 
12101_29-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_29-Equals Sto:<< []>> 
12101_29-NonEquals Sto: << []>> 
12101_29-Useless: []
12101_29-Constancy: [(14, 0), (12, 0), (8, 0), (3, 0)]
12101_29-ContextAliasing: [(4, 16)]

.....
-----
Block: 12125_29
12125_29Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_29-Stack size: 22 
12125_29-Equals Mem:<< []>> 
12125_29-NonEquals Mem: << [<11,5>]>> 
12125_29-Equals Sto:<< []>> 
12125_29-NonEquals Sto: << []>> 
12125_29-Useless: []
12125_29-Constancy: [(18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_29-ContextAliasing: [(8, 16)]

.....
-----
Block: 12749_47
12749_47Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_47-Stack size: 20 
12749_47-Equals Mem:<< []>> 
12749_47-NonEquals Mem: << [<4,7>]>> 
12749_47-Equals Sto:<< []>> 
12749_47-NonEquals Sto: << []>> 
12749_47-Useless: []
12749_47-Constancy: [(16, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_47-ContextAliasing: []

.....
-----
Block: 11421_7
11421_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_7-Stack size: 10 
11421_7-Equals Mem:<< []>> 
11421_7-NonEquals Mem: << [<6,1>]>> 
11421_7-Equals Sto:<< []>> 
11421_7-NonEquals Sto: << []>> 
11421_7-Useless: []
11421_7-Constancy: [(6, 0), (2, 0)]
11421_7-ContextAliasing: []

.....
-----
Block: 11459_7
11459_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_7-Stack size: 10 
11459_7-Equals Mem:<< []>> 
11459_7-NonEquals Mem: << [<6,1>]>> 
11459_7-Equals Sto:<< []>> 
11459_7-NonEquals Sto: << []>> 
11459_7-Useless: []
11459_7-Constancy: [(6, 0), (2, 0)]
11459_7-ContextAliasing: []

.....
-----
Block: 10256_15
10256_15Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_15-Stack size: 16 
10256_15-Equals Mem:<< []>> 
10256_15-NonEquals Mem: << [<6,1>]>> 
10256_15-Equals Sto:<< []>> 
10256_15-NonEquals Sto: << []>> 
10256_15-Useless: []
10256_15-Constancy: [(12, 0), (8, 0), (1, 0)]
10256_15-ContextAliasing: [(2, 15)]

.....
-----
Block: 12101_28
12101_28Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_28-Stack size: 18 
12101_28-Equals Mem:<< []>> 
12101_28-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_28-Equals Sto:<< []>> 
12101_28-NonEquals Sto: << []>> 
12101_28-Useless: []
12101_28-Constancy: [(14, 0), (10, 0), (3, 0)]
12101_28-ContextAliasing: [(4, 16)]

.....
-----
Block: 12125_28
12125_28Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_28-Stack size: 22 
12125_28-Equals Mem:<< []>> 
12125_28-NonEquals Mem: << [<11,5>]>> 
12125_28-Equals Sto:<< []>> 
12125_28-NonEquals Sto: << []>> 
12125_28-Useless: []
12125_28-Constancy: [(18, 0), (14, 0), (7, 0), (3, 0), (2, 32)]
12125_28-ContextAliasing: [(8, 16)]

.....
-----
Block: 12699_94
12699_94Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_94-Stack size: 21 
12699_94-Equals Mem:<< []>> 
12699_94-NonEquals Mem: << [<5,8>]>> 
12699_94-Equals Sto:<< []>> 
12699_94-NonEquals Sto: << []>> 
12699_94-Useless: []
12699_94-Constancy: [(17, 0), (13, 0), (6, 0), (5, 0)]
12699_94-ContextAliasing: []

.....
-----
Block: 11542_7
11542_7Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_7-Stack size: 11 
11542_7-Equals Mem:<< [<12,29>]>> 
11542_7-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_7-Equals Sto:<< [<24,31>]>> 
11542_7-NonEquals Sto: << []>> 
11542_7-Useless: []
11542_7-Constancy: [(7, 0), (3, 0)]
11542_7-ContextAliasing: []

.....
-----
Block: 12699_93
12699_93Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_93-Stack size: 20 
12699_93-Equals Mem:<< []>> 
12699_93-NonEquals Mem: << [<5,8>]>> 
12699_93-Equals Sto:<< []>> 
12699_93-NonEquals Sto: << []>> 
12699_93-Useless: []
12699_93-Constancy: [(16, 0), (12, 0), (6, 0), (5, 0)]
12699_93-ContextAliasing: []

.....
-----
Block: 10324_8
10324_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_8-Stack size: 15 
10324_8-Equals Mem:<< []>> 
10324_8-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_8-Equals Sto:<< []>> 
10324_8-NonEquals Sto: << []>> 
10324_8-Useless: []
10324_8-Constancy: [(11, 0), (7, 0), (1, 0)]
10324_8-ContextAliasing: []

.....
-----
Block: 11588_7
11588_7Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_7-Stack size: 11 
11588_7-Equals Mem:<< []>> 
11588_7-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_7-Equals Sto:<< []>> 
11588_7-NonEquals Sto: << []>> 
11588_7-Useless: []
11588_7-Constancy: [(7, 0), (3, 0)]
11588_7-ContextAliasing: []

.....
-----
Block: 7311
7311Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1ceb', 'JUMPI']>> 
7311-Stack size: 6 
7311-Equals Mem:<< [<14,26>]>> 
7311-NonEquals Mem: << [<21,14>, <21,26>]>> 
7311-Equals Sto:<< []>> 
7311-NonEquals Sto: << []>> 
7311-Useless: []
7311-Constancy: [(2, 0)]
7311-ContextAliasing: []

.....
-----
Block: 1045
1045Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1045-Stack size: 2 
1045-Equals Mem:<< []>> 
1045-NonEquals Mem: << [<7,2>]>> 
1045-Equals Sto:<< []>> 
1045-NonEquals Sto: << []>> 
1045-Useless: []
1045-Constancy: []
1045-ContextAliasing: []

.....
-----
Block: 12699_95
12699_95Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_95-Stack size: 18 
12699_95-Equals Mem:<< []>> 
12699_95-NonEquals Mem: << [<5,8>]>> 
12699_95-Equals Sto:<< []>> 
12699_95-NonEquals Sto: << []>> 
12699_95-Useless: []
12699_95-Constancy: [(14, 0), (12, 0), (6, 0), (5, 0)]
12699_95-ContextAliasing: []

.....
-----
Block: 12749_48
12749_48Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_48-Stack size: 18 
12749_48-Equals Mem:<< []>> 
12749_48-NonEquals Mem: << [<4,7>]>> 
12749_48-Equals Sto:<< []>> 
12749_48-NonEquals Sto: << []>> 
12749_48-Useless: []
12749_48-Constancy: [(14, 0), (12, 0), (6, 0), (0, 0)]
12749_48-ContextAliasing: []

.....
-----
Block: 10950_11
10950_11Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_11-Stack size: 13 
10950_11-Equals Mem:<< []>> 
10950_11-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_11-Equals Sto:<< []>> 
10950_11-NonEquals Sto: << []>> 
10950_11-Useless: []
10950_11-Constancy: [(9, 0), (7, 0), (1, 0)]
10950_11-ContextAliasing: []

.....
-----
Block: 1198_0
1198_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1198_0-Stack size: 3 
1198_0-Equals Mem:<< []>> 
1198_0-NonEquals Mem: << [<5,2>]>> 
1198_0-Equals Sto:<< []>> 
1198_0-NonEquals Sto: << []>> 
1198_0-Useless: []
1198_0-Constancy: []
1198_0-ContextAliasing: []

.....
-----
Block: 6806
6806Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6806-Stack size: 3 
6806-Equals Mem:<< []>> 
6806-NonEquals Mem: << [<6,1>]>> 
6806-Equals Sto:<< []>> 
6806-NonEquals Sto: << []>> 
6806-Useless: []
6806-Constancy: [(0, 0)]
6806-ContextAliasing: []

.....
-----
Block: 6570
6570Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6570-Stack size: 3 
6570-Equals Mem:<< []>> 
6570-NonEquals Mem: << [<6,1>]>> 
6570-Equals Sto:<< []>> 
6570-NonEquals Sto: << []>> 
6570-Useless: []
6570-Constancy: []
6570-ContextAliasing: []

.....
-----
Block: 6608
6608Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6608-Stack size: 3 
6608-Equals Mem:<< []>> 
6608-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6608-Equals Sto:<< []>> 
6608-NonEquals Sto: << []>> 
6608-Useless: []
6608-Constancy: []
6608-ContextAliasing: []

.....
-----
Block: 6512
6512Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6512-Stack size: 3 
6512-Equals Mem:<< []>> 
6512-NonEquals Mem: << [<6,1>]>> 
6512-Equals Sto:<< []>> 
6512-NonEquals Sto: << []>> 
6512-Useless: [6]
6512-Constancy: [(0, 0)]
6512-ContextAliasing: []

.....
-----
Block: 2651
2651Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2651-Stack size: 4 
2651-Equals Mem:<< [<12,27>, <17,31>]>> 
2651-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
2651-Equals Sto:<< []>> 
2651-NonEquals Sto: << []>> 
2651-Useless: []
2651-Constancy: []
2651-ContextAliasing: []

.....
-----
Block: 1198
1198Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1198-Stack size: 2 
1198-Equals Mem:<< []>> 
1198-NonEquals Mem: << [<5,2>]>> 
1198-Equals Sto:<< []>> 
1198-NonEquals Sto: << []>> 
1198-Useless: []
1198-Constancy: []
1198-ContextAliasing: []

.....
-----
Block: 6170
6170Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6170-Stack size: 4 
6170-Equals Mem:<< []>> 
6170-NonEquals Mem: << [<6,1>]>> 
6170-Equals Sto:<< []>> 
6170-NonEquals Sto: << []>> 
6170-Useless: []
6170-Constancy: [(0, 0)]
6170-ContextAliasing: []

.....
-----
Block: 12699_92
12699_92Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_92-Stack size: 10 
12699_92-Equals Mem:<< []>> 
12699_92-NonEquals Mem: << [<5,8>]>> 
12699_92-Equals Sto:<< []>> 
12699_92-NonEquals Sto: << []>> 
12699_92-Useless: []
12699_92-Constancy: [(6, 0)]
12699_92-ContextAliasing: []

.....
-----
Block: 12749_46
12749_46Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_46-Stack size: 8 
12749_46-Equals Mem:<< []>> 
12749_46-NonEquals Mem: << [<4,7>]>> 
12749_46-Equals Sto:<< []>> 
12749_46-NonEquals Sto: << []>> 
12749_46-Useless: []
12749_46-Constancy: [(4, 0), (0, 0)]
12749_46-ContextAliasing: []

.....
-----
Block: 6235
6235Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x10181718181892903a37ba30b61039bab838363c97', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6235-Stack size: 4 
6235-Equals Mem:<< []>> 
6235-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6235-Equals Sto:<< []>> 
6235-NonEquals Sto: << []>> 
6235-Useless: []
6235-Constancy: [(0, 0)]
6235-ContextAliasing: []

.....
-----
Block: 12699_91
12699_91Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_91-Stack size: 10 
12699_91-Equals Mem:<< []>> 
12699_91-NonEquals Mem: << [<5,8>]>> 
12699_91-Equals Sto:<< []>> 
12699_91-NonEquals Sto: << []>> 
12699_91-Useless: []
12699_91-Constancy: [(6, 0)]
12699_91-ContextAliasing: []

.....
-----
Block: 12749_45
12749_45Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_45-Stack size: 8 
12749_45-Equals Mem:<< []>> 
12749_45-NonEquals Mem: << [<4,7>]>> 
12749_45-Equals Sto:<< []>> 
12749_45-NonEquals Sto: << []>> 
12749_45-Useless: []
12749_45-Constancy: [(4, 0), (0, 0)]
12749_45-ContextAliasing: []

.....
-----
Block: 6377
6377Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x34', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH20 0x371018171a92903a37ba30b61039bab838363c97', 'PUSH1 0x61', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6377-Stack size: 4 
6377-Equals Mem:<< []>> 
6377-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6377-Equals Sto:<< []>> 
6377-NonEquals Sto: << []>> 
6377-Useless: []
6377-Constancy: [(0, 0)]
6377-ContextAliasing: []

.....
-----
Block: 1045_0
1045_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1045_0-Stack size: 3 
1045_0-Equals Mem:<< []>> 
1045_0-NonEquals Mem: << [<7,2>]>> 
1045_0-Equals Sto:<< []>> 
1045_0-NonEquals Sto: << []>> 
1045_0-Useless: []
1045_0-Constancy: []
1045_0-ContextAliasing: []

.....
-----
Block: 5959
5959Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5959-Stack size: 3 
5959-Equals Mem:<< []>> 
5959-NonEquals Mem: << [<6,1>]>> 
5959-Equals Sto:<< []>> 
5959-NonEquals Sto: << []>> 
5959-Useless: []
5959-Constancy: []
5959-ContextAliasing: []

.....
-----
Block: 12699_90
12699_90Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_90-Stack size: 10 
12699_90-Equals Mem:<< []>> 
12699_90-NonEquals Mem: << [<5,8>]>> 
12699_90-Equals Sto:<< []>> 
12699_90-NonEquals Sto: << []>> 
12699_90-Useless: []
12699_90-Constancy: []
12699_90-ContextAliasing: []

.....
-----
Block: 12749_44
12749_44Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_44-Stack size: 8 
12749_44-Equals Mem:<< []>> 
12749_44-NonEquals Mem: << [<4,7>]>> 
12749_44-Equals Sto:<< []>> 
12749_44-NonEquals Sto: << []>> 
12749_44-Useless: []
12749_44-Constancy: [(0, 0)]
12749_44-ContextAliasing: []

.....
-----
Block: 12749_43
12749_43Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_43-Stack size: 7 
12749_43-Equals Mem:<< []>> 
12749_43-NonEquals Mem: << [<4,7>]>> 
12749_43-Equals Sto:<< []>> 
12749_43-NonEquals Sto: << []>> 
12749_43-Useless: []
12749_43-Constancy: [(0, 0)]
12749_43-ContextAliasing: []

.....
-----
Block: 6042
6042Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x302e3525', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6042-Stack size: 3 
6042-Equals Mem:<< []>> 
6042-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6042-Equals Sto:<< []>> 
6042-NonEquals Sto: << []>> 
6042-Useless: []
6042-Constancy: []
6042-ContextAliasing: []

.....
-----
Block: 12699_89
12699_89Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_89-Stack size: 8 
12699_89-Equals Mem:<< []>> 
12699_89-NonEquals Mem: << [<5,8>]>> 
12699_89-Equals Sto:<< []>> 
12699_89-NonEquals Sto: << []>> 
12699_89-Useless: []
12699_89-Constancy: []
12699_89-ContextAliasing: []

.....
-----
Block: 5796
5796Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5796-Stack size: 5 
5796-Equals Mem:<< []>> 
5796-NonEquals Mem: << [<6,1>]>> 
5796-Equals Sto:<< []>> 
5796-NonEquals Sto: << []>> 
5796-Useless: []
5796-Constancy: []
5796-ContextAliasing: []

.....
-----
Block: 12699_88
12699_88Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_88-Stack size: 11 
12699_88-Equals Mem:<< []>> 
12699_88-NonEquals Mem: << [<5,8>]>> 
12699_88-Equals Sto:<< []>> 
12699_88-NonEquals Sto: << []>> 
12699_88-Useless: []
12699_88-Constancy: []
12699_88-ContextAliasing: []

.....
-----
Block: 12699_87
12699_87Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_87-Stack size: 10 
12699_87-Equals Mem:<< []>> 
12699_87-NonEquals Mem: << [<5,8>]>> 
12699_87-Equals Sto:<< []>> 
12699_87-NonEquals Sto: << []>> 
12699_87-Useless: []
12699_87-Constancy: []
12699_87-ContextAliasing: []

.....
-----
Block: 5869
5869Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374206b656570206665657320617420333525206f72206c657373000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
5869-Stack size: 5 
5869-Equals Mem:<< []>> 
5869-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5869-Equals Sto:<< []>> 
5869-NonEquals Sto: << []>> 
5869-Useless: []
5869-Constancy: []
5869-ContextAliasing: []

.....
-----
Block: 5660
5660Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5660-Stack size: 4 
5660-Equals Mem:<< []>> 
5660-NonEquals Mem: << [<6,1>]>> 
5660-Equals Sto:<< []>> 
5660-NonEquals Sto: << []>> 
5660-Useless: []
5660-Constancy: []
5660-ContextAliasing: []

.....
-----
Block: 2384
2384Instr:<<['JUMPDEST', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
2384-Stack size: 3 
2384-Equals Mem:<< []>> 
2384-NonEquals Mem: << [<3,7>]>> 
2384-Equals Sto:<< []>> 
2384-NonEquals Sto: << []>> 
2384-Useless: []
2384-Constancy: []
2384-ContextAliasing: []

.....
-----
Block: 5526
5526Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5526-Stack size: 3 
5526-Equals Mem:<< []>> 
5526-NonEquals Mem: << [<6,1>]>> 
5526-Equals Sto:<< []>> 
5526-NonEquals Sto: << []>> 
5526-Useless: []
5526-Constancy: []
5526-ContextAliasing: []

.....
-----
Block: 3531
3531Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
3531-Stack size: 4 
3531-Equals Mem:<< []>> 
3531-NonEquals Mem: << [<6,1>]>> 
3531-Equals Sto:<< []>> 
3531-NonEquals Sto: << []>> 
3531-Useless: []
3531-Constancy: []
3531-ContextAliasing: []

.....
-----
Block: 3554
3554Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3554-Stack size: 4 
3554-Equals Mem:<< []>> 
3554-NonEquals Mem: << [<13,16>]>> 
3554-Equals Sto:<< [<21,33>]>> 
3554-NonEquals Sto: << []>> 
3554-Useless: []
3554-Constancy: []
3554-ContextAliasing: []

.....
-----
Block: 7783_0
7783_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
7783_0-Stack size: 9 
7783_0-Equals Mem:<< []>> 
7783_0-NonEquals Mem: << [<6,1>]>> 
7783_0-Equals Sto:<< []>> 
7783_0-NonEquals Sto: << []>> 
7783_0-Useless: []
7783_0-Constancy: [(4, 0)]
7783_0-ContextAliasing: []

.....
-----
Block: 7821_0
7821_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
7821_0-Stack size: 9 
7821_0-Equals Mem:<< []>> 
7821_0-NonEquals Mem: << [<6,1>]>> 
7821_0-Equals Sto:<< []>> 
7821_0-NonEquals Sto: << []>> 
7821_0-Useless: []
7821_0-Constancy: [(4, 0)]
7821_0-ContextAliasing: []

.....
-----
Block: 7844_0
7844_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1ee4', 'JUMPI']>> 
7844_0-Stack size: 9 
7844_0-Equals Mem:<< []>> 
7844_0-NonEquals Mem: << [<11,14>]>> 
7844_0-Equals Sto:<< []>> 
7844_0-NonEquals Sto: << []>> 
7844_0-Useless: []
7844_0-Constancy: [(4, 0)]
7844_0-ContextAliasing: []

.....
-----
Block: 7879_0
7879_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7879_0-Stack size: 10 
7879_0-Equals Mem:<< []>> 
7879_0-NonEquals Mem: << [<11,14>]>> 
7879_0-Equals Sto:<< []>> 
7879_0-NonEquals Sto: << []>> 
7879_0-Useless: []
7879_0-Constancy: [(5, 0)]
7879_0-ContextAliasing: []

.....
-----
Block: 7913_0
7913_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x31', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752068617665206265656e20626c61636b6c69737465642066726f6d2074', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x72616e73666572696e6720746f6b656e73', 'PUSH1 0x78', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7913_0-Stack size: 9 
7913_0-Equals Mem:<< []>> 
7913_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7913_0-Equals Sto:<< []>> 
7913_0-NonEquals Sto: << []>> 
7913_0-Useless: []
7913_0-Constancy: [(4, 0)]
7913_0-ContextAliasing: []

.....
-----
Block: 11421_6
11421_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_6-Stack size: 13 
11421_6-Equals Mem:<< []>> 
11421_6-NonEquals Mem: << [<6,1>]>> 
11421_6-Equals Sto:<< []>> 
11421_6-NonEquals Sto: << []>> 
11421_6-Useless: []
11421_6-Constancy: [(8, 0), (0, 0)]
11421_6-ContextAliasing: []

.....
-----
Block: 11459_6
11459_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_6-Stack size: 13 
11459_6-Equals Mem:<< []>> 
11459_6-NonEquals Mem: << [<6,1>]>> 
11459_6-Equals Sto:<< []>> 
11459_6-NonEquals Sto: << []>> 
11459_6-Useless: []
11459_6-Constancy: [(8, 0), (0, 0)]
11459_6-ContextAliasing: []

.....
-----
Block: 10256_14
10256_14Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_14-Stack size: 19 
10256_14-Equals Mem:<< []>> 
10256_14-NonEquals Mem: << [<6,1>]>> 
10256_14-Equals Sto:<< []>> 
10256_14-NonEquals Sto: << []>> 
10256_14-Useless: []
10256_14-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
10256_14-ContextAliasing: [(2, 18)]

.....
-----
Block: 12101_27
12101_27Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_27-Stack size: 21 
12101_27-Equals Mem:<< []>> 
12101_27-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_27-Equals Sto:<< []>> 
12101_27-NonEquals Sto: << []>> 
12101_27-Useless: []
12101_27-Constancy: [(16, 0), (8, 0), (5, 0), (3, 0)]
12101_27-ContextAliasing: [(4, 19)]

.....
-----
Block: 12125_27
12125_27Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_27-Stack size: 25 
12125_27-Equals Mem:<< []>> 
12125_27-NonEquals Mem: << [<11,5>]>> 
12125_27-Equals Sto:<< []>> 
12125_27-NonEquals Sto: << []>> 
12125_27-Useless: []
12125_27-Constancy: [(20, 0), (12, 0), (9, 0), (7, 0), (3, 0), (2, 32)]
12125_27-ContextAliasing: [(8, 19)]

.....
-----
Block: 12699_86
12699_86Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_86-Stack size: 24 
12699_86-Equals Mem:<< []>> 
12699_86-NonEquals Mem: << [<5,8>]>> 
12699_86-Equals Sto:<< []>> 
12699_86-NonEquals Sto: << []>> 
12699_86-Useless: []
12699_86-Constancy: [(19, 0), (11, 0), (8, 0), (6, 0), (5, 0), (3, 0)]
12699_86-ContextAliasing: []

.....
-----
Block: 11542_6
11542_6Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_6-Stack size: 14 
11542_6-Equals Mem:<< [<12,29>]>> 
11542_6-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_6-Equals Sto:<< [<24,31>]>> 
11542_6-NonEquals Sto: << []>> 
11542_6-Useless: []
11542_6-Constancy: [(9, 0), (1, 0)]
11542_6-ContextAliasing: []

.....
-----
Block: 12699_85
12699_85Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_85-Stack size: 23 
12699_85-Equals Mem:<< []>> 
12699_85-NonEquals Mem: << [<5,8>]>> 
12699_85-Equals Sto:<< []>> 
12699_85-NonEquals Sto: << []>> 
12699_85-Useless: []
12699_85-Constancy: [(18, 0), (10, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
12699_85-ContextAliasing: []

.....
-----
Block: 10324_7
10324_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_7-Stack size: 18 
10324_7-Equals Mem:<< []>> 
10324_7-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_7-Equals Sto:<< []>> 
10324_7-NonEquals Sto: << []>> 
10324_7-Useless: []
10324_7-Constancy: [(13, 0), (5, 0), (2, 0), (1, 0)]
10324_7-ContextAliasing: []

.....
-----
Block: 11588_6
11588_6Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_6-Stack size: 14 
11588_6-Equals Mem:<< []>> 
11588_6-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_6-Equals Sto:<< []>> 
11588_6-NonEquals Sto: << []>> 
11588_6-Useless: []
11588_6-Constancy: [(9, 0), (1, 0)]
11588_6-ContextAliasing: []

.....
-----
Block: 8169_0
8169_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x2025', 'JUMPI']>> 
8169_0-Stack size: 9 
8169_0-Equals Mem:<< []>> 
8169_0-NonEquals Mem: << [<10,13>]>> 
8169_0-Equals Sto:<< []>> 
8169_0-NonEquals Sto: << []>> 
8169_0-Useless: []
8169_0-Constancy: [(4, 0)]
8169_0-ContextAliasing: []

.....
-----
Block: 8201_0
8201_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8201_0-Stack size: 10 
8201_0-Equals Mem:<< []>> 
8201_0-NonEquals Mem: << [<11,14>]>> 
8201_0-Equals Sto:<< []>> 
8201_0-NonEquals Sto: << []>> 
8201_0-Useless: []
8201_0-Constancy: [(5, 0)]
8201_0-ContextAliasing: []

.....
-----
Block: 8234_0
8234_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297', 'PUSH1 0x51', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8234_0-Stack size: 9 
8234_0-Equals Mem:<< []>> 
8234_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
8234_0-Equals Sto:<< []>> 
8234_0-NonEquals Sto: << []>> 
8234_0-Useless: []
8234_0-Constancy: [(4, 0)]
8234_0-ContextAliasing: []

.....
-----
Block: 8457_0
8457_0Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x219d', 'JUMPI']>> 
8457_0-Stack size: 9 
8457_0-Equals Mem:<< []>> 
8457_0-NonEquals Mem: << [<4,7>]>> 
8457_0-Equals Sto:<< []>> 
8457_0-NonEquals Sto: << []>> 
8457_0-Useless: []
8457_0-Constancy: [(4, 0)]
8457_0-ContextAliasing: []

.....
-----
Block: 8478_0
8478_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8478_0-Stack size: 9 
8478_0-Equals Mem:<< []>> 
8478_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>, <33,1>]>> 
8478_0-Equals Sto:<< []>> 
8478_0-NonEquals Sto: << []>> 
8478_0-Useless: []
8478_0-Constancy: [(4, 0)]
8478_0-ContextAliasing: []

.....
-----
Block: 8605_0
8605_0Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
8605_0-Stack size: 9 
8605_0-Equals Mem:<< []>> 
8605_0-NonEquals Mem: << [<5,8>]>> 
8605_0-Equals Sto:<< []>> 
8605_0-NonEquals Sto: << []>> 
8605_0-Useless: []
8605_0-Constancy: [(4, 0)]
8605_0-ContextAliasing: []

.....
-----
Block: 8623_0
8623_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x21ee', 'JUMPI']>> 
8623_0-Stack size: 9 
8623_0-Equals Mem:<< []>> 
8623_0-NonEquals Mem: << [<11,14>]>> 
8623_0-Equals Sto:<< []>> 
8623_0-NonEquals Sto: << []>> 
8623_0-Useless: []
8623_0-Constancy: [(4, 0)]
8623_0-ContextAliasing: []

.....
-----
Block: 8657_0
8657_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8657_0-Stack size: 10 
8657_0-Equals Mem:<< []>> 
8657_0-NonEquals Mem: << [<11,14>]>> 
8657_0-Equals Sto:<< []>> 
8657_0-NonEquals Sto: << []>> 
8657_0-Useless: []
8657_0-Constancy: [(5, 0)]
8657_0-ContextAliasing: []

.....
-----
Block: 8702_0
8702_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8702_0-Stack size: 9 
8702_0-Equals Mem:<< []>> 
8702_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8702_0-Equals Sto:<< []>> 
8702_0-NonEquals Sto: << []>> 
8702_0-Useless: []
8702_0-Constancy: [(4, 0)]
8702_0-ContextAliasing: []

.....
-----
Block: 8803_0
8803_0Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x2288', 'SWAP1', 'DUP4', 'PUSH2 0x31e5', 'JUMP']>> 
8803_0-Stack size: 9 
8803_0-Equals Mem:<< []>> 
8803_0-NonEquals Mem: << [<13,17>]>> 
8803_0-Equals Sto:<< []>> 
8803_0-NonEquals Sto: << [<2,21>]>> 
8803_0-Useless: []
8803_0-Constancy: [(4, 0)]
8803_0-ContextAliasing: []

.....
-----
Block: 12699_84
12699_84Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_84-Stack size: 15 
12699_84-Equals Mem:<< []>> 
12699_84-NonEquals Mem: << [<5,8>]>> 
12699_84-Equals Sto:<< []>> 
12699_84-NonEquals Sto: << []>> 
12699_84-Useless: []
12699_84-Constancy: [(10, 0)]
12699_84-ContextAliasing: []

.....
-----
Block: 8847_0
8847_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8847_0-Stack size: 9 
8847_0-Equals Mem:<< []>> 
8847_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
8847_0-Equals Sto:<< []>> 
8847_0-NonEquals Sto: << []>> 
8847_0-Useless: []
8847_0-Constancy: [(4, 0)]
8847_0-ContextAliasing: []

.....
-----
Block: 8913_0
8913_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2310', 'JUMPI']>> 
8913_0-Stack size: 9 
8913_0-Equals Mem:<< []>> 
8913_0-NonEquals Mem: << [<11,14>]>> 
8913_0-Equals Sto:<< []>> 
8913_0-NonEquals Sto: << []>> 
8913_0-Useless: []
8913_0-Constancy: [(4, 0)]
8913_0-ContextAliasing: []

.....
-----
Block: 8947_0
8947_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8947_0-Stack size: 10 
8947_0-Equals Mem:<< []>> 
8947_0-NonEquals Mem: << [<11,14>]>> 
8947_0-Equals Sto:<< []>> 
8947_0-NonEquals Sto: << []>> 
8947_0-Useless: []
8947_0-Constancy: [(5, 0)]
8947_0-ContextAliasing: []

.....
-----
Block: 8992_0
8992_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x36', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x51', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8992_0-Stack size: 9 
8992_0-Equals Mem:<< []>> 
8992_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8992_0-Equals Sto:<< []>> 
8992_0-NonEquals Sto: << []>> 
8992_0-Useless: []
8992_0-Constancy: [(4, 0)]
8992_0-ContextAliasing: []

.....
-----
Block: 9094_0
9094_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x240e', 'JUMPI']>> 
9094_0-Stack size: 9 
9094_0-Equals Mem:<< []>> 
9094_0-NonEquals Mem: << [<11,14>]>> 
9094_0-Equals Sto:<< []>> 
9094_0-NonEquals Sto: << []>> 
9094_0-Useless: []
9094_0-Constancy: [(4, 0)]
9094_0-ContextAliasing: []

.....
-----
Block: 9126_0
9126_0Instr:<<['PUSH1 0x0b', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x23ca', 'SWAP1', 'DUP4', 'PUSH2 0x31e5', 'JUMP']>> 
9126_0-Stack size: 9 
9126_0-Equals Mem:<< []>> 
9126_0-NonEquals Mem: << [<12,16>]>> 
9126_0-Equals Sto:<< []>> 
9126_0-NonEquals Sto: << [<1,20>]>> 
9126_0-Useless: []
9126_0-Constancy: [(4, 0)]
9126_0-ContextAliasing: []

.....
-----
Block: 12699_83
12699_83Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_83-Stack size: 15 
12699_83-Equals Mem:<< []>> 
12699_83-NonEquals Mem: << [<5,8>]>> 
12699_83-Equals Sto:<< []>> 
12699_83-NonEquals Sto: << []>> 
12699_83-Useless: []
12699_83-Constancy: [(10, 0)]
12699_83-ContextAliasing: []

.....
-----
Block: 9169_0
9169_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
9169_0-Stack size: 9 
9169_0-Equals Mem:<< []>> 
9169_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
9169_0-Equals Sto:<< []>> 
9169_0-NonEquals Sto: << []>> 
9169_0-Useless: []
9169_0-Constancy: [(4, 0)]
9169_0-ContextAliasing: []

.....
-----
Block: 9230_0
9230_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x0a', 'SLOAD', 'DUP2', 'LT', 'DUP1', 'ISZERO', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x2439', 'JUMPI']>> 
9230_0-Stack size: 9 
9230_0-Equals Mem:<< []>> 
9230_0-NonEquals Mem: << [<5,9>]>> 
9230_0-Equals Sto:<< []>> 
9230_0-NonEquals Sto: << [<13,15>]>> 
9230_0-Useless: []
9230_0-Constancy: [(4, 0)]
9230_0-ContextAliasing: []

.....
-----
Block: 9302_0
9302_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9302_0-Stack size: 12 
9302_0-Equals Mem:<< []>> 
9302_0-NonEquals Mem: << [<11,14>]>> 
9302_0-Equals Sto:<< []>> 
9302_0-NonEquals Sto: << []>> 
9302_0-Useless: []
9302_0-Constancy: [(7, 0)]
9302_0-ContextAliasing: []

.....
-----
Block: 9338_0
9338_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9338_0-Stack size: 12 
9338_0-Equals Mem:<< []>> 
9338_0-NonEquals Mem: << [<11,14>]>> 
9338_0-Equals Sto:<< []>> 
9338_0-NonEquals Sto: << []>> 
9338_0-Useless: []
9338_0-Constancy: [(7, 0)]
9338_0-ContextAliasing: []

.....
-----
Block: 9374_0
9374_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9374_0-Stack size: 12 
9374_0-Equals Mem:<< []>> 
9374_0-NonEquals Mem: << [<11,14>]>> 
9374_0-Equals Sto:<< []>> 
9374_0-NonEquals Sto: << []>> 
9374_0-Useless: []
9374_0-Constancy: [(7, 0)]
9374_0-ContextAliasing: []

.....
-----
Block: 3649_1
3649_1Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'POP', 'PUSH0', 'PUSH1 0x21', 'SLOAD', 'PUSH1 0x1f', 'SLOAD', 'PUSH1 0x20', 'SLOAD', 'PUSH2 0x0e66', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
3649_1-Stack size: 12 
3649_1-Equals Mem:<< []>> 
3649_1-NonEquals Mem: << [<5,9>]>> 
3649_1-Equals Sto:<< []>> 
3649_1-NonEquals Sto: << [<13,18>, <13,20>, <13,22>, <18,20>, <18,22>, <20,22>]>> 
3649_1-Useless: []
3649_1-Constancy: [(7, 0)]
3649_1-ContextAliasing: []

.....
-----
Block: 12699_82
12699_82Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_82-Stack size: 20 
12699_82-Equals Mem:<< []>> 
12699_82-NonEquals Mem: << [<5,8>]>> 
12699_82-Equals Sto:<< []>> 
12699_82-NonEquals Sto: << []>> 
12699_82-Useless: []
12699_82-Constancy: [(15, 0), (6, 0)]
12699_82-ContextAliasing: []

.....
-----
Block: 12699_81
12699_81Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_81-Stack size: 19 
12699_81-Equals Mem:<< []>> 
12699_81-NonEquals Mem: << [<5,8>]>> 
12699_81-Equals Sto:<< []>> 
12699_81-NonEquals Sto: << []>> 
12699_81-Useless: []
12699_81-Constancy: [(14, 0), (5, 0)]
12699_81-ContextAliasing: []

.....
-----
Block: 12699_80
12699_80Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_80-Stack size: 23 
12699_80-Equals Mem:<< []>> 
12699_80-NonEquals Mem: << [<5,8>]>> 
12699_80-Equals Sto:<< []>> 
12699_80-NonEquals Sto: << []>> 
12699_80-Useless: []
12699_80-Constancy: [(18, 0), (8, 0), (7, 0)]
12699_80-ContextAliasing: []

.....
-----
Block: 12749_42
12749_42Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_42-Stack size: 21 
12749_42-Equals Mem:<< []>> 
12749_42-NonEquals Mem: << [<4,7>]>> 
12749_42-Equals Sto:<< []>> 
12749_42-NonEquals Sto: << []>> 
12749_42-Useless: []
12749_42-Constancy: [(16, 0), (6, 0), (5, 0), (0, 0)]
12749_42-ContextAliasing: []

.....
-----
Block: 12749_41
12749_41Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_41-Stack size: 20 
12749_41-Equals Mem:<< []>> 
12749_41-NonEquals Mem: << [<4,7>]>> 
12749_41-Equals Sto:<< []>> 
12749_41-NonEquals Sto: << []>> 
12749_41-Useless: []
12749_41-Constancy: [(15, 0), (5, 0), (4, 0), (0, 0)]
12749_41-ContextAliasing: []

.....
-----
Block: 10402_3
10402_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2805', 'JUMP']>> 
10402_3-Stack size: 20 
10402_3-Equals Mem:<< [<11,6>]>> 
10402_3-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
10402_3-Equals Sto:<< []>> 
10402_3-NonEquals Sto: << []>> 
10402_3-Useless: []
10402_3-Constancy: [(15, 0), (5, 0), (3, 0)]
10402_3-ContextAliasing: []

.....
-----
Block: 10256_13
10256_13Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_13-Stack size: 27 
10256_13-Equals Mem:<< []>> 
10256_13-NonEquals Mem: << [<6,1>]>> 
10256_13-Equals Sto:<< []>> 
10256_13-NonEquals Sto: << []>> 
10256_13-Useless: []
10256_13-Constancy: [(22, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
10256_13-ContextAliasing: [(2, 26)]

.....
-----
Block: 12101_26
12101_26Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_26-Stack size: 29 
12101_26-Equals Mem:<< []>> 
12101_26-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_26-Equals Sto:<< []>> 
12101_26-NonEquals Sto: << []>> 
12101_26-Useless: []
12101_26-Constancy: [(24, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
12101_26-ContextAliasing: [(4, 27)]

.....
-----
Block: 12125_26
12125_26Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_26-Stack size: 33 
12125_26-Equals Mem:<< []>> 
12125_26-NonEquals Mem: << [<11,5>]>> 
12125_26-Equals Sto:<< []>> 
12125_26-NonEquals Sto: << []>> 
12125_26-Useless: []
12125_26-Constancy: [(28, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_26-ContextAliasing: [(8, 27)]

.....
-----
Block: 12699_79
12699_79Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_79-Stack size: 32 
12699_79-Equals Mem:<< []>> 
12699_79-NonEquals Mem: << [<5,8>]>> 
12699_79-Equals Sto:<< []>> 
12699_79-NonEquals Sto: << []>> 
12699_79-Useless: []
12699_79-Constancy: [(27, 0), (17, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
12699_79-ContextAliasing: []

.....
-----
Block: 12970_4
12970_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12970_4-Stack size: 25 
12970_4-Equals Mem:<< []>> 
12970_4-NonEquals Mem: << [<5,8>]>> 
12970_4-Equals Sto:<< []>> 
12970_4-NonEquals Sto: << []>> 
12970_4-Useless: []
12970_4-Constancy: [(20, 0), (10, 0), (1, 0)]
12970_4-ContextAliasing: [(4, 22)]

.....
-----
Block: 10642_1
10642_1Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x29b6', 'SWAP2', 'SWAP1', 'PUSH2 0x32be', 'JUMP']>> 
10642_1-Stack size: 25 
10642_1-Equals Mem:<< [<18,6>]>> 
10642_1-NonEquals Mem: << []>> 
10642_1-Equals Sto:<< []>> 
10642_1-NonEquals Sto: << []>> 
10642_1-Useless: []
10642_1-Constancy: [(20, 0), (10, 0)]
10642_1-ContextAliasing: []

.....
-----
Block: 12970_3
12970_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12970_3-Stack size: 25 
12970_3-Equals Mem:<< []>> 
12970_3-NonEquals Mem: << [<5,8>]>> 
12970_3-Equals Sto:<< []>> 
12970_3-NonEquals Sto: << []>> 
12970_3-Useless: []
12970_3-Constancy: [(20, 0), (10, 0)]
12970_3-ContextAliasing: [(4, 22)]

.....
-----
Block: 7491_6
7491_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491_6-Stack size: 25 
7491_6-Equals Mem:<< []>> 
7491_6-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491_6-Equals Sto:<< []>> 
7491_6-NonEquals Sto: << []>> 
7491_6-Useless: []
7491_6-Constancy: [(20, 0), (10, 0), (1, 0)]
7491_6-ContextAliasing: []

.....
-----
Block: 7589_6
7589_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589_6-Stack size: 25 
7589_6-Equals Mem:<< []>> 
7589_6-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589_6-Equals Sto:<< []>> 
7589_6-NonEquals Sto: << []>> 
7589_6-Useless: []
7589_6-Constancy: [(20, 0), (10, 0), (1, 0)]
7589_6-ContextAliasing: []

.....
-----
Block: 7671_5
7671_5Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671_5-Stack size: 25 
7671_5-Equals Mem:<< [<12,27>, <17,30>]>> 
7671_5-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671_5-Equals Sto:<< []>> 
7671_5-NonEquals Sto: << []>> 
7671_5-Useless: []
7671_5-Constancy: [(20, 0), (10, 0), (1, 0)]
7671_5-ContextAliasing: []

.....
-----
Block: 10772_1
10772_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x2a68', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x32d9', 'JUMP']>> 
10772_1-Stack size: 21 
10772_1-Equals Mem:<< []>> 
10772_1-NonEquals Mem: << [<7,2>]>> 
10772_1-Equals Sto:<< []>> 
10772_1-NonEquals Sto: << []>> 
10772_1-Useless: []
10772_1-Constancy: [(16, 0), (6, 0)]
10772_1-ContextAliasing: []

.....
-----
Block: 13017_1
13017_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
13017_1-Stack size: 30 
13017_1-Equals Mem:<< []>> 
13017_1-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
13017_1-Equals Sto:<< []>> 
13017_1-NonEquals Sto: << []>> 
13017_1-Useless: []
13017_1-Constancy: [(25, 0), (15, 0), (4, 0)]
13017_1-ContextAliasing: [(9, 26)]

.....
-----
Block: 13067_1
13067_1Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x3302', 'JUMP']>> 
13067_1-Stack size: 36 
13067_1-Equals Mem:<< []>> 
13067_1-NonEquals Mem: << [<9,1>]>> 
13067_1-Equals Sto:<< []>> 
13067_1-NonEquals Sto: << []>> 
13067_1-Useless: []
13067_1-Constancy: [(31, 0), (21, 0), (10, 0), (5, 0), (3, 32)]
13067_1-ContextAliasing: [(15, 26)]

.....
-----
Block: 10402_4
10402_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2805', 'JUMP']>> 
10402_4-Stack size: 22 
10402_4-Equals Mem:<< [<11,6>]>> 
10402_4-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
10402_4-Equals Sto:<< []>> 
10402_4-NonEquals Sto: << []>> 
10402_4-Useless: []
10402_4-Constancy: [(17, 0), (7, 0), (3, 0)]
10402_4-ContextAliasing: []

.....
-----
Block: 10256_12
10256_12Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_12-Stack size: 29 
10256_12-Equals Mem:<< []>> 
10256_12-NonEquals Mem: << [<6,1>]>> 
10256_12-Equals Sto:<< []>> 
10256_12-NonEquals Sto: << []>> 
10256_12-Useless: []
10256_12-Constancy: [(24, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
10256_12-ContextAliasing: [(2, 28)]

.....
-----
Block: 12101_25
12101_25Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_25-Stack size: 31 
12101_25-Equals Mem:<< []>> 
12101_25-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_25-Equals Sto:<< []>> 
12101_25-NonEquals Sto: << []>> 
12101_25-Useless: []
12101_25-Constancy: [(26, 0), (16, 0), (12, 0), (8, 0), (3, 0)]
12101_25-ContextAliasing: [(4, 29)]

.....
-----
Block: 12125_25
12125_25Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_25-Stack size: 35 
12125_25-Equals Mem:<< []>> 
12125_25-NonEquals Mem: << [<11,5>]>> 
12125_25-Equals Sto:<< []>> 
12125_25-NonEquals Sto: << []>> 
12125_25-Useless: []
12125_25-Constancy: [(30, 0), (20, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_25-ContextAliasing: [(8, 29)]

.....
-----
Block: 12699_78
12699_78Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_78-Stack size: 34 
12699_78-Equals Mem:<< []>> 
12699_78-NonEquals Mem: << [<5,8>]>> 
12699_78-Equals Sto:<< []>> 
12699_78-NonEquals Sto: << []>> 
12699_78-Useless: []
12699_78-Constancy: [(29, 0), (19, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
12699_78-ContextAliasing: []

.....
-----
Block: 11031_9
11031_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_9-Stack size: 23 
11031_9-Equals Mem:<< [<11,6>]>> 
11031_9-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_9-Equals Sto:<< []>> 
11031_9-NonEquals Sto: << []>> 
11031_9-Useless: []
11031_9-Constancy: [(18, 0), (8, 0), (3, 0)]
11031_9-ContextAliasing: []

.....
-----
Block: 12065_10
12065_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_10-Stack size: 30 
12065_10-Equals Mem:<< []>> 
12065_10-NonEquals Mem: << [<6,1>]>> 
12065_10-Equals Sto:<< []>> 
12065_10-NonEquals Sto: << []>> 
12065_10-Useless: []
12065_10-Constancy: [(25, 0), (15, 0), (10, 0), (6, 0), (1, 0)]
12065_10-ContextAliasing: [(2, 29)]

.....
-----
Block: 12101_24
12101_24Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_24-Stack size: 32 
12101_24-Equals Mem:<< []>> 
12101_24-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_24-Equals Sto:<< []>> 
12101_24-NonEquals Sto: << []>> 
12101_24-Useless: []
12101_24-Constancy: [(27, 0), (17, 0), (12, 0), (8, 0), (3, 0)]
12101_24-ContextAliasing: [(4, 30)]

.....
-----
Block: 12125_24
12125_24Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_24-Stack size: 36 
12125_24-Equals Mem:<< []>> 
12125_24-NonEquals Mem: << [<11,5>]>> 
12125_24-Equals Sto:<< []>> 
12125_24-NonEquals Sto: << []>> 
12125_24-Useless: []
12125_24-Constancy: [(31, 0), (21, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_24-ContextAliasing: [(8, 30)]

.....
-----
Block: 12749_39
12749_39Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_39-Stack size: 34 
12749_39-Equals Mem:<< []>> 
12749_39-NonEquals Mem: << [<4,7>]>> 
12749_39-Equals Sto:<< []>> 
12749_39-NonEquals Sto: << []>> 
12749_39-Useless: []
12749_39-Constancy: [(29, 0), (19, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_39-ContextAliasing: []

.....
-----
Block: 11031_10
11031_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_10-Stack size: 24 
11031_10-Equals Mem:<< [<11,6>]>> 
11031_10-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_10-Equals Sto:<< []>> 
11031_10-NonEquals Sto: << []>> 
11031_10-Useless: []
11031_10-Constancy: [(19, 0), (9, 0), (3, 0)]
11031_10-ContextAliasing: []

.....
-----
Block: 12065_9
12065_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_9-Stack size: 31 
12065_9-Equals Mem:<< []>> 
12065_9-NonEquals Mem: << [<6,1>]>> 
12065_9-Equals Sto:<< []>> 
12065_9-NonEquals Sto: << []>> 
12065_9-Useless: []
12065_9-Constancy: [(26, 0), (16, 0), (10, 0), (6, 0), (1, 0)]
12065_9-ContextAliasing: [(2, 30)]

.....
-----
Block: 12101_23
12101_23Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_23-Stack size: 33 
12101_23-Equals Mem:<< []>> 
12101_23-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_23-Equals Sto:<< []>> 
12101_23-NonEquals Sto: << []>> 
12101_23-Useless: []
12101_23-Constancy: [(28, 0), (18, 0), (12, 0), (8, 0), (3, 0)]
12101_23-ContextAliasing: [(4, 31)]

.....
-----
Block: 12125_23
12125_23Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_23-Stack size: 37 
12125_23-Equals Mem:<< []>> 
12125_23-NonEquals Mem: << [<11,5>]>> 
12125_23-Equals Sto:<< []>> 
12125_23-NonEquals Sto: << []>> 
12125_23-Useless: []
12125_23-Constancy: [(32, 0), (22, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_23-ContextAliasing: [(8, 31)]

.....
-----
Block: 12749_37
12749_37Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_37-Stack size: 35 
12749_37-Equals Mem:<< []>> 
12749_37-NonEquals Mem: << [<4,7>]>> 
12749_37-Equals Sto:<< []>> 
12749_37-NonEquals Sto: << []>> 
12749_37-Useless: []
12749_37-Constancy: [(30, 0), (20, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_37-ContextAliasing: []

.....
-----
Block: 12699_75
12699_75Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_75-Stack size: 28 
12699_75-Equals Mem:<< []>> 
12699_75-NonEquals Mem: << [<5,8>]>> 
12699_75-Equals Sto:<< []>> 
12699_75-NonEquals Sto: << []>> 
12699_75-Useless: []
12699_75-Constancy: [(23, 0), (13, 0), (6, 0)]
12699_75-ContextAliasing: []

.....
-----
Block: 12699_74
12699_74Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_74-Stack size: 27 
12699_74-Equals Mem:<< []>> 
12699_74-NonEquals Mem: << [<5,8>]>> 
12699_74-Equals Sto:<< []>> 
12699_74-NonEquals Sto: << []>> 
12699_74-Useless: []
12699_74-Constancy: [(22, 0), (12, 0), (5, 0)]
12699_74-ContextAliasing: []

.....
-----
Block: 7491_5
7491_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491_5-Stack size: 29 
7491_5-Equals Mem:<< []>> 
7491_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491_5-Equals Sto:<< []>> 
7491_5-NonEquals Sto: << []>> 
7491_5-Useless: []
7491_5-Constancy: [(24, 0), (1, 0)]
7491_5-ContextAliasing: []

.....
-----
Block: 7589_5
7589_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589_5-Stack size: 29 
7589_5-Equals Mem:<< []>> 
7589_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589_5-Equals Sto:<< []>> 
7589_5-NonEquals Sto: << []>> 
7589_5-Useless: []
7589_5-Constancy: [(24, 0), (1, 0)]
7589_5-ContextAliasing: []

.....
-----
Block: 7671_6
7671_6Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671_6-Stack size: 29 
7671_6-Equals Mem:<< [<12,27>, <17,30>]>> 
7671_6-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671_6-Equals Sto:<< []>> 
7671_6-NonEquals Sto: << []>> 
7671_6-Useless: []
7671_6-Constancy: [(24, 0), (1, 0)]
7671_6-ContextAliasing: []

.....
-----
Block: 11279_1
11279_1Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2c34', 'SWAP2', 'SWAP1', 'PUSH2 0x3348', 'JUMP']>> 
11279_1-Stack size: 30 
11279_1-Equals Mem:<< [<19,7>]>> 
11279_1-NonEquals Mem: << []>> 
11279_1-Equals Sto:<< []>> 
11279_1-NonEquals Sto: << []>> 
11279_1-Useless: []
11279_1-Constancy: [(25, 0)]
11279_1-ContextAliasing: []

.....
-----
Block: 12699_76
12699_76Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_76-Stack size: 33 
12699_76-Equals Mem:<< []>> 
12699_76-NonEquals Mem: << [<5,8>]>> 
12699_76-Equals Sto:<< []>> 
12699_76-NonEquals Sto: << []>> 
12699_76-Useless: []
12699_76-Constancy: [(28, 0), (18, 0), (12, 0), (6, 0), (5, 0)]
12699_76-ContextAliasing: []

.....
-----
Block: 12749_38
12749_38Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_38-Stack size: 33 
12749_38-Equals Mem:<< []>> 
12749_38-NonEquals Mem: << [<4,7>]>> 
12749_38-Equals Sto:<< []>> 
12749_38-NonEquals Sto: << []>> 
12749_38-Useless: []
12749_38-Constancy: [(28, 0), (18, 0), (12, 0), (6, 0), (0, 0)]
12749_38-ContextAliasing: []

.....
-----
Block: 10950_9
10950_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_9-Stack size: 28 
10950_9-Equals Mem:<< []>> 
10950_9-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_9-Equals Sto:<< []>> 
10950_9-NonEquals Sto: << []>> 
10950_9-Useless: []
10950_9-Constancy: [(23, 0), (13, 0), (7, 0), (1, 0)]
10950_9-ContextAliasing: []

.....
-----
Block: 12699_77
12699_77Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_77-Stack size: 32 
12699_77-Equals Mem:<< []>> 
12699_77-NonEquals Mem: << [<5,8>]>> 
12699_77-Equals Sto:<< []>> 
12699_77-NonEquals Sto: << []>> 
12699_77-Useless: []
12699_77-Constancy: [(27, 0), (17, 0), (12, 0), (6, 0), (5, 0)]
12699_77-ContextAliasing: []

.....
-----
Block: 12749_40
12749_40Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_40-Stack size: 32 
12749_40-Equals Mem:<< []>> 
12749_40-NonEquals Mem: << [<4,7>]>> 
12749_40-Equals Sto:<< []>> 
12749_40-NonEquals Sto: << []>> 
12749_40-Useless: []
12749_40-Constancy: [(27, 0), (17, 0), (12, 0), (6, 0), (0, 0)]
12749_40-ContextAliasing: []

.....
-----
Block: 10950_10
10950_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_10-Stack size: 27 
10950_10-Equals Mem:<< []>> 
10950_10-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_10-Equals Sto:<< []>> 
10950_10-NonEquals Sto: << []>> 
10950_10-Useless: []
10950_10-Constancy: [(22, 0), (12, 0), (7, 0), (1, 0)]
10950_10-ContextAliasing: []

.....
-----
Block: 9470_0
9470_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
9470_0-Stack size: 12 
9470_0-Equals Mem:<< []>> 
9470_0-NonEquals Mem: << [<11,14>]>> 
9470_0-Equals Sto:<< []>> 
9470_0-NonEquals Sto: << []>> 
9470_0-Useless: []
9470_0-Constancy: [(7, 0)]
9470_0-ContextAliasing: []

.....
-----
Block: 12699_73
12699_73Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_73-Stack size: 16 
12699_73-Equals Mem:<< []>> 
12699_73-NonEquals Mem: << [<5,8>]>> 
12699_73-Equals Sto:<< []>> 
12699_73-NonEquals Sto: << []>> 
12699_73-Useless: []
12699_73-Constancy: [(11, 0)]
12699_73-ContextAliasing: []

.....
-----
Block: 9546_0
9546_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9546_0-Stack size: 12 
9546_0-Equals Mem:<< []>> 
9546_0-NonEquals Mem: << [<11,14>]>> 
9546_0-Equals Sto:<< []>> 
9546_0-NonEquals Sto: << []>> 
9546_0-Useless: []
9546_0-Constancy: [(7, 0)]
9546_0-ContextAliasing: []

.....
-----
Block: 11774_0
11774_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2e22', 'SWAP2', 'SWAP1', 'PUSH2 0x320b', 'JUMP']>> 
11774_0-Stack size: 18 
11774_0-Equals Mem:<< [<18,6>]>> 
11774_0-NonEquals Mem: << []>> 
11774_0-Equals Sto:<< []>> 
11774_0-NonEquals Sto: << []>> 
11774_0-Useless: []
11774_0-Constancy: [(13, 0), (5, 0), (4, 0)]
11774_0-ContextAliasing: []

.....
-----
Block: 11031_8
11031_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_8-Stack size: 18 
11031_8-Equals Mem:<< [<11,6>]>> 
11031_8-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_8-Equals Sto:<< []>> 
11031_8-NonEquals Sto: << []>> 
11031_8-Useless: []
11031_8-Constancy: [(13, 0), (5, 0), (3, 0)]
11031_8-ContextAliasing: []

.....
-----
Block: 12065_8
12065_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_8-Stack size: 25 
12065_8-Equals Mem:<< []>> 
12065_8-NonEquals Mem: << [<6,1>]>> 
12065_8-Equals Sto:<< []>> 
12065_8-NonEquals Sto: << []>> 
12065_8-Useless: []
12065_8-Constancy: [(20, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
12065_8-ContextAliasing: [(2, 24)]

.....
-----
Block: 12101_22
12101_22Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_22-Stack size: 27 
12101_22-Equals Mem:<< []>> 
12101_22-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_22-Equals Sto:<< []>> 
12101_22-NonEquals Sto: << []>> 
12101_22-Useless: []
12101_22-Constancy: [(22, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
12101_22-ContextAliasing: [(4, 25)]

.....
-----
Block: 12125_22
12125_22Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_22-Stack size: 31 
12125_22-Equals Mem:<< []>> 
12125_22-NonEquals Mem: << [<11,5>]>> 
12125_22-Equals Sto:<< []>> 
12125_22-NonEquals Sto: << []>> 
12125_22-Useless: []
12125_22-Constancy: [(26, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_22-ContextAliasing: [(8, 25)]

.....
-----
Block: 12749_35
12749_35Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_35-Stack size: 29 
12749_35-Equals Mem:<< []>> 
12749_35-NonEquals Mem: << [<4,7>]>> 
12749_35-Equals Sto:<< []>> 
12749_35-NonEquals Sto: << []>> 
12749_35-Useless: []
12749_35-Constancy: [(24, 0), (16, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_35-ContextAliasing: []

.....
-----
Block: 11421_5
11421_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_5-Stack size: 19 
11421_5-Equals Mem:<< []>> 
11421_5-NonEquals Mem: << [<6,1>]>> 
11421_5-Equals Sto:<< []>> 
11421_5-NonEquals Sto: << []>> 
11421_5-Useless: []
11421_5-Constancy: [(14, 0), (6, 0), (2, 0)]
11421_5-ContextAliasing: []

.....
-----
Block: 11459_5
11459_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_5-Stack size: 19 
11459_5-Equals Mem:<< []>> 
11459_5-NonEquals Mem: << [<6,1>]>> 
11459_5-Equals Sto:<< []>> 
11459_5-NonEquals Sto: << []>> 
11459_5-Useless: []
11459_5-Constancy: [(14, 0), (6, 0), (2, 0)]
11459_5-ContextAliasing: []

.....
-----
Block: 10256_11
10256_11Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_11-Stack size: 25 
10256_11-Equals Mem:<< []>> 
10256_11-NonEquals Mem: << [<6,1>]>> 
10256_11-Equals Sto:<< []>> 
10256_11-NonEquals Sto: << []>> 
10256_11-Useless: []
10256_11-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
10256_11-ContextAliasing: [(2, 24)]

.....
-----
Block: 12101_21
12101_21Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_21-Stack size: 27 
12101_21-Equals Mem:<< []>> 
12101_21-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_21-Equals Sto:<< []>> 
12101_21-NonEquals Sto: << []>> 
12101_21-Useless: []
12101_21-Constancy: [(22, 0), (14, 0), (10, 0), (3, 0)]
12101_21-ContextAliasing: [(4, 25)]

.....
-----
Block: 12125_21
12125_21Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_21-Stack size: 31 
12125_21-Equals Mem:<< []>> 
12125_21-NonEquals Mem: << [<11,5>]>> 
12125_21-Equals Sto:<< []>> 
12125_21-NonEquals Sto: << []>> 
12125_21-Useless: []
12125_21-Constancy: [(26, 0), (18, 0), (14, 0), (7, 0), (3, 0), (2, 32)]
12125_21-ContextAliasing: [(8, 25)]

.....
-----
Block: 12699_71
12699_71Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_71-Stack size: 30 
12699_71-Equals Mem:<< []>> 
12699_71-NonEquals Mem: << [<5,8>]>> 
12699_71-Equals Sto:<< []>> 
12699_71-NonEquals Sto: << []>> 
12699_71-Useless: []
12699_71-Constancy: [(25, 0), (17, 0), (13, 0), (6, 0), (5, 0)]
12699_71-ContextAliasing: []

.....
-----
Block: 11542_5
11542_5Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_5-Stack size: 20 
11542_5-Equals Mem:<< [<12,29>]>> 
11542_5-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_5-Equals Sto:<< [<24,31>]>> 
11542_5-NonEquals Sto: << []>> 
11542_5-Useless: []
11542_5-Constancy: [(15, 0), (7, 0), (3, 0)]
11542_5-ContextAliasing: []

.....
-----
Block: 12699_70
12699_70Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_70-Stack size: 29 
12699_70-Equals Mem:<< []>> 
12699_70-NonEquals Mem: << [<5,8>]>> 
12699_70-Equals Sto:<< []>> 
12699_70-NonEquals Sto: << []>> 
12699_70-Useless: []
12699_70-Constancy: [(24, 0), (16, 0), (12, 0), (6, 0), (5, 0)]
12699_70-ContextAliasing: []

.....
-----
Block: 10324_6
10324_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_6-Stack size: 24 
10324_6-Equals Mem:<< []>> 
10324_6-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_6-Equals Sto:<< []>> 
10324_6-NonEquals Sto: << []>> 
10324_6-Useless: []
10324_6-Constancy: [(19, 0), (11, 0), (7, 0), (1, 0)]
10324_6-ContextAliasing: []

.....
-----
Block: 11588_5
11588_5Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_5-Stack size: 20 
11588_5-Equals Mem:<< []>> 
11588_5-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_5-Equals Sto:<< []>> 
11588_5-NonEquals Sto: << []>> 
11588_5-Useless: []
11588_5-Constancy: [(15, 0), (7, 0), (3, 0)]
11588_5-ContextAliasing: []

.....
-----
Block: 11893_0
11893_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x2ed1', 'JUMPI']>> 
11893_0-Stack size: 15 
11893_0-Equals Mem:<< [<14,26>]>> 
11893_0-NonEquals Mem: << [<21,14>, <21,26>]>> 
11893_0-Equals Sto:<< []>> 
11893_0-NonEquals Sto: << []>> 
11893_0-Useless: []
11893_0-Constancy: [(10, 0), (2, 0)]
11893_0-ContextAliasing: []

.....
-----
Block: 12699_72
12699_72Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_72-Stack size: 27 
12699_72-Equals Mem:<< []>> 
12699_72-NonEquals Mem: << [<5,8>]>> 
12699_72-Equals Sto:<< []>> 
12699_72-NonEquals Sto: << []>> 
12699_72-Useless: []
12699_72-Constancy: [(22, 0), (14, 0), (12, 0), (6, 0), (5, 0)]
12699_72-ContextAliasing: []

.....
-----
Block: 12749_36
12749_36Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_36-Stack size: 27 
12749_36-Equals Mem:<< []>> 
12749_36-NonEquals Mem: << [<4,7>]>> 
12749_36-Equals Sto:<< []>> 
12749_36-NonEquals Sto: << []>> 
12749_36-Useless: []
12749_36-Constancy: [(22, 0), (14, 0), (12, 0), (6, 0), (0, 0)]
12749_36-ContextAliasing: []

.....
-----
Block: 10950_8
10950_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_8-Stack size: 22 
10950_8-Equals Mem:<< []>> 
10950_8-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_8-Equals Sto:<< []>> 
10950_8-NonEquals Sto: << []>> 
10950_8-Useless: []
10950_8-Constancy: [(17, 0), (9, 0), (7, 0), (1, 0)]
10950_8-ContextAliasing: []

.....
-----
Block: 9590_0
9590_0Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SWAP1', 'SWAP4', 'DIV', 'DUP4', 'AND', 'ISZERO', 'SWAP3', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x25c5', 'JUMPI']>> 
9590_0-Stack size: 11 
9590_0-Equals Mem:<< []>> 
9590_0-NonEquals Mem: << [<13,16>]>> 
9590_0-Equals Sto:<< []>> 
9590_0-NonEquals Sto: << [<2,20>]>> 
9590_0-Useless: []
9590_0-Constancy: [(6, 0)]
9590_0-ContextAliasing: []

.....
-----
Block: 9640_0
9640_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9640_0-Stack size: 14 
9640_0-Equals Mem:<< []>> 
9640_0-NonEquals Mem: << [<11,14>]>> 
9640_0-Equals Sto:<< []>> 
9640_0-NonEquals Sto: << []>> 
9640_0-Useless: []
9640_0-Constancy: [(9, 0), (1, 0)]
9640_0-ContextAliasing: []

.....
-----
Block: 9669_0
9669_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x2605', 'JUMPI']>> 
9669_0-Stack size: 14 
9669_0-Equals Mem:<< []>> 
9669_0-NonEquals Mem: << [<11,14>]>> 
9669_0-Equals Sto:<< []>> 
9669_0-NonEquals Sto: << []>> 
9669_0-Useless: []
9669_0-Constancy: [(9, 0), (1, 0)]
9669_0-ContextAliasing: []

.....
-----
Block: 9705_0
9705_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
9705_0-Stack size: 14 
9705_0-Equals Mem:<< []>> 
9705_0-NonEquals Mem: << [<11,14>]>> 
9705_0-Equals Sto:<< []>> 
9705_0-NonEquals Sto: << []>> 
9705_0-Useless: []
9705_0-Constancy: [(9, 0)]
9705_0-ContextAliasing: []

.....
-----
Block: 9758_0
9758_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2645', 'JUMPI']>> 
9758_0-Stack size: 14 
9758_0-Equals Mem:<< []>> 
9758_0-NonEquals Mem: << [<10,13>]>> 
9758_0-Equals Sto:<< []>> 
9758_0-NonEquals Sto: << []>> 
9758_0-Useless: []
9758_0-Constancy: [(9, 0), (0, 0)]
9758_0-ContextAliasing: []

.....
-----
Block: 11031_7
11031_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_7-Stack size: 17 
11031_7-Equals Mem:<< [<11,6>]>> 
11031_7-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_7-Equals Sto:<< []>> 
11031_7-NonEquals Sto: << []>> 
11031_7-Useless: []
11031_7-Constancy: [(12, 0), (3, 0)]
11031_7-ContextAliasing: []

.....
-----
Block: 12065_7
12065_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_7-Stack size: 24 
12065_7-Equals Mem:<< []>> 
12065_7-NonEquals Mem: << [<6,1>]>> 
12065_7-Equals Sto:<< []>> 
12065_7-NonEquals Sto: << []>> 
12065_7-Useless: []
12065_7-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
12065_7-ContextAliasing: [(2, 23)]

.....
-----
Block: 12101_20
12101_20Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_20-Stack size: 26 
12101_20-Equals Mem:<< []>> 
12101_20-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_20-Equals Sto:<< []>> 
12101_20-NonEquals Sto: << []>> 
12101_20-Useless: []
12101_20-Constancy: [(21, 0), (12, 0), (8, 0), (3, 0)]
12101_20-ContextAliasing: [(4, 24)]

.....
-----
Block: 12125_20
12125_20Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_20-Stack size: 30 
12125_20-Equals Mem:<< []>> 
12125_20-NonEquals Mem: << [<11,5>]>> 
12125_20-Equals Sto:<< []>> 
12125_20-NonEquals Sto: << []>> 
12125_20-Useless: []
12125_20-Constancy: [(25, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_20-ContextAliasing: [(8, 24)]

.....
-----
Block: 12749_33
12749_33Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_33-Stack size: 28 
12749_33-Equals Mem:<< []>> 
12749_33-NonEquals Mem: << [<4,7>]>> 
12749_33-Equals Sto:<< []>> 
12749_33-NonEquals Sto: << []>> 
12749_33-Useless: []
12749_33-Constancy: [(23, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_33-ContextAliasing: []

.....
-----
Block: 12699_68
12699_68Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_68-Stack size: 20 
12699_68-Equals Mem:<< []>> 
12699_68-NonEquals Mem: << [<5,8>]>> 
12699_68-Equals Sto:<< []>> 
12699_68-NonEquals Sto: << []>> 
12699_68-Useless: []
12699_68-Constancy: [(15, 0)]
12699_68-ContextAliasing: []

.....
-----
Block: 12749_32
12749_32Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_32-Stack size: 18 
12749_32-Equals Mem:<< []>> 
12749_32-NonEquals Mem: << [<4,7>]>> 
12749_32-Equals Sto:<< []>> 
12749_32-NonEquals Sto: << []>> 
12749_32-Useless: []
12749_32-Constancy: [(13, 0), (0, 0)]
12749_32-ContextAliasing: []

.....
-----
Block: 12699_67
12699_67Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_67-Stack size: 22 
12699_67-Equals Mem:<< []>> 
12699_67-NonEquals Mem: << [<5,8>]>> 
12699_67-Equals Sto:<< []>> 
12699_67-NonEquals Sto: << []>> 
12699_67-Useless: []
12699_67-Constancy: [(17, 0), (6, 32), (5, 0)]
12699_67-ContextAliasing: []

.....
-----
Block: 12699_66
12699_66Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_66-Stack size: 20 
12699_66-Equals Mem:<< []>> 
12699_66-NonEquals Mem: << [<5,8>]>> 
12699_66-Equals Sto:<< []>> 
12699_66-NonEquals Sto: << []>> 
12699_66-Useless: []
12699_66-Constancy: [(15, 0)]
12699_66-ContextAliasing: []

.....
-----
Block: 12749_31
12749_31Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_31-Stack size: 18 
12749_31-Equals Mem:<< []>> 
12749_31-NonEquals Mem: << [<4,7>]>> 
12749_31-Equals Sto:<< []>> 
12749_31-NonEquals Sto: << []>> 
12749_31-Useless: []
12749_31-Constancy: [(13, 0), (0, 0)]
12749_31-ContextAliasing: []

.....
-----
Block: 12699_65
12699_65Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_65-Stack size: 22 
12699_65-Equals Mem:<< []>> 
12699_65-NonEquals Mem: << [<5,8>]>> 
12699_65-Equals Sto:<< []>> 
12699_65-NonEquals Sto: << []>> 
12699_65-Useless: []
12699_65-Constancy: [(17, 0), (5, 0)]
12699_65-ContextAliasing: []

.....
-----
Block: 12699_64
12699_64Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_64-Stack size: 20 
12699_64-Equals Mem:<< []>> 
12699_64-NonEquals Mem: << [<5,8>]>> 
12699_64-Equals Sto:<< []>> 
12699_64-NonEquals Sto: << []>> 
12699_64-Useless: []
12699_64-Constancy: [(15, 0)]
12699_64-ContextAliasing: []

.....
-----
Block: 12749_30
12749_30Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_30-Stack size: 18 
12749_30-Equals Mem:<< []>> 
12749_30-NonEquals Mem: << [<4,7>]>> 
12749_30-Equals Sto:<< []>> 
12749_30-NonEquals Sto: << []>> 
12749_30-Useless: []
12749_30-Constancy: [(13, 0), (0, 0)]
12749_30-ContextAliasing: []

.....
-----
Block: 12699_63
12699_63Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_63-Stack size: 22 
12699_63-Equals Mem:<< []>> 
12699_63-NonEquals Mem: << [<5,8>]>> 
12699_63-Equals Sto:<< []>> 
12699_63-NonEquals Sto: << []>> 
12699_63-Useless: []
12699_63-Constancy: [(17, 0), (5, 0)]
12699_63-ContextAliasing: []

.....
-----
Block: 11421_4
11421_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_4-Stack size: 18 
11421_4-Equals Mem:<< []>> 
11421_4-NonEquals Mem: << [<6,1>]>> 
11421_4-Equals Sto:<< []>> 
11421_4-NonEquals Sto: << []>> 
11421_4-Useless: []
11421_4-Constancy: [(13, 0)]
11421_4-ContextAliasing: []

.....
-----
Block: 11459_4
11459_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_4-Stack size: 18 
11459_4-Equals Mem:<< []>> 
11459_4-NonEquals Mem: << [<6,1>]>> 
11459_4-Equals Sto:<< []>> 
11459_4-NonEquals Sto: << []>> 
11459_4-Useless: []
11459_4-Constancy: [(13, 0)]
11459_4-ContextAliasing: []

.....
-----
Block: 10256_10
10256_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_10-Stack size: 24 
10256_10-Equals Mem:<< []>> 
10256_10-NonEquals Mem: << [<6,1>]>> 
10256_10-Equals Sto:<< []>> 
10256_10-NonEquals Sto: << []>> 
10256_10-Useless: []
10256_10-Constancy: [(19, 0), (1, 0)]
10256_10-ContextAliasing: [(2, 23)]

.....
-----
Block: 12101_18
12101_18Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_18-Stack size: 26 
12101_18-Equals Mem:<< []>> 
12101_18-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_18-Equals Sto:<< []>> 
12101_18-NonEquals Sto: << []>> 
12101_18-Useless: []
12101_18-Constancy: [(21, 0), (3, 0)]
12101_18-ContextAliasing: [(4, 24)]

.....
-----
Block: 12125_18
12125_18Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_18-Stack size: 30 
12125_18-Equals Mem:<< []>> 
12125_18-NonEquals Mem: << [<11,5>]>> 
12125_18-Equals Sto:<< []>> 
12125_18-NonEquals Sto: << []>> 
12125_18-Useless: []
12125_18-Constancy: [(25, 0), (7, 0), (3, 0), (2, 32)]
12125_18-ContextAliasing: [(8, 24)]

.....
-----
Block: 12699_55
12699_55Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_55-Stack size: 29 
12699_55-Equals Mem:<< []>> 
12699_55-NonEquals Mem: << [<5,8>]>> 
12699_55-Equals Sto:<< []>> 
12699_55-NonEquals Sto: << []>> 
12699_55-Useless: []
12699_55-Constancy: [(24, 0), (6, 0), (5, 0)]
12699_55-ContextAliasing: []

.....
-----
Block: 11542_4
11542_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_4-Stack size: 19 
11542_4-Equals Mem:<< [<12,29>]>> 
11542_4-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_4-Equals Sto:<< [<24,31>]>> 
11542_4-NonEquals Sto: << []>> 
11542_4-Useless: []
11542_4-Constancy: [(14, 0)]
11542_4-ContextAliasing: []

.....
-----
Block: 12699_54
12699_54Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_54-Stack size: 28 
12699_54-Equals Mem:<< []>> 
12699_54-NonEquals Mem: << [<5,8>]>> 
12699_54-Equals Sto:<< []>> 
12699_54-NonEquals Sto: << []>> 
12699_54-Useless: []
12699_54-Constancy: [(23, 0), (6, 0), (5, 0)]
12699_54-ContextAliasing: []

.....
-----
Block: 10324_5
10324_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_5-Stack size: 23 
10324_5-Equals Mem:<< []>> 
10324_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_5-Equals Sto:<< []>> 
10324_5-NonEquals Sto: << []>> 
10324_5-Useless: []
10324_5-Constancy: [(18, 0), (1, 0)]
10324_5-ContextAliasing: []

.....
-----
Block: 11588_4
11588_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_4-Stack size: 19 
11588_4-Equals Mem:<< []>> 
11588_4-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_4-Equals Sto:<< []>> 
11588_4-NonEquals Sto: << []>> 
11588_4-Useless: []
11588_4-Constancy: [(14, 0)]
11588_4-ContextAliasing: []

.....
-----
Block: 12699_53
12699_53Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_53-Stack size: 19 
12699_53-Equals Mem:<< []>> 
12699_53-NonEquals Mem: << [<5,8>]>> 
12699_53-Equals Sto:<< []>> 
12699_53-NonEquals Sto: << []>> 
12699_53-Useless: []
12699_53-Constancy: [(14, 0)]
12699_53-ContextAliasing: []

.....
-----
Block: 12699_69
12699_69Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_69-Stack size: 26 
12699_69-Equals Mem:<< []>> 
12699_69-NonEquals Mem: << [<5,8>]>> 
12699_69-Equals Sto:<< []>> 
12699_69-NonEquals Sto: << []>> 
12699_69-Useless: []
12699_69-Constancy: [(21, 0), (12, 0), (6, 0), (5, 0)]
12699_69-ContextAliasing: []

.....
-----
Block: 12749_34
12749_34Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_34-Stack size: 26 
12749_34-Equals Mem:<< []>> 
12749_34-NonEquals Mem: << [<4,7>]>> 
12749_34-Equals Sto:<< []>> 
12749_34-NonEquals Sto: << []>> 
12749_34-Useless: []
12749_34-Constancy: [(21, 0), (12, 0), (6, 0), (0, 0)]
12749_34-ContextAliasing: []

.....
-----
Block: 10950_7
10950_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_7-Stack size: 21 
10950_7-Equals Mem:<< []>> 
10950_7-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_7-Equals Sto:<< []>> 
10950_7-NonEquals Sto: << []>> 
10950_7-Useless: []
10950_7-Constancy: [(16, 0), (7, 0), (1, 0)]
10950_7-ContextAliasing: []

.....
-----
Block: 9978_0
9978_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2722', 'JUMPI']>> 
9978_0-Stack size: 14 
9978_0-Equals Mem:<< []>> 
9978_0-NonEquals Mem: << [<11,14>]>> 
9978_0-Equals Sto:<< []>> 
9978_0-NonEquals Sto: << []>> 
9978_0-Useless: []
9978_0-Constancy: [(9, 0), (0, 0)]
9978_0-ContextAliasing: []

.....
-----
Block: 11031_6
11031_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_6-Stack size: 17 
11031_6-Equals Mem:<< [<11,6>]>> 
11031_6-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_6-Equals Sto:<< []>> 
11031_6-NonEquals Sto: << []>> 
11031_6-Useless: []
11031_6-Constancy: [(12, 0), (3, 0)]
11031_6-ContextAliasing: []

.....
-----
Block: 12065_6
12065_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_6-Stack size: 24 
12065_6-Equals Mem:<< []>> 
12065_6-NonEquals Mem: << [<6,1>]>> 
12065_6-Equals Sto:<< []>> 
12065_6-NonEquals Sto: << []>> 
12065_6-Useless: []
12065_6-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
12065_6-ContextAliasing: [(2, 23)]

.....
-----
Block: 12101_19
12101_19Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_19-Stack size: 26 
12101_19-Equals Mem:<< []>> 
12101_19-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_19-Equals Sto:<< []>> 
12101_19-NonEquals Sto: << []>> 
12101_19-Useless: []
12101_19-Constancy: [(21, 0), (12, 0), (8, 0), (3, 0)]
12101_19-ContextAliasing: [(4, 24)]

.....
-----
Block: 12125_19
12125_19Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_19-Stack size: 30 
12125_19-Equals Mem:<< []>> 
12125_19-NonEquals Mem: << [<11,5>]>> 
12125_19-Equals Sto:<< []>> 
12125_19-NonEquals Sto: << []>> 
12125_19-Useless: []
12125_19-Constancy: [(25, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_19-ContextAliasing: [(8, 24)]

.....
-----
Block: 12749_28
12749_28Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_28-Stack size: 28 
12749_28-Equals Mem:<< []>> 
12749_28-NonEquals Mem: << [<4,7>]>> 
12749_28-Equals Sto:<< []>> 
12749_28-NonEquals Sto: << []>> 
12749_28-Useless: []
12749_28-Constancy: [(23, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_28-ContextAliasing: []

.....
-----
Block: 12699_61
12699_61Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_61-Stack size: 20 
12699_61-Equals Mem:<< []>> 
12699_61-NonEquals Mem: << [<5,8>]>> 
12699_61-Equals Sto:<< []>> 
12699_61-NonEquals Sto: << []>> 
12699_61-Useless: []
12699_61-Constancy: [(15, 0)]
12699_61-ContextAliasing: []

.....
-----
Block: 12749_27
12749_27Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_27-Stack size: 18 
12749_27-Equals Mem:<< []>> 
12749_27-NonEquals Mem: << [<4,7>]>> 
12749_27-Equals Sto:<< []>> 
12749_27-NonEquals Sto: << []>> 
12749_27-Useless: []
12749_27-Constancy: [(13, 0), (0, 0)]
12749_27-ContextAliasing: []

.....
-----
Block: 12699_60
12699_60Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_60-Stack size: 22 
12699_60-Equals Mem:<< []>> 
12699_60-NonEquals Mem: << [<5,8>]>> 
12699_60-Equals Sto:<< []>> 
12699_60-NonEquals Sto: << []>> 
12699_60-Useless: []
12699_60-Constancy: [(17, 0), (6, 32), (5, 0)]
12699_60-ContextAliasing: []

.....
-----
Block: 12699_59
12699_59Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_59-Stack size: 20 
12699_59-Equals Mem:<< []>> 
12699_59-NonEquals Mem: << [<5,8>]>> 
12699_59-Equals Sto:<< []>> 
12699_59-NonEquals Sto: << []>> 
12699_59-Useless: []
12699_59-Constancy: [(15, 0)]
12699_59-ContextAliasing: []

.....
-----
Block: 12749_26
12749_26Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_26-Stack size: 18 
12749_26-Equals Mem:<< []>> 
12749_26-NonEquals Mem: << [<4,7>]>> 
12749_26-Equals Sto:<< []>> 
12749_26-NonEquals Sto: << []>> 
12749_26-Useless: []
12749_26-Constancy: [(13, 0), (0, 0)]
12749_26-ContextAliasing: []

.....
-----
Block: 12699_58
12699_58Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_58-Stack size: 22 
12699_58-Equals Mem:<< []>> 
12699_58-NonEquals Mem: << [<5,8>]>> 
12699_58-Equals Sto:<< []>> 
12699_58-NonEquals Sto: << []>> 
12699_58-Useless: []
12699_58-Constancy: [(17, 0), (5, 0)]
12699_58-ContextAliasing: []

.....
-----
Block: 12699_57
12699_57Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_57-Stack size: 20 
12699_57-Equals Mem:<< []>> 
12699_57-NonEquals Mem: << [<5,8>]>> 
12699_57-Equals Sto:<< []>> 
12699_57-NonEquals Sto: << []>> 
12699_57-Useless: []
12699_57-Constancy: [(15, 0)]
12699_57-ContextAliasing: []

.....
-----
Block: 12749_25
12749_25Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_25-Stack size: 18 
12749_25-Equals Mem:<< []>> 
12749_25-NonEquals Mem: << [<4,7>]>> 
12749_25-Equals Sto:<< []>> 
12749_25-NonEquals Sto: << []>> 
12749_25-Useless: []
12749_25-Constancy: [(13, 0), (0, 0)]
12749_25-ContextAliasing: []

.....
-----
Block: 12699_56
12699_56Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_56-Stack size: 22 
12699_56-Equals Mem:<< []>> 
12699_56-NonEquals Mem: << [<5,8>]>> 
12699_56-Equals Sto:<< []>> 
12699_56-NonEquals Sto: << []>> 
12699_56-Useless: []
12699_56-Constancy: [(17, 0), (5, 0)]
12699_56-ContextAliasing: []

.....
-----
Block: 12699_62
12699_62Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_62-Stack size: 26 
12699_62-Equals Mem:<< []>> 
12699_62-NonEquals Mem: << [<5,8>]>> 
12699_62-Equals Sto:<< []>> 
12699_62-NonEquals Sto: << []>> 
12699_62-Useless: []
12699_62-Constancy: [(21, 0), (12, 0), (6, 0), (5, 0)]
12699_62-ContextAliasing: []

.....
-----
Block: 12749_29
12749_29Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_29-Stack size: 26 
12749_29-Equals Mem:<< []>> 
12749_29-NonEquals Mem: << [<4,7>]>> 
12749_29-Equals Sto:<< []>> 
12749_29-NonEquals Sto: << []>> 
12749_29-Useless: []
12749_29-Constancy: [(21, 0), (12, 0), (6, 0), (0, 0)]
12749_29-ContextAliasing: []

.....
-----
Block: 10950_6
10950_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_6-Stack size: 21 
10950_6-Equals Mem:<< []>> 
10950_6-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_6-Equals Sto:<< []>> 
10950_6-NonEquals Sto: << []>> 
10950_6-Useless: []
10950_6-Constancy: [(16, 0), (7, 0), (1, 0)]
10950_6-ContextAliasing: []

.....
-----
Block: 11421_3
11421_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_3-Stack size: 18 
11421_3-Equals Mem:<< []>> 
11421_3-NonEquals Mem: << [<6,1>]>> 
11421_3-Equals Sto:<< []>> 
11421_3-NonEquals Sto: << []>> 
11421_3-Useless: []
11421_3-Constancy: [(13, 0)]
11421_3-ContextAliasing: []

.....
-----
Block: 11459_3
11459_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_3-Stack size: 18 
11459_3-Equals Mem:<< []>> 
11459_3-NonEquals Mem: << [<6,1>]>> 
11459_3-Equals Sto:<< []>> 
11459_3-NonEquals Sto: << []>> 
11459_3-Useless: []
11459_3-Constancy: [(13, 0)]
11459_3-ContextAliasing: []

.....
-----
Block: 10256_9
10256_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_9-Stack size: 24 
10256_9-Equals Mem:<< []>> 
10256_9-NonEquals Mem: << [<6,1>]>> 
10256_9-Equals Sto:<< []>> 
10256_9-NonEquals Sto: << []>> 
10256_9-Useless: []
10256_9-Constancy: [(19, 0), (1, 0)]
10256_9-ContextAliasing: [(2, 23)]

.....
-----
Block: 12101_17
12101_17Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_17-Stack size: 26 
12101_17-Equals Mem:<< []>> 
12101_17-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_17-Equals Sto:<< []>> 
12101_17-NonEquals Sto: << []>> 
12101_17-Useless: []
12101_17-Constancy: [(21, 0), (3, 0)]
12101_17-ContextAliasing: [(4, 24)]

.....
-----
Block: 12125_17
12125_17Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_17-Stack size: 30 
12125_17-Equals Mem:<< []>> 
12125_17-NonEquals Mem: << [<11,5>]>> 
12125_17-Equals Sto:<< []>> 
12125_17-NonEquals Sto: << []>> 
12125_17-Useless: []
12125_17-Constancy: [(25, 0), (7, 0), (3, 0), (2, 32)]
12125_17-ContextAliasing: [(8, 24)]

.....
-----
Block: 12699_52
12699_52Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_52-Stack size: 29 
12699_52-Equals Mem:<< []>> 
12699_52-NonEquals Mem: << [<5,8>]>> 
12699_52-Equals Sto:<< []>> 
12699_52-NonEquals Sto: << []>> 
12699_52-Useless: []
12699_52-Constancy: [(24, 0), (6, 0), (5, 0)]
12699_52-ContextAliasing: []

.....
-----
Block: 11542_3
11542_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_3-Stack size: 19 
11542_3-Equals Mem:<< [<12,29>]>> 
11542_3-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_3-Equals Sto:<< [<24,31>]>> 
11542_3-NonEquals Sto: << []>> 
11542_3-Useless: []
11542_3-Constancy: [(14, 0)]
11542_3-ContextAliasing: []

.....
-----
Block: 12699_51
12699_51Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_51-Stack size: 28 
12699_51-Equals Mem:<< []>> 
12699_51-NonEquals Mem: << [<5,8>]>> 
12699_51-Equals Sto:<< []>> 
12699_51-NonEquals Sto: << []>> 
12699_51-Useless: []
12699_51-Constancy: [(23, 0), (6, 0), (5, 0)]
12699_51-ContextAliasing: []

.....
-----
Block: 10324_4
10324_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_4-Stack size: 23 
10324_4-Equals Mem:<< []>> 
10324_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_4-Equals Sto:<< []>> 
10324_4-NonEquals Sto: << []>> 
10324_4-Useless: []
10324_4-Constancy: [(18, 0), (1, 0)]
10324_4-ContextAliasing: []

.....
-----
Block: 11588_3
11588_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_3-Stack size: 19 
11588_3-Equals Mem:<< []>> 
11588_3-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_3-Equals Sto:<< []>> 
11588_3-NonEquals Sto: << []>> 
11588_3-Useless: []
11588_3-Constancy: [(14, 0)]
11588_3-ContextAliasing: []

.....
-----
Block: 10256_8
10256_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_8-Stack size: 14 
10256_8-Equals Mem:<< []>> 
10256_8-NonEquals Mem: << [<6,1>]>> 
10256_8-Equals Sto:<< []>> 
10256_8-NonEquals Sto: << []>> 
10256_8-Useless: []
10256_8-Constancy: [(9, 0), (1, 0)]
10256_8-ContextAliasing: [(2, 13)]

.....
-----
Block: 12101_16
12101_16Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_16-Stack size: 16 
12101_16-Equals Mem:<< []>> 
12101_16-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_16-Equals Sto:<< []>> 
12101_16-NonEquals Sto: << []>> 
12101_16-Useless: []
12101_16-Constancy: [(11, 0), (3, 0)]
12101_16-ContextAliasing: [(4, 14)]

.....
-----
Block: 12125_16
12125_16Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_16-Stack size: 20 
12125_16-Equals Mem:<< []>> 
12125_16-NonEquals Mem: << [<11,5>]>> 
12125_16-Equals Sto:<< []>> 
12125_16-NonEquals Sto: << []>> 
12125_16-Useless: []
12125_16-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
12125_16-ContextAliasing: [(8, 14)]

.....
-----
Block: 12699_50
12699_50Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_50-Stack size: 19 
12699_50-Equals Mem:<< []>> 
12699_50-NonEquals Mem: << [<5,8>]>> 
12699_50-Equals Sto:<< []>> 
12699_50-NonEquals Sto: << []>> 
12699_50-Useless: []
12699_50-Constancy: [(14, 0), (6, 0), (5, 0)]
12699_50-ContextAliasing: []

.....
-----
Block: 7491
7491Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491-Stack size: 9 
7491-Equals Mem:<< []>> 
7491-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491-Equals Sto:<< []>> 
7491-NonEquals Sto: << []>> 
7491-Useless: []
7491-Constancy: [(4, 0)]
7491-ContextAliasing: []

.....
-----
Block: 7589
7589Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589-Stack size: 9 
7589-Equals Mem:<< []>> 
7589-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589-Equals Sto:<< []>> 
7589-NonEquals Sto: << []>> 
7589-Useless: []
7589-Constancy: [(4, 0)]
7589-ContextAliasing: []

.....
-----
Block: 7671
7671Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671-Stack size: 9 
7671-Equals Mem:<< [<12,27>, <17,30>]>> 
7671-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671-Equals Sto:<< []>> 
7671-NonEquals Sto: << []>> 
7671-Useless: []
7671-Constancy: [(4, 0)]
7671-ContextAliasing: []

.....
-----
Block: 5361
5361Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5361-Stack size: 3 
5361-Equals Mem:<< []>> 
5361-NonEquals Mem: << [<6,1>]>> 
5361-Equals Sto:<< []>> 
5361-NonEquals Sto: << []>> 
5361-Useless: []
5361-Constancy: []
5361-ContextAliasing: []

.....
-----
Block: 5289
5289Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5289-Stack size: 3 
5289-Equals Mem:<< []>> 
5289-NonEquals Mem: << [<6,1>]>> 
5289-Equals Sto:<< []>> 
5289-NonEquals Sto: << []>> 
5289-Useless: []
5289-Constancy: []
5289-ContextAliasing: []

.....
-----
Block: 5066
5066Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5066-Stack size: 4 
5066-Equals Mem:<< []>> 
5066-NonEquals Mem: << [<6,1>]>> 
5066-Equals Sto:<< []>> 
5066-NonEquals Sto: << []>> 
5066-Useless: []
5066-Constancy: []
5066-ContextAliasing: []

.....
-----
Block: 5147
5147Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x39', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
5147-Stack size: 4 
5147-Equals Mem:<< []>> 
5147-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
5147-Equals Sto:<< []>> 
5147-NonEquals Sto: << []>> 
5147-Useless: []
5147-Constancy: []
5147-ContextAliasing: []

.....
-----
Block: 12621_0
12621_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12621_0-Stack size: 8 
12621_0-Equals Mem:<< []>> 
12621_0-NonEquals Mem: << [<4,7>]>> 
12621_0-Equals Sto:<< []>> 
12621_0-NonEquals Sto: << []>> 
12621_0-Useless: []
12621_0-Constancy: [(5, 96)]
12621_0-ContextAliasing: []

.....
-----
Block: 2894
2894Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x0b7a', 'SWAP1', 'PUSH2 0x312e', 'JUMP']>> 
2894-Stack size: 5 
2894-Equals Mem:<< [<17,12>]>> 
2894-NonEquals Mem: << [<17,24>, <24,12>]>> 
2894-Equals Sto:<< []>> 
2894-NonEquals Sto: << []>> 
2894-Useless: []
2894-Constancy: [(2, 96)]
2894-ContextAliasing: []

.....
-----
Block: 12621
12621Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12621-Stack size: 12 
12621-Equals Mem:<< []>> 
12621-NonEquals Mem: << [<4,7>]>> 
12621-Equals Sto:<< []>> 
12621-NonEquals Sto: << []>> 
12621-Useless: []
12621-Constancy: [(9, 96)]
12621-ContextAliasing: []

.....
-----
Block: 12101
12101Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101-Stack size: 4 
12101-Equals Mem:<< []>> 
12101-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
12101-Equals Sto:<< []>> 
12101-NonEquals Sto: << []>> 
12101-Useless: []
12101-Constancy: []
12101-ContextAliasing: []

.....
-----
Block: 12125
12125Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125-Stack size: 8 
12125-Equals Mem:<< []>> 
12125-NonEquals Mem: << [<11,5>]>> 
12125-Equals Sto:<< []>> 
12125-NonEquals Sto: << []>> 
12125-Useless: []
12125-Constancy: [(3, 0), (2, 32)]
12125-ContextAliasing: []

.....
-----
Block: 4981
4981Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4981-Stack size: 3 
4981-Equals Mem:<< []>> 
4981-NonEquals Mem: << [<6,1>]>> 
4981-Equals Sto:<< []>> 
4981-NonEquals Sto: << []>> 
4981-Useless: []
4981-Constancy: []
4981-ContextAliasing: []

.....
-----
Block: 1158_0
1158_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1158_0-Stack size: 2 
1158_0-Equals Mem:<< []>> 
1158_0-NonEquals Mem: << [<12,2>]>> 
1158_0-Equals Sto:<< []>> 
1158_0-NonEquals Sto: << []>> 
1158_0-Useless: []
1158_0-Constancy: []
1158_0-ContextAliasing: []

.....
-----
Block: 4912
4912Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4912-Stack size: 2 
4912-Equals Mem:<< []>> 
4912-NonEquals Mem: << [<6,1>]>> 
4912-Equals Sto:<< []>> 
4912-NonEquals Sto: << []>> 
4912-Useless: []
4912-Constancy: []
4912-ContextAliasing: []

.....
-----
Block: 4744
4744Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4744-Stack size: 5 
4744-Equals Mem:<< []>> 
4744-NonEquals Mem: << [<6,1>]>> 
4744-Equals Sto:<< []>> 
4744-NonEquals Sto: << []>> 
4744-Useless: []
4744-Constancy: []
4744-ContextAliasing: []

.....
-----
Block: 12699_49
12699_49Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_49-Stack size: 11 
12699_49-Equals Mem:<< []>> 
12699_49-NonEquals Mem: << [<5,8>]>> 
12699_49-Equals Sto:<< []>> 
12699_49-NonEquals Sto: << []>> 
12699_49-Useless: []
12699_49-Constancy: []
12699_49-ContextAliasing: []

.....
-----
Block: 12699_48
12699_48Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_48-Stack size: 10 
12699_48-Equals Mem:<< []>> 
12699_48-NonEquals Mem: << [<5,8>]>> 
12699_48-Equals Sto:<< []>> 
12699_48-NonEquals Sto: << []>> 
12699_48-Useless: []
12699_48-Constancy: []
12699_48-ContextAliasing: []

.....
-----
Block: 4817
4817Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374206b656570206665657320617420313025206f72206c657373000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
4817-Stack size: 5 
4817-Equals Mem:<< []>> 
4817-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
4817-Equals Sto:<< []>> 
4817-NonEquals Sto: << []>> 
4817-Useless: []
4817-Constancy: []
4817-ContextAliasing: []

.....
-----
Block: 4660
4660Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4660-Stack size: 4 
4660-Equals Mem:<< []>> 
4660-NonEquals Mem: << [<6,1>]>> 
4660-Equals Sto:<< []>> 
4660-NonEquals Sto: << []>> 
4660-Useless: []
4660-Constancy: []
4660-ContextAliasing: []

.....
-----
Block: 4683
4683Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4683-Stack size: 4 
4683-Equals Mem:<< []>> 
4683-NonEquals Mem: << [<13,16>]>> 
4683-Equals Sto:<< [<21,33>]>> 
4683-NonEquals Sto: << []>> 
4683-Useless: []
4683-Constancy: []
4683-ContextAliasing: []

.....
-----
Block: 4602
4602Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4602-Stack size: 3 
4602-Equals Mem:<< []>> 
4602-NonEquals Mem: << [<6,1>]>> 
4602-Equals Sto:<< []>> 
4602-NonEquals Sto: << []>> 
4602-Useless: [6]
4602-Constancy: [(0, 0)]
4602-ContextAliasing: []

.....
-----
Block: 4303
4303Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4303-Stack size: 5 
4303-Equals Mem:<< []>> 
4303-NonEquals Mem: << [<6,1>]>> 
4303-Equals Sto:<< []>> 
4303-NonEquals Sto: << []>> 
4303-Useless: []
4303-Constancy: []
4303-ContextAliasing: []

.....
-----
Block: 4337
4337Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x33', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x616e206576657279203130206d696e75746573', 'PUSH1 0x68', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
4337-Stack size: 5 
4337-Equals Mem:<< []>> 
4337-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4337-Equals Sto:<< []>> 
4337-NonEquals Sto: << []>> 
4337-Useless: []
4337-Constancy: []
4337-ContextAliasing: []

.....
-----
Block: 4457
4457Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x30', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x747765656e20302520616e6420313025', 'PUSH1 0x80', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
4457-Stack size: 5 
4457-Equals Mem:<< []>> 
4457-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4457-Equals Sto:<< []>> 
4457-NonEquals Sto: << []>> 
4457-Useless: []
4457-Constancy: []
4457-ContextAliasing: []

.....
-----
Block: 4188
4188Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4188-Stack size: 2 
4188-Equals Mem:<< []>> 
4188-NonEquals Mem: << [<6,1>]>> 
4188-Equals Sto:<< []>> 
4188-NonEquals Sto: << []>> 
4188-Useless: [6]
4188-Constancy: []
4188-ContextAliasing: []

.....
-----
Block: 1734
1734Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1734-Stack size: 3 
1734-Equals Mem:<< []>> 
1734-NonEquals Mem: << [<10,14>]>> 
1734-Equals Sto:<< []>> 
1734-NonEquals Sto: << []>> 
1734-Useless: []
1734-Constancy: []
1734-ContextAliasing: []

.....
-----
Block: 3649_0
3649_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'POP', 'PUSH0', 'PUSH1 0x21', 'SLOAD', 'PUSH1 0x1f', 'SLOAD', 'PUSH1 0x20', 'SLOAD', 'PUSH2 0x0e66', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
3649_0-Stack size: 2 
3649_0-Equals Mem:<< []>> 
3649_0-NonEquals Mem: << [<5,9>]>> 
3649_0-Equals Sto:<< []>> 
3649_0-NonEquals Sto: << [<13,18>, <13,20>, <13,22>, <18,20>, <18,22>, <20,22>]>> 
3649_0-Useless: []
3649_0-Constancy: []
3649_0-ContextAliasing: []

.....
-----
Block: 12699_47
12699_47Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_47-Stack size: 10 
12699_47-Equals Mem:<< []>> 
12699_47-NonEquals Mem: << [<5,8>]>> 
12699_47-Equals Sto:<< []>> 
12699_47-NonEquals Sto: << []>> 
12699_47-Useless: []
12699_47-Constancy: [(6, 0)]
12699_47-ContextAliasing: []

.....
-----
Block: 12699_46
12699_46Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_46-Stack size: 9 
12699_46-Equals Mem:<< []>> 
12699_46-NonEquals Mem: << [<5,8>]>> 
12699_46-Equals Sto:<< []>> 
12699_46-NonEquals Sto: << []>> 
12699_46-Useless: []
12699_46-Constancy: [(5, 0)]
12699_46-ContextAliasing: []

.....
-----
Block: 12699_45
12699_45Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_45-Stack size: 13 
12699_45-Equals Mem:<< []>> 
12699_45-NonEquals Mem: << [<5,8>]>> 
12699_45-Equals Sto:<< []>> 
12699_45-NonEquals Sto: << []>> 
12699_45-Useless: []
12699_45-Constancy: [(8, 0), (7, 0)]
12699_45-ContextAliasing: []

.....
-----
Block: 12749_24
12749_24Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_24-Stack size: 11 
12749_24-Equals Mem:<< []>> 
12749_24-NonEquals Mem: << [<4,7>]>> 
12749_24-Equals Sto:<< []>> 
12749_24-NonEquals Sto: << []>> 
12749_24-Useless: []
12749_24-Constancy: [(6, 0), (5, 0), (0, 0)]
12749_24-ContextAliasing: []

.....
-----
Block: 12749_23
12749_23Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_23-Stack size: 10 
12749_23-Equals Mem:<< []>> 
12749_23-NonEquals Mem: << [<4,7>]>> 
12749_23-Equals Sto:<< []>> 
12749_23-NonEquals Sto: << []>> 
12749_23-Useless: []
12749_23-Constancy: [(5, 0), (4, 0), (0, 0)]
12749_23-ContextAliasing: []

.....
-----
Block: 10402_1
10402_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2805', 'JUMP']>> 
10402_1-Stack size: 10 
10402_1-Equals Mem:<< [<11,6>]>> 
10402_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
10402_1-Equals Sto:<< []>> 
10402_1-NonEquals Sto: << []>> 
10402_1-Useless: []
10402_1-Constancy: [(5, 0), (3, 0)]
10402_1-ContextAliasing: []

.....
-----
Block: 10256_7
10256_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_7-Stack size: 17 
10256_7-Equals Mem:<< []>> 
10256_7-NonEquals Mem: << [<6,1>]>> 
10256_7-Equals Sto:<< []>> 
10256_7-NonEquals Sto: << []>> 
10256_7-Useless: []
10256_7-Constancy: [(12, 0), (10, 0), (6, 0), (1, 0)]
10256_7-ContextAliasing: [(2, 16)]

.....
-----
Block: 12101_15
12101_15Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_15-Stack size: 19 
12101_15-Equals Mem:<< []>> 
12101_15-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_15-Equals Sto:<< []>> 
12101_15-NonEquals Sto: << []>> 
12101_15-Useless: []
12101_15-Constancy: [(14, 0), (12, 0), (8, 0), (3, 0)]
12101_15-ContextAliasing: [(4, 17)]

.....
-----
Block: 12125_15
12125_15Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_15-Stack size: 23 
12125_15-Equals Mem:<< []>> 
12125_15-NonEquals Mem: << [<11,5>]>> 
12125_15-Equals Sto:<< []>> 
12125_15-NonEquals Sto: << []>> 
12125_15-Useless: []
12125_15-Constancy: [(18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_15-ContextAliasing: [(8, 17)]

.....
-----
Block: 12699_44
12699_44Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_44-Stack size: 22 
12699_44-Equals Mem:<< []>> 
12699_44-NonEquals Mem: << [<5,8>]>> 
12699_44-Equals Sto:<< []>> 
12699_44-NonEquals Sto: << []>> 
12699_44-Useless: []
12699_44-Constancy: [(17, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
12699_44-ContextAliasing: []

.....
-----
Block: 12970_2
12970_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12970_2-Stack size: 15 
12970_2-Equals Mem:<< []>> 
12970_2-NonEquals Mem: << [<5,8>]>> 
12970_2-Equals Sto:<< []>> 
12970_2-NonEquals Sto: << []>> 
12970_2-Useless: []
12970_2-Constancy: [(10, 0), (1, 0)]
12970_2-ContextAliasing: [(4, 12)]

.....
-----
Block: 10642_0
10642_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x29b6', 'SWAP2', 'SWAP1', 'PUSH2 0x32be', 'JUMP']>> 
10642_0-Stack size: 15 
10642_0-Equals Mem:<< [<18,6>]>> 
10642_0-NonEquals Mem: << []>> 
10642_0-Equals Sto:<< []>> 
10642_0-NonEquals Sto: << []>> 
10642_0-Useless: []
10642_0-Constancy: [(10, 0)]
10642_0-ContextAliasing: []

.....
-----
Block: 12970_1
12970_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12970_1-Stack size: 15 
12970_1-Equals Mem:<< []>> 
12970_1-NonEquals Mem: << [<5,8>]>> 
12970_1-Equals Sto:<< []>> 
12970_1-NonEquals Sto: << []>> 
12970_1-Useless: []
12970_1-Constancy: [(10, 0)]
12970_1-ContextAliasing: [(4, 12)]

.....
-----
Block: 7491_4
7491_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491_4-Stack size: 15 
7491_4-Equals Mem:<< []>> 
7491_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491_4-Equals Sto:<< []>> 
7491_4-NonEquals Sto: << []>> 
7491_4-Useless: []
7491_4-Constancy: [(10, 0), (1, 0)]
7491_4-ContextAliasing: []

.....
-----
Block: 7589_4
7589_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589_4-Stack size: 15 
7589_4-Equals Mem:<< []>> 
7589_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589_4-Equals Sto:<< []>> 
7589_4-NonEquals Sto: << []>> 
7589_4-Useless: []
7589_4-Constancy: [(10, 0), (1, 0)]
7589_4-ContextAliasing: []

.....
-----
Block: 7671_3
7671_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671_3-Stack size: 15 
7671_3-Equals Mem:<< [<12,27>, <17,30>]>> 
7671_3-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671_3-Equals Sto:<< []>> 
7671_3-NonEquals Sto: << []>> 
7671_3-Useless: []
7671_3-Constancy: [(10, 0), (1, 0)]
7671_3-ContextAliasing: []

.....
-----
Block: 10772_0
10772_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x2a68', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x32d9', 'JUMP']>> 
10772_0-Stack size: 11 
10772_0-Equals Mem:<< []>> 
10772_0-NonEquals Mem: << [<7,2>]>> 
10772_0-Equals Sto:<< []>> 
10772_0-NonEquals Sto: << []>> 
10772_0-Useless: []
10772_0-Constancy: [(6, 0)]
10772_0-ContextAliasing: []

.....
-----
Block: 13017_0
13017_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
13017_0-Stack size: 20 
13017_0-Equals Mem:<< []>> 
13017_0-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
13017_0-Equals Sto:<< []>> 
13017_0-NonEquals Sto: << []>> 
13017_0-Useless: []
13017_0-Constancy: [(15, 0), (4, 0)]
13017_0-ContextAliasing: [(9, 16)]

.....
-----
Block: 13067_0
13067_0Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x3302', 'JUMP']>> 
13067_0-Stack size: 26 
13067_0-Equals Mem:<< []>> 
13067_0-NonEquals Mem: << [<9,1>]>> 
13067_0-Equals Sto:<< []>> 
13067_0-NonEquals Sto: << []>> 
13067_0-Useless: []
13067_0-Constancy: [(21, 0), (10, 0), (5, 0), (3, 32)]
13067_0-ContextAliasing: [(15, 16)]

.....
-----
Block: 10402_2
10402_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2805', 'JUMP']>> 
10402_2-Stack size: 12 
10402_2-Equals Mem:<< [<11,6>]>> 
10402_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
10402_2-Equals Sto:<< []>> 
10402_2-NonEquals Sto: << []>> 
10402_2-Useless: []
10402_2-Constancy: [(7, 0), (3, 0)]
10402_2-ContextAliasing: []

.....
-----
Block: 10256_6
10256_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_6-Stack size: 19 
10256_6-Equals Mem:<< []>> 
10256_6-NonEquals Mem: << [<6,1>]>> 
10256_6-Equals Sto:<< []>> 
10256_6-NonEquals Sto: << []>> 
10256_6-Useless: []
10256_6-Constancy: [(14, 0), (10, 0), (6, 0), (1, 0)]
10256_6-ContextAliasing: [(2, 18)]

.....
-----
Block: 12101_14
12101_14Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_14-Stack size: 21 
12101_14-Equals Mem:<< []>> 
12101_14-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_14-Equals Sto:<< []>> 
12101_14-NonEquals Sto: << []>> 
12101_14-Useless: []
12101_14-Constancy: [(16, 0), (12, 0), (8, 0), (3, 0)]
12101_14-ContextAliasing: [(4, 19)]

.....
-----
Block: 12125_14
12125_14Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_14-Stack size: 25 
12125_14-Equals Mem:<< []>> 
12125_14-NonEquals Mem: << [<11,5>]>> 
12125_14-Equals Sto:<< []>> 
12125_14-NonEquals Sto: << []>> 
12125_14-Useless: []
12125_14-Constancy: [(20, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_14-ContextAliasing: [(8, 19)]

.....
-----
Block: 12699_43
12699_43Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_43-Stack size: 24 
12699_43-Equals Mem:<< []>> 
12699_43-NonEquals Mem: << [<5,8>]>> 
12699_43-Equals Sto:<< []>> 
12699_43-NonEquals Sto: << []>> 
12699_43-Useless: []
12699_43-Constancy: [(19, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
12699_43-ContextAliasing: []

.....
-----
Block: 11031_4
11031_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_4-Stack size: 13 
11031_4-Equals Mem:<< [<11,6>]>> 
11031_4-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_4-Equals Sto:<< []>> 
11031_4-NonEquals Sto: << []>> 
11031_4-Useless: []
11031_4-Constancy: [(8, 0), (3, 0)]
11031_4-ContextAliasing: []

.....
-----
Block: 12065_5
12065_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_5-Stack size: 20 
12065_5-Equals Mem:<< []>> 
12065_5-NonEquals Mem: << [<6,1>]>> 
12065_5-Equals Sto:<< []>> 
12065_5-NonEquals Sto: << []>> 
12065_5-Useless: []
12065_5-Constancy: [(15, 0), (10, 0), (6, 0), (1, 0)]
12065_5-ContextAliasing: [(2, 19)]

.....
-----
Block: 12101_13
12101_13Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_13-Stack size: 22 
12101_13-Equals Mem:<< []>> 
12101_13-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_13-Equals Sto:<< []>> 
12101_13-NonEquals Sto: << []>> 
12101_13-Useless: []
12101_13-Constancy: [(17, 0), (12, 0), (8, 0), (3, 0)]
12101_13-ContextAliasing: [(4, 20)]

.....
-----
Block: 12125_13
12125_13Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_13-Stack size: 26 
12125_13-Equals Mem:<< []>> 
12125_13-NonEquals Mem: << [<11,5>]>> 
12125_13-Equals Sto:<< []>> 
12125_13-NonEquals Sto: << []>> 
12125_13-Useless: []
12125_13-Constancy: [(21, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_13-ContextAliasing: [(8, 20)]

.....
-----
Block: 12749_21
12749_21Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_21-Stack size: 24 
12749_21-Equals Mem:<< []>> 
12749_21-NonEquals Mem: << [<4,7>]>> 
12749_21-Equals Sto:<< []>> 
12749_21-NonEquals Sto: << []>> 
12749_21-Useless: []
12749_21-Constancy: [(19, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_21-ContextAliasing: []

.....
-----
Block: 11031_5
11031_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_5-Stack size: 14 
11031_5-Equals Mem:<< [<11,6>]>> 
11031_5-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_5-Equals Sto:<< []>> 
11031_5-NonEquals Sto: << []>> 
11031_5-Useless: []
11031_5-Constancy: [(9, 0), (3, 0)]
11031_5-ContextAliasing: []

.....
-----
Block: 12065_4
12065_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_4-Stack size: 21 
12065_4-Equals Mem:<< []>> 
12065_4-NonEquals Mem: << [<6,1>]>> 
12065_4-Equals Sto:<< []>> 
12065_4-NonEquals Sto: << []>> 
12065_4-Useless: []
12065_4-Constancy: [(16, 0), (10, 0), (6, 0), (1, 0)]
12065_4-ContextAliasing: [(2, 20)]

.....
-----
Block: 12101_12
12101_12Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_12-Stack size: 23 
12101_12-Equals Mem:<< []>> 
12101_12-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_12-Equals Sto:<< []>> 
12101_12-NonEquals Sto: << []>> 
12101_12-Useless: []
12101_12-Constancy: [(18, 0), (12, 0), (8, 0), (3, 0)]
12101_12-ContextAliasing: [(4, 21)]

.....
-----
Block: 12125_12
12125_12Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_12-Stack size: 27 
12125_12-Equals Mem:<< []>> 
12125_12-NonEquals Mem: << [<11,5>]>> 
12125_12-Equals Sto:<< []>> 
12125_12-NonEquals Sto: << []>> 
12125_12-Useless: []
12125_12-Constancy: [(22, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_12-ContextAliasing: [(8, 21)]

.....
-----
Block: 12749_19
12749_19Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_19-Stack size: 25 
12749_19-Equals Mem:<< []>> 
12749_19-NonEquals Mem: << [<4,7>]>> 
12749_19-Equals Sto:<< []>> 
12749_19-NonEquals Sto: << []>> 
12749_19-Useless: []
12749_19-Constancy: [(20, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_19-ContextAliasing: []

.....
-----
Block: 12699_40
12699_40Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_40-Stack size: 18 
12699_40-Equals Mem:<< []>> 
12699_40-NonEquals Mem: << [<5,8>]>> 
12699_40-Equals Sto:<< []>> 
12699_40-NonEquals Sto: << []>> 
12699_40-Useless: []
12699_40-Constancy: [(13, 0), (6, 0)]
12699_40-ContextAliasing: []

.....
-----
Block: 12699_39
12699_39Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_39-Stack size: 17 
12699_39-Equals Mem:<< []>> 
12699_39-NonEquals Mem: << [<5,8>]>> 
12699_39-Equals Sto:<< []>> 
12699_39-NonEquals Sto: << []>> 
12699_39-Useless: []
12699_39-Constancy: [(12, 0), (5, 0)]
12699_39-ContextAliasing: []

.....
-----
Block: 7491_3
7491_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491_3-Stack size: 19 
7491_3-Equals Mem:<< []>> 
7491_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491_3-Equals Sto:<< []>> 
7491_3-NonEquals Sto: << []>> 
7491_3-Useless: []
7491_3-Constancy: [(1, 0)]
7491_3-ContextAliasing: []

.....
-----
Block: 7589_3
7589_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589_3-Stack size: 19 
7589_3-Equals Mem:<< []>> 
7589_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589_3-Equals Sto:<< []>> 
7589_3-NonEquals Sto: << []>> 
7589_3-Useless: []
7589_3-Constancy: [(1, 0)]
7589_3-ContextAliasing: []

.....
-----
Block: 7671_4
7671_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671_4-Stack size: 19 
7671_4-Equals Mem:<< [<12,27>, <17,30>]>> 
7671_4-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671_4-Equals Sto:<< []>> 
7671_4-NonEquals Sto: << []>> 
7671_4-Useless: []
7671_4-Constancy: [(1, 0)]
7671_4-ContextAliasing: []

.....
-----
Block: 11279_0
11279_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2c34', 'SWAP2', 'SWAP1', 'PUSH2 0x3348', 'JUMP']>> 
11279_0-Stack size: 20 
11279_0-Equals Mem:<< [<19,7>]>> 
11279_0-NonEquals Mem: << []>> 
11279_0-Equals Sto:<< []>> 
11279_0-NonEquals Sto: << []>> 
11279_0-Useless: []
11279_0-Constancy: []
11279_0-ContextAliasing: []

.....
-----
Block: 12699_41
12699_41Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_41-Stack size: 23 
12699_41-Equals Mem:<< []>> 
12699_41-NonEquals Mem: << [<5,8>]>> 
12699_41-Equals Sto:<< []>> 
12699_41-NonEquals Sto: << []>> 
12699_41-Useless: []
12699_41-Constancy: [(18, 0), (12, 0), (6, 0), (5, 0)]
12699_41-ContextAliasing: []

.....
-----
Block: 12749_20
12749_20Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_20-Stack size: 23 
12749_20-Equals Mem:<< []>> 
12749_20-NonEquals Mem: << [<4,7>]>> 
12749_20-Equals Sto:<< []>> 
12749_20-NonEquals Sto: << []>> 
12749_20-Useless: []
12749_20-Constancy: [(18, 0), (12, 0), (6, 0), (0, 0)]
12749_20-ContextAliasing: []

.....
-----
Block: 10950_4
10950_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_4-Stack size: 18 
10950_4-Equals Mem:<< []>> 
10950_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_4-Equals Sto:<< []>> 
10950_4-NonEquals Sto: << []>> 
10950_4-Useless: []
10950_4-Constancy: [(13, 0), (7, 0), (1, 0)]
10950_4-ContextAliasing: []

.....
-----
Block: 12699_42
12699_42Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_42-Stack size: 22 
12699_42-Equals Mem:<< []>> 
12699_42-NonEquals Mem: << [<5,8>]>> 
12699_42-Equals Sto:<< []>> 
12699_42-NonEquals Sto: << []>> 
12699_42-Useless: []
12699_42-Constancy: [(17, 0), (12, 0), (6, 0), (5, 0)]
12699_42-ContextAliasing: []

.....
-----
Block: 12749_22
12749_22Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_22-Stack size: 22 
12749_22-Equals Mem:<< []>> 
12749_22-NonEquals Mem: << [<4,7>]>> 
12749_22-Equals Sto:<< []>> 
12749_22-NonEquals Sto: << []>> 
12749_22-Useless: []
12749_22-Constancy: [(17, 0), (12, 0), (6, 0), (0, 0)]
12749_22-ContextAliasing: []

.....
-----
Block: 10950_5
10950_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_5-Stack size: 17 
10950_5-Equals Mem:<< []>> 
10950_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_5-Equals Sto:<< []>> 
10950_5-NonEquals Sto: << []>> 
10950_5-Useless: []
10950_5-Constancy: [(12, 0), (7, 0), (1, 0)]
10950_5-ContextAliasing: []

.....
-----
Block: 1607
1607Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'SWAP1', 'JUMP']>> 
1607-Stack size: 3 
1607-Equals Mem:<< []>> 
1607-NonEquals Mem: << [<10,13>]>> 
1607-Equals Sto:<< []>> 
1607-NonEquals Sto: << []>> 
1607-Useless: []
1607-Constancy: []
1607-ContextAliasing: []

.....
-----
Block: 1158
1158Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1158-Stack size: 3 
1158-Equals Mem:<< []>> 
1158-NonEquals Mem: << [<12,2>]>> 
1158-Equals Sto:<< []>> 
1158-NonEquals Sto: << []>> 
1158-Useless: []
1158-Constancy: [(0, 0)]
1158-ContextAliasing: []

.....
-----
Block: 3596
3596Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0bdb', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x0da9', 'SWAP1', 'DUP7', 'PUSH2 0x283d', 'JUMP']>> 
3596-Stack size: 4 
3596-Equals Mem:<< [<5,23>, <10,26>]>> 
3596-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
3596-Equals Sto:<< []>> 
3596-NonEquals Sto: << []>> 
3596-Useless: []
3596-Constancy: []
3596-ContextAliasing: []

.....
-----
Block: 12699_38
12699_38Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_38-Stack size: 18 
12699_38-Equals Mem:<< []>> 
12699_38-NonEquals Mem: << [<5,8>]>> 
12699_38-Equals Sto:<< []>> 
12699_38-NonEquals Sto: << []>> 
12699_38-Useless: []
12699_38-Constancy: [(13, 0), (6, 0), (5, 0)]
12699_38-ContextAliasing: []

.....
-----
Block: 10324_3
10324_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_3-Stack size: 13 
10324_3-Equals Mem:<< []>> 
10324_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_3-Equals Sto:<< []>> 
10324_3-NonEquals Sto: << []>> 
10324_3-Useless: []
10324_3-Constancy: [(8, 0), (1, 0)]
10324_3-ContextAliasing: []

.....
-----
Block: 1458
1458Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1458-Stack size: 2 
1458-Equals Mem:<< []>> 
1458-NonEquals Mem: << [<6,3>]>> 
1458-Equals Sto:<< []>> 
1458-NonEquals Sto: << []>> 
1458-Useless: []
1458-Constancy: []
1458-ContextAliasing: []

.....
-----
Block: 7783
7783Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
7783-Stack size: 10 
7783-Equals Mem:<< []>> 
7783-NonEquals Mem: << [<6,1>]>> 
7783-Equals Sto:<< []>> 
7783-NonEquals Sto: << []>> 
7783-Useless: []
7783-Constancy: [(4, 0)]
7783-ContextAliasing: []

.....
-----
Block: 7821
7821Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
7821-Stack size: 10 
7821-Equals Mem:<< []>> 
7821-NonEquals Mem: << [<6,1>]>> 
7821-Equals Sto:<< []>> 
7821-NonEquals Sto: << []>> 
7821-Useless: []
7821-Constancy: [(4, 0)]
7821-ContextAliasing: []

.....
-----
Block: 7844
7844Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1ee4', 'JUMPI']>> 
7844-Stack size: 10 
7844-Equals Mem:<< []>> 
7844-NonEquals Mem: << [<11,14>]>> 
7844-Equals Sto:<< []>> 
7844-NonEquals Sto: << []>> 
7844-Useless: []
7844-Constancy: [(4, 0)]
7844-ContextAliasing: []

.....
-----
Block: 7879
7879Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7879-Stack size: 11 
7879-Equals Mem:<< []>> 
7879-NonEquals Mem: << [<11,14>]>> 
7879-Equals Sto:<< []>> 
7879-NonEquals Sto: << []>> 
7879-Useless: []
7879-Constancy: [(5, 0)]
7879-ContextAliasing: []

.....
-----
Block: 7913
7913Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x31', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752068617665206265656e20626c61636b6c69737465642066726f6d2074', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x72616e73666572696e6720746f6b656e73', 'PUSH1 0x78', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7913-Stack size: 10 
7913-Equals Mem:<< []>> 
7913-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7913-Equals Sto:<< []>> 
7913-NonEquals Sto: << []>> 
7913-Useless: []
7913-Constancy: [(4, 0)]
7913-ContextAliasing: []

.....
-----
Block: 11421_2
11421_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_2-Stack size: 14 
11421_2-Equals Mem:<< []>> 
11421_2-NonEquals Mem: << [<6,1>]>> 
11421_2-Equals Sto:<< []>> 
11421_2-NonEquals Sto: << []>> 
11421_2-Useless: []
11421_2-Constancy: [(8, 0), (0, 0)]
11421_2-ContextAliasing: []

.....
-----
Block: 11459_2
11459_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_2-Stack size: 14 
11459_2-Equals Mem:<< []>> 
11459_2-NonEquals Mem: << [<6,1>]>> 
11459_2-Equals Sto:<< []>> 
11459_2-NonEquals Sto: << []>> 
11459_2-Useless: []
11459_2-Constancy: [(8, 0), (0, 0)]
11459_2-ContextAliasing: []

.....
-----
Block: 10256_5
10256_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_5-Stack size: 20 
10256_5-Equals Mem:<< []>> 
10256_5-NonEquals Mem: << [<6,1>]>> 
10256_5-Equals Sto:<< []>> 
10256_5-NonEquals Sto: << []>> 
10256_5-Useless: []
10256_5-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
10256_5-ContextAliasing: [(2, 19)]

.....
-----
Block: 12101_11
12101_11Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_11-Stack size: 22 
12101_11-Equals Mem:<< []>> 
12101_11-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_11-Equals Sto:<< []>> 
12101_11-NonEquals Sto: << []>> 
12101_11-Useless: []
12101_11-Constancy: [(16, 0), (8, 0), (5, 0), (3, 0)]
12101_11-ContextAliasing: [(4, 20)]

.....
-----
Block: 12125_11
12125_11Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_11-Stack size: 26 
12125_11-Equals Mem:<< []>> 
12125_11-NonEquals Mem: << [<11,5>]>> 
12125_11-Equals Sto:<< []>> 
12125_11-NonEquals Sto: << []>> 
12125_11-Useless: []
12125_11-Constancy: [(20, 0), (12, 0), (9, 0), (7, 0), (3, 0), (2, 32)]
12125_11-ContextAliasing: [(8, 20)]

.....
-----
Block: 12699_37
12699_37Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_37-Stack size: 25 
12699_37-Equals Mem:<< []>> 
12699_37-NonEquals Mem: << [<5,8>]>> 
12699_37-Equals Sto:<< []>> 
12699_37-NonEquals Sto: << []>> 
12699_37-Useless: []
12699_37-Constancy: [(19, 0), (11, 0), (8, 0), (6, 0), (5, 0), (3, 0)]
12699_37-ContextAliasing: []

.....
-----
Block: 11542_2
11542_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_2-Stack size: 15 
11542_2-Equals Mem:<< [<12,29>]>> 
11542_2-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_2-Equals Sto:<< [<24,31>]>> 
11542_2-NonEquals Sto: << []>> 
11542_2-Useless: []
11542_2-Constancy: [(9, 0), (1, 0)]
11542_2-ContextAliasing: []

.....
-----
Block: 12699_36
12699_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_36-Stack size: 24 
12699_36-Equals Mem:<< []>> 
12699_36-NonEquals Mem: << [<5,8>]>> 
12699_36-Equals Sto:<< []>> 
12699_36-NonEquals Sto: << []>> 
12699_36-Useless: []
12699_36-Constancy: [(18, 0), (10, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
12699_36-ContextAliasing: []

.....
-----
Block: 10324_2
10324_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_2-Stack size: 19 
10324_2-Equals Mem:<< []>> 
10324_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_2-Equals Sto:<< []>> 
10324_2-NonEquals Sto: << []>> 
10324_2-Useless: []
10324_2-Constancy: [(13, 0), (5, 0), (2, 0), (1, 0)]
10324_2-ContextAliasing: []

.....
-----
Block: 11588_2
11588_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_2-Stack size: 15 
11588_2-Equals Mem:<< []>> 
11588_2-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_2-Equals Sto:<< []>> 
11588_2-NonEquals Sto: << []>> 
11588_2-Useless: []
11588_2-Constancy: [(9, 0), (1, 0)]
11588_2-ContextAliasing: []

.....
-----
Block: 10256
10256Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256-Stack size: 15 
10256-Equals Mem:<< []>> 
10256-NonEquals Mem: << [<6,1>]>> 
10256-Equals Sto:<< []>> 
10256-NonEquals Sto: << []>> 
10256-Useless: []
10256-Constancy: [(9, 0), (1, 0)]
10256-ContextAliasing: []

.....
-----
Block: 12101_0
12101_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_0-Stack size: 17 
12101_0-Equals Mem:<< []>> 
12101_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_0-Equals Sto:<< []>> 
12101_0-NonEquals Sto: << []>> 
12101_0-Useless: []
12101_0-Constancy: [(11, 0), (3, 0)]
12101_0-ContextAliasing: []

.....
-----
Block: 12125_0
12125_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_0-Stack size: 21 
12125_0-Equals Mem:<< []>> 
12125_0-NonEquals Mem: << [<11,5>]>> 
12125_0-Equals Sto:<< []>> 
12125_0-NonEquals Sto: << []>> 
12125_0-Useless: []
12125_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
12125_0-ContextAliasing: []

.....
-----
Block: 12699_1
12699_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_1-Stack size: 20 
12699_1-Equals Mem:<< []>> 
12699_1-NonEquals Mem: << [<5,8>]>> 
12699_1-Equals Sto:<< []>> 
12699_1-NonEquals Sto: << []>> 
12699_1-Useless: []
12699_1-Constancy: [(14, 0), (6, 0), (5, 0)]
12699_1-ContextAliasing: []

.....
-----
Block: 7491_0
7491_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491_0-Stack size: 10 
7491_0-Equals Mem:<< []>> 
7491_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491_0-Equals Sto:<< []>> 
7491_0-NonEquals Sto: << []>> 
7491_0-Useless: []
7491_0-Constancy: [(4, 0)]
7491_0-ContextAliasing: []

.....
-----
Block: 7589_0
7589_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589_0-Stack size: 10 
7589_0-Equals Mem:<< []>> 
7589_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589_0-Equals Sto:<< []>> 
7589_0-NonEquals Sto: << []>> 
7589_0-Useless: []
7589_0-Constancy: [(4, 0)]
7589_0-ContextAliasing: []

.....
-----
Block: 7671_0
7671_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671_0-Stack size: 10 
7671_0-Equals Mem:<< [<12,27>, <17,30>]>> 
7671_0-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671_0-Equals Sto:<< []>> 
7671_0-NonEquals Sto: << []>> 
7671_0-Useless: []
7671_0-Constancy: [(4, 0)]
7671_0-ContextAliasing: []

.....
-----
Block: 8169
8169Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x2025', 'JUMPI']>> 
8169-Stack size: 10 
8169-Equals Mem:<< []>> 
8169-NonEquals Mem: << [<10,13>]>> 
8169-Equals Sto:<< []>> 
8169-NonEquals Sto: << []>> 
8169-Useless: []
8169-Constancy: [(4, 0)]
8169-ContextAliasing: []

.....
-----
Block: 8201
8201Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8201-Stack size: 11 
8201-Equals Mem:<< []>> 
8201-NonEquals Mem: << [<11,14>]>> 
8201-Equals Sto:<< []>> 
8201-NonEquals Sto: << []>> 
8201-Useless: []
8201-Constancy: [(5, 0)]
8201-ContextAliasing: []

.....
-----
Block: 8234
8234Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297', 'PUSH1 0x51', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8234-Stack size: 10 
8234-Equals Mem:<< []>> 
8234-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
8234-Equals Sto:<< []>> 
8234-NonEquals Sto: << []>> 
8234-Useless: []
8234-Constancy: [(4, 0)]
8234-ContextAliasing: []

.....
-----
Block: 8457
8457Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x219d', 'JUMPI']>> 
8457-Stack size: 10 
8457-Equals Mem:<< []>> 
8457-NonEquals Mem: << [<4,7>]>> 
8457-Equals Sto:<< []>> 
8457-NonEquals Sto: << []>> 
8457-Useless: []
8457-Constancy: [(4, 0)]
8457-ContextAliasing: []

.....
-----
Block: 8478
8478Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8478-Stack size: 10 
8478-Equals Mem:<< []>> 
8478-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>, <33,1>]>> 
8478-Equals Sto:<< []>> 
8478-NonEquals Sto: << []>> 
8478-Useless: []
8478-Constancy: [(4, 0)]
8478-ContextAliasing: []

.....
-----
Block: 8605
8605Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
8605-Stack size: 10 
8605-Equals Mem:<< []>> 
8605-NonEquals Mem: << [<5,8>]>> 
8605-Equals Sto:<< []>> 
8605-NonEquals Sto: << []>> 
8605-Useless: []
8605-Constancy: [(4, 0)]
8605-ContextAliasing: []

.....
-----
Block: 8623
8623Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x21ee', 'JUMPI']>> 
8623-Stack size: 10 
8623-Equals Mem:<< []>> 
8623-NonEquals Mem: << [<11,14>]>> 
8623-Equals Sto:<< []>> 
8623-NonEquals Sto: << []>> 
8623-Useless: []
8623-Constancy: [(4, 0)]
8623-ContextAliasing: []

.....
-----
Block: 8657
8657Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8657-Stack size: 11 
8657-Equals Mem:<< []>> 
8657-NonEquals Mem: << [<11,14>]>> 
8657-Equals Sto:<< []>> 
8657-NonEquals Sto: << []>> 
8657-Useless: []
8657-Constancy: [(5, 0)]
8657-ContextAliasing: []

.....
-----
Block: 8702
8702Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8702-Stack size: 10 
8702-Equals Mem:<< []>> 
8702-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8702-Equals Sto:<< []>> 
8702-NonEquals Sto: << []>> 
8702-Useless: []
8702-Constancy: [(4, 0)]
8702-ContextAliasing: []

.....
-----
Block: 8803
8803Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x2288', 'SWAP1', 'DUP4', 'PUSH2 0x31e5', 'JUMP']>> 
8803-Stack size: 10 
8803-Equals Mem:<< []>> 
8803-NonEquals Mem: << [<13,17>]>> 
8803-Equals Sto:<< []>> 
8803-NonEquals Sto: << [<2,21>]>> 
8803-Useless: []
8803-Constancy: [(4, 0)]
8803-ContextAliasing: []

.....
-----
Block: 12699_35
12699_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_35-Stack size: 16 
12699_35-Equals Mem:<< []>> 
12699_35-NonEquals Mem: << [<5,8>]>> 
12699_35-Equals Sto:<< []>> 
12699_35-NonEquals Sto: << []>> 
12699_35-Useless: []
12699_35-Constancy: [(10, 0)]
12699_35-ContextAliasing: []

.....
-----
Block: 8847
8847Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8847-Stack size: 10 
8847-Equals Mem:<< []>> 
8847-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
8847-Equals Sto:<< []>> 
8847-NonEquals Sto: << []>> 
8847-Useless: []
8847-Constancy: [(4, 0)]
8847-ContextAliasing: []

.....
-----
Block: 8913
8913Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2310', 'JUMPI']>> 
8913-Stack size: 10 
8913-Equals Mem:<< []>> 
8913-NonEquals Mem: << [<11,14>]>> 
8913-Equals Sto:<< []>> 
8913-NonEquals Sto: << []>> 
8913-Useless: []
8913-Constancy: [(4, 0)]
8913-ContextAliasing: []

.....
-----
Block: 8947
8947Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8947-Stack size: 11 
8947-Equals Mem:<< []>> 
8947-NonEquals Mem: << [<11,14>]>> 
8947-Equals Sto:<< []>> 
8947-NonEquals Sto: << []>> 
8947-Useless: []
8947-Constancy: [(5, 0)]
8947-ContextAliasing: []

.....
-----
Block: 8992
8992Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x36', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x51', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8992-Stack size: 10 
8992-Equals Mem:<< []>> 
8992-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8992-Equals Sto:<< []>> 
8992-NonEquals Sto: << []>> 
8992-Useless: []
8992-Constancy: [(4, 0)]
8992-ContextAliasing: []

.....
-----
Block: 9094
9094Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x240e', 'JUMPI']>> 
9094-Stack size: 10 
9094-Equals Mem:<< []>> 
9094-NonEquals Mem: << [<11,14>]>> 
9094-Equals Sto:<< []>> 
9094-NonEquals Sto: << []>> 
9094-Useless: []
9094-Constancy: [(4, 0)]
9094-ContextAliasing: []

.....
-----
Block: 9126
9126Instr:<<['PUSH1 0x0b', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x23ca', 'SWAP1', 'DUP4', 'PUSH2 0x31e5', 'JUMP']>> 
9126-Stack size: 10 
9126-Equals Mem:<< []>> 
9126-NonEquals Mem: << [<12,16>]>> 
9126-Equals Sto:<< []>> 
9126-NonEquals Sto: << [<1,20>]>> 
9126-Useless: []
9126-Constancy: [(4, 0)]
9126-ContextAliasing: []

.....
-----
Block: 12699_34
12699_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_34-Stack size: 16 
12699_34-Equals Mem:<< []>> 
12699_34-NonEquals Mem: << [<5,8>]>> 
12699_34-Equals Sto:<< []>> 
12699_34-NonEquals Sto: << []>> 
12699_34-Useless: []
12699_34-Constancy: [(10, 0)]
12699_34-ContextAliasing: []

.....
-----
Block: 9169
9169Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
9169-Stack size: 10 
9169-Equals Mem:<< []>> 
9169-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
9169-Equals Sto:<< []>> 
9169-NonEquals Sto: << []>> 
9169-Useless: []
9169-Constancy: [(4, 0)]
9169-ContextAliasing: []

.....
-----
Block: 9230
9230Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x0a', 'SLOAD', 'DUP2', 'LT', 'DUP1', 'ISZERO', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x2439', 'JUMPI']>> 
9230-Stack size: 10 
9230-Equals Mem:<< []>> 
9230-NonEquals Mem: << [<5,9>]>> 
9230-Equals Sto:<< []>> 
9230-NonEquals Sto: << [<13,15>]>> 
9230-Useless: []
9230-Constancy: [(4, 0)]
9230-ContextAliasing: []

.....
-----
Block: 9302
9302Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9302-Stack size: 13 
9302-Equals Mem:<< []>> 
9302-NonEquals Mem: << [<11,14>]>> 
9302-Equals Sto:<< []>> 
9302-NonEquals Sto: << []>> 
9302-Useless: []
9302-Constancy: [(7, 0)]
9302-ContextAliasing: []

.....
-----
Block: 9338
9338Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9338-Stack size: 13 
9338-Equals Mem:<< []>> 
9338-NonEquals Mem: << [<11,14>]>> 
9338-Equals Sto:<< []>> 
9338-NonEquals Sto: << []>> 
9338-Useless: []
9338-Constancy: [(7, 0)]
9338-ContextAliasing: []

.....
-----
Block: 9374
9374Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9374-Stack size: 13 
9374-Equals Mem:<< []>> 
9374-NonEquals Mem: << [<11,14>]>> 
9374-Equals Sto:<< []>> 
9374-NonEquals Sto: << []>> 
9374-Useless: []
9374-Constancy: [(7, 0)]
9374-ContextAliasing: []

.....
-----
Block: 3649
3649Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'POP', 'PUSH0', 'PUSH1 0x21', 'SLOAD', 'PUSH1 0x1f', 'SLOAD', 'PUSH1 0x20', 'SLOAD', 'PUSH2 0x0e66', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
3649-Stack size: 13 
3649-Equals Mem:<< []>> 
3649-NonEquals Mem: << [<5,9>]>> 
3649-Equals Sto:<< []>> 
3649-NonEquals Sto: << [<13,18>, <13,20>, <13,22>, <18,20>, <18,22>, <20,22>]>> 
3649-Useless: []
3649-Constancy: [(7, 0)]
3649-ContextAliasing: []

.....
-----
Block: 12699_33
12699_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_33-Stack size: 21 
12699_33-Equals Mem:<< []>> 
12699_33-NonEquals Mem: << [<5,8>]>> 
12699_33-Equals Sto:<< []>> 
12699_33-NonEquals Sto: << []>> 
12699_33-Useless: []
12699_33-Constancy: [(15, 0), (6, 0)]
12699_33-ContextAliasing: []

.....
-----
Block: 12699_32
12699_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_32-Stack size: 20 
12699_32-Equals Mem:<< []>> 
12699_32-NonEquals Mem: << [<5,8>]>> 
12699_32-Equals Sto:<< []>> 
12699_32-NonEquals Sto: << []>> 
12699_32-Useless: []
12699_32-Constancy: [(14, 0), (5, 0)]
12699_32-ContextAliasing: []

.....
-----
Block: 12699_31
12699_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_31-Stack size: 24 
12699_31-Equals Mem:<< []>> 
12699_31-NonEquals Mem: << [<5,8>]>> 
12699_31-Equals Sto:<< []>> 
12699_31-NonEquals Sto: << []>> 
12699_31-Useless: []
12699_31-Constancy: [(18, 0), (8, 0), (7, 0)]
12699_31-ContextAliasing: []

.....
-----
Block: 12749_18
12749_18Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_18-Stack size: 22 
12749_18-Equals Mem:<< []>> 
12749_18-NonEquals Mem: << [<4,7>]>> 
12749_18-Equals Sto:<< []>> 
12749_18-NonEquals Sto: << []>> 
12749_18-Useless: []
12749_18-Constancy: [(16, 0), (6, 0), (5, 0), (0, 0)]
12749_18-ContextAliasing: []

.....
-----
Block: 12749_17
12749_17Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_17-Stack size: 21 
12749_17-Equals Mem:<< []>> 
12749_17-NonEquals Mem: << [<4,7>]>> 
12749_17-Equals Sto:<< []>> 
12749_17-NonEquals Sto: << []>> 
12749_17-Useless: []
12749_17-Constancy: [(15, 0), (5, 0), (4, 0), (0, 0)]
12749_17-ContextAliasing: []

.....
-----
Block: 10402
10402Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2805', 'JUMP']>> 
10402-Stack size: 21 
10402-Equals Mem:<< [<11,6>]>> 
10402-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
10402-Equals Sto:<< []>> 
10402-NonEquals Sto: << []>> 
10402-Useless: []
10402-Constancy: [(15, 0), (5, 0), (3, 0)]
10402-ContextAliasing: []

.....
-----
Block: 10256_4
10256_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_4-Stack size: 28 
10256_4-Equals Mem:<< []>> 
10256_4-NonEquals Mem: << [<6,1>]>> 
10256_4-Equals Sto:<< []>> 
10256_4-NonEquals Sto: << []>> 
10256_4-Useless: []
10256_4-Constancy: [(22, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
10256_4-ContextAliasing: [(2, 27)]

.....
-----
Block: 12101_10
12101_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_10-Stack size: 30 
12101_10-Equals Mem:<< []>> 
12101_10-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_10-Equals Sto:<< []>> 
12101_10-NonEquals Sto: << []>> 
12101_10-Useless: []
12101_10-Constancy: [(24, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
12101_10-ContextAliasing: [(4, 28)]

.....
-----
Block: 12125_10
12125_10Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_10-Stack size: 34 
12125_10-Equals Mem:<< []>> 
12125_10-NonEquals Mem: << [<11,5>]>> 
12125_10-Equals Sto:<< []>> 
12125_10-NonEquals Sto: << []>> 
12125_10-Useless: []
12125_10-Constancy: [(28, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_10-ContextAliasing: [(8, 28)]

.....
-----
Block: 12699_30
12699_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_30-Stack size: 33 
12699_30-Equals Mem:<< []>> 
12699_30-NonEquals Mem: << [<5,8>]>> 
12699_30-Equals Sto:<< []>> 
12699_30-NonEquals Sto: << []>> 
12699_30-Useless: []
12699_30-Constancy: [(27, 0), (17, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
12699_30-ContextAliasing: []

.....
-----
Block: 12970_0
12970_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12970_0-Stack size: 26 
12970_0-Equals Mem:<< []>> 
12970_0-NonEquals Mem: << [<5,8>]>> 
12970_0-Equals Sto:<< []>> 
12970_0-NonEquals Sto: << []>> 
12970_0-Useless: []
12970_0-Constancy: [(20, 0), (10, 0), (1, 0)]
12970_0-ContextAliasing: [(4, 23)]

.....
-----
Block: 10642
10642Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x29b6', 'SWAP2', 'SWAP1', 'PUSH2 0x32be', 'JUMP']>> 
10642-Stack size: 26 
10642-Equals Mem:<< [<18,6>]>> 
10642-NonEquals Mem: << []>> 
10642-Equals Sto:<< []>> 
10642-NonEquals Sto: << []>> 
10642-Useless: []
10642-Constancy: [(20, 0), (10, 0)]
10642-ContextAliasing: []

.....
-----
Block: 12970
12970Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12970-Stack size: 26 
12970-Equals Mem:<< []>> 
12970-NonEquals Mem: << [<5,8>]>> 
12970-Equals Sto:<< []>> 
12970-NonEquals Sto: << []>> 
12970-Useless: []
12970-Constancy: [(20, 0), (10, 0)]
12970-ContextAliasing: [(4, 23)]

.....
-----
Block: 7491_2
7491_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491_2-Stack size: 26 
7491_2-Equals Mem:<< []>> 
7491_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491_2-Equals Sto:<< []>> 
7491_2-NonEquals Sto: << []>> 
7491_2-Useless: []
7491_2-Constancy: [(20, 0), (10, 0), (1, 0)]
7491_2-ContextAliasing: []

.....
-----
Block: 7589_2
7589_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589_2-Stack size: 26 
7589_2-Equals Mem:<< []>> 
7589_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589_2-Equals Sto:<< []>> 
7589_2-NonEquals Sto: << []>> 
7589_2-Useless: []
7589_2-Constancy: [(20, 0), (10, 0), (1, 0)]
7589_2-ContextAliasing: []

.....
-----
Block: 7671_1
7671_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671_1-Stack size: 26 
7671_1-Equals Mem:<< [<12,27>, <17,30>]>> 
7671_1-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671_1-Equals Sto:<< []>> 
7671_1-NonEquals Sto: << []>> 
7671_1-Useless: []
7671_1-Constancy: [(20, 0), (10, 0), (1, 0)]
7671_1-ContextAliasing: []

.....
-----
Block: 10772
10772Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x2a68', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x32d9', 'JUMP']>> 
10772-Stack size: 22 
10772-Equals Mem:<< []>> 
10772-NonEquals Mem: << [<7,2>]>> 
10772-Equals Sto:<< []>> 
10772-NonEquals Sto: << []>> 
10772-Useless: []
10772-Constancy: [(16, 0), (6, 0)]
10772-ContextAliasing: []

.....
-----
Block: 13017
13017Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
13017-Stack size: 31 
13017-Equals Mem:<< []>> 
13017-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
13017-Equals Sto:<< []>> 
13017-NonEquals Sto: << []>> 
13017-Useless: []
13017-Constancy: [(25, 0), (15, 0), (4, 0)]
13017-ContextAliasing: [(9, 27)]

.....
-----
Block: 13067
13067Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x3302', 'JUMP']>> 
13067-Stack size: 37 
13067-Equals Mem:<< []>> 
13067-NonEquals Mem: << [<9,1>]>> 
13067-Equals Sto:<< []>> 
13067-NonEquals Sto: << []>> 
13067-Useless: []
13067-Constancy: [(31, 0), (21, 0), (10, 0), (5, 0), (3, 32)]
13067-ContextAliasing: [(15, 27)]

.....
-----
Block: 10402_0
10402_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2805', 'JUMP']>> 
10402_0-Stack size: 23 
10402_0-Equals Mem:<< [<11,6>]>> 
10402_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
10402_0-Equals Sto:<< []>> 
10402_0-NonEquals Sto: << []>> 
10402_0-Useless: []
10402_0-Constancy: [(17, 0), (7, 0), (3, 0)]
10402_0-ContextAliasing: []

.....
-----
Block: 10256_3
10256_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_3-Stack size: 30 
10256_3-Equals Mem:<< []>> 
10256_3-NonEquals Mem: << [<6,1>]>> 
10256_3-Equals Sto:<< []>> 
10256_3-NonEquals Sto: << []>> 
10256_3-Useless: []
10256_3-Constancy: [(24, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
10256_3-ContextAliasing: [(2, 29)]

.....
-----
Block: 12101_9
12101_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_9-Stack size: 32 
12101_9-Equals Mem:<< []>> 
12101_9-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_9-Equals Sto:<< []>> 
12101_9-NonEquals Sto: << []>> 
12101_9-Useless: []
12101_9-Constancy: [(26, 0), (16, 0), (12, 0), (8, 0), (3, 0)]
12101_9-ContextAliasing: [(4, 30)]

.....
-----
Block: 12125_9
12125_9Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_9-Stack size: 36 
12125_9-Equals Mem:<< []>> 
12125_9-NonEquals Mem: << [<11,5>]>> 
12125_9-Equals Sto:<< []>> 
12125_9-NonEquals Sto: << []>> 
12125_9-Useless: []
12125_9-Constancy: [(30, 0), (20, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_9-ContextAliasing: [(8, 30)]

.....
-----
Block: 12699_29
12699_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_29-Stack size: 35 
12699_29-Equals Mem:<< []>> 
12699_29-NonEquals Mem: << [<5,8>]>> 
12699_29-Equals Sto:<< []>> 
12699_29-NonEquals Sto: << []>> 
12699_29-Useless: []
12699_29-Constancy: [(29, 0), (19, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
12699_29-ContextAliasing: []

.....
-----
Block: 11031_2
11031_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_2-Stack size: 24 
11031_2-Equals Mem:<< [<11,6>]>> 
11031_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_2-Equals Sto:<< []>> 
11031_2-NonEquals Sto: << []>> 
11031_2-Useless: []
11031_2-Constancy: [(18, 0), (8, 0), (3, 0)]
11031_2-ContextAliasing: []

.....
-----
Block: 12065_3
12065_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_3-Stack size: 31 
12065_3-Equals Mem:<< []>> 
12065_3-NonEquals Mem: << [<6,1>]>> 
12065_3-Equals Sto:<< []>> 
12065_3-NonEquals Sto: << []>> 
12065_3-Useless: []
12065_3-Constancy: [(25, 0), (15, 0), (10, 0), (6, 0), (1, 0)]
12065_3-ContextAliasing: [(2, 30)]

.....
-----
Block: 12101_8
12101_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_8-Stack size: 33 
12101_8-Equals Mem:<< []>> 
12101_8-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_8-Equals Sto:<< []>> 
12101_8-NonEquals Sto: << []>> 
12101_8-Useless: []
12101_8-Constancy: [(27, 0), (17, 0), (12, 0), (8, 0), (3, 0)]
12101_8-ContextAliasing: [(4, 31)]

.....
-----
Block: 12125_8
12125_8Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_8-Stack size: 37 
12125_8-Equals Mem:<< []>> 
12125_8-NonEquals Mem: << [<11,5>]>> 
12125_8-Equals Sto:<< []>> 
12125_8-NonEquals Sto: << []>> 
12125_8-Useless: []
12125_8-Constancy: [(31, 0), (21, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_8-ContextAliasing: [(8, 31)]

.....
-----
Block: 12749_15
12749_15Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_15-Stack size: 35 
12749_15-Equals Mem:<< []>> 
12749_15-NonEquals Mem: << [<4,7>]>> 
12749_15-Equals Sto:<< []>> 
12749_15-NonEquals Sto: << []>> 
12749_15-Useless: []
12749_15-Constancy: [(29, 0), (19, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_15-ContextAliasing: []

.....
-----
Block: 11031_3
11031_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_3-Stack size: 25 
11031_3-Equals Mem:<< [<11,6>]>> 
11031_3-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_3-Equals Sto:<< []>> 
11031_3-NonEquals Sto: << []>> 
11031_3-Useless: []
11031_3-Constancy: [(19, 0), (9, 0), (3, 0)]
11031_3-ContextAliasing: []

.....
-----
Block: 12065_2
12065_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_2-Stack size: 32 
12065_2-Equals Mem:<< []>> 
12065_2-NonEquals Mem: << [<6,1>]>> 
12065_2-Equals Sto:<< []>> 
12065_2-NonEquals Sto: << []>> 
12065_2-Useless: []
12065_2-Constancy: [(26, 0), (16, 0), (10, 0), (6, 0), (1, 0)]
12065_2-ContextAliasing: [(2, 31)]

.....
-----
Block: 12101_7
12101_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_7-Stack size: 34 
12101_7-Equals Mem:<< []>> 
12101_7-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_7-Equals Sto:<< []>> 
12101_7-NonEquals Sto: << []>> 
12101_7-Useless: []
12101_7-Constancy: [(28, 0), (18, 0), (12, 0), (8, 0), (3, 0)]
12101_7-ContextAliasing: [(4, 32)]

.....
-----
Block: 12125_7
12125_7Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_7-Stack size: 38 
12125_7-Equals Mem:<< []>> 
12125_7-NonEquals Mem: << [<11,5>]>> 
12125_7-Equals Sto:<< []>> 
12125_7-NonEquals Sto: << []>> 
12125_7-Useless: []
12125_7-Constancy: [(32, 0), (22, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_7-ContextAliasing: [(8, 32)]

.....
-----
Block: 12749_13
12749_13Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_13-Stack size: 36 
12749_13-Equals Mem:<< []>> 
12749_13-NonEquals Mem: << [<4,7>]>> 
12749_13-Equals Sto:<< []>> 
12749_13-NonEquals Sto: << []>> 
12749_13-Useless: []
12749_13-Constancy: [(30, 0), (20, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_13-ContextAliasing: []

.....
-----
Block: 12699_26
12699_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_26-Stack size: 29 
12699_26-Equals Mem:<< []>> 
12699_26-NonEquals Mem: << [<5,8>]>> 
12699_26-Equals Sto:<< []>> 
12699_26-NonEquals Sto: << []>> 
12699_26-Useless: []
12699_26-Constancy: [(23, 0), (13, 0), (6, 0)]
12699_26-ContextAliasing: []

.....
-----
Block: 12699_25
12699_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_25-Stack size: 28 
12699_25-Equals Mem:<< []>> 
12699_25-NonEquals Mem: << [<5,8>]>> 
12699_25-Equals Sto:<< []>> 
12699_25-NonEquals Sto: << []>> 
12699_25-Useless: []
12699_25-Constancy: [(22, 0), (12, 0), (5, 0)]
12699_25-ContextAliasing: []

.....
-----
Block: 7491_1
7491_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491_1-Stack size: 30 
7491_1-Equals Mem:<< []>> 
7491_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491_1-Equals Sto:<< []>> 
7491_1-NonEquals Sto: << []>> 
7491_1-Useless: []
7491_1-Constancy: [(24, 0), (1, 0)]
7491_1-ContextAliasing: []

.....
-----
Block: 7589_1
7589_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589_1-Stack size: 30 
7589_1-Equals Mem:<< []>> 
7589_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589_1-Equals Sto:<< []>> 
7589_1-NonEquals Sto: << []>> 
7589_1-Useless: []
7589_1-Constancy: [(24, 0), (1, 0)]
7589_1-ContextAliasing: []

.....
-----
Block: 7671_2
7671_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671_2-Stack size: 30 
7671_2-Equals Mem:<< [<12,27>, <17,30>]>> 
7671_2-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
7671_2-Equals Sto:<< []>> 
7671_2-NonEquals Sto: << []>> 
7671_2-Useless: []
7671_2-Constancy: [(24, 0), (1, 0)]
7671_2-ContextAliasing: []

.....
-----
Block: 11279
11279Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2c34', 'SWAP2', 'SWAP1', 'PUSH2 0x3348', 'JUMP']>> 
11279-Stack size: 31 
11279-Equals Mem:<< [<19,7>]>> 
11279-NonEquals Mem: << []>> 
11279-Equals Sto:<< []>> 
11279-NonEquals Sto: << []>> 
11279-Useless: []
11279-Constancy: [(25, 0)]
11279-ContextAliasing: []

.....
-----
Block: 12699_27
12699_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_27-Stack size: 34 
12699_27-Equals Mem:<< []>> 
12699_27-NonEquals Mem: << [<5,8>]>> 
12699_27-Equals Sto:<< []>> 
12699_27-NonEquals Sto: << []>> 
12699_27-Useless: []
12699_27-Constancy: [(28, 0), (18, 0), (12, 0), (6, 0), (5, 0)]
12699_27-ContextAliasing: []

.....
-----
Block: 12749_14
12749_14Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_14-Stack size: 34 
12749_14-Equals Mem:<< []>> 
12749_14-NonEquals Mem: << [<4,7>]>> 
12749_14-Equals Sto:<< []>> 
12749_14-NonEquals Sto: << []>> 
12749_14-Useless: []
12749_14-Constancy: [(28, 0), (18, 0), (12, 0), (6, 0), (0, 0)]
12749_14-ContextAliasing: []

.....
-----
Block: 10950_2
10950_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_2-Stack size: 29 
10950_2-Equals Mem:<< []>> 
10950_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_2-Equals Sto:<< []>> 
10950_2-NonEquals Sto: << []>> 
10950_2-Useless: []
10950_2-Constancy: [(23, 0), (13, 0), (7, 0), (1, 0)]
10950_2-ContextAliasing: []

.....
-----
Block: 12699_28
12699_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_28-Stack size: 33 
12699_28-Equals Mem:<< []>> 
12699_28-NonEquals Mem: << [<5,8>]>> 
12699_28-Equals Sto:<< []>> 
12699_28-NonEquals Sto: << []>> 
12699_28-Useless: []
12699_28-Constancy: [(27, 0), (17, 0), (12, 0), (6, 0), (5, 0)]
12699_28-ContextAliasing: []

.....
-----
Block: 12749_16
12749_16Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_16-Stack size: 33 
12749_16-Equals Mem:<< []>> 
12749_16-NonEquals Mem: << [<4,7>]>> 
12749_16-Equals Sto:<< []>> 
12749_16-NonEquals Sto: << []>> 
12749_16-Useless: []
12749_16-Constancy: [(27, 0), (17, 0), (12, 0), (6, 0), (0, 0)]
12749_16-ContextAliasing: []

.....
-----
Block: 10950_3
10950_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_3-Stack size: 28 
10950_3-Equals Mem:<< []>> 
10950_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_3-Equals Sto:<< []>> 
10950_3-NonEquals Sto: << []>> 
10950_3-Useless: []
10950_3-Constancy: [(22, 0), (12, 0), (7, 0), (1, 0)]
10950_3-ContextAliasing: []

.....
-----
Block: 9470
9470Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
9470-Stack size: 13 
9470-Equals Mem:<< []>> 
9470-NonEquals Mem: << [<11,14>]>> 
9470-Equals Sto:<< []>> 
9470-NonEquals Sto: << []>> 
9470-Useless: []
9470-Constancy: [(7, 0)]
9470-ContextAliasing: []

.....
-----
Block: 12699_24
12699_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_24-Stack size: 17 
12699_24-Equals Mem:<< []>> 
12699_24-NonEquals Mem: << [<5,8>]>> 
12699_24-Equals Sto:<< []>> 
12699_24-NonEquals Sto: << []>> 
12699_24-Useless: []
12699_24-Constancy: [(11, 0)]
12699_24-ContextAliasing: []

.....
-----
Block: 9546
9546Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9546-Stack size: 13 
9546-Equals Mem:<< []>> 
9546-NonEquals Mem: << [<11,14>]>> 
9546-Equals Sto:<< []>> 
9546-NonEquals Sto: << []>> 
9546-Useless: []
9546-Constancy: [(7, 0)]
9546-ContextAliasing: []

.....
-----
Block: 11774
11774Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2e22', 'SWAP2', 'SWAP1', 'PUSH2 0x320b', 'JUMP']>> 
11774-Stack size: 19 
11774-Equals Mem:<< [<18,6>]>> 
11774-NonEquals Mem: << []>> 
11774-Equals Sto:<< []>> 
11774-NonEquals Sto: << []>> 
11774-Useless: []
11774-Constancy: [(13, 0), (5, 0), (4, 0)]
11774-ContextAliasing: []

.....
-----
Block: 11031_1
11031_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_1-Stack size: 19 
11031_1-Equals Mem:<< [<11,6>]>> 
11031_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_1-Equals Sto:<< []>> 
11031_1-NonEquals Sto: << []>> 
11031_1-Useless: []
11031_1-Constancy: [(13, 0), (5, 0), (3, 0)]
11031_1-ContextAliasing: []

.....
-----
Block: 12065_1
12065_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_1-Stack size: 26 
12065_1-Equals Mem:<< []>> 
12065_1-NonEquals Mem: << [<6,1>]>> 
12065_1-Equals Sto:<< []>> 
12065_1-NonEquals Sto: << []>> 
12065_1-Useless: []
12065_1-Constancy: [(20, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
12065_1-ContextAliasing: [(2, 25)]

.....
-----
Block: 12101_6
12101_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_6-Stack size: 28 
12101_6-Equals Mem:<< []>> 
12101_6-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_6-Equals Sto:<< []>> 
12101_6-NonEquals Sto: << []>> 
12101_6-Useless: []
12101_6-Constancy: [(22, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
12101_6-ContextAliasing: [(4, 26)]

.....
-----
Block: 12125_6
12125_6Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_6-Stack size: 32 
12125_6-Equals Mem:<< []>> 
12125_6-NonEquals Mem: << [<11,5>]>> 
12125_6-Equals Sto:<< []>> 
12125_6-NonEquals Sto: << []>> 
12125_6-Useless: []
12125_6-Constancy: [(26, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_6-ContextAliasing: [(8, 26)]

.....
-----
Block: 12749_11
12749_11Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_11-Stack size: 30 
12749_11-Equals Mem:<< []>> 
12749_11-NonEquals Mem: << [<4,7>]>> 
12749_11-Equals Sto:<< []>> 
12749_11-NonEquals Sto: << []>> 
12749_11-Useless: []
12749_11-Constancy: [(24, 0), (16, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_11-ContextAliasing: []

.....
-----
Block: 11421_1
11421_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_1-Stack size: 20 
11421_1-Equals Mem:<< []>> 
11421_1-NonEquals Mem: << [<6,1>]>> 
11421_1-Equals Sto:<< []>> 
11421_1-NonEquals Sto: << []>> 
11421_1-Useless: []
11421_1-Constancy: [(14, 0), (6, 0), (2, 0)]
11421_1-ContextAliasing: []

.....
-----
Block: 11459_1
11459_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_1-Stack size: 20 
11459_1-Equals Mem:<< []>> 
11459_1-NonEquals Mem: << [<6,1>]>> 
11459_1-Equals Sto:<< []>> 
11459_1-NonEquals Sto: << []>> 
11459_1-Useless: []
11459_1-Constancy: [(14, 0), (6, 0), (2, 0)]
11459_1-ContextAliasing: []

.....
-----
Block: 10256_2
10256_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_2-Stack size: 26 
10256_2-Equals Mem:<< []>> 
10256_2-NonEquals Mem: << [<6,1>]>> 
10256_2-Equals Sto:<< []>> 
10256_2-NonEquals Sto: << []>> 
10256_2-Useless: []
10256_2-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
10256_2-ContextAliasing: [(2, 25)]

.....
-----
Block: 12101_5
12101_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_5-Stack size: 28 
12101_5-Equals Mem:<< []>> 
12101_5-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_5-Equals Sto:<< []>> 
12101_5-NonEquals Sto: << []>> 
12101_5-Useless: []
12101_5-Constancy: [(22, 0), (14, 0), (10, 0), (3, 0)]
12101_5-ContextAliasing: [(4, 26)]

.....
-----
Block: 12125_5
12125_5Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_5-Stack size: 32 
12125_5-Equals Mem:<< []>> 
12125_5-NonEquals Mem: << [<11,5>]>> 
12125_5-Equals Sto:<< []>> 
12125_5-NonEquals Sto: << []>> 
12125_5-Useless: []
12125_5-Constancy: [(26, 0), (18, 0), (14, 0), (7, 0), (3, 0), (2, 32)]
12125_5-ContextAliasing: [(8, 26)]

.....
-----
Block: 12699_22
12699_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_22-Stack size: 31 
12699_22-Equals Mem:<< []>> 
12699_22-NonEquals Mem: << [<5,8>]>> 
12699_22-Equals Sto:<< []>> 
12699_22-NonEquals Sto: << []>> 
12699_22-Useless: []
12699_22-Constancy: [(25, 0), (17, 0), (13, 0), (6, 0), (5, 0)]
12699_22-ContextAliasing: []

.....
-----
Block: 11542_1
11542_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_1-Stack size: 21 
11542_1-Equals Mem:<< [<12,29>]>> 
11542_1-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_1-Equals Sto:<< [<24,31>]>> 
11542_1-NonEquals Sto: << []>> 
11542_1-Useless: []
11542_1-Constancy: [(15, 0), (7, 0), (3, 0)]
11542_1-ContextAliasing: []

.....
-----
Block: 12699_21
12699_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_21-Stack size: 30 
12699_21-Equals Mem:<< []>> 
12699_21-NonEquals Mem: << [<5,8>]>> 
12699_21-Equals Sto:<< []>> 
12699_21-NonEquals Sto: << []>> 
12699_21-Useless: []
12699_21-Constancy: [(24, 0), (16, 0), (12, 0), (6, 0), (5, 0)]
12699_21-ContextAliasing: []

.....
-----
Block: 10324_1
10324_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_1-Stack size: 25 
10324_1-Equals Mem:<< []>> 
10324_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_1-Equals Sto:<< []>> 
10324_1-NonEquals Sto: << []>> 
10324_1-Useless: []
10324_1-Constancy: [(19, 0), (11, 0), (7, 0), (1, 0)]
10324_1-ContextAliasing: []

.....
-----
Block: 11588_1
11588_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_1-Stack size: 21 
11588_1-Equals Mem:<< []>> 
11588_1-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_1-Equals Sto:<< []>> 
11588_1-NonEquals Sto: << []>> 
11588_1-Useless: []
11588_1-Constancy: [(15, 0), (7, 0), (3, 0)]
11588_1-ContextAliasing: []

.....
-----
Block: 11893
11893Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x2ed1', 'JUMPI']>> 
11893-Stack size: 16 
11893-Equals Mem:<< [<14,26>]>> 
11893-NonEquals Mem: << [<21,14>, <21,26>]>> 
11893-Equals Sto:<< []>> 
11893-NonEquals Sto: << []>> 
11893-Useless: []
11893-Constancy: [(10, 0), (2, 0)]
11893-ContextAliasing: []

.....
-----
Block: 12699_23
12699_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_23-Stack size: 28 
12699_23-Equals Mem:<< []>> 
12699_23-NonEquals Mem: << [<5,8>]>> 
12699_23-Equals Sto:<< []>> 
12699_23-NonEquals Sto: << []>> 
12699_23-Useless: []
12699_23-Constancy: [(22, 0), (14, 0), (12, 0), (6, 0), (5, 0)]
12699_23-ContextAliasing: []

.....
-----
Block: 12749_12
12749_12Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_12-Stack size: 28 
12749_12-Equals Mem:<< []>> 
12749_12-NonEquals Mem: << [<4,7>]>> 
12749_12-Equals Sto:<< []>> 
12749_12-NonEquals Sto: << []>> 
12749_12-Useless: []
12749_12-Constancy: [(22, 0), (14, 0), (12, 0), (6, 0), (0, 0)]
12749_12-ContextAliasing: []

.....
-----
Block: 10950_1
10950_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_1-Stack size: 23 
10950_1-Equals Mem:<< []>> 
10950_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_1-Equals Sto:<< []>> 
10950_1-NonEquals Sto: << []>> 
10950_1-Useless: []
10950_1-Constancy: [(17, 0), (9, 0), (7, 0), (1, 0)]
10950_1-ContextAliasing: []

.....
-----
Block: 9590
9590Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SWAP1', 'SWAP4', 'DIV', 'DUP4', 'AND', 'ISZERO', 'SWAP3', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x25c5', 'JUMPI']>> 
9590-Stack size: 12 
9590-Equals Mem:<< []>> 
9590-NonEquals Mem: << [<13,16>]>> 
9590-Equals Sto:<< []>> 
9590-NonEquals Sto: << [<2,20>]>> 
9590-Useless: []
9590-Constancy: [(6, 0)]
9590-ContextAliasing: []

.....
-----
Block: 9640
9640Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9640-Stack size: 15 
9640-Equals Mem:<< []>> 
9640-NonEquals Mem: << [<11,14>]>> 
9640-Equals Sto:<< []>> 
9640-NonEquals Sto: << []>> 
9640-Useless: []
9640-Constancy: [(9, 0), (1, 0)]
9640-ContextAliasing: []

.....
-----
Block: 9669
9669Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x2605', 'JUMPI']>> 
9669-Stack size: 15 
9669-Equals Mem:<< []>> 
9669-NonEquals Mem: << [<11,14>]>> 
9669-Equals Sto:<< []>> 
9669-NonEquals Sto: << []>> 
9669-Useless: []
9669-Constancy: [(9, 0), (1, 0)]
9669-ContextAliasing: []

.....
-----
Block: 9705
9705Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
9705-Stack size: 15 
9705-Equals Mem:<< []>> 
9705-NonEquals Mem: << [<11,14>]>> 
9705-Equals Sto:<< []>> 
9705-NonEquals Sto: << []>> 
9705-Useless: []
9705-Constancy: [(9, 0)]
9705-ContextAliasing: []

.....
-----
Block: 9758
9758Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2645', 'JUMPI']>> 
9758-Stack size: 15 
9758-Equals Mem:<< []>> 
9758-NonEquals Mem: << [<10,13>]>> 
9758-Equals Sto:<< []>> 
9758-NonEquals Sto: << []>> 
9758-Useless: []
9758-Constancy: [(9, 0), (0, 0)]
9758-ContextAliasing: []

.....
-----
Block: 11031_0
11031_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031_0-Stack size: 18 
11031_0-Equals Mem:<< [<11,6>]>> 
11031_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031_0-Equals Sto:<< []>> 
11031_0-NonEquals Sto: << []>> 
11031_0-Useless: []
11031_0-Constancy: [(12, 0), (3, 0)]
11031_0-ContextAliasing: []

.....
-----
Block: 12065_0
12065_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065_0-Stack size: 25 
12065_0-Equals Mem:<< []>> 
12065_0-NonEquals Mem: << [<6,1>]>> 
12065_0-Equals Sto:<< []>> 
12065_0-NonEquals Sto: << []>> 
12065_0-Useless: []
12065_0-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
12065_0-ContextAliasing: [(2, 24)]

.....
-----
Block: 12101_4
12101_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_4-Stack size: 27 
12101_4-Equals Mem:<< []>> 
12101_4-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_4-Equals Sto:<< []>> 
12101_4-NonEquals Sto: << []>> 
12101_4-Useless: []
12101_4-Constancy: [(21, 0), (12, 0), (8, 0), (3, 0)]
12101_4-ContextAliasing: [(4, 25)]

.....
-----
Block: 12125_4
12125_4Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_4-Stack size: 31 
12125_4-Equals Mem:<< []>> 
12125_4-NonEquals Mem: << [<11,5>]>> 
12125_4-Equals Sto:<< []>> 
12125_4-NonEquals Sto: << []>> 
12125_4-Useless: []
12125_4-Constancy: [(25, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_4-ContextAliasing: [(8, 25)]

.....
-----
Block: 12749_9
12749_9Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_9-Stack size: 29 
12749_9-Equals Mem:<< []>> 
12749_9-NonEquals Mem: << [<4,7>]>> 
12749_9-Equals Sto:<< []>> 
12749_9-NonEquals Sto: << []>> 
12749_9-Useless: []
12749_9-Constancy: [(23, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_9-ContextAliasing: []

.....
-----
Block: 12699_19
12699_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_19-Stack size: 21 
12699_19-Equals Mem:<< []>> 
12699_19-NonEquals Mem: << [<5,8>]>> 
12699_19-Equals Sto:<< []>> 
12699_19-NonEquals Sto: << []>> 
12699_19-Useless: []
12699_19-Constancy: [(15, 0)]
12699_19-ContextAliasing: []

.....
-----
Block: 12749_8
12749_8Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_8-Stack size: 19 
12749_8-Equals Mem:<< []>> 
12749_8-NonEquals Mem: << [<4,7>]>> 
12749_8-Equals Sto:<< []>> 
12749_8-NonEquals Sto: << []>> 
12749_8-Useless: []
12749_8-Constancy: [(13, 0), (0, 0)]
12749_8-ContextAliasing: []

.....
-----
Block: 12699_18
12699_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_18-Stack size: 23 
12699_18-Equals Mem:<< []>> 
12699_18-NonEquals Mem: << [<5,8>]>> 
12699_18-Equals Sto:<< []>> 
12699_18-NonEquals Sto: << []>> 
12699_18-Useless: []
12699_18-Constancy: [(17, 0), (6, 32), (5, 0)]
12699_18-ContextAliasing: []

.....
-----
Block: 12699_17
12699_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_17-Stack size: 21 
12699_17-Equals Mem:<< []>> 
12699_17-NonEquals Mem: << [<5,8>]>> 
12699_17-Equals Sto:<< []>> 
12699_17-NonEquals Sto: << []>> 
12699_17-Useless: []
12699_17-Constancy: [(15, 0)]
12699_17-ContextAliasing: []

.....
-----
Block: 12749_7
12749_7Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_7-Stack size: 19 
12749_7-Equals Mem:<< []>> 
12749_7-NonEquals Mem: << [<4,7>]>> 
12749_7-Equals Sto:<< []>> 
12749_7-NonEquals Sto: << []>> 
12749_7-Useless: []
12749_7-Constancy: [(13, 0), (0, 0)]
12749_7-ContextAliasing: []

.....
-----
Block: 12699_16
12699_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_16-Stack size: 23 
12699_16-Equals Mem:<< []>> 
12699_16-NonEquals Mem: << [<5,8>]>> 
12699_16-Equals Sto:<< []>> 
12699_16-NonEquals Sto: << []>> 
12699_16-Useless: []
12699_16-Constancy: [(17, 0), (5, 0)]
12699_16-ContextAliasing: []

.....
-----
Block: 12699_15
12699_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_15-Stack size: 21 
12699_15-Equals Mem:<< []>> 
12699_15-NonEquals Mem: << [<5,8>]>> 
12699_15-Equals Sto:<< []>> 
12699_15-NonEquals Sto: << []>> 
12699_15-Useless: []
12699_15-Constancy: [(15, 0)]
12699_15-ContextAliasing: []

.....
-----
Block: 12749_6
12749_6Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_6-Stack size: 19 
12749_6-Equals Mem:<< []>> 
12749_6-NonEquals Mem: << [<4,7>]>> 
12749_6-Equals Sto:<< []>> 
12749_6-NonEquals Sto: << []>> 
12749_6-Useless: []
12749_6-Constancy: [(13, 0), (0, 0)]
12749_6-ContextAliasing: []

.....
-----
Block: 12699_14
12699_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_14-Stack size: 23 
12699_14-Equals Mem:<< []>> 
12699_14-NonEquals Mem: << [<5,8>]>> 
12699_14-Equals Sto:<< []>> 
12699_14-NonEquals Sto: << []>> 
12699_14-Useless: []
12699_14-Constancy: [(17, 0), (5, 0)]
12699_14-ContextAliasing: []

.....
-----
Block: 11421_0
11421_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421_0-Stack size: 19 
11421_0-Equals Mem:<< []>> 
11421_0-NonEquals Mem: << [<6,1>]>> 
11421_0-Equals Sto:<< []>> 
11421_0-NonEquals Sto: << []>> 
11421_0-Useless: []
11421_0-Constancy: [(13, 0)]
11421_0-ContextAliasing: []

.....
-----
Block: 11459_0
11459_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459_0-Stack size: 19 
11459_0-Equals Mem:<< []>> 
11459_0-NonEquals Mem: << [<6,1>]>> 
11459_0-Equals Sto:<< []>> 
11459_0-NonEquals Sto: << []>> 
11459_0-Useless: []
11459_0-Constancy: [(13, 0)]
11459_0-ContextAliasing: []

.....
-----
Block: 10256_1
10256_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_1-Stack size: 25 
10256_1-Equals Mem:<< []>> 
10256_1-NonEquals Mem: << [<6,1>]>> 
10256_1-Equals Sto:<< []>> 
10256_1-NonEquals Sto: << []>> 
10256_1-Useless: []
10256_1-Constancy: [(19, 0), (1, 0)]
10256_1-ContextAliasing: [(2, 24)]

.....
-----
Block: 12101_2
12101_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_2-Stack size: 27 
12101_2-Equals Mem:<< []>> 
12101_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_2-Equals Sto:<< []>> 
12101_2-NonEquals Sto: << []>> 
12101_2-Useless: []
12101_2-Constancy: [(21, 0), (3, 0)]
12101_2-ContextAliasing: [(4, 25)]

.....
-----
Block: 12125_2
12125_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_2-Stack size: 31 
12125_2-Equals Mem:<< []>> 
12125_2-NonEquals Mem: << [<11,5>]>> 
12125_2-Equals Sto:<< []>> 
12125_2-NonEquals Sto: << []>> 
12125_2-Useless: []
12125_2-Constancy: [(25, 0), (7, 0), (3, 0), (2, 32)]
12125_2-ContextAliasing: [(8, 25)]

.....
-----
Block: 12699_6
12699_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_6-Stack size: 30 
12699_6-Equals Mem:<< []>> 
12699_6-NonEquals Mem: << [<5,8>]>> 
12699_6-Equals Sto:<< []>> 
12699_6-NonEquals Sto: << []>> 
12699_6-Useless: []
12699_6-Constancy: [(24, 0), (6, 0), (5, 0)]
12699_6-ContextAliasing: []

.....
-----
Block: 11542_0
11542_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542_0-Stack size: 20 
11542_0-Equals Mem:<< [<12,29>]>> 
11542_0-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542_0-Equals Sto:<< [<24,31>]>> 
11542_0-NonEquals Sto: << []>> 
11542_0-Useless: []
11542_0-Constancy: [(14, 0)]
11542_0-ContextAliasing: []

.....
-----
Block: 12699_5
12699_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_5-Stack size: 29 
12699_5-Equals Mem:<< []>> 
12699_5-NonEquals Mem: << [<5,8>]>> 
12699_5-Equals Sto:<< []>> 
12699_5-NonEquals Sto: << []>> 
12699_5-Useless: []
12699_5-Constancy: [(23, 0), (6, 0), (5, 0)]
12699_5-ContextAliasing: []

.....
-----
Block: 10324_0
10324_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324_0-Stack size: 24 
10324_0-Equals Mem:<< []>> 
10324_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324_0-Equals Sto:<< []>> 
10324_0-NonEquals Sto: << []>> 
10324_0-Useless: []
10324_0-Constancy: [(18, 0), (1, 0)]
10324_0-ContextAliasing: []

.....
-----
Block: 11588_0
11588_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588_0-Stack size: 20 
11588_0-Equals Mem:<< []>> 
11588_0-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588_0-Equals Sto:<< []>> 
11588_0-NonEquals Sto: << []>> 
11588_0-Useless: []
11588_0-Constancy: [(14, 0)]
11588_0-ContextAliasing: []

.....
-----
Block: 12699_4
12699_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_4-Stack size: 20 
12699_4-Equals Mem:<< []>> 
12699_4-NonEquals Mem: << [<5,8>]>> 
12699_4-Equals Sto:<< []>> 
12699_4-NonEquals Sto: << []>> 
12699_4-Useless: []
12699_4-Constancy: [(14, 0)]
12699_4-ContextAliasing: []

.....
-----
Block: 12699_20
12699_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_20-Stack size: 27 
12699_20-Equals Mem:<< []>> 
12699_20-NonEquals Mem: << [<5,8>]>> 
12699_20-Equals Sto:<< []>> 
12699_20-NonEquals Sto: << []>> 
12699_20-Useless: []
12699_20-Constancy: [(21, 0), (12, 0), (6, 0), (5, 0)]
12699_20-ContextAliasing: []

.....
-----
Block: 12749_10
12749_10Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_10-Stack size: 27 
12749_10-Equals Mem:<< []>> 
12749_10-NonEquals Mem: << [<4,7>]>> 
12749_10-Equals Sto:<< []>> 
12749_10-NonEquals Sto: << []>> 
12749_10-Useless: []
12749_10-Constancy: [(21, 0), (12, 0), (6, 0), (0, 0)]
12749_10-ContextAliasing: []

.....
-----
Block: 10950_0
10950_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950_0-Stack size: 22 
10950_0-Equals Mem:<< []>> 
10950_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950_0-Equals Sto:<< []>> 
10950_0-NonEquals Sto: << []>> 
10950_0-Useless: []
10950_0-Constancy: [(16, 0), (7, 0), (1, 0)]
10950_0-ContextAliasing: []

.....
-----
Block: 9978
9978Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2722', 'JUMPI']>> 
9978-Stack size: 15 
9978-Equals Mem:<< []>> 
9978-NonEquals Mem: << [<11,14>]>> 
9978-Equals Sto:<< []>> 
9978-NonEquals Sto: << []>> 
9978-Useless: []
9978-Constancy: [(9, 0), (0, 0)]
9978-ContextAliasing: []

.....
-----
Block: 11031
11031Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031-Stack size: 18 
11031-Equals Mem:<< [<11,6>]>> 
11031-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
11031-Equals Sto:<< []>> 
11031-NonEquals Sto: << []>> 
11031-Useless: []
11031-Constancy: [(12, 0), (3, 0)]
11031-ContextAliasing: []

.....
-----
Block: 12065
12065Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065-Stack size: 25 
12065-Equals Mem:<< []>> 
12065-NonEquals Mem: << [<6,1>]>> 
12065-Equals Sto:<< []>> 
12065-NonEquals Sto: << []>> 
12065-Useless: []
12065-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
12065-ContextAliasing: [(2, 24)]

.....
-----
Block: 12101_3
12101_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_3-Stack size: 27 
12101_3-Equals Mem:<< []>> 
12101_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_3-Equals Sto:<< []>> 
12101_3-NonEquals Sto: << []>> 
12101_3-Useless: []
12101_3-Constancy: [(21, 0), (12, 0), (8, 0), (3, 0)]
12101_3-ContextAliasing: [(4, 25)]

.....
-----
Block: 12125_3
12125_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_3-Stack size: 31 
12125_3-Equals Mem:<< []>> 
12125_3-NonEquals Mem: << [<11,5>]>> 
12125_3-Equals Sto:<< []>> 
12125_3-NonEquals Sto: << []>> 
12125_3-Useless: []
12125_3-Constancy: [(25, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
12125_3-ContextAliasing: [(8, 25)]

.....
-----
Block: 12749_4
12749_4Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_4-Stack size: 29 
12749_4-Equals Mem:<< []>> 
12749_4-NonEquals Mem: << [<4,7>]>> 
12749_4-Equals Sto:<< []>> 
12749_4-NonEquals Sto: << []>> 
12749_4-Useless: []
12749_4-Constancy: [(23, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
12749_4-ContextAliasing: []

.....
-----
Block: 12699_12
12699_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_12-Stack size: 21 
12699_12-Equals Mem:<< []>> 
12699_12-NonEquals Mem: << [<5,8>]>> 
12699_12-Equals Sto:<< []>> 
12699_12-NonEquals Sto: << []>> 
12699_12-Useless: []
12699_12-Constancy: [(15, 0)]
12699_12-ContextAliasing: []

.....
-----
Block: 12749_3
12749_3Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_3-Stack size: 19 
12749_3-Equals Mem:<< []>> 
12749_3-NonEquals Mem: << [<4,7>]>> 
12749_3-Equals Sto:<< []>> 
12749_3-NonEquals Sto: << []>> 
12749_3-Useless: []
12749_3-Constancy: [(13, 0), (0, 0)]
12749_3-ContextAliasing: []

.....
-----
Block: 12699_11
12699_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_11-Stack size: 23 
12699_11-Equals Mem:<< []>> 
12699_11-NonEquals Mem: << [<5,8>]>> 
12699_11-Equals Sto:<< []>> 
12699_11-NonEquals Sto: << []>> 
12699_11-Useless: []
12699_11-Constancy: [(17, 0), (6, 32), (5, 0)]
12699_11-ContextAliasing: []

.....
-----
Block: 12699_10
12699_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_10-Stack size: 21 
12699_10-Equals Mem:<< []>> 
12699_10-NonEquals Mem: << [<5,8>]>> 
12699_10-Equals Sto:<< []>> 
12699_10-NonEquals Sto: << []>> 
12699_10-Useless: []
12699_10-Constancy: [(15, 0)]
12699_10-ContextAliasing: []

.....
-----
Block: 12749_2
12749_2Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_2-Stack size: 19 
12749_2-Equals Mem:<< []>> 
12749_2-NonEquals Mem: << [<4,7>]>> 
12749_2-Equals Sto:<< []>> 
12749_2-NonEquals Sto: << []>> 
12749_2-Useless: []
12749_2-Constancy: [(13, 0), (0, 0)]
12749_2-ContextAliasing: []

.....
-----
Block: 12699_9
12699_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_9-Stack size: 23 
12699_9-Equals Mem:<< []>> 
12699_9-NonEquals Mem: << [<5,8>]>> 
12699_9-Equals Sto:<< []>> 
12699_9-NonEquals Sto: << []>> 
12699_9-Useless: []
12699_9-Constancy: [(17, 0), (5, 0)]
12699_9-ContextAliasing: []

.....
-----
Block: 12699_8
12699_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_8-Stack size: 21 
12699_8-Equals Mem:<< []>> 
12699_8-NonEquals Mem: << [<5,8>]>> 
12699_8-Equals Sto:<< []>> 
12699_8-NonEquals Sto: << []>> 
12699_8-Useless: []
12699_8-Constancy: [(15, 0)]
12699_8-ContextAliasing: []

.....
-----
Block: 12749_1
12749_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_1-Stack size: 19 
12749_1-Equals Mem:<< []>> 
12749_1-NonEquals Mem: << [<4,7>]>> 
12749_1-Equals Sto:<< []>> 
12749_1-NonEquals Sto: << []>> 
12749_1-Useless: []
12749_1-Constancy: [(13, 0), (0, 0)]
12749_1-ContextAliasing: []

.....
-----
Block: 12699_7
12699_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_7-Stack size: 23 
12699_7-Equals Mem:<< []>> 
12699_7-NonEquals Mem: << [<5,8>]>> 
12699_7-Equals Sto:<< []>> 
12699_7-NonEquals Sto: << []>> 
12699_7-Useless: []
12699_7-Constancy: [(17, 0), (5, 0)]
12699_7-ContextAliasing: []

.....
-----
Block: 12699_13
12699_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_13-Stack size: 27 
12699_13-Equals Mem:<< []>> 
12699_13-NonEquals Mem: << [<5,8>]>> 
12699_13-Equals Sto:<< []>> 
12699_13-NonEquals Sto: << []>> 
12699_13-Useless: []
12699_13-Constancy: [(21, 0), (12, 0), (6, 0), (5, 0)]
12699_13-ContextAliasing: []

.....
-----
Block: 12749_5
12749_5Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_5-Stack size: 27 
12749_5-Equals Mem:<< []>> 
12749_5-NonEquals Mem: << [<4,7>]>> 
12749_5-Equals Sto:<< []>> 
12749_5-NonEquals Sto: << []>> 
12749_5-Useless: []
12749_5-Constancy: [(21, 0), (12, 0), (6, 0), (0, 0)]
12749_5-ContextAliasing: []

.....
-----
Block: 10950
10950Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950-Stack size: 22 
10950-Equals Mem:<< []>> 
10950-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950-Equals Sto:<< []>> 
10950-NonEquals Sto: << []>> 
10950-Useless: []
10950-Constancy: [(16, 0), (7, 0), (1, 0)]
10950-ContextAliasing: []

.....
-----
Block: 11421
11421Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421-Stack size: 19 
11421-Equals Mem:<< []>> 
11421-NonEquals Mem: << [<6,1>]>> 
11421-Equals Sto:<< []>> 
11421-NonEquals Sto: << []>> 
11421-Useless: []
11421-Constancy: [(13, 0)]
11421-ContextAliasing: []

.....
-----
Block: 11459
11459Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459-Stack size: 19 
11459-Equals Mem:<< []>> 
11459-NonEquals Mem: << [<6,1>]>> 
11459-Equals Sto:<< []>> 
11459-NonEquals Sto: << []>> 
11459-Useless: []
11459-Constancy: [(13, 0)]
11459-ContextAliasing: []

.....
-----
Block: 10256_0
10256_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256_0-Stack size: 25 
10256_0-Equals Mem:<< []>> 
10256_0-NonEquals Mem: << [<6,1>]>> 
10256_0-Equals Sto:<< []>> 
10256_0-NonEquals Sto: << []>> 
10256_0-Useless: []
10256_0-Constancy: [(19, 0), (1, 0)]
10256_0-ContextAliasing: [(2, 24)]

.....
-----
Block: 12101_1
12101_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101_1-Stack size: 27 
12101_1-Equals Mem:<< []>> 
12101_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
12101_1-Equals Sto:<< []>> 
12101_1-NonEquals Sto: << []>> 
12101_1-Useless: []
12101_1-Constancy: [(21, 0), (3, 0)]
12101_1-ContextAliasing: [(4, 25)]

.....
-----
Block: 12125_1
12125_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125_1-Stack size: 31 
12125_1-Equals Mem:<< []>> 
12125_1-NonEquals Mem: << [<11,5>]>> 
12125_1-Equals Sto:<< []>> 
12125_1-NonEquals Sto: << []>> 
12125_1-Useless: []
12125_1-Constancy: [(25, 0), (7, 0), (3, 0), (2, 32)]
12125_1-ContextAliasing: [(8, 25)]

.....
-----
Block: 12699_3
12699_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_3-Stack size: 30 
12699_3-Equals Mem:<< []>> 
12699_3-NonEquals Mem: << [<5,8>]>> 
12699_3-Equals Sto:<< []>> 
12699_3-NonEquals Sto: << []>> 
12699_3-Useless: []
12699_3-Constancy: [(24, 0), (6, 0), (5, 0)]
12699_3-ContextAliasing: []

.....
-----
Block: 11542
11542Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542-Stack size: 20 
11542-Equals Mem:<< [<12,29>]>> 
11542-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542-Equals Sto:<< [<24,31>]>> 
11542-NonEquals Sto: << []>> 
11542-Useless: []
11542-Constancy: [(14, 0)]
11542-ContextAliasing: []

.....
-----
Block: 12699_2
12699_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_2-Stack size: 29 
12699_2-Equals Mem:<< []>> 
12699_2-NonEquals Mem: << [<5,8>]>> 
12699_2-Equals Sto:<< []>> 
12699_2-NonEquals Sto: << []>> 
12699_2-Useless: []
12699_2-Constancy: [(23, 0), (6, 0), (5, 0)]
12699_2-ContextAliasing: []

.....
-----
Block: 10324
10324Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324-Stack size: 24 
10324-Equals Mem:<< []>> 
10324-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
10324-Equals Sto:<< []>> 
10324-NonEquals Sto: << []>> 
10324-Useless: []
10324-Constancy: [(18, 0), (1, 0)]
10324-ContextAliasing: []

.....
-----
Block: 11588
11588Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588-Stack size: 20 
11588-Equals Mem:<< []>> 
11588-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
11588-Equals Sto:<< []>> 
11588-NonEquals Sto: << []>> 
11588-Useless: []
11588-Constancy: [(14, 0)]
11588-ContextAliasing: []

.....
-----
Block: 3207
3207Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
3207-Stack size: 3 
3207-Equals Mem:<< []>> 
3207-NonEquals Mem: << [<6,1>]>> 
3207-Equals Sto:<< []>> 
3207-NonEquals Sto: << []>> 
3207-Useless: []
3207-Constancy: []
3207-ContextAliasing: []

.....
-----
Block: 12699_0
12699_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699_0-Stack size: 10 
12699_0-Equals Mem:<< []>> 
12699_0-NonEquals Mem: << [<5,8>]>> 
12699_0-Equals Sto:<< []>> 
12699_0-NonEquals Sto: << []>> 
12699_0-Useless: []
12699_0-Constancy: []
12699_0-ContextAliasing: []

.....
-----
Block: 12749_0
12749_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749_0-Stack size: 8 
12749_0-Equals Mem:<< []>> 
12749_0-NonEquals Mem: << [<4,7>]>> 
12749_0-Equals Sto:<< []>> 
12749_0-NonEquals Sto: << []>> 
12749_0-Useless: []
12749_0-Constancy: [(0, 0)]
12749_0-ContextAliasing: []

.....
-----
Block: 12749
12749Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749-Stack size: 7 
12749-Equals Mem:<< []>> 
12749-NonEquals Mem: << [<4,7>]>> 
12749-Equals Sto:<< []>> 
12749-NonEquals Sto: << []>> 
12749-Useless: []
12749-Constancy: [(0, 0)]
12749-ContextAliasing: []

.....
-----
Block: 3290
3290Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH15 0x6c6f776572207468616e20302e3125', 'PUSH1 0x88', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
3290-Stack size: 3 
3290-Equals Mem:<< []>> 
3290-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3290-Equals Sto:<< []>> 
3290-NonEquals Sto: << []>> 
3290-Useless: []
3290-Constancy: []
3290-ContextAliasing: []

.....
-----
Block: 12699
12699Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699-Stack size: 8 
12699-Equals Mem:<< []>> 
12699-NonEquals Mem: << [<5,8>]>> 
12699-Equals Sto:<< []>> 
12699-NonEquals Sto: << []>> 
12699-Useless: []
12699-Constancy: []
12699-ContextAliasing: []

.....
-----
Block: 3064
3064Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
3064-Stack size: 3 
3064-Equals Mem:<< []>> 
3064-NonEquals Mem: << [<6,1>]>> 
3064-Equals Sto:<< []>> 
3064-NonEquals Sto: << []>> 
3064-Useless: []
3064-Constancy: []
3064-ContextAliasing: []

.....
-----
Block: 1087
1087Instr:<<['JUMPDEST', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1087-Stack size: 3 
1087-Equals Mem:<< []>> 
1087-NonEquals Mem: << [<3,7>]>> 
1087-Equals Sto:<< []>> 
1087-NonEquals Sto: << []>> 
1087-Useless: []
1087-Constancy: []
1087-ContextAliasing: []

.....
-----
Block: 3087_69
3087_69Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_69-Stack size: 5 
3087_69-Equals Mem:<< []>> 
3087_69-NonEquals Mem: << []>> 
3087_69-Equals Sto:<< []>> 
3087_69-NonEquals Sto: << []>> 
3087_69-Useless: []
3087_69-Constancy: [(1, 0)]
3087_69-ContextAliasing: []

.....
-----
Block: 3087_73
3087_73Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_73-Stack size: 16 
3087_73-Equals Mem:<< []>> 
3087_73-NonEquals Mem: << []>> 
3087_73-Equals Sto:<< []>> 
3087_73-NonEquals Sto: << []>> 
3087_73-Useless: []
3087_73-Constancy: [(12, 0), (10, 0), (6, 0), (1, 0)]
3087_73-ContextAliasing: []

.....
-----
Block: 3087_72
3087_72Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_72-Stack size: 11 
3087_72-Equals Mem:<< []>> 
3087_72-NonEquals Mem: << []>> 
3087_72-Equals Sto:<< []>> 
3087_72-NonEquals Sto: << []>> 
3087_72-Useless: []
3087_72-Constancy: [(7, 0), (3, 0)]
3087_72-ContextAliasing: []

.....
-----
Block: 3087_71
3087_71Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_71-Stack size: 16 
3087_71-Equals Mem:<< []>> 
3087_71-NonEquals Mem: << []>> 
3087_71-Equals Sto:<< []>> 
3087_71-NonEquals Sto: << []>> 
3087_71-Useless: []
3087_71-Constancy: [(12, 0), (8, 0), (1, 0)]
3087_71-ContextAliasing: []

.....
-----
Block: 3087_70
3087_70Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_70-Stack size: 16 
3087_70-Equals Mem:<< []>> 
3087_70-NonEquals Mem: << []>> 
3087_70-Equals Sto:<< []>> 
3087_70-NonEquals Sto: << []>> 
3087_70-Useless: []
3087_70-Constancy: [(12, 0), (8, 0), (2, 0)]
3087_70-ContextAliasing: []

.....
-----
Block: 1005
1005Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
1005-Stack size: 2 
1005-Equals Mem:<< []>> 
1005-NonEquals Mem: << []>> 
1005-Equals Sto:<< []>> 
1005-NonEquals Sto: << []>> 
1005-Useless: []
1005-Constancy: []
1005-ContextAliasing: []

.....
-----
Block: 3087_74
3087_74Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_74-Stack size: 14 
3087_74-Equals Mem:<< []>> 
3087_74-NonEquals Mem: << []>> 
3087_74-Equals Sto:<< []>> 
3087_74-NonEquals Sto: << []>> 
3087_74-Useless: []
3087_74-Constancy: [(10, 0), (8, 0), (2, 0)]
3087_74-ContextAliasing: []

.....
-----
Block: 1005_2
1005_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
1005_2-Stack size: 3 
1005_2-Equals Mem:<< []>> 
1005_2-NonEquals Mem: << []>> 
1005_2-Equals Sto:<< []>> 
1005_2-NonEquals Sto: << []>> 
1005_2-Useless: []
1005_2-Constancy: []
1005_2-ContextAliasing: []

.....
-----
Block: 3087_42
3087_42Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_42-Stack size: 4 
3087_42-Equals Mem:<< []>> 
3087_42-NonEquals Mem: << []>> 
3087_42-Equals Sto:<< []>> 
3087_42-NonEquals Sto: << []>> 
3087_42-Useless: []
3087_42-Constancy: [(1, 0)]
3087_42-ContextAliasing: []

.....
-----
Block: 3087_0
3087_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_0-Stack size: 4 
3087_0-Equals Mem:<< []>> 
3087_0-NonEquals Mem: << []>> 
3087_0-Equals Sto:<< []>> 
3087_0-NonEquals Sto: << []>> 
3087_0-Useless: []
3087_0-Constancy: []
3087_0-ContextAliasing: []

.....
-----
Block: 1005_0
1005_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
1005_0-Stack size: 3 
1005_0-Equals Mem:<< []>> 
1005_0-NonEquals Mem: << []>> 
1005_0-Equals Sto:<< []>> 
1005_0-NonEquals Sto: << []>> 
1005_0-Useless: []
1005_0-Constancy: []
1005_0-ContextAliasing: []

.....
-----
Block: 3087_41
3087_41Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_41-Stack size: 6 
3087_41-Equals Mem:<< []>> 
3087_41-NonEquals Mem: << []>> 
3087_41-Equals Sto:<< []>> 
3087_41-NonEquals Sto: << []>> 
3087_41-Useless: []
3087_41-Constancy: []
3087_41-ContextAliasing: []

.....
-----
Block: 3087_30
3087_30Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_30-Stack size: 5 
3087_30-Equals Mem:<< []>> 
3087_30-NonEquals Mem: << []>> 
3087_30-Equals Sto:<< []>> 
3087_30-NonEquals Sto: << []>> 
3087_30-Useless: []
3087_30-Constancy: []
3087_30-ContextAliasing: []

.....
-----
Block: 3087
3087Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087-Stack size: 10 
3087-Equals Mem:<< []>> 
3087-NonEquals Mem: << []>> 
3087-Equals Sto:<< []>> 
3087-NonEquals Sto: << []>> 
3087-Useless: []
3087-Constancy: [(5, 0)]
3087-ContextAliasing: []

.....
-----
Block: 3087_68
3087_68Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_68-Stack size: 14 
3087_68-Equals Mem:<< []>> 
3087_68-NonEquals Mem: << []>> 
3087_68-Equals Sto:<< []>> 
3087_68-NonEquals Sto: << []>> 
3087_68-Useless: []
3087_68-Constancy: [(9, 0), (1, 0)]
3087_68-ContextAliasing: []

.....
-----
Block: 3087_67
3087_67Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_67-Stack size: 19 
3087_67-Equals Mem:<< []>> 
3087_67-NonEquals Mem: << []>> 
3087_67-Equals Sto:<< []>> 
3087_67-NonEquals Sto: << []>> 
3087_67-Useless: []
3087_67-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
3087_67-ContextAliasing: []

.....
-----
Block: 3087_66
3087_66Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_66-Stack size: 19 
3087_66-Equals Mem:<< []>> 
3087_66-NonEquals Mem: << []>> 
3087_66-Equals Sto:<< []>> 
3087_66-NonEquals Sto: << []>> 
3087_66-Useless: []
3087_66-Constancy: [(14, 0), (6, 0), (3, 0), (2, 0)]
3087_66-ContextAliasing: []

.....
-----
Block: 3087_65
3087_65Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_65-Stack size: 27 
3087_65-Equals Mem:<< []>> 
3087_65-NonEquals Mem: << []>> 
3087_65-Equals Sto:<< []>> 
3087_65-NonEquals Sto: << []>> 
3087_65-Useless: []
3087_65-Constancy: [(22, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
3087_65-ContextAliasing: []

.....
-----
Block: 3087_64
3087_64Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_64-Stack size: 26 
3087_64-Equals Mem:<< []>> 
3087_64-NonEquals Mem: << []>> 
3087_64-Equals Sto:<< []>> 
3087_64-NonEquals Sto: << []>> 
3087_64-Useless: []
3087_64-Constancy: [(21, 0), (11, 0), (2, 0)]
3087_64-ContextAliasing: []

.....
-----
Block: 3087_63
3087_63Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_63-Stack size: 29 
3087_63-Equals Mem:<< []>> 
3087_63-NonEquals Mem: << []>> 
3087_63-Equals Sto:<< []>> 
3087_63-NonEquals Sto: << []>> 
3087_63-Useless: []
3087_63-Constancy: [(24, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
3087_63-ContextAliasing: []

.....
-----
Block: 3087_61
3087_61Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_61-Stack size: 30 
3087_61-Equals Mem:<< []>> 
3087_61-NonEquals Mem: << []>> 
3087_61-Equals Sto:<< []>> 
3087_61-NonEquals Sto: << []>> 
3087_61-Useless: []
3087_61-Constancy: [(25, 0), (15, 0), (10, 0), (6, 0), (1, 0)]
3087_61-ContextAliasing: []

.....
-----
Block: 3087_59
3087_59Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_59-Stack size: 31 
3087_59-Equals Mem:<< []>> 
3087_59-NonEquals Mem: << []>> 
3087_59-Equals Sto:<< []>> 
3087_59-NonEquals Sto: << []>> 
3087_59-Useless: []
3087_59-Constancy: [(26, 0), (16, 0), (10, 0), (6, 0), (1, 0)]
3087_59-ContextAliasing: []

.....
-----
Block: 3087_58
3087_58Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_58-Stack size: 30 
3087_58-Equals Mem:<< []>> 
3087_58-NonEquals Mem: << []>> 
3087_58-Equals Sto:<< []>> 
3087_58-NonEquals Sto: << []>> 
3087_58-Useless: []
3087_58-Constancy: [(25, 0), (2, 0)]
3087_58-ContextAliasing: []

.....
-----
Block: 13146_1
13146_1Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
13146_1-Stack size: 31 
13146_1-Equals Mem:<< []>> 
13146_1-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
13146_1-Equals Sto:<< []>> 
13146_1-NonEquals Sto: << []>> 
13146_1-Useless: []
13146_1-Constancy: [(26, 0), (2, 0), (1, 0), (0, 0)]
13146_1-ContextAliasing: []

.....
-----
Block: 3087_60
3087_60Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_60-Stack size: 29 
3087_60-Equals Mem:<< []>> 
3087_60-NonEquals Mem: << []>> 
3087_60-Equals Sto:<< []>> 
3087_60-NonEquals Sto: << []>> 
3087_60-Useless: []
3087_60-Constancy: [(24, 0), (14, 0), (8, 0), (2, 0)]
3087_60-ContextAliasing: []

.....
-----
Block: 3087_62
3087_62Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_62-Stack size: 28 
3087_62-Equals Mem:<< []>> 
3087_62-NonEquals Mem: << []>> 
3087_62-Equals Sto:<< []>> 
3087_62-NonEquals Sto: << []>> 
3087_62-Useless: []
3087_62-Constancy: [(23, 0), (13, 0), (8, 0), (2, 0)]
3087_62-ContextAliasing: []

.....
-----
Block: 3087_56
3087_56Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_56-Stack size: 25 
3087_56-Equals Mem:<< []>> 
3087_56-NonEquals Mem: << []>> 
3087_56-Equals Sto:<< []>> 
3087_56-NonEquals Sto: << []>> 
3087_56-Useless: []
3087_56-Constancy: [(20, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
3087_56-ContextAliasing: []

.....
-----
Block: 3087_55
3087_55Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_55-Stack size: 20 
3087_55-Equals Mem:<< []>> 
3087_55-NonEquals Mem: << []>> 
3087_55-Equals Sto:<< []>> 
3087_55-NonEquals Sto: << []>> 
3087_55-Useless: []
3087_55-Constancy: [(15, 0), (7, 0), (3, 0)]
3087_55-ContextAliasing: []

.....
-----
Block: 3087_54
3087_54Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_54-Stack size: 25 
3087_54-Equals Mem:<< []>> 
3087_54-NonEquals Mem: << []>> 
3087_54-Equals Sto:<< []>> 
3087_54-NonEquals Sto: << []>> 
3087_54-Useless: []
3087_54-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
3087_54-ContextAliasing: []

.....
-----
Block: 3087_53
3087_53Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_53-Stack size: 25 
3087_53-Equals Mem:<< []>> 
3087_53-NonEquals Mem: << []>> 
3087_53-Equals Sto:<< []>> 
3087_53-NonEquals Sto: << []>> 
3087_53-Useless: []
3087_53-Constancy: [(20, 0), (12, 0), (8, 0), (2, 0)]
3087_53-ContextAliasing: []

.....
-----
Block: 3087_57
3087_57Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_57-Stack size: 23 
3087_57-Equals Mem:<< []>> 
3087_57-NonEquals Mem: << []>> 
3087_57-Equals Sto:<< []>> 
3087_57-NonEquals Sto: << []>> 
3087_57-Useless: []
3087_57-Constancy: [(18, 0), (10, 0), (8, 0), (2, 0)]
3087_57-ContextAliasing: []

.....
-----
Block: 3087_51
3087_51Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_51-Stack size: 24 
3087_51-Equals Mem:<< []>> 
3087_51-NonEquals Mem: << []>> 
3087_51-Equals Sto:<< []>> 
3087_51-NonEquals Sto: << []>> 
3087_51-Useless: []
3087_51-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
3087_51-ContextAliasing: []

.....
-----
Block: 3087_48
3087_48Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_48-Stack size: 19 
3087_48-Equals Mem:<< []>> 
3087_48-NonEquals Mem: << []>> 
3087_48-Equals Sto:<< []>> 
3087_48-NonEquals Sto: << []>> 
3087_48-Useless: []
3087_48-Constancy: [(14, 0)]
3087_48-ContextAliasing: []

.....
-----
Block: 3087_47
3087_47Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_47-Stack size: 24 
3087_47-Equals Mem:<< []>> 
3087_47-NonEquals Mem: << []>> 
3087_47-Equals Sto:<< []>> 
3087_47-NonEquals Sto: << []>> 
3087_47-Useless: []
3087_47-Constancy: [(19, 0), (1, 0)]
3087_47-ContextAliasing: []

.....
-----
Block: 3087_46
3087_46Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_46-Stack size: 24 
3087_46-Equals Mem:<< []>> 
3087_46-NonEquals Mem: << []>> 
3087_46-Equals Sto:<< []>> 
3087_46-NonEquals Sto: << []>> 
3087_46-Useless: []
3087_46-Constancy: [(19, 0), (2, 0)]
3087_46-ContextAliasing: []

.....
-----
Block: 3087_52
3087_52Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_52-Stack size: 22 
3087_52-Equals Mem:<< []>> 
3087_52-NonEquals Mem: << []>> 
3087_52-Equals Sto:<< []>> 
3087_52-NonEquals Sto: << []>> 
3087_52-Useless: []
3087_52-Constancy: [(17, 0), (8, 0), (2, 0)]
3087_52-ContextAliasing: []

.....
-----
Block: 3087_49
3087_49Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_49-Stack size: 24 
3087_49-Equals Mem:<< []>> 
3087_49-NonEquals Mem: << []>> 
3087_49-Equals Sto:<< []>> 
3087_49-NonEquals Sto: << []>> 
3087_49-Useless: []
3087_49-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
3087_49-ContextAliasing: []

.....
-----
Block: 3087_50
3087_50Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_50-Stack size: 22 
3087_50-Equals Mem:<< []>> 
3087_50-NonEquals Mem: << []>> 
3087_50-Equals Sto:<< []>> 
3087_50-NonEquals Sto: << []>> 
3087_50-Useless: []
3087_50-Constancy: [(17, 0), (8, 0), (2, 0)]
3087_50-ContextAliasing: []

.....
-----
Block: 3087_45
3087_45Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_45-Stack size: 19 
3087_45-Equals Mem:<< []>> 
3087_45-NonEquals Mem: << []>> 
3087_45-Equals Sto:<< []>> 
3087_45-NonEquals Sto: << []>> 
3087_45-Useless: []
3087_45-Constancy: [(14, 0)]
3087_45-ContextAliasing: []

.....
-----
Block: 3087_44
3087_44Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_44-Stack size: 24 
3087_44-Equals Mem:<< []>> 
3087_44-NonEquals Mem: << []>> 
3087_44-Equals Sto:<< []>> 
3087_44-NonEquals Sto: << []>> 
3087_44-Useless: []
3087_44-Constancy: [(19, 0), (1, 0)]
3087_44-ContextAliasing: []

.....
-----
Block: 3087_43
3087_43Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_43-Stack size: 24 
3087_43-Equals Mem:<< []>> 
3087_43-NonEquals Mem: << []>> 
3087_43-Equals Sto:<< []>> 
3087_43-NonEquals Sto: << []>> 
3087_43-Useless: []
3087_43-Constancy: [(19, 0), (2, 0)]
3087_43-ContextAliasing: []

.....
-----
Block: 3087_31
3087_31Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_31-Stack size: 14 
3087_31-Equals Mem:<< []>> 
3087_31-NonEquals Mem: << []>> 
3087_31-Equals Sto:<< []>> 
3087_31-NonEquals Sto: << []>> 
3087_31-Useless: []
3087_31-Constancy: [(9, 0)]
3087_31-ContextAliasing: []

.....
-----
Block: 3087_40
3087_40Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_40-Stack size: 3 
3087_40-Equals Mem:<< []>> 
3087_40-NonEquals Mem: << []>> 
3087_40-Equals Sto:<< []>> 
3087_40-NonEquals Sto: << []>> 
3087_40-Useless: []
3087_40-Constancy: []
3087_40-ContextAliasing: []

.....
-----
Block: 3087_39
3087_39Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_39-Stack size: 17 
3087_39-Equals Mem:<< []>> 
3087_39-NonEquals Mem: << []>> 
3087_39-Equals Sto:<< []>> 
3087_39-NonEquals Sto: << []>> 
3087_39-Useless: []
3087_39-Constancy: [(12, 0), (10, 0), (6, 0), (1, 0)]
3087_39-ContextAliasing: []

.....
-----
Block: 3087_38
3087_38Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_38-Stack size: 16 
3087_38-Equals Mem:<< []>> 
3087_38-NonEquals Mem: << []>> 
3087_38-Equals Sto:<< []>> 
3087_38-NonEquals Sto: << []>> 
3087_38-Useless: []
3087_38-Constancy: [(11, 0), (2, 0)]
3087_38-ContextAliasing: []

.....
-----
Block: 3087_37
3087_37Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_37-Stack size: 19 
3087_37-Equals Mem:<< []>> 
3087_37-NonEquals Mem: << []>> 
3087_37-Equals Sto:<< []>> 
3087_37-NonEquals Sto: << []>> 
3087_37-Useless: []
3087_37-Constancy: [(14, 0), (10, 0), (6, 0), (1, 0)]
3087_37-ContextAliasing: []

.....
-----
Block: 3087_35
3087_35Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_35-Stack size: 20 
3087_35-Equals Mem:<< []>> 
3087_35-NonEquals Mem: << []>> 
3087_35-Equals Sto:<< []>> 
3087_35-NonEquals Sto: << []>> 
3087_35-Useless: []
3087_35-Constancy: [(15, 0), (10, 0), (6, 0), (1, 0)]
3087_35-ContextAliasing: []

.....
-----
Block: 3087_33
3087_33Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_33-Stack size: 21 
3087_33-Equals Mem:<< []>> 
3087_33-NonEquals Mem: << []>> 
3087_33-Equals Sto:<< []>> 
3087_33-NonEquals Sto: << []>> 
3087_33-Useless: []
3087_33-Constancy: [(16, 0), (10, 0), (6, 0), (1, 0)]
3087_33-ContextAliasing: []

.....
-----
Block: 3087_32
3087_32Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_32-Stack size: 20 
3087_32-Equals Mem:<< []>> 
3087_32-NonEquals Mem: << []>> 
3087_32-Equals Sto:<< []>> 
3087_32-NonEquals Sto: << []>> 
3087_32-Useless: []
3087_32-Constancy: [(2, 0)]
3087_32-ContextAliasing: []

.....
-----
Block: 13146_0
13146_0Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
13146_0-Stack size: 21 
13146_0-Equals Mem:<< []>> 
13146_0-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
13146_0-Equals Sto:<< []>> 
13146_0-NonEquals Sto: << []>> 
13146_0-Useless: []
13146_0-Constancy: [(2, 0), (1, 0), (0, 0)]
13146_0-ContextAliasing: []

.....
-----
Block: 3087_34
3087_34Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_34-Stack size: 19 
3087_34-Equals Mem:<< []>> 
3087_34-NonEquals Mem: << []>> 
3087_34-Equals Sto:<< []>> 
3087_34-NonEquals Sto: << []>> 
3087_34-Useless: []
3087_34-Constancy: [(14, 0), (8, 0), (2, 0)]
3087_34-ContextAliasing: []

.....
-----
Block: 3087_36
3087_36Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_36-Stack size: 18 
3087_36-Equals Mem:<< []>> 
3087_36-NonEquals Mem: << []>> 
3087_36-Equals Sto:<< []>> 
3087_36-NonEquals Sto: << []>> 
3087_36-Useless: []
3087_36-Constancy: [(13, 0), (8, 0), (2, 0)]
3087_36-ContextAliasing: []

.....
-----
Block: 1005_1
1005_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
1005_1-Stack size: 3 
1005_1-Equals Mem:<< []>> 
1005_1-NonEquals Mem: << []>> 
1005_1-Equals Sto:<< []>> 
1005_1-NonEquals Sto: << []>> 
1005_1-Useless: []
1005_1-Constancy: []
1005_1-ContextAliasing: []

.....
-----
Block: 3087_26
3087_26Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_26-Stack size: 11 
3087_26-Equals Mem:<< []>> 
3087_26-NonEquals Mem: << []>> 
3087_26-Equals Sto:<< []>> 
3087_26-NonEquals Sto: << []>> 
3087_26-Useless: []
3087_26-Constancy: [(5, 0)]
3087_26-ContextAliasing: []

.....
-----
Block: 3087_29
3087_29Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_29-Stack size: 15 
3087_29-Equals Mem:<< []>> 
3087_29-NonEquals Mem: << []>> 
3087_29-Equals Sto:<< []>> 
3087_29-NonEquals Sto: << []>> 
3087_29-Useless: []
3087_29-Constancy: [(9, 0), (1, 0)]
3087_29-ContextAliasing: []

.....
-----
Block: 3087_28
3087_28Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_28-Stack size: 20 
3087_28-Equals Mem:<< []>> 
3087_28-NonEquals Mem: << []>> 
3087_28-Equals Sto:<< []>> 
3087_28-NonEquals Sto: << []>> 
3087_28-Useless: []
3087_28-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
3087_28-ContextAliasing: []

.....
-----
Block: 3087_27
3087_27Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_27-Stack size: 20 
3087_27-Equals Mem:<< []>> 
3087_27-NonEquals Mem: << []>> 
3087_27-Equals Sto:<< []>> 
3087_27-NonEquals Sto: << []>> 
3087_27-Useless: []
3087_27-Constancy: [(14, 0), (6, 0), (3, 0), (2, 0)]
3087_27-ContextAliasing: []

.....
-----
Block: 3087_2
3087_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_2-Stack size: 15 
3087_2-Equals Mem:<< []>> 
3087_2-NonEquals Mem: << []>> 
3087_2-Equals Sto:<< []>> 
3087_2-NonEquals Sto: << []>> 
3087_2-Useless: []
3087_2-Constancy: [(9, 0), (1, 0)]
3087_2-ContextAliasing: []

.....
-----
Block: 3087_1
3087_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_1-Stack size: 11 
3087_1-Equals Mem:<< []>> 
3087_1-NonEquals Mem: << []>> 
3087_1-Equals Sto:<< []>> 
3087_1-NonEquals Sto: << []>> 
3087_1-Useless: []
3087_1-Constancy: [(5, 0)]
3087_1-ContextAliasing: []

.....
-----
Block: 3087_25
3087_25Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_25-Stack size: 28 
3087_25-Equals Mem:<< []>> 
3087_25-NonEquals Mem: << []>> 
3087_25-Equals Sto:<< []>> 
3087_25-NonEquals Sto: << []>> 
3087_25-Useless: []
3087_25-Constancy: [(22, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
3087_25-ContextAliasing: []

.....
-----
Block: 3087_24
3087_24Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_24-Stack size: 27 
3087_24-Equals Mem:<< []>> 
3087_24-NonEquals Mem: << []>> 
3087_24-Equals Sto:<< []>> 
3087_24-NonEquals Sto: << []>> 
3087_24-Useless: []
3087_24-Constancy: [(21, 0), (11, 0), (2, 0)]
3087_24-ContextAliasing: []

.....
-----
Block: 3087_23
3087_23Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_23-Stack size: 30 
3087_23-Equals Mem:<< []>> 
3087_23-NonEquals Mem: << []>> 
3087_23-Equals Sto:<< []>> 
3087_23-NonEquals Sto: << []>> 
3087_23-Useless: []
3087_23-Constancy: [(24, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
3087_23-ContextAliasing: []

.....
-----
Block: 3087_21
3087_21Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_21-Stack size: 31 
3087_21-Equals Mem:<< []>> 
3087_21-NonEquals Mem: << []>> 
3087_21-Equals Sto:<< []>> 
3087_21-NonEquals Sto: << []>> 
3087_21-Useless: []
3087_21-Constancy: [(25, 0), (15, 0), (10, 0), (6, 0), (1, 0)]
3087_21-ContextAliasing: []

.....
-----
Block: 3087_19
3087_19Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_19-Stack size: 32 
3087_19-Equals Mem:<< []>> 
3087_19-NonEquals Mem: << []>> 
3087_19-Equals Sto:<< []>> 
3087_19-NonEquals Sto: << []>> 
3087_19-Useless: []
3087_19-Constancy: [(26, 0), (16, 0), (10, 0), (6, 0), (1, 0)]
3087_19-ContextAliasing: []

.....
-----
Block: 3087_18
3087_18Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_18-Stack size: 31 
3087_18-Equals Mem:<< []>> 
3087_18-NonEquals Mem: << []>> 
3087_18-Equals Sto:<< []>> 
3087_18-NonEquals Sto: << []>> 
3087_18-Useless: []
3087_18-Constancy: [(25, 0), (2, 0)]
3087_18-ContextAliasing: []

.....
-----
Block: 13146
13146Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
13146-Stack size: 32 
13146-Equals Mem:<< []>> 
13146-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
13146-Equals Sto:<< []>> 
13146-NonEquals Sto: << []>> 
13146-Useless: []
13146-Constancy: [(26, 0), (2, 0), (1, 0), (0, 0)]
13146-ContextAliasing: []

.....
-----
Block: 3087_20
3087_20Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_20-Stack size: 30 
3087_20-Equals Mem:<< []>> 
3087_20-NonEquals Mem: << []>> 
3087_20-Equals Sto:<< []>> 
3087_20-NonEquals Sto: << []>> 
3087_20-Useless: []
3087_20-Constancy: [(24, 0), (14, 0), (8, 0), (2, 0)]
3087_20-ContextAliasing: []

.....
-----
Block: 3087_22
3087_22Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_22-Stack size: 29 
3087_22-Equals Mem:<< []>> 
3087_22-NonEquals Mem: << []>> 
3087_22-Equals Sto:<< []>> 
3087_22-NonEquals Sto: << []>> 
3087_22-Useless: []
3087_22-Constancy: [(23, 0), (13, 0), (8, 0), (2, 0)]
3087_22-ContextAliasing: []

.....
-----
Block: 3087_16
3087_16Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_16-Stack size: 26 
3087_16-Equals Mem:<< []>> 
3087_16-NonEquals Mem: << []>> 
3087_16-Equals Sto:<< []>> 
3087_16-NonEquals Sto: << []>> 
3087_16-Useless: []
3087_16-Constancy: [(20, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
3087_16-ContextAliasing: []

.....
-----
Block: 3087_15
3087_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_15-Stack size: 21 
3087_15-Equals Mem:<< []>> 
3087_15-NonEquals Mem: << []>> 
3087_15-Equals Sto:<< []>> 
3087_15-NonEquals Sto: << []>> 
3087_15-Useless: []
3087_15-Constancy: [(15, 0), (7, 0), (3, 0)]
3087_15-ContextAliasing: []

.....
-----
Block: 3087_14
3087_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_14-Stack size: 26 
3087_14-Equals Mem:<< []>> 
3087_14-NonEquals Mem: << []>> 
3087_14-Equals Sto:<< []>> 
3087_14-NonEquals Sto: << []>> 
3087_14-Useless: []
3087_14-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
3087_14-ContextAliasing: []

.....
-----
Block: 3087_13
3087_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_13-Stack size: 26 
3087_13-Equals Mem:<< []>> 
3087_13-NonEquals Mem: << []>> 
3087_13-Equals Sto:<< []>> 
3087_13-NonEquals Sto: << []>> 
3087_13-Useless: []
3087_13-Constancy: [(20, 0), (12, 0), (8, 0), (2, 0)]
3087_13-ContextAliasing: []

.....
-----
Block: 3087_17
3087_17Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_17-Stack size: 24 
3087_17-Equals Mem:<< []>> 
3087_17-NonEquals Mem: << []>> 
3087_17-Equals Sto:<< []>> 
3087_17-NonEquals Sto: << []>> 
3087_17-Useless: []
3087_17-Constancy: [(18, 0), (10, 0), (8, 0), (2, 0)]
3087_17-ContextAliasing: []

.....
-----
Block: 3087_11
3087_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_11-Stack size: 25 
3087_11-Equals Mem:<< []>> 
3087_11-NonEquals Mem: << []>> 
3087_11-Equals Sto:<< []>> 
3087_11-NonEquals Sto: << []>> 
3087_11-Useless: []
3087_11-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
3087_11-ContextAliasing: []

.....
-----
Block: 3087_8
3087_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_8-Stack size: 20 
3087_8-Equals Mem:<< []>> 
3087_8-NonEquals Mem: << []>> 
3087_8-Equals Sto:<< []>> 
3087_8-NonEquals Sto: << []>> 
3087_8-Useless: []
3087_8-Constancy: [(14, 0)]
3087_8-ContextAliasing: []

.....
-----
Block: 3087_7
3087_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_7-Stack size: 25 
3087_7-Equals Mem:<< []>> 
3087_7-NonEquals Mem: << []>> 
3087_7-Equals Sto:<< []>> 
3087_7-NonEquals Sto: << []>> 
3087_7-Useless: []
3087_7-Constancy: [(19, 0), (1, 0)]
3087_7-ContextAliasing: []

.....
-----
Block: 3087_6
3087_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_6-Stack size: 25 
3087_6-Equals Mem:<< []>> 
3087_6-NonEquals Mem: << []>> 
3087_6-Equals Sto:<< []>> 
3087_6-NonEquals Sto: << []>> 
3087_6-Useless: []
3087_6-Constancy: [(19, 0), (2, 0)]
3087_6-ContextAliasing: []

.....
-----
Block: 3087_12
3087_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_12-Stack size: 23 
3087_12-Equals Mem:<< []>> 
3087_12-NonEquals Mem: << []>> 
3087_12-Equals Sto:<< []>> 
3087_12-NonEquals Sto: << []>> 
3087_12-Useless: []
3087_12-Constancy: [(17, 0), (8, 0), (2, 0)]
3087_12-ContextAliasing: []

.....
-----
Block: 3087_9
3087_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_9-Stack size: 25 
3087_9-Equals Mem:<< []>> 
3087_9-NonEquals Mem: << []>> 
3087_9-Equals Sto:<< []>> 
3087_9-NonEquals Sto: << []>> 
3087_9-Useless: []
3087_9-Constancy: [(19, 0), (10, 0), (6, 0), (1, 0)]
3087_9-ContextAliasing: []

.....
-----
Block: 3087_10
3087_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_10-Stack size: 23 
3087_10-Equals Mem:<< []>> 
3087_10-NonEquals Mem: << []>> 
3087_10-Equals Sto:<< []>> 
3087_10-NonEquals Sto: << []>> 
3087_10-Useless: []
3087_10-Constancy: [(17, 0), (8, 0), (2, 0)]
3087_10-ContextAliasing: []

.....
-----
Block: 3087_5
3087_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_5-Stack size: 20 
3087_5-Equals Mem:<< []>> 
3087_5-NonEquals Mem: << []>> 
3087_5-Equals Sto:<< []>> 
3087_5-NonEquals Sto: << []>> 
3087_5-Useless: []
3087_5-Constancy: [(14, 0)]
3087_5-ContextAliasing: []

.....
-----
Block: 3087_4
3087_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_4-Stack size: 25 
3087_4-Equals Mem:<< []>> 
3087_4-NonEquals Mem: << []>> 
3087_4-Equals Sto:<< []>> 
3087_4-NonEquals Sto: << []>> 
3087_4-Useless: []
3087_4-Constancy: [(19, 0), (1, 0)]
3087_4-ContextAliasing: []

.....
-----
Block: 3087_3
3087_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087_3-Stack size: 25 
3087_3-Equals Mem:<< []>> 
3087_3-NonEquals Mem: << []>> 
3087_3-Equals Sto:<< []>> 
3087_3-NonEquals Sto: << []>> 
3087_3-Useless: []
3087_3-Constancy: [(19, 0), (2, 0)]
3087_3-ContextAliasing: []

.....
-----
Block: 4553
4553Instr:<<['JUMPDEST', 'PUSH1 0x0e', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4553-Stack size: 5 
4553-Equals Mem:<< []>> 
4553-NonEquals Mem: << []>> 
4553-Equals Sto:<< [<10,22>]>> 
4553-NonEquals Sto: << [<5,7>, <5,10>, <5,22>, <7,10>, <7,22>]>> 
4553-Useless: []
4553-Constancy: []
4553-ContextAliasing: []

.....
-----
Block: 4625
4625Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
4625-Stack size: 3 
4625-Equals Mem:<< []>> 
4625-NonEquals Mem: << []>> 
4625-Equals Sto:<< [<4,9>]>> 
4625-NonEquals Sto: << []>> 
4625-Useless: []
4625-Constancy: [(0, 0)]
4625-ContextAliasing: []

.....
-----
Block: 4767
4767Instr:<<['JUMPDEST', 'PUSH1 0x18', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x19', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x1a', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x12b9', 'DUP4', 'DUP6', 'PUSH2 0x31e5', 'JUMP']>> 
4767-Stack size: 5 
4767-Equals Mem:<< []>> 
4767-NonEquals Mem: << []>> 
4767-Equals Sto:<< []>> 
4767-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
4767-Useless: []
4767-Constancy: []
4767-ContextAliasing: []

.....
-----
Block: 4935
4935Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH3 0xffff00', 'NOT', 'AND', 'PUSH3 0x010100', 'OR', 'SWAP1', 'SSTORE', 'TIMESTAMP', 'PUSH1 0x0f', 'SSTORE', 'NUMBER', 'PUSH1 0x22', 'SSTORE', 'JUMP']>> 
4935-Stack size: 2 
4935-Equals Mem:<< []>> 
4935-NonEquals Mem: << []>> 
4935-Equals Sto:<< [<3,10>]>> 
4935-NonEquals Sto: << [<3,13>, <3,16>, <10,13>, <10,16>, <13,16>]>> 
4935-Useless: []
4935-Constancy: []
4935-ContextAliasing: []

.....
-----
Block: 5004
5004Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH3 0x010000', 'MUL', 'PUSH3 0xff0000', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5004-Stack size: 3 
5004-Equals Mem:<< []>> 
5004-NonEquals Mem: << []>> 
5004-Equals Sto:<< [<3,19>]>> 
5004-NonEquals Sto: << []>> 
5004-Useless: []
5004-Constancy: []
5004-ContextAliasing: []

.....
-----
Block: 5312
5312Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH4 0x01000000', 'MUL', 'PUSH4 0xff000000', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5312-Stack size: 3 
5312-Equals Mem:<< []>> 
5312-NonEquals Mem: << []>> 
5312-Equals Sto:<< [<3,19>]>> 
5312-NonEquals Sto: << []>> 
5312-Useless: []
5312-Constancy: []
5312-ContextAliasing: []

.....
-----
Block: 5384
5384Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5384-Stack size: 3 
5384-Equals Mem:<< []>> 
5384-NonEquals Mem: << []>> 
5384-Equals Sto:<< [<3,25>]>> 
5384-NonEquals Sto: << []>> 
5384-Useless: []
5384-Constancy: []
5384-ContextAliasing: []

.....
-----
Block: 5819
5819Instr:<<['JUMPDEST', 'PUSH1 0x1c', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x1d', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x1e', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x16d5', 'DUP4', 'DUP6', 'PUSH2 0x31e5', 'JUMP']>> 
5819-Stack size: 5 
5819-Equals Mem:<< []>> 
5819-NonEquals Mem: << []>> 
5819-Equals Sto:<< []>> 
5819-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
5819-Useless: []
5819-Constancy: []
5819-ContextAliasing: []

.....
-----
Block: 6535
6535Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x16', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
6535-Stack size: 3 
6535-Equals Mem:<< []>> 
6535-NonEquals Mem: << []>> 
6535-Equals Sto:<< [<4,9>]>> 
6535-NonEquals Sto: << []>> 
6535-Useless: []
6535-Constancy: [(0, 0)]
6535-ContextAliasing: []

.....
-----
Block: 6829
6829Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'SWAP1', 'DUP2', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'SWAP1', 'JUMP']>> 
6829-Stack size: 3 
6829-Equals Mem:<< []>> 
6829-NonEquals Mem: << []>> 
6829-Equals Sto:<< [<4,14>]>> 
6829-NonEquals Sto: << []>> 
6829-Useless: []
6829-Constancy: [(0, 0)]
6829-ContextAliasing: []

.....
-----
Block: 6893
6893Instr:<<['JUMPDEST', 'PUSH1 0x10', 'SLOAD', 'PUSH1 0x11', 'SLOAD', 'PUSH2 0x1afd', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
6893-Stack size: 4 
6893-Equals Mem:<< []>> 
6893-NonEquals Mem: << []>> 
6893-Equals Sto:<< []>> 
6893-NonEquals Sto: << [<2,4>]>> 
6893-Useless: []
6893-Constancy: [(0, 0)]
6893-ContextAliasing: []

.....
-----
Block: 9409
9409Instr:<<['PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x24db', 'PUSH2 0x0e41', 'JUMP']>> 
9409-Stack size: 12 
9409-Equals Mem:<< []>> 
9409-NonEquals Mem: << []>> 
9409-Equals Sto:<< [<2,13>]>> 
9409-NonEquals Sto: << []>> 
9409-Useless: []
9409-Constancy: [(6, 0)]
9409-ContextAliasing: []

.....
-----
Block: 9435
9435Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE']>> 
9435-Stack size: 12 
9435-Equals Mem:<< []>> 
9435-NonEquals Mem: << []>> 
9435-Equals Sto:<< [<3,10>]>> 
9435-NonEquals Sto: << []>> 
9435-Useless: []
9435-Constancy: [(6, 0)]
9435-ContextAliasing: []

.....
-----
Block: 9519
9519Instr:<<['POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0f', 'SLOAD', 'PUSH2 0x253f', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
9519-Stack size: 13 
9519-Equals Mem:<< []>> 
9519-NonEquals Mem: << []>> 
9519-Equals Sto:<< []>> 
9519-NonEquals Sto: << [<2,4>]>> 
9519-Useless: []
9519-Constancy: [(7, 0)]
9519-ContextAliasing: []

.....
-----
Block: 9828
9828Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1d', 'SLOAD', 'DUP3', 'PUSH2 0x2677', 'SWAP2', 'SWAP1', 'PUSH2 0x31af', 'JUMP']>> 
9828-Stack size: 16 
9828-Equals Mem:<< []>> 
9828-NonEquals Mem: << []>> 
9828-Equals Sto:<< []>> 
9828-NonEquals Sto: << [<4,6>]>> 
9828-Useless: []
9828-Constancy: [(10, 0), (1, 0)]
9828-ContextAliasing: []

.....
-----
Block: 9873
9873Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1e', 'SLOAD', 'PUSH2 0x26a6', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
9873-Stack size: 19 
9873-Equals Mem:<< []>> 
9873-NonEquals Mem: << []>> 
9873-Equals Sto:<< []>> 
9873-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9873-Useless: []
9873-Constancy: [(13, 0), (2, 32), (1, 0)]
9873-ContextAliasing: []

.....
-----
Block: 9920
9920Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1c', 'SLOAD', 'PUSH2 0x26d5', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
9920-Stack size: 19 
9920-Equals Mem:<< []>> 
9920-NonEquals Mem: << []>> 
9920-Equals Sto:<< []>> 
9920-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9920-Useless: []
9920-Constancy: [(13, 0), (1, 0)]
9920-ContextAliasing: []

.....
-----
Block: 10049
10049Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x19', 'SLOAD', 'DUP3', 'PUSH2 0x2754', 'SWAP2', 'SWAP1', 'PUSH2 0x31af', 'JUMP']>> 
10049-Stack size: 16 
10049-Equals Mem:<< []>> 
10049-NonEquals Mem: << []>> 
10049-Equals Sto:<< []>> 
10049-NonEquals Sto: << [<4,6>]>> 
10049-Useless: []
10049-Constancy: [(10, 0), (1, 0)]
10049-ContextAliasing: []

.....
-----
Block: 10094
10094Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x1a', 'SLOAD', 'PUSH2 0x2783', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
10094-Stack size: 19 
10094-Equals Mem:<< []>> 
10094-NonEquals Mem: << []>> 
10094-Equals Sto:<< []>> 
10094-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
10094-Useless: []
10094-Constancy: [(13, 0), (2, 32), (1, 0)]
10094-ContextAliasing: []

.....
-----
Block: 10141
10141Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'PUSH2 0x27b2', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
10141-Stack size: 19 
10141-Equals Mem:<< []>> 
10141-NonEquals Mem: << []>> 
10141-Equals Sto:<< []>> 
10141-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
10141-Useless: []
10141-Constancy: [(13, 0), (1, 0)]
10141-ContextAliasing: []

.....
-----
Block: 10049_0
10049_0Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x19', 'SLOAD', 'DUP3', 'PUSH2 0x2754', 'SWAP2', 'SWAP1', 'PUSH2 0x31af', 'JUMP']>> 
10049_0-Stack size: 15 
10049_0-Equals Mem:<< []>> 
10049_0-NonEquals Mem: << []>> 
10049_0-Equals Sto:<< []>> 
10049_0-NonEquals Sto: << [<4,6>]>> 
10049_0-Useless: []
10049_0-Constancy: [(10, 0), (1, 0)]
10049_0-ContextAliasing: []

.....
-----
Block: 10094_0
10094_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x1a', 'SLOAD', 'PUSH2 0x2783', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
10094_0-Stack size: 18 
10094_0-Equals Mem:<< []>> 
10094_0-NonEquals Mem: << []>> 
10094_0-Equals Sto:<< []>> 
10094_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
10094_0-Useless: []
10094_0-Constancy: [(13, 0), (2, 32), (1, 0)]
10094_0-ContextAliasing: []

.....
-----
Block: 10141_0
10141_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'PUSH2 0x27b2', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
10141_0-Stack size: 18 
10141_0-Equals Mem:<< []>> 
10141_0-NonEquals Mem: << []>> 
10141_0-Equals Sto:<< []>> 
10141_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
10141_0-Useless: []
10141_0-Constancy: [(13, 0), (1, 0)]
10141_0-ContextAliasing: []

.....
-----
Block: 9828_0
9828_0Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1d', 'SLOAD', 'DUP3', 'PUSH2 0x2677', 'SWAP2', 'SWAP1', 'PUSH2 0x31af', 'JUMP']>> 
9828_0-Stack size: 15 
9828_0-Equals Mem:<< []>> 
9828_0-NonEquals Mem: << []>> 
9828_0-Equals Sto:<< []>> 
9828_0-NonEquals Sto: << [<4,6>]>> 
9828_0-Useless: []
9828_0-Constancy: [(10, 0), (1, 0)]
9828_0-ContextAliasing: []

.....
-----
Block: 9873_0
9873_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1e', 'SLOAD', 'PUSH2 0x26a6', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
9873_0-Stack size: 18 
9873_0-Equals Mem:<< []>> 
9873_0-NonEquals Mem: << []>> 
9873_0-Equals Sto:<< []>> 
9873_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9873_0-Useless: []
9873_0-Constancy: [(13, 0), (2, 32), (1, 0)]
9873_0-ContextAliasing: []

.....
-----
Block: 9920_0
9920_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1c', 'SLOAD', 'PUSH2 0x26d5', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
9920_0-Stack size: 18 
9920_0-Equals Mem:<< []>> 
9920_0-NonEquals Mem: << []>> 
9920_0-Equals Sto:<< []>> 
9920_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9920_0-Useless: []
9920_0-Constancy: [(13, 0), (1, 0)]
9920_0-ContextAliasing: []

.....
-----
Block: 9519_0
9519_0Instr:<<['POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0f', 'SLOAD', 'PUSH2 0x253f', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
9519_0-Stack size: 12 
9519_0-Equals Mem:<< []>> 
9519_0-NonEquals Mem: << []>> 
9519_0-Equals Sto:<< []>> 
9519_0-NonEquals Sto: << [<2,4>]>> 
9519_0-Useless: []
9519_0-Constancy: [(7, 0)]
9519_0-ContextAliasing: []

.....
-----
Block: 9409_0
9409_0Instr:<<['PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x24db', 'PUSH2 0x0e41', 'JUMP']>> 
9409_0-Stack size: 11 
9409_0-Equals Mem:<< []>> 
9409_0-NonEquals Mem: << []>> 
9409_0-Equals Sto:<< [<2,13>]>> 
9409_0-NonEquals Sto: << []>> 
9409_0-Useless: []
9409_0-Constancy: [(6, 0)]
9409_0-ContextAliasing: []

.....
-----
Block: 9435_0
9435_0Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE']>> 
9435_0-Stack size: 11 
9435_0-Equals Mem:<< []>> 
9435_0-NonEquals Mem: << []>> 
9435_0-Equals Sto:<< [<3,10>]>> 
9435_0-NonEquals Sto: << []>> 
9435_0-Useless: []
9435_0-Constancy: [(6, 0)]
9435_0-ContextAliasing: []

.....
-----
Block: 3938_1
3938_1Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x0f87', 'JUMP']>> 
3938_1-Stack size: 25 
3938_1-Equals Mem:<< []>> 
3938_1-NonEquals Mem: << []>> 
3938_1-Equals Sto:<< []>> 
3938_1-NonEquals Sto: << []>> 
3938_1-Useless: [16, 22]
3938_1-Constancy: [(20, 0), (10, 0)]
3938_1-ContextAliasing: []

.....
-----
Block: 4117_1
4117_1Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x103a', 'JUMP']>> 
4117_1-Stack size: 25 
4117_1-Equals Mem:<< []>> 
4117_1-NonEquals Mem: << []>> 
4117_1-Equals Sto:<< []>> 
4117_1-NonEquals Sto: << []>> 
4117_1-Useless: [16, 22]
4117_1-Constancy: [(20, 0)]
4117_1-ContextAliasing: []

.....
-----
Block: 3938_0
3938_0Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x0f87', 'JUMP']>> 
3938_0-Stack size: 15 
3938_0-Equals Mem:<< []>> 
3938_0-NonEquals Mem: << []>> 
3938_0-Equals Sto:<< []>> 
3938_0-NonEquals Sto: << []>> 
3938_0-Useless: [16, 22]
3938_0-Constancy: [(10, 0)]
3938_0-ContextAliasing: []

.....
-----
Block: 4117_0
4117_0Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x103a', 'JUMP']>> 
4117_0-Stack size: 15 
4117_0-Equals Mem:<< []>> 
4117_0-NonEquals Mem: << []>> 
4117_0-Equals Sto:<< []>> 
4117_0-NonEquals Sto: << []>> 
4117_0-Useless: [16, 22]
4117_0-Constancy: []
4117_0-ContextAliasing: []

.....
-----
Block: 3938
3938Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x0f87', 'JUMP']>> 
3938-Stack size: 26 
3938-Equals Mem:<< []>> 
3938-NonEquals Mem: << []>> 
3938-Equals Sto:<< []>> 
3938-NonEquals Sto: << []>> 
3938-Useless: [16, 22]
3938-Constancy: [(20, 0), (10, 0)]
3938-ContextAliasing: []

.....
-----
Block: 4117
4117Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x103a', 'JUMP']>> 
4117-Stack size: 26 
4117-Equals Mem:<< []>> 
4117-NonEquals Mem: << []>> 
4117-Equals Sto:<< []>> 
4117-NonEquals Sto: << []>> 
4117-Useless: [16, 22]
4117-Constancy: [(20, 0)]
4117-ContextAliasing: []

.....
********************************** END
Memory Analysis: 2.2974786260165274s

*************************************************************
File: SafeMath
Build CFG: 0.0005809400463476777s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.011308671033475548s

*************************************************************
File: SafeMathInt
Build CFG: 0.0005320330383256078s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMathInt
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMathInt: 0
Memory read accesses ContractSafeMathInt: 0
Memory write accesses ContractSafeMathInt: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMathInt
********************************** END
Memory Analysis: 0.00010726304026320577s

*************************************************************
File: SafeMathUint
Build CFG: 0.0005200289888307452s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMathUint
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMathUint: 0
Memory read accesses ContractSafeMathUint: 0
Memory write accesses ContractSafeMathUint: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMathUint
********************************** END
Memory Analysis: 9.215599857270718e-05s

*************************************************************
FILERES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20;115;240;22;74;51;2;0.11411728500388563
FILERES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_Ownable;26;28;5;9;4;2;0.010401748993899673
FILERES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY;758;2343;135;721;560;60;4.334991462994367
FILERES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SafeMath;1;1;0;1;0;0;0.011904958984814584
FILERES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SafeMathInt;1;1;0;1;0;0;0.0006522090407088399
FILERES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SafeMathUint;1;1;0;1;0;0;0.0006217869813553989


Aux path: /tmp/0x00//ethir_e6bb4abcc26c4534b5246775bd4464f2
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 406
406Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
406-Stack size: 4 
406-Equals Mem:<< [<12,27>, <17,31>]>> 
406-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
406-Equals Sto:<< []>> 
406-NonEquals Sto: << []>> 
406-Useless: []
406-Constancy: []
406-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP1 AND DUP2 SWAP2 DUP2 DUP1 SWAP4 SWAP1 PUSH1 0x0 MSTORE SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 DUP3 SWAP5 MSTORE POP PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP POP POP JUMP

Optimized code stored in /tmp/0x00/ERC20_406_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_406_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2212

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_406;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;406;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP1 AND DUP2 SWAP2 DUP2 DUP1 SWAP4 SWAP1 PUSH1 0x0 MSTORE SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 DUP3 SWAP5 MSTORE POP PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP POP POP JUMP;2261;42;36;2212;55;30;49;-13;6;True;False;False;False;2.139946894021705;4;2;2100;2100

Block: 239
239Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
239-Stack size: 2 
239-Equals Mem:<< []>> 
239-NonEquals Mem: << [<5,2>]>> 
239-Equals Sto:<< []>> 
239-NonEquals Sto: << []>> 
239-Useless: []
239-Constancy: []
239-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_239_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_239_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 13
Estimated size optimized in bytes: 13

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_239;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;239;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;33;13;10;33;13;10;0;0;0;True;False;False;False;0.019944890053011477;0;0;0;0

Block: 219
219Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
219-Stack size: 2 
219-Equals Mem:<< []>> 
219-NonEquals Mem: << [<7,2>]>> 
219-Equals Sto:<< []>> 
219-NonEquals Sto: << []>> 
219-Useless: []
219-Constancy: []
219-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_219_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_219_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_219;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;219;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;39;15;12;39;15;12;0;0;0;True;False;False;False;0.05631152301793918;0;0;0;0

Block: 889
889Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
889-Stack size: 9 
889-Equals Mem:<< []>> 
889-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
889-Equals Sto:<< []>> 
889-NonEquals Sto: << []>> 
889-Useless: []
889-Constancy: [(4, 0)]
889-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '36', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(11)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized code stored in /tmp/0x00/ERC20_889_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_889_statistics.csv

Estimated initial gas: 93
Estimated gas optimized: 93

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 79

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_889;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;889;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;93;79;31;93;79;31;0;0;0;True;False;False;False;2.1466723359772004;2;4;0;0

Block: 992
992Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
992-Stack size: 9 
992-Equals Mem:<< []>> 
992-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
992-Equals Sto:<< []>> 
992-NonEquals Sto: << []>> 
992-Useless: []
992-Constancy: [(4, 0)]
992-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_992_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_992_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_992;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;992;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.1242262049927376;2;4;0;0

Block: 1074
1074Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1074-Stack size: 9 
1074-Equals Mem:<< [<12,27>, <17,30>]>> 
1074-NonEquals Mem: << [<27,39>, <30,39>, <27,42>, <30,42>, <34,39>, <12,30>, <17,27>, <42,34>, <42,39>, <12,39>, <12,42>, <17,39>, <27,30>, <17,42>, <21,39>, <12,17>, <42,21>]>> 
1074-Equals Sto:<< []>> 
1074-NonEquals Sto: << []>> 
1074-Useless: []
1074-Constancy: [(4, 0)]
1074-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>]}
{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(22)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(8)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized code stored in /tmp/0x00/ERC20_1074_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1074_statistics.csv

Estimated initial gas: 5186
Estimated gas optimized: 5186

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 84

Initial number of instructions: 46
Final number of instructions: 46

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1074;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1074;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;5186;84;46;5186;84;46;0;0;0;True;False;False;False;2.27973693102831;4;2;5000;5000

Block: 463
463Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x01fb', 'SWAP1', 'PUSH2 0x07c1', 'JUMP']>> 
463-Stack size: 5 
463-Equals Mem:<< [<17,12>]>> 
463-NonEquals Mem: << [<17,24>, <24,12>]>> 
463-Equals Sto:<< []>> 
463-NonEquals Sto: << []>> 
463-Useless: []
463-Constancy: [(2, 96)]
463-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>]}
{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{28: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(12)', 'mstore'), 2), (('s(10)', 's(1)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
{28: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP

Optimized code stored in /tmp/0x00/ERC20_463_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_463_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2206

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_463;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;463;2;True;False;False;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP;2206;44;34;2206;44;34;0;0;0;True;False;False;False;2.202565628977027;0;1;2100;2100

Block: 2016
2016Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2016-Stack size: 8 
2016-Equals Mem:<< []>> 
2016-NonEquals Mem: << [<4,7>]>> 
2016-Equals Sto:<< []>> 
2016-NonEquals Sto: << []>> 
2016-Useless: []
2016-Constancy: []
2016-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '34', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_2016 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1712
1712Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712-Stack size: 4 
1712-Equals Mem:<< []>> 
1712-NonEquals Mem: << [<12,7>, <5,7>]>> 
1712-Equals Sto:<< []>> 
1712-NonEquals Sto: << []>> 
1712-Useless: []
1712-Constancy: []
1712-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/ERC20_1712_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1712_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1712;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1712;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.1994937289855443;0;1;0;0

Block: 1736
1736Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736-Stack size: 8 
1736-Equals Mem:<< []>> 
1736-NonEquals Mem: << [<11,5>]>> 
1736-Equals Sto:<< []>> 
1736-NonEquals Sto: << []>> 
1736-Useless: []
1736-Constancy: [(2, 32), (3, 0)]
1736-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP

Optimized code stored in /tmp/0x00/ERC20_1736_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1736_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1736;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1736;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6994987970101647;0;0;0;0

Block: 320
320Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
320-Stack size: 3 
320-Equals Mem:<< []>> 
320-NonEquals Mem: << [<10,14>]>> 
320-Equals Sto:<< []>> 
320-NonEquals Sto: << []>> 
320-Useless: []
320-Constancy: []
320-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(2)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(2)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_320 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 717
717Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x025c', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x02be', 'SWAP1', 'DUP7', 'PUSH2 0x064b', 'JUMP']>> 
717-Stack size: 4 
717-Equals Mem:<< [<5,23>, <10,26>]>> 
717-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
717-Equals Sto:<< []>> 
717-NonEquals Sto: << []>> 
717-Useless: []
717-Constancy: []
717-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>]}
{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{28: ((('s(10)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{28: ((('s(10)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP

Optimized code stored in /tmp/0x00/ERC20_717_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_717_statistics.csv

Estimated initial gas: 2275
Estimated gas optimized: 2275

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_717;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;717;2;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP;2275;53;41;2275;53;41;0;0;0;True;False;False;False;2.1842896880116314;4;2;2100;2100

Block: 272
272Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
272-Stack size: 1 
272-Equals Mem:<< []>> 
272-NonEquals Mem: << [<5,2>]>> 
272-Equals Sto:<< []>> 
272-NonEquals Sto: << []>> 
272-Useless: []
272-Constancy: []
272-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_272_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_272_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_272;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;272;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.021683185012079775;0;0;0;0

Block: 1186
1186Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1186-Stack size: 9 
1186-Equals Mem:<< []>> 
1186-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1186-Equals Sto:<< []>> 
1186-NonEquals Sto: << []>> 
1186-Useless: []
1186-Constancy: [(4, 0)]
1186-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_1186_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1186_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1186;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1186;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.133358208986465;2;4;0;0

Block: 1286
1286Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1286-Stack size: 9 
1286-Equals Mem:<< []>> 
1286-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1286-Equals Sto:<< []>> 
1286-NonEquals Sto: << []>> 
1286-Useless: []
1286-Constancy: [(4, 0)]
1286-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_1286_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1286_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1286;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1286;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1245420339982957;2;4;0;0

Block: 1429
1429Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x05c3', 'SWAP1', 'DUP3', 'PUSH2 0x064b', 'JUMP']>> 
1429-Stack size: 10 
1429-Equals Mem:<< [<12,29>]>> 
1429-NonEquals Mem: << [<12,16>, <16,29>]>> 
1429-Equals Sto:<< [<24,31>]>> 
1429-NonEquals Sto: << []>> 
1429-Useless: []
1429-Constancy: [(5, 0)]
1429-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>]}
{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>], 'storage_deps_eqs': [<23,30>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(12)', 's(3)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x05c3 SWAP1 DUP3 PUSH2 0x064b JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x5c3 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x64b JUMP

Optimized code stored in /tmp/0x00/ERC20_1429_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1429_statistics.csv

Estimated initial gas: 5261
Estimated gas optimized: 5122

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 60

Initial number of instructions: 37
Final number of instructions: 32

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1429;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1429;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x05c3 SWAP1 DUP3 PUSH2 0x064b JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x5c3 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x64b JUMP;5261;46;37;5122;60;32;139;-14;5;True;True;False;False;2.1527894040336832;4;2;5100;5000

Block: 1634
1634Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634-Stack size: 13 
1634-Equals Mem:<< []>> 
1634-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
1634-Equals Sto:<< []>> 
1634-NonEquals Sto: << []>> 
1634-Useless: []
1634-Constancy: [(1, 0)]
1634-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x3c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_1634_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1634_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1634;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1634;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x03c8 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x3c8 JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.087175660999492;1;3;0;0

Block: 1475
1475Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x0486', 'JUMP']>> 
1475-Stack size: 10 
1475-Equals Mem:<< []>> 
1475-NonEquals Mem: << [<12,26>, <12,29>, <16,26>, <16,29>, <21,26>, <29,21>, <29,26>, <12,16>]>> 
1475-Equals Sto:<< []>> 
1475-NonEquals Sto: << []>> 
1475-Useless: []
1475-Constancy: [(5, 0)]
1475-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(19)', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(9)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP

Optimized code stored in /tmp/0x00/ERC20_1475_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1475_statistics.csv

Estimated initial gas: 5149
Estimated gas optimized: 5149

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 80

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1475;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1475;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP;5149;80;41;5149;80;41;0;0;0;True;False;False;False;2.292060567997396;2;2;5000;5000

Block: 1566
1566Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566-Stack size: 14 
1566-Equals Mem:<< []>> 
1566-NonEquals Mem: << [<6,1>]>> 
1566-Equals Sto:<< []>> 
1566-NonEquals Sto: << []>> 
1566-Useless: []
1566-Constancy: [(1, 0)]
1566-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x03c8 SWAP2 SWAP1 PUSH2 0x06b0 JUMP

Optimized sequence (basic block per line):
PUSH2 0x3c8 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x6b0 JUMP

Optimized code stored in /tmp/0x00/ERC20_1566_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1566_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_1566;0x00532c093780a69ef17a20976edc1228e90a835a.sol;ERC20;1566;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x03c8 SWAP2 SWAP1 PUSH2 0x06b0 JUMP;PUSH2 0x3c8 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x6b0 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07391159201506525;1;0;0;0

Block: 2041
2041Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041-Stack size: 18 
2041-Equals Mem:<< []>> 
2041-NonEquals Mem: << [<5,8>]>> 
2041-Equals Sto:<< []>> 
2041-NonEquals Sto: << []>> 
2041-Useless: []
2041-Constancy: [(5, 0), (6, 0)]
2041-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_ERC20_2041 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 191
191Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
191-Stack size: 2 
191-Equals Mem:<< []>> 
191-NonEquals Mem: << []>> 
191-Equals Sto:<< []>> 
191-NonEquals Sto: << []>> 
191-Useless: []
191-Constancy: []
191-ContextAliasing: []

Block: 968
968Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968-Stack size: 10 
968-Equals Mem:<< []>> 
968-NonEquals Mem: << []>> 
968-Equals Sto:<< []>> 
968-NonEquals Sto: << []>> 
968-Useless: []
968-Constancy: []
968-ContextAliasing: []

Block: 310
310Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
310-Stack size: 3 
310-Equals Mem:<< []>> 
310-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
310-Equals Sto:<< []>> 
310-NonEquals Sto: << []>> 
310-Useless: []
310-Constancy: []
310-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x00d3 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH1 0xd3 JUMP

Optimized code stored in /tmp/0x00/Ownable_310_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_310_statistics.csv

Estimated initial gas: 86
Estimated gas optimized: 77

Estimated initial size in bytes: 70
Estimated size optimized in bytes: 96

Initial number of instructions: 27
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_Ownable_310;0x00532c093780a69ef17a20976edc1228e90a835a.sol;Ownable;310;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x00d3 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH1 0xd3 JUMP;86;70;27;77;96;24;9;-26;3;True;False;False;False;2.215625992976129;1;3;0;0

Block: 396
396Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
396-Stack size: 3 
396-Equals Mem:<< []>> 
396-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
396-Equals Sto:<< []>> 
396-NonEquals Sto: << []>> 
396-Useless: []
396-Constancy: []
396-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP

Optimized code stored in /tmp/0x00/Ownable_396_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_396_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_Ownable_396;0x00532c093780a69ef17a20976edc1228e90a835a.sol;Ownable;396;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x00d3 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.1613308480009437;2;4;0;0

Block: 77
77Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
77-Stack size: 1 
77-Equals Mem:<< [<5,16>]>> 
77-NonEquals Mem: << [<15,5>, <15,16>]>> 
77-Equals Sto:<< []>> 
77-NonEquals Sto: << []>> 
77-Useless: []
77-Constancy: []
77-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>]}
{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('0', 'sload0'), 1), 0)}
Storage order: [(('0', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', 's(8)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
[RULE]: Simplification rule type 1: {'id': 'SUB_0', 'opcode': '03', 'disasm': 'SUB', 'inpt_sk': ['s(5)', 's(5)'], 'outpt_sk': ['s(4)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Simplification rule type 1: {'id': 'ADD_0', 'opcode': '01', 'disasm': 'ADD', 'inpt_sk': [32, 0], 'outpt_sk': ['s(3)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_1560f8b1022248b8b66282392d55270f/jsons/isolated_block_0_0_input.json --- (6, 5)
{1: ((('0', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_77_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_77_statistics.csv

Estimated initial gas: 2166
Estimated gas optimized: 2125

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 34

Initial number of instructions: 25
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_Ownable_77;0x00532c093780a69ef17a20976edc1228e90a835a.sol;Ownable;77;2;False;True;True;JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN;JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2166;30;25;2125;34;11;41;-4;14;True;False;False;False;0.13191112002823502;4;0;2100;2100

Block: 144
144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD']>> 
144-Stack size: 2 
144-Equals Mem:<< []>> 
144-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
144-Equals Sto:<< []>> 
144-NonEquals Sto: << []>> 
144-Useless: []
144-Constancy: []
144-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH1 0x64 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP3 PUSH1 0x44 ADD MSTORE ADD

Optimized code stored in /tmp/0x00/Ownable_144_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_144_statistics.csv

Estimated initial gas: 75
Estimated gas optimized: 66

Estimated initial size in bytes: 67
Estimated size optimized in bytes: 93

Initial number of instructions: 25
Final number of instructions: 22

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_Ownable_144;0x00532c093780a69ef17a20976edc1228e90a835a.sol;Ownable;144;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD;PUSH1 0x40 MLOAD PUSH1 0x64 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP3 PUSH1 0x44 ADD MSTORE ADD;75;67;25;66;93;22;9;-26;3;True;False;False;False;2.1558250940288417;1;3;0;0

Block: 211
211Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211-Stack size: 3 
211-Equals Mem:<< []>> 
211-NonEquals Mem: << []>> 
211-Equals Sto:<< []>> 
211-NonEquals Sto: << []>> 
211-Useless: []
211-Constancy: []
211-ContextAliasing: []

Block: 6870
6870Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6870-Stack size: 4 
6870-Equals Mem:<< []>> 
6870-NonEquals Mem: << [<6,1>]>> 
6870-Equals Sto:<< []>> 
6870-NonEquals Sto: << []>> 
6870-Useless: []
6870-Constancy: [(0, 0)]
6870-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6870_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6870_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6870;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6870;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02925288799451664;1;0;0;0

Block: 6916
6916Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6916-Stack size: 4 
6916-Equals Mem:<< []>> 
6916-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
6916-Equals Sto:<< []>> 
6916-NonEquals Sto: << []>> 
6916-Useless: []
6916-Constancy: [(0, 0)]
6916-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '35035607279093380804524503552812742655539810354421932185318081150801934906216', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6916_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6916_statistics.csv

Estimated initial gas: 86
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 27
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6916;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6916;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP;86;71;27;77;97;24;9;-26;3;True;False;False;False;2.202119898982346;1;3;0;0

Block: 6998
6998Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x06b656e7320696e204c5', 'PUSH1 0xb4', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6998-Stack size: 4 
6998-Equals Mem:<< []>> 
6998-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6998-Equals Sto:<< []>> 
6998-NonEquals Sto: << []>> 
6998-Useless: []
6998-Constancy: [(0, 0)]
6998-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('180', '31697768347443774227653', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '42', 'mstore'), 2), (('s(10)', '35000309491851471635150075513523011470886961656385422382499407754435263231087', 'mstore'), 2), (('s(12)', '48576688647857498851520605107417933417252856942702509490417846326515810172928', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6998_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6998_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 90
Estimated size optimized in bytes: 90

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6998;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6998;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;90;33;104;90;33;0;0;0;True;False;False;False;2.1242349950480275;2;4;0;0

Block: 7192
7192Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1c3c', 'SWAP2', 'SWAP1', 'PUSH2 0x320b', 'JUMP']>> 
7192-Stack size: 9 
7192-Equals Mem:<< [<18,6>]>> 
7192-NonEquals Mem: << []>> 
7192-Equals Sto:<< []>> 
7192-NonEquals Sto: << []>> 
7192-Useless: []
7192-Constancy: [(5, 0), (4, 0)]
7192-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7192 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7311
7311Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1ceb', 'JUMPI']>> 
7311-Stack size: 6 
7311-Equals Mem:<< [<14,26>]>> 
7311-NonEquals Mem: << [<21,14>, <21,26>]>> 
7311-Equals Sto:<< []>> 
7311-NonEquals Sto: << []>> 
7311-Useless: []
7311-Constancy: [(2, 0)]
7311-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>]}
{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542975', '0', 'and')
[RULE]: Evaluate expression ('4294967295', '4294363881', 'and')
[RULE]: Evaluate expression ('224', '4294363881', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(30)', '115775821201098036720259286011779173902827051908138836719913898872934598967296', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ceb JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ceb JUMPI

Optimized code stored in /tmp/0x00/SPUNKY_7311_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_7311_statistics.csv

Estimated initial gas: 2718
Estimated gas optimized: 2718

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 40
Final number of instructions: 40

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7311;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;7311;2;True;False;False;JUMPDEST PUSH0 PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ceb JUMPI;JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ceb JUMPI;2718;58;40;2718;58;40;0;0;0;True;False;False;False;2.2222446519881487;5;0;0;0

Block: 1045
1045Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1045-Stack size: 2 
1045-Equals Mem:<< []>> 
1045-NonEquals Mem: << [<7,2>]>> 
1045-Equals Sto:<< []>> 
1045-NonEquals Sto: << []>> 
1045-Useless: []
1045-Constancy: []
1045-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP

Optimized code stored in /tmp/0x00/SPUNKY_1045_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_1045_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_1045;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;1045;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP;39;16;12;39;16;12;0;0;0;True;False;False;False;0.051035877026151866;0;0;0;0

Block: 6806
6806Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6806-Stack size: 3 
6806-Equals Mem:<< []>> 
6806-NonEquals Mem: << [<6,1>]>> 
6806-Equals Sto:<< []>> 
6806-NonEquals Sto: << []>> 
6806-Useless: []
6806-Constancy: [(0, 0)]
6806-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6806_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6806_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6806;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6806;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027433760988060385;1;0;0;0

Block: 6570
6570Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6570-Stack size: 3 
6570-Equals Mem:<< []>> 
6570-NonEquals Mem: << [<6,1>]>> 
6570-Equals Sto:<< []>> 
6570-NonEquals Sto: << []>> 
6570-Useless: []
6570-Constancy: []
6570-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6570_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6570_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6570;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6570;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02699296601349488;1;0;0;0

Block: 6608
6608Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6608-Stack size: 3 
6608-Equals Mem:<< []>> 
6608-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6608-Equals Sto:<< []>> 
6608-NonEquals Sto: << []>> 
6608-Useless: []
6608-Constancy: []
6608-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6608_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6608_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 86
Estimated size optimized in bytes: 86

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6608;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6608;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;86;33;104;86;33;0;0;0;True;False;False;False;2.139453540032264;2;4;0;0

Block: 6512
6512Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6512-Stack size: 3 
6512-Equals Mem:<< []>> 
6512-NonEquals Mem: << [<6,1>]>> 
6512-Equals Sto:<< []>> 
6512-NonEquals Sto: << []>> 
6512-Useless: [6]
6512-Constancy: [(0, 0)]
6512-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6512_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6512_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6512;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6512;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027428317989688367;1;0;0;0

Block: 2651
2651Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2651-Stack size: 4 
2651-Equals Mem:<< [<12,27>, <17,31>]>> 
2651-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
2651-Equals Sto:<< []>> 
2651-NonEquals Sto: << []>> 
2651-Useless: []
2651-Constancy: []
2651-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x1 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_2651_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_2651_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2211

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_2651;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;2651;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x1 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP;2261;42;36;2211;55;30;50;-13;6;True;False;False;False;2.125199640984647;4;2;2100;2100

Block: 1198
1198Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1198-Stack size: 2 
1198-Equals Mem:<< []>> 
1198-NonEquals Mem: << [<5,2>]>> 
1198-Equals Sto:<< []>> 
1198-NonEquals Sto: << []>> 
1198-Useless: []
1198-Constancy: []
1198-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP

Optimized code stored in /tmp/0x00/SPUNKY_1198_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_1198_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_1198;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;1198;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.017728214035741985;0;0;0;0

Block: 6170
6170Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
6170-Stack size: 4 
6170-Equals Mem:<< []>> 
6170-NonEquals Mem: << [<6,1>]>> 
6170-Equals Sto:<< []>> 
6170-NonEquals Sto: << []>> 
6170-Useless: []
6170-Constancy: [(0, 0)]
6170-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6170_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6170_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6170;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6170;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02658062899718061;1;0;0;0

Block: 6235
6235Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x10181718181892903a37ba30b61039bab838363c97', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6235-Stack size: 4 
6235-Equals Mem:<< []>> 
6235-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6235-Equals Sto:<< []>> 
6235-NonEquals Sto: << []>> 
6235-Useless: []
6235-Constancy: [(0, 0)]
6235-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('89', '23521556991828086685040897923368548919632285023383', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '53', 'mstore'), 2), (('s(10)', '37752893725439476050558752958547938673905001715051344239317703186210607358318', 'mstore'), 2), (('s(12)', '14559138593258486356279113354235903196806038017392445212263276791969030864896', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6235_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6235_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 101
Estimated size optimized in bytes: 101

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6235;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6235;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;101;33;104;101;33;0;0;0;True;False;False;False;2.120651501987595;2;4;0;0

Block: 6377
6377Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x34', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH20 0x371018171a92903a37ba30b61039bab838363c97', 'PUSH1 0x61', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6377-Stack size: 4 
6377-Equals Mem:<< []>> 
6377-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6377-Equals Sto:<< []>> 
6377-NonEquals Sto: << []>> 
6377-Useless: []
6377-Constancy: [(0, 0)]
6377-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('97', '314353402875165393741808678374282470207075531927', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '52', 'mstore'), 2), (('s(10)', '37752893725439476050558752958547938673905001715051344220316404699267220138081', 'mstore'), 2), (('s(12)', '49811284979811228184086379330617010838393883170622782051169653113760140754944', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6377_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6377_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 100
Estimated size optimized in bytes: 100

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6377;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6377;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;100;33;104;100;33;0;0;0;True;False;False;False;2.1244225859991275;2;4;0;0

Block: 5959
5959Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5959-Stack size: 3 
5959-Equals Mem:<< []>> 
5959-NonEquals Mem: << [<6,1>]>> 
5959-Equals Sto:<< []>> 
5959-NonEquals Sto: << []>> 
5959-Useless: []
5959-Constancy: []
5959-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5959_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5959_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5959;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5959;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026832445990294218;1;0;0;0

Block: 6042
6042Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x302e3525', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
6042-Stack size: 3 
6042-Equals Mem:<< []>> 
6042-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6042-Equals Sto:<< []>> 
6042-NonEquals Sto: << []>> 
6042-Useless: []
6042-Constancy: []
6042-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '808334629', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '30477107189792067803313207901871713266821165230446138444013630436578330504736', 'mstore'), 2), (('s(12)', '21792658487050998905534797818903415876291501217413752893960496301360612900864', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_6042_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_6042_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6042;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;6042;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1214617809746414;2;4;0;0

Block: 5796
5796Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5796-Stack size: 5 
5796-Equals Mem:<< []>> 
5796-NonEquals Mem: << [<6,1>]>> 
5796-Equals Sto:<< []>> 
5796-NonEquals Sto: << []>> 
5796-Useless: []
5796-Constancy: []
5796-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5796_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5796_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5796;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5796;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.030771035992074758;1;0;0;0

Block: 5869
5869Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374206b656570206665657320617420333525206f72206c657373000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
5869-Stack size: 5 
5869-Equals Mem:<< []>> 
5869-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5869-Equals Sto:<< []>> 
5869-NonEquals Sto: << []>> 
5869-Useless: []
5869-Constancy: []
5869-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '29', 'mstore'), 2), (('s(10)', '35035607279088450693398230299797851840803294672987213302836724784023753195520', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420333525206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420333525206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5869_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5869_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5869;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5869;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420333525206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420333525206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.1005811900249682;1;3;0;0

Block: 5660
5660Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5660-Stack size: 4 
5660-Equals Mem:<< []>> 
5660-NonEquals Mem: << [<6,1>]>> 
5660-Equals Sto:<< []>> 
5660-NonEquals Sto: << []>> 
5660-Useless: []
5660-Constancy: []
5660-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5660_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5660_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5660;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5660;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02648237597895786;1;0;0;0

Block: 2384
2384Instr:<<['JUMPDEST', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
2384-Stack size: 3 
2384-Equals Mem:<< []>> 
2384-NonEquals Mem: << [<3,7>]>> 
2384-Equals Sto:<< []>> 
2384-NonEquals Sto: << []>> 
2384-Useless: []
2384-Constancy: []
2384-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '37', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{10: ((('s(4)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_2384 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5526
5526Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5526-Stack size: 3 
5526-Equals Mem:<< []>> 
5526-NonEquals Mem: << [<6,1>]>> 
5526-Equals Sto:<< []>> 
5526-NonEquals Sto: << []>> 
5526-Useless: []
5526-Constancy: []
5526-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5526_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5526_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5526;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5526;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026733932027127594;1;0;0;0

Block: 3531
3531Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
3531-Stack size: 4 
3531-Equals Mem:<< []>> 
3531-NonEquals Mem: << [<6,1>]>> 
3531-Equals Sto:<< []>> 
3531-NonEquals Sto: << []>> 
3531-Useless: []
3531-Constancy: []
3531-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_3531_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_3531_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_3531;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;3531;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026602717000059783;1;0;0;0

Block: 3554
3554Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3554-Stack size: 4 
3554-Equals Mem:<< []>> 
3554-NonEquals Mem: << [<13,16>]>> 
3554-Equals Sto:<< [<21,33>]>> 
3554-NonEquals Sto: << []>> 
3554-Useless: []
3554-Constancy: []
3554-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>], 'storage_deps_eqs': [<20,32>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(5)', 's(6)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '21', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_3554 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7491
7491Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7491-Stack size: 9 
7491-Equals Mem:<< []>> 
7491-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7491-Equals Sto:<< []>> 
7491-NonEquals Sto: << []>> 
7491-Useless: []
7491-Constancy: []
7491-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_7491_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_7491_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7491;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;7491;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.120015354012139;2;4;0;0

Block: 7589
7589Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7589-Stack size: 9 
7589-Equals Mem:<< []>> 
7589-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7589-Equals Sto:<< []>> 
7589-NonEquals Sto: << []>> 
7589-Useless: []
7589-Constancy: []
7589-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_7589_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_7589_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7589;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;7589;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.122277268965263;2;4;0;0

Block: 7671
7671Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
7671-Stack size: 9 
7671-Equals Mem:<< [<12,27>, <17,30>]>> 
7671-NonEquals Mem: << [<27,39>, <30,39>, <27,42>, <30,42>, <34,39>, <12,30>, <17,27>, <42,34>, <42,39>, <12,39>, <12,42>, <17,39>, <27,30>, <17,42>, <21,39>, <12,17>, <42,21>]>> 
7671-Equals Sto:<< []>> 
7671-NonEquals Sto: << []>> 
7671-Useless: []
7671-Constancy: []
7671-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>]}
{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(22)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(8)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized code stored in /tmp/0x00/SPUNKY_7671_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_7671_statistics.csv

Estimated initial gas: 5186
Estimated gas optimized: 5186

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 84

Initial number of instructions: 46
Final number of instructions: 46

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7671;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;7671;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;5186;84;46;5186;84;46;0;0;0;True;False;False;False;2.2935158740147017;4;2;5000;5000

Block: 5361
5361Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5361-Stack size: 3 
5361-Equals Mem:<< []>> 
5361-NonEquals Mem: << [<6,1>]>> 
5361-Equals Sto:<< []>> 
5361-NonEquals Sto: << []>> 
5361-Useless: []
5361-Constancy: []
5361-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5361_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5361_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5361;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5361;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02809582802001387;1;0;0;0

Block: 5289
5289Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5289-Stack size: 3 
5289-Equals Mem:<< []>> 
5289-NonEquals Mem: << [<6,1>]>> 
5289-Equals Sto:<< []>> 
5289-NonEquals Sto: << []>> 
5289-Useless: []
5289-Constancy: []
5289-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5289_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5289_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5289;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5289;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027949384995736182;1;0;0;0

Block: 5066
5066Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
5066-Stack size: 4 
5066-Equals Mem:<< []>> 
5066-NonEquals Mem: << [<6,1>]>> 
5066-Equals Sto:<< []>> 
5066-NonEquals Sto: << []>> 
5066-Useless: []
5066-Constancy: []
5066-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5066_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5066_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5066;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5066;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027615098981186748;1;0;0;0

Block: 5147
5147Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x39', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
5147-Stack size: 4 
5147-Equals Mem:<< []>> 
5147-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
5147-Equals Sto:<< []>> 
5147-NonEquals Sto: << []>> 
5147-Useless: []
5147-Constancy: []
5147-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '57', 'mstore'), 2), (('s(10)', '38178729326665697386670742406975927714470749681894191956009561408878947560736', 'mstore'), 2), (('s(12)', '44081871025805348716541635358684624520033928842552081219183683813782855876608', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_5147_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_5147_statistics.csv

Estimated initial gas: 98
Estimated gas optimized: 98

Estimated initial size in bytes: 109
Estimated size optimized in bytes: 109

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5147;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;5147;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;98;109;31;98;109;31;0;0;0;True;False;False;False;2.122154401964508;1;4;0;0

Block: 2894
2894Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x0b7a', 'SWAP1', 'PUSH2 0x312e', 'JUMP']>> 
2894-Stack size: 5 
2894-Equals Mem:<< [<17,12>]>> 
2894-NonEquals Mem: << [<17,24>, <24,12>]>> 
2894-Equals Sto:<< []>> 
2894-NonEquals Sto: << []>> 
2894-Useless: []
2894-Constancy: [(2, 96)]
2894-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>]}
{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{28: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(12)', 'mstore'), 2), (('s(10)', 's(1)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
{28: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7a SWAP1 PUSH2 0x312e JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7a SWAP1 PUSH2 0x312e JUMP

Optimized code stored in /tmp/0x00/SPUNKY_2894_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_2894_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2206

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_2894;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;2894;2;True;False;False;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7a SWAP1 PUSH2 0x312e JUMP;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7a SWAP1 PUSH2 0x312e JUMP;2206;44;34;2206;44;34;0;0;0;True;False;False;False;2.2017898749909364;0;1;2100;2100

Block: 12621
12621Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12621-Stack size: 8 
12621-Equals Mem:<< []>> 
12621-NonEquals Mem: << [<4,7>]>> 
12621-Equals Sto:<< []>> 
12621-NonEquals Sto: << []>> 
12621-Useless: []
12621-Constancy: []
12621-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '34', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_12621 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 12101
12101Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
12101-Stack size: 4 
12101-Equals Mem:<< []>> 
12101-NonEquals Mem: << [<12,7>, <5,7>]>> 
12101-Equals Sto:<< []>> 
12101-NonEquals Sto: << []>> 
12101-Useless: []
12101-Constancy: []
12101-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/SPUNKY_12101_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_12101_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_12101;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;12101;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.1499454090371728;0;1;0;0

Block: 12125
12125Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2f54', 'JUMP']>> 
12125-Stack size: 8 
12125-Equals Mem:<< []>> 
12125-NonEquals Mem: << [<11,5>]>> 
12125-Equals Sto:<< []>> 
12125-NonEquals Sto: << []>> 
12125-Useless: []
12125-Constancy: [(2, 32), (3, 0)]
12125-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2f54 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2f54 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_12125_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_12125_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_12125;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;12125;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2f54 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2f54 JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6646859930478968;0;0;0;0

Block: 4981
4981Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4981-Stack size: 3 
4981-Equals Mem:<< []>> 
4981-NonEquals Mem: << [<6,1>]>> 
4981-Equals Sto:<< []>> 
4981-NonEquals Sto: << []>> 
4981-Useless: []
4981-Constancy: []
4981-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4981_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4981_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4981;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4981;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026970238017383963;1;0;0;0

Block: 4912
4912Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4912-Stack size: 2 
4912-Equals Mem:<< []>> 
4912-NonEquals Mem: << [<6,1>]>> 
4912-Equals Sto:<< []>> 
4912-NonEquals Sto: << []>> 
4912-Useless: []
4912-Constancy: []
4912-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4912_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4912_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4912;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4912;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02699280803790316;1;0;0;0

Block: 4744
4744Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4744-Stack size: 5 
4744-Equals Mem:<< []>> 
4744-NonEquals Mem: << [<6,1>]>> 
4744-Equals Sto:<< []>> 
4744-NonEquals Sto: << []>> 
4744-Useless: []
4744-Constancy: []
4744-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4744_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4744_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4744;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4744;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02682267699856311;1;0;0;0

Block: 4817
4817Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374206b656570206665657320617420313025206f72206c657373000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
4817-Stack size: 5 
4817-Equals Mem:<< []>> 
4817-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
4817-Equals Sto:<< []>> 
4817-NonEquals Sto: << []>> 
4817-Useless: []
4817-Constancy: []
4817-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '29', 'mstore'), 2), (('s(10)', '35035607279088450693398230299797851840803294632026253282962062248161530871808', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420313025206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420313025206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4817_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4817_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4817;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4817;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420313025206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374206b656570206665657320617420313025206f72206c657373000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.093588099000044;1;3;0;0

Block: 4660
4660Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4660-Stack size: 4 
4660-Equals Mem:<< []>> 
4660-NonEquals Mem: << [<6,1>]>> 
4660-Equals Sto:<< []>> 
4660-NonEquals Sto: << []>> 
4660-Useless: []
4660-Constancy: []
4660-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4660_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4660_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4660;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4660;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02742185298120603;1;0;0;0

Block: 4683
4683Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4683-Stack size: 4 
4683-Equals Mem:<< []>> 
4683-NonEquals Mem: << [<13,16>]>> 
4683-Equals Sto:<< [<21,33>]>> 
4683-NonEquals Sto: << []>> 
4683-Useless: []
4683-Constancy: []
4683-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>], 'storage_deps_eqs': [<20,32>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(5)', 's(6)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '36', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4683 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4602
4602Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4602-Stack size: 3 
4602-Equals Mem:<< []>> 
4602-NonEquals Mem: << [<6,1>]>> 
4602-Equals Sto:<< []>> 
4602-NonEquals Sto: << []>> 
4602-Useless: [6]
4602-Constancy: [(0, 0)]
4602-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4602_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4602_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4602;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4602;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.0278751669684425;1;0;0;0

Block: 4303
4303Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4303-Stack size: 5 
4303-Equals Mem:<< []>> 
4303-NonEquals Mem: << [<6,1>]>> 
4303-Equals Sto:<< []>> 
4303-NonEquals Sto: << []>> 
4303-Useless: []
4303-Constancy: []
4303-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4303_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4303_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4303;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4303;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02803363697603345;1;0;0;0

Block: 4337
4337Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x33', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x616e206576657279203130206d696e75746573', 'PUSH1 0x68', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
4337-Stack size: 5 
4337-Equals Mem:<< []>> 
4337-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4337-Equals Sto:<< []>> 
4337-NonEquals Sto: << []>> 
4337-Useless: []
4337-Constancy: []
4337-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('104', '2172765659612481738341636496026460771826558323', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '51', 'mstore'), 2), (('s(10)', '44951118344456592231259581011995386812224832139605867268457959274560054391912', 'mstore'), 2), (('s(12)', '44068923081008755986940236417526554713325010277242960554061263941764978311168', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4337_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4337_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 99
Estimated size optimized in bytes: 99

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4337;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4337;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;99;33;104;99;33;0;0;0;True;False;False;False;2.1260963680106215;2;4;0;0

Block: 4457
4457Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x30', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x747765656e20302520616e6420313025', 'PUSH1 0x80', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
4457-Stack size: 5 
4457-Equals Mem:<< []>> 
4457-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4457-Equals Sto:<< []>> 
4457-NonEquals Sto: << []>> 
4457-Useless: []
4457-Constancy: []
4457-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('128', '154810387396712532569077265297826721829', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '48', 'mstore'), 2), (('s(10)', '35035607279091741794714035847652857855025626984120364590021748194929308361317', 'mstore'), 2), (('s(12)', '52679245047300761501755883755669256545879678137073643618525455050910963073024', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4457_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4457_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 96
Estimated size optimized in bytes: 96

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4457;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4457;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;96;33;104;96;33;0;0;0;True;False;False;False;2.1231891689822078;2;4;0;0

Block: 4188
4188Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
4188-Stack size: 2 
4188-Equals Mem:<< []>> 
4188-NonEquals Mem: << [<6,1>]>> 
4188-Equals Sto:<< []>> 
4188-NonEquals Sto: << []>> 
4188-Useless: [6]
4188-Constancy: []
4188-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_4188_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_4188_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4188;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;4188;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02768743399064988;1;0;0;0

Block: 1734
1734Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1734-Stack size: 3 
1734-Equals Mem:<< []>> 
1734-NonEquals Mem: << [<10,14>]>> 
1734-Equals Sto:<< []>> 
1734-NonEquals Sto: << []>> 
1734-Useless: []
1734-Constancy: []
1734-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(2)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(2)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_1734 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1607
1607Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'SWAP1', 'JUMP']>> 
1607-Stack size: 3 
1607-Equals Mem:<< []>> 
1607-NonEquals Mem: << [<10,13>]>> 
1607-Equals Sto:<< []>> 
1607-NonEquals Sto: << []>> 
1607-Useless: []
1607-Constancy: []
1607-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{16: ((('s(3)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{16: ((('s(3)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_1607 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1158
1158Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1158-Stack size: 2 
1158-Equals Mem:<< []>> 
1158-NonEquals Mem: << [<12,2>]>> 
1158-Equals Sto:<< []>> 
1158-NonEquals Sto: << []>> 
1158-Useless: []
1158-Constancy: []
1158-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3ed JUMP

Optimized code stored in /tmp/0x00/SPUNKY_1158_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_1158_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 39

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 36

Initial number of instructions: 17
Final number of instructions: 12

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_1158;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;1158;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03ed JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3ed JUMP;54;24;17;39;36;12;15;-12;5;True;False;False;False;0.09203629998955876;2;0;0;0

Block: 3596
3596Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0bdb', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x0da9', 'SWAP1', 'DUP7', 'PUSH2 0x283d', 'JUMP']>> 
3596-Stack size: 4 
3596-Equals Mem:<< [<5,23>, <10,26>]>> 
3596-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
3596-Equals Sto:<< []>> 
3596-NonEquals Sto: << []>> 
3596-Useless: []
3596-Constancy: []
3596-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>]}
{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{28: ((('s(10)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{28: ((('s(10)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdb SWAP2 DUP6 SWAP1 PUSH2 0x0da9 SWAP1 DUP7 PUSH2 0x283d JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdb SWAP2 DUP6 SWAP1 PUSH2 0x0da9 SWAP1 DUP7 PUSH2 0x283d JUMP

Optimized code stored in /tmp/0x00/SPUNKY_3596_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_3596_statistics.csv

Estimated initial gas: 2275
Estimated gas optimized: 2275

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_3596;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;3596;2;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdb SWAP2 DUP6 SWAP1 PUSH2 0x0da9 SWAP1 DUP7 PUSH2 0x283d JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdb SWAP2 DUP6 SWAP1 PUSH2 0x0da9 SWAP1 DUP7 PUSH2 0x283d JUMP;2275;53;41;2275;53;41;0;0;0;True;False;False;False;2.1807441290002316;4;2;2100;2100

Block: 1458
1458Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03ed', 'JUMP']>> 
1458-Stack size: 2 
1458-Equals Mem:<< []>> 
1458-NonEquals Mem: << [<6,3>]>> 
1458-Equals Sto:<< []>> 
1458-NonEquals Sto: << []>> 
1458-Useless: []
1458-Constancy: []
1458-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '18', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_1458 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7783
7783Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
7783-Stack size: 9 
7783-Equals Mem:<< []>> 
7783-NonEquals Mem: << [<6,1>]>> 
7783-Equals Sto:<< []>> 
7783-NonEquals Sto: << []>> 
7783-Useless: []
7783-Constancy: [(4, 0)]
7783-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3222 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3222 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_7783_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_7783_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7783;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;7783;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3222 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3222 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027100713981781155;1;0;0;0

Block: 7821
7821Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
7821-Stack size: 9 
7821-Equals Mem:<< []>> 
7821-NonEquals Mem: << [<6,1>]>> 
7821-Equals Sto:<< []>> 
7821-NonEquals Sto: << []>> 
7821-Useless: []
7821-Constancy: [(4, 0)]
7821-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3267 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3267 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_7821_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_7821_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7821;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;7821;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3267 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3267 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027285345015116036;1;0;0;0

Block: 7844
7844Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1ee4', 'JUMPI']>> 
7844-Stack size: 9 
7844-Equals Mem:<< []>> 
7844-NonEquals Mem: << [<11,14>]>> 
7844-Equals Sto:<< []>> 
7844-NonEquals Sto: << []>> 
7844-Useless: []
7844-Constancy: [(4, 0)]
7844-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '21', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7844 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7879
7879Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x15', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7879-Stack size: 10 
7879-Equals Mem:<< []>> 
7879-NonEquals Mem: << [<11,14>]>> 
7879-Equals Sto:<< []>> 
7879-NonEquals Sto: << []>> 
7879-Useless: []
7879-Constancy: [(5, 0)]
7879-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '21', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7879 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7913
7913Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x31', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x596f752068617665206265656e20626c61636b6c69737465642066726f6d2074', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH17 0x72616e73666572696e6720746f6b656e73', 'PUSH1 0x78', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
7913-Stack size: 9 
7913-Equals Mem:<< []>> 
7913-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7913-Equals Sto:<< []>> 
7913-NonEquals Sto: << []>> 
7913-Useless: []
7913-Constancy: [(4, 0)]
7913-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('120', '38921698437822333803353019611635335392883', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '49', 'mstore'), 2), (('s(10)', '40452771926134549143108746262240342642701640833026382002500769991513544138868', 'mstore'), 2), (('s(12)', '51735811207051471831873719300109910810632533316248166473875121921315578052608', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752068617665206265656e20626c61636b6c69737465642066726f6d2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x72616e73666572696e6720746f6b656e73 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752068617665206265656e20626c61636b6c69737465642066726f6d2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x72616e73666572696e6720746f6b656e73 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_7913_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_7913_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 97
Estimated size optimized in bytes: 97

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_7913;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;7913;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752068617665206265656e20626c61636b6c69737465642066726f6d2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x72616e73666572696e6720746f6b656e73 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596f752068617665206265656e20626c61636b6c69737465642066726f6d2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x72616e73666572696e6720746f6b656e73 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;97;33;104;97;33;0;0;0;True;False;False;False;2.1231387419975363;2;4;0;0

Block: 10256
10256Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
10256-Stack size: 14 
10256-Equals Mem:<< []>> 
10256-NonEquals Mem: << [<6,1>]>> 
10256-Equals Sto:<< []>> 
10256-NonEquals Sto: << []>> 
10256-Useless: []
10256-Constancy: [(1, 0)]
10256-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP2 SWAP1 PUSH2 0x2f45 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x2f45 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_10256_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_10256_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10256;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;10256;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP2 SWAP1 PUSH2 0x2f45 JUMP;PUSH2 0xc0f SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x2f45 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07332551601575688;1;0;0;0

Block: 8169
8169Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x2025', 'JUMPI']>> 
8169-Stack size: 9 
8169-Equals Mem:<< []>> 
8169-NonEquals Mem: << [<10,13>]>> 
8169-Equals Sto:<< []>> 
8169-NonEquals Sto: << []>> 
8169-Useless: []
8169-Constancy: [(4, 0)]
8169-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8169 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8201
8201Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8201-Stack size: 10 
8201-Equals Mem:<< []>> 
8201-NonEquals Mem: << [<11,14>]>> 
8201-Equals Sto:<< []>> 
8201-NonEquals Sto: << []>> 
8201-Useless: []
8201-Constancy: [(5, 0)]
8201-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(6)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8201 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8234
8234Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297', 'PUSH1 0x51', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8234-Stack size: 9 
8234-Equals Mem:<< []>> 
8234-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
8234-Equals Sto:<< []>> 
8234-NonEquals Sto: << []>> 
8234-Useless: []
8234-Constancy: [(4, 0)]
8234-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('81', '15797649203591553606597696107307749458356587061785239', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '22', 'mstore'), 2), (('s(10)', '38196372022872625555279357441270929534841710934752674889868621273811677872128', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696e67206973206e6f74206163746976652e00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_8234_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_8234_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 64
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8234;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;8234;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696e67206973206e6f74206163746976652e00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP;89;64;28;77;97;24;12;-33;4;True;False;False;False;2.096940355026163;2;3;0;0

Block: 8457
8457Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x219d', 'JUMPI']>> 
8457-Stack size: 9 
8457-Equals Mem:<< []>> 
8457-NonEquals Mem: << [<4,7>]>> 
8457-Equals Sto:<< []>> 
8457-NonEquals Sto: << []>> 
8457-Useless: []
8457-Constancy: [(4, 0)]
8457-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(6)', 'mstore'), 2), (('32', '19', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(4)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8457 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8478
8478Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8478-Stack size: 9 
8478-Equals Mem:<< []>> 
8478-NonEquals Mem: << [<33,1>, <6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
8478-Equals Sto:<< []>> 
8478-NonEquals Sto: << []>> 
8478-Useless: []
8478-Constancy: [(4, 0)]
8478-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,33>, <1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,33>, <1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('185', '298657957751934857751', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '73', 'mstore'), 2), (('s(10)', '43175464300754785199614199185070010317087193698741912792988322009422349034092', 'mstore'), 2), (('s(12)', '45860600759840658865901563111326240759021334497413467019838167414095995691883', 'mstore'), 2), (('s(14)', '14646143631966502206444807779315018622133502848875313473344638166890690117632', 'mstore'), 2)]
Memory dep: [(5, 6), (4, 6), (3, 6), (2, 6), (1, 6), (4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(5, 6), (4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_8478_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_8478_statistics.csv

Estimated initial gas: 119
Estimated gas optimized: 119

Estimated initial size in bytes: 127
Estimated size optimized in bytes: 127

Initial number of instructions: 38
Final number of instructions: 38

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8478;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;8478;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c0f JUMP;119;127;38;119;127;38;0;0;0;True;False;False;False;2.190586509008426;2;5;0;0

Block: 8605
8605Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
8605-Stack size: 9 
8605-Equals Mem:<< []>> 
8605-NonEquals Mem: << [<5,8>]>> 
8605-Equals Sto:<< []>> 
8605-NonEquals Sto: << []>> 
8605-Useless: []
8605-Constancy: [(4, 0)]
8605-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(1)', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(1)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(0)', 'mstore'), 2), (('32', '19', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(1)', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8605 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8623
8623Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x21ee', 'JUMPI']>> 
8623-Stack size: 9 
8623-Equals Mem:<< []>> 
8623-NonEquals Mem: << [<11,14>]>> 
8623-Equals Sto:<< []>> 
8623-NonEquals Sto: << []>> 
8623-Useless: []
8623-Constancy: [(4, 0)]
8623-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8623 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8657
8657Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8657-Stack size: 10 
8657-Equals Mem:<< []>> 
8657-NonEquals Mem: << [<11,14>]>> 
8657-Equals Sto:<< []>> 
8657-NonEquals Sto: << []>> 
8657-Useless: []
8657-Constancy: [(5, 0)]
8657-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '36', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8657 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8702
8702Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8702-Stack size: 9 
8702-Equals Mem:<< []>> 
8702-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8702-Equals Sto:<< []>> 
8702-NonEquals Sto: << []>> 
8702-Useless: []
8702-Constancy: [(4, 0)]
8702-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('89', '79930067009807935449057770381727092081267899316759', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '53', 'mstore'), 2), (('s(10)', '30060205099364186885976764868343247874266761512867242930847939913275692049696', 'mstore'), 2), (('s(12)', '49474315147102356744140233779948130580741947953326364317684320560628533035008', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_8702_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_8702_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 101
Estimated size optimized in bytes: 101

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8702;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;8702;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;101;33;104;101;33;0;0;0;True;False;False;False;2.1235645919805393;2;4;0;0

Block: 8803
8803Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x2288', 'SWAP1', 'DUP4', 'PUSH2 0x31e5', 'JUMP']>> 
8803-Stack size: 9 
8803-Equals Mem:<< []>> 
8803-NonEquals Mem: << [<13,17>]>> 
8803-Equals Sto:<< []>> 
8803-NonEquals Sto: << [<2,21>]>> 
8803-Useless: []
8803-Constancy: [(4, 0)]
8803-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,20>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('11', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
Storage order: [(('11', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('11', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8803 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8847
8847Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8847-Stack size: 9 
8847-Equals Mem:<< []>> 
8847-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
8847-Equals Sto:<< []>> 
8847-NonEquals Sto: << []>> 
8847-Useless: []
8847-Constancy: [(4, 0)]
8847-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('106', '431412037265356103410419391025242695823595865', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '19', 'mstore'), 2), (('s(10)', '35000302591047163824987253156181141204538582116538717432252051161594839695360', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_8847_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_8847_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 61
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8847;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;8847;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP;89;61;28;77;97;24;12;-36;4;True;False;False;False;2.0934182929922827;2;3;0;0

Block: 8913
8913Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2310', 'JUMPI']>> 
8913-Stack size: 9 
8913-Equals Mem:<< []>> 
8913-NonEquals Mem: << [<11,14>]>> 
8913-Equals Sto:<< []>> 
8913-NonEquals Sto: << []>> 
8913-Useless: []
8913-Constancy: [(4, 0)]
8913-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8913 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8947
8947Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8947-Stack size: 10 
8947-Equals Mem:<< []>> 
8947-NonEquals Mem: << [<11,14>]>> 
8947-Equals Sto:<< []>> 
8947-NonEquals Sto: << []>> 
8947-Useless: []
8947-Constancy: [(5, 0)]
8947-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '36', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8947 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8992
8992Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x36', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x51', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
8992-Stack size: 9 
8992-Equals Mem:<< []>> 
8992-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8992-Equals Sto:<< []>> 
8992-NonEquals Sto: << []>> 
8992-Useless: []
8992-Constancy: [(4, 0)]
8992-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('81', '6066240773517186288411350845187622340591967595346455', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '54', 'mstore'), 2), (('s(10)', '37721166289651317253512263202604543959880923497099808926894330830332112431205', 'mstore'), 2), (('s(12)', '14667270198207893008978170914288910866739771317397751615548152378179096412160', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_8992_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_8992_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 102
Estimated size optimized in bytes: 102

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_8992;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;8992;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;102;33;104;102;33;0;0;0;True;False;False;False;2.1213720300002024;2;4;0;0

Block: 9094
9094Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x240e', 'JUMPI']>> 
9094-Stack size: 9 
9094-Equals Mem:<< []>> 
9094-NonEquals Mem: << [<11,14>]>> 
9094-Equals Sto:<< []>> 
9094-NonEquals Sto: << []>> 
9094-Useless: []
9094-Constancy: [(4, 0)]
9094-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '36', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9094 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9126
9126Instr:<<['PUSH1 0x0b', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x23ca', 'SWAP1', 'DUP4', 'PUSH2 0x31e5', 'JUMP']>> 
9126-Stack size: 9 
9126-Equals Mem:<< []>> 
9126-NonEquals Mem: << [<12,16>]>> 
9126-Equals Sto:<< []>> 
9126-NonEquals Sto: << [<1,20>]>> 
9126-Useless: []
9126-Constancy: [(4, 0)]
9126-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,20>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('11', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
Storage order: [(('11', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('11', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9126 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9169
9169Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
9169-Stack size: 9 
9169-Equals Mem:<< []>> 
9169-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
9169-Equals Sto:<< []>> 
9169-NonEquals Sto: << []>> 
9169-Useless: []
9169-Constancy: [(4, 0)]
9169-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('106', '431412037265356103410419391025242695823595865', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '19', 'mstore'), 2), (('s(10)', '35000302591047163824987253156181141204538582116538717432252051161594839695360', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_9169_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_9169_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 61
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9169;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;9169;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP;89;61;28;77;97;24;12;-36;4;True;False;False;False;2.094905971956905;2;3;0;0

Block: 9230
9230Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x0a', 'SLOAD', 'DUP2', 'LT', 'DUP1', 'ISZERO', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x2439', 'JUMPI']>> 
9230-Stack size: 9 
9230-Equals Mem:<< []>> 
9230-NonEquals Mem: << [<5,9>]>> 
9230-Equals Sto:<< []>> 
9230-NonEquals Sto: << [<13,15>]>> 
9230-Useless: []
9230-Constancy: [(4, 0)]
9230-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<12,14>]}
{12: ((('s(6)', 'sload0'), 1), 1), 14: ((('10', 'sload1'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('10', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(21)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{12: ((('s(6)', 'sload0'), 1), 1), 14: ((('10', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9230 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9302
9302Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9302-Stack size: 12 
9302-Equals Mem:<< []>> 
9302-NonEquals Mem: << [<11,14>]>> 
9302-Equals Sto:<< []>> 
9302-NonEquals Sto: << []>> 
9302-Useless: []
9302-Constancy: [(7, 0)]
9302-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9302 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9338
9338Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9338-Stack size: 12 
9338-Equals Mem:<< []>> 
9338-NonEquals Mem: << [<11,14>]>> 
9338-Equals Sto:<< []>> 
9338-NonEquals Sto: << []>> 
9338-Useless: []
9338-Constancy: [(7, 0)]
9338-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9338 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9374
9374Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9374-Stack size: 12 
9374-Equals Mem:<< []>> 
9374-NonEquals Mem: << [<11,14>]>> 
9374-Equals Sto:<< []>> 
9374-NonEquals Sto: << []>> 
9374-Useless: []
9374-Constancy: [(7, 0)]
9374-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9374 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3649
3649Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'POP', 'PUSH0', 'PUSH1 0x21', 'SLOAD', 'PUSH1 0x1f', 'SLOAD', 'PUSH1 0x20', 'SLOAD', 'PUSH2 0x0e66', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
3649-Stack size: 2 
3649-Equals Mem:<< []>> 
3649-NonEquals Mem: << [<5,9>]>> 
3649-Equals Sto:<< []>> 
3649-NonEquals Sto: << [<13,20>, <13,22>, <18,20>, <18,22>, <20,22>, <13,18>]>> 
3649-Useless: []
3649-Constancy: []
3649-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<12,19>, <12,21>, <17,19>, <17,21>, <19,21>, <12,17>]}
{12: ((('s(10)', 'sload0'), 1), 1), 17: ((('33', 'sload1'), 1), 2), 19: ((('31', 'sload2'), 1), 3), 21: ((('32', 'sload3'), 1), 4)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('33', 'sload1'), 1), (('31', 'sload2'), 1), (('32', 'sload3'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{12: ((('s(10)', 'sload0'), 1), 1), 17: ((('33', 'sload1'), 1), 2), 19: ((('31', 'sload2'), 1), 3), 21: ((('32', 'sload3'), 1), 4)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_3649 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10402
10402Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2805', 'JUMP']>> 
10402-Stack size: 10 
10402-Equals Mem:<< [<11,6>]>> 
10402-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
10402-Equals Sto:<< []>> 
10402-NonEquals Sto: << []>> 
10402-Useless: []
10402-Constancy: [(3, 0)]
10402-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '30', 'mstore'), 2), (('s(12)', '37714057306925736537727343956344029380455708191757305005271024775623175766016', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x2805 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x2805 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_10402_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_10402_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10402;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;10402;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x2805 JUMP;JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x2805 JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.1419409409863874;0;1;0;0

Block: 10642
10642Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x29b6', 'SWAP2', 'SWAP1', 'PUSH2 0x32be', 'JUMP']>> 
10642-Stack size: 15 
10642-Equals Mem:<< [<18,6>]>> 
10642-NonEquals Mem: << []>> 
10642-Equals Sto:<< []>> 
10642-NonEquals Sto: << []>> 
10642-Useless: []
10642-Constancy: [(10, 0)]
10642-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10642 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 12970
12970Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12970-Stack size: 15 
12970-Equals Mem:<< []>> 
12970-NonEquals Mem: << [<5,8>]>> 
12970-Equals Sto:<< []>> 
12970-NonEquals Sto: << []>> 
12970-Useless: []
12970-Constancy: [(10, 0)]
12970-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_12970 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10772
10772Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x2a68', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x32d9', 'JUMP']>> 
10772-Stack size: 11 
10772-Equals Mem:<< []>> 
10772-NonEquals Mem: << [<7,2>]>> 
10772-Equals Sto:<< []>> 
10772-NonEquals Sto: << []>> 
10772-Useless: []
10772-Constancy: [(6, 0)]
10772-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('0', '1461501637330902918203684832716283019655932542975', 'and')
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(13)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2a68 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x32d9 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2a68 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x32d9 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_10772_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_10772_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10772;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;10772;2;True;False;False;JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2a68 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x32d9 JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2a68 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x32d9 JUMP;102;53;34;102;53;34;0;0;0;True;False;False;False;2.1542109990259632;4;0;0;0

Block: 13017
13017Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
13017-Stack size: 20 
13017-Equals Mem:<< []>> 
13017-NonEquals Mem: << [<13,21>, <7,21>, <24,21>, <18,21>]>> 
13017-Equals Sto:<< []>> 
13017-NonEquals Sto: << []>> 
13017-Useless: []
13017-Constancy: [(15, 0), (4, 0)]
13017-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('s(15)', 's(1)', 'mstore'), 2), (('s(16)', '160', 'mstore'), 2), (('s(2)', 'mload0'), 1), (('s(17)', 's(12)', 'mstore'), 2)]
Memory dep: [(2, 4), (1, 4), (0, 4), (1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(2, 4), (1, 2), (0, 1)]
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized code stored in /tmp/0x00/SPUNKY_13017_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_13017_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 41
Estimated size optimized in bytes: 41

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_13017;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;13017;2;True;False;False;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;102;41;36;102;41;36;0;0;0;True;False;False;False;2.315983755979687;0;3;0;0

Block: 13067
13067Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x3302', 'JUMP']>> 
13067-Stack size: 26 
13067-Equals Mem:<< []>> 
13067-NonEquals Mem: << [<9,1>]>> 
13067-Equals Sto:<< []>> 
13067-NonEquals Sto: << []>> 
13067-Useless: []
13067-Constancy: [(5, 0), (10, 0), (3, 32), (21, 0)]
13067-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(9)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x3302 JUMP

Optimized sequence (basic block per line):
PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x3302 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_13067_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_13067_statistics.csv

Estimated initial gas: 71
Estimated gas optimized: 53

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 39

Initial number of instructions: 22
Final number of instructions: 16

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_13067;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;13067;2;True;True;False;DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x3302 JUMP;PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x3302 JUMP;71;28;22;53;39;16;18;-11;6;True;False;False;False;2.0890324600040913;2;0;0;0

Block: 11279
11279Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2c34', 'SWAP2', 'SWAP1', 'PUSH2 0x3348', 'JUMP']>> 
11279-Stack size: 20 
11279-Equals Mem:<< [<19,7>]>> 
11279-NonEquals Mem: << []>> 
11279-Equals Sto:<< []>> 
11279-NonEquals Sto: << []>> 
11279-Useless: []
11279-Constancy: []
11279-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11279 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9470
9470Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
9470-Stack size: 12 
9470-Equals Mem:<< []>> 
9470-NonEquals Mem: << [<11,14>]>> 
9470-Equals Sto:<< []>> 
9470-NonEquals Sto: << []>> 
9470-Useless: []
9470-Constancy: [(7, 0)]
9470-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9470 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9546
9546Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9546-Stack size: 12 
9546-Equals Mem:<< []>> 
9546-NonEquals Mem: << [<11,14>]>> 
9546-Equals Sto:<< []>> 
9546-NonEquals Sto: << []>> 
9546-Useless: []
9546-Constancy: [(7, 0)]
9546-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9546 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 11774
11774Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2e22', 'SWAP2', 'SWAP1', 'PUSH2 0x320b', 'JUMP']>> 
11774-Stack size: 18 
11774-Equals Mem:<< [<18,6>]>> 
11774-NonEquals Mem: << []>> 
11774-Equals Sto:<< []>> 
11774-NonEquals Sto: << []>> 
11774-Useless: []
11774-Constancy: [(4, 0), (5, 0), (13, 0)]
11774-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11774 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 11893
11893Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x2ed1', 'JUMPI']>> 
11893-Stack size: 15 
11893-Equals Mem:<< [<14,26>]>> 
11893-NonEquals Mem: << [<21,14>, <21,26>]>> 
11893-Equals Sto:<< []>> 
11893-NonEquals Sto: << []>> 
11893-Useless: []
11893-Constancy: [(10, 0), (2, 0)]
11893-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>]}
{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542975', '0', 'and')
[RULE]: Evaluate expression ('4294967295', '4294363881', 'and')
[RULE]: Evaluate expression ('224', '4294363881', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(30)', '115775821201098036720259286011779173902827051908138836719913898872934598967296', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ed1 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ed1 JUMPI

Optimized code stored in /tmp/0x00/SPUNKY_11893_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_11893_statistics.csv

Estimated initial gas: 2718
Estimated gas optimized: 2718

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 40
Final number of instructions: 40

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11893;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;11893;2;True;False;False;JUMPDEST PUSH0 PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ed1 JUMPI;JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ed1 JUMPI;2718;58;40;2718;58;40;0;0;0;True;False;False;False;2.198420743981842;5;0;0;0

Block: 9590
9590Instr:<<['JUMPDEST', 'PUSH1 0x06', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SWAP1', 'SWAP4', 'DIV', 'DUP4', 'AND', 'ISZERO', 'SWAP3', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x25c5', 'JUMPI']>> 
9590-Stack size: 11 
9590-Equals Mem:<< []>> 
9590-NonEquals Mem: << [<13,16>]>> 
9590-Equals Sto:<< []>> 
9590-NonEquals Sto: << [<2,20>]>> 
9590-Useless: []
9590-Constancy: [(6, 0)]
9590-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,19>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('6', 'sload0'), 1), 0), 19: ((('s(10)', 'sload1'), 1), 2)}
Storage order: [(('6', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(23)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('6', 'sload0'), 1), 0), 19: ((('s(10)', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9590 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9640
9640Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
9640-Stack size: 14 
9640-Equals Mem:<< []>> 
9640-NonEquals Mem: << [<11,14>]>> 
9640-Equals Sto:<< []>> 
9640-NonEquals Sto: << []>> 
9640-Useless: []
9640-Constancy: [(1, 0), (9, 0)]
9640-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(9)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(9)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9640 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9669
9669Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x2605', 'JUMPI']>> 
9669-Stack size: 14 
9669-Equals Mem:<< []>> 
9669-NonEquals Mem: << [<11,14>]>> 
9669-Equals Sto:<< []>> 
9669-NonEquals Sto: << []>> 
9669-Useless: []
9669-Constancy: [(1, 0), (9, 0)]
9669-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(11)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(16)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(11)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9669 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9705
9705Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
9705-Stack size: 14 
9705-Equals Mem:<< []>> 
9705-NonEquals Mem: << [<11,14>]>> 
9705-Equals Sto:<< []>> 
9705-NonEquals Sto: << []>> 
9705-Useless: []
9705-Constancy: [(9, 0)]
9705-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '35', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(8)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9705 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9758
9758Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2645', 'JUMPI']>> 
9758-Stack size: 14 
9758-Equals Mem:<< []>> 
9758-NonEquals Mem: << [<10,13>]>> 
9758-Equals Sto:<< []>> 
9758-NonEquals Sto: << []>> 
9758-Useless: []
9758-Constancy: [(9, 0), (0, 0)]
9758-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(11)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(11)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9758 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9978
9978Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x2722', 'JUMPI']>> 
9978-Stack size: 14 
9978-Equals Mem:<< []>> 
9978-NonEquals Mem: << [<11,14>]>> 
9978-Equals Sto:<< []>> 
9978-NonEquals Sto: << []>> 
9978-Useless: []
9978-Constancy: [(9, 0), (0, 0)]
9978-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(18)', 'mstore'), 2), (('32', '37', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(12)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9978 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 11031
11031Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x289b', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x2f19', 'JUMP']>> 
11031-Stack size: 9 
11031-Equals Mem:<< [<11,6>]>> 
11031-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
11031-Equals Sto:<< []>> 
11031-NonEquals Sto: << []>> 
11031-Useless: []
11031-Constancy: [(3, 0)]
11031-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '26', 'mstore'), 2), (('s(12)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x2f19 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x2f19 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_11031_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_11031_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11031;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;11031;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x2f19 JUMP;JUMPDEST PUSH0 PUSH2 0x289b DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x2f19 JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.1298413050244562;0;1;0;0

Block: 12065
12065Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP2', 'SWAP1', 'PUSH2 0x2f45', 'JUMP']>> 
12065-Stack size: 16 
12065-Equals Mem:<< []>> 
12065-NonEquals Mem: << [<6,1>]>> 
12065-Equals Sto:<< []>> 
12065-NonEquals Sto: << []>> 
12065-Useless: []
12065-Constancy: [(1, 0), (10, 0), (6, 0)]
12065-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP2 SWAP1 PUSH2 0x2f45 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x2f45 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_12065_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_12065_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_12065;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;12065;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP2 SWAP1 PUSH2 0x2f45 JUMP;PUSH2 0xc0f SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x2f45 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07088543701684102;1;0;0;0

Block: 10950
10950Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10950-Stack size: 13 
10950-Equals Mem:<< []>> 
10950-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
10950-Equals Sto:<< []>> 
10950-NonEquals Sto: << []>> 
10950-Useless: []
10950-Constancy: [(1, 0), (7, 0)]
10950-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '119', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '33', 'mstore'), 2), (('s(10)', '37714057306925736537727341711534603569002632158006504148307520321239491439727', 'mstore'), 2), (('s(12)', '53825228981408700216425575062632269666168469434418855940216611316178368856064', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_10950_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_10950_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 81

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10950;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;10950;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;81;33;104;81;33;0;0;0;True;False;False;False;2.1218027230352163;2;4;0;0

Block: 11421
11421Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3222', 'JUMP']>> 
11421-Stack size: 10 
11421-Equals Mem:<< []>> 
11421-NonEquals Mem: << [<6,1>]>> 
11421-Equals Sto:<< []>> 
11421-NonEquals Sto: << []>> 
11421-Useless: []
11421-Constancy: []
11421-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3222 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3222 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_11421_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_11421_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11421;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;11421;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3222 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3222 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02672906802035868;1;0;0;0

Block: 11459
11459Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3267', 'JUMP']>> 
11459-Stack size: 10 
11459-Equals Mem:<< []>> 
11459-NonEquals Mem: << [<6,1>]>> 
11459-Equals Sto:<< []>> 
11459-NonEquals Sto: << []>> 
11459-Useless: []
11459-Constancy: []
11459-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3267 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3267 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_11459_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_11459_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11459;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;11459;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3267 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3267 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026387194986455142;1;0;0;0

Block: 11542
11542Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2d44', 'SWAP1', 'DUP3', 'PUSH2 0x283d', 'JUMP']>> 
11542-Stack size: 11 
11542-Equals Mem:<< [<12,29>]>> 
11542-NonEquals Mem: << [<12,16>, <16,29>]>> 
11542-Equals Sto:<< [<24,31>]>> 
11542-NonEquals Sto: << []>> 
11542-Useless: []
11542-Constancy: []
11542-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>]}
{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>], 'storage_deps_eqs': [<23,30>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(12)', 's(3)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2d44 SWAP1 DUP3 PUSH2 0x283d JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x2d44 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x283d JUMP

Optimized code stored in /tmp/0x00/SPUNKY_11542_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_11542_statistics.csv

Estimated initial gas: 5261
Estimated gas optimized: 5122

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 60

Initial number of instructions: 37
Final number of instructions: 32

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11542;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;11542;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2d44 SWAP1 DUP3 PUSH2 0x283d JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x2d44 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x283d JUMP;5261;46;37;5122;60;32;139;-14;5;True;True;False;False;2.182107902946882;4;2;5100;5000

Block: 10324
10324Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
10324-Stack size: 13 
10324-Equals Mem:<< []>> 
10324-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
10324-Equals Sto:<< []>> 
10324-NonEquals Sto: << []>> 
10324-Useless: []
10324-Constancy: [(1, 0)]
10324-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_10324_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_10324_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10324;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;10324;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c0f JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc0f JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.093460524978582;1;3;0;0

Block: 11588
11588Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1e4b', 'JUMP']>> 
11588-Stack size: 11 
11588-Equals Mem:<< []>> 
11588-NonEquals Mem: << [<12,26>, <12,29>, <16,26>, <16,29>, <21,26>, <29,21>, <29,26>, <12,16>]>> 
11588-Equals Sto:<< []>> 
11588-NonEquals Sto: << []>> 
11588-Useless: []
11588-Constancy: []
11588-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(19)', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(9)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1e4b JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1e4b JUMP

Optimized code stored in /tmp/0x00/SPUNKY_11588_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_11588_statistics.csv

Estimated initial gas: 5149
Estimated gas optimized: 5149

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 80

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_11588;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;11588;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1e4b JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1e4b JUMP;5149;80;41;5149;80;41;0;0;0;True;False;False;False;2.2392513409722596;2;2;5000;5000

Block: 3207
3207Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
3207-Stack size: 3 
3207-Equals Mem:<< []>> 
3207-NonEquals Mem: << [<6,1>]>> 
3207-Equals Sto:<< []>> 
3207-NonEquals Sto: << []>> 
3207-Useless: []
3207-Constancy: []
3207-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_3207_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_3207_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_3207;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;3207;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02677894098451361;1;0;0;0

Block: 12749
12749Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12749-Stack size: 7 
12749-Equals Mem:<< []>> 
12749-NonEquals Mem: << [<4,7>]>> 
12749-Equals Sto:<< []>> 
12749-NonEquals Sto: << []>> 
12749-Useless: []
12749-Constancy: [(0, 0)]
12749-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_12749 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3290
3290Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH15 0x6c6f776572207468616e20302e3125', 'PUSH1 0x88', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c0f', 'JUMP']>> 
3290-Stack size: 3 
3290-Equals Mem:<< []>> 
3290-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3290-Equals Sto:<< []>> 
3290-NonEquals Sto: << []>> 
3290-Useless: []
3290-Constancy: []
3290-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('136', '563028867735062715217623363464605989', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '47', 'mstore'), 2), (('s(10)', '30477107189792067803313207901871713011254496831930579880008427957178193572896', 'mstore'), 2), (('s(12)', '49046731713972004410902863804729980687630983203632429828319556206150658555904', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP

Optimized code stored in /tmp/0x00/SPUNKY_3290_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_3290_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 95
Estimated size optimized in bytes: 95

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_3290;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;3290;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c0f JUMP;104;95;33;104;95;33;0;0;0;True;False;False;False;2.1205824699718505;2;4;0;0

Block: 12699
12699Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12699-Stack size: 8 
12699-Equals Mem:<< []>> 
12699-NonEquals Mem: << [<5,8>]>> 
12699-Equals Sto:<< []>> 
12699-NonEquals Sto: << []>> 
12699-Useless: []
12699-Constancy: []
12699-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_12699 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3064
3064Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c0f', 'SWAP1', 'PUSH2 0x3166', 'JUMP']>> 
3064-Stack size: 3 
3064-Equals Mem:<< []>> 
3064-NonEquals Mem: << [<6,1>]>> 
3064-Equals Sto:<< []>> 
3064-NonEquals Sto: << []>> 
3064-Useless: []
3064-Constancy: []
3064-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP

Optimized code stored in /tmp/0x00/SPUNKY_3064_optimized.txt
Optimality results stored in /tmp/0x00/SPUNKY_3064_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_3064;0x00532c093780a69ef17a20976edc1228e90a835a.sol;SPUNKY;3064;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c0f SWAP1 PUSH2 0x3166 JUMP;PUSH2 0xc0f PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x3166 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026547137997113168;1;0;0;0

Block: 1087
1087Instr:<<['JUMPDEST', 'PUSH1 0x24', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1087-Stack size: 3 
1087-Equals Mem:<< []>> 
1087-NonEquals Mem: << [<3,7>]>> 
1087-Equals Sto:<< []>> 
1087-NonEquals Sto: << []>> 
1087-Useless: []
1087-Constancy: []
1087-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '36', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{10: ((('s(4)', 'sload0'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_1087 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1005
1005Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
1005-Stack size: 2 
1005-Equals Mem:<< []>> 
1005-NonEquals Mem: << []>> 
1005-Equals Sto:<< []>> 
1005-NonEquals Sto: << []>> 
1005-Useless: []
1005-Constancy: []
1005-ContextAliasing: []

Block: 3087
3087Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3087-Stack size: 3 
3087-Equals Mem:<< []>> 
3087-NonEquals Mem: << []>> 
3087-Equals Sto:<< []>> 
3087-NonEquals Sto: << []>> 
3087-Useless: []
3087-Constancy: []
3087-ContextAliasing: []

Block: 13146
13146Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
13146-Stack size: 21 
13146-Equals Mem:<< []>> 
13146-NonEquals Mem: << [<2,14>, <2,8>, <8,14>]>> 
13146-Equals Sto:<< []>> 
13146-NonEquals Sto: << []>> 
13146-Useless: []
13146-Constancy: [(1, 0), (2, 0), (0, 0)]
13146-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,13>, <1,7>, <7,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,13>, <1,7>, <7,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(8)', 'mload1'), 1), (('s(6)', 'mload2'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_13146 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4553
4553Instr:<<['JUMPDEST', 'PUSH1 0x0e', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x0d', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4553-Stack size: 5 
4553-Equals Mem:<< []>> 
4553-NonEquals Mem: << []>> 
4553-Equals Sto:<< [<10,22>]>> 
4553-NonEquals Sto: << [<5,7>, <5,10>, <5,22>, <7,10>, <7,22>]>> 
4553-Useless: []
4553-Constancy: []
4553-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<9,21>], 'storage_deps_noneqs': [<4,6>, <4,9>, <4,21>, <6,9>, <6,21>]}
{4: ((('14', 's(0)', 'sstore'), 2), 0), 6: ((('12', 's(1)', 'sstore'), 2), 1), 9: ((('13', 'sload0'), 1), 2), 21: ((('13', 's(3)', 'sstore'), 2), 3)}
Storage order: [(('14', 's(0)', 'sstore'), 2), (('12', 's(1)', 'sstore'), 2), (('13', 'sload0'), 1), (('13', 's(3)', 'sstore'), 2)]
Storage dep: [(2, 3)]
Storage dep simplified: [(2, 3)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{4: ((('14', 's(0)', 'sstore'), 2), 0), 6: ((('12', 's(1)', 'sstore'), 2), 1), 9: ((('13', 'sload0'), 1), 2), 21: ((('13', 's(3)', 'sstore'), 2), 3)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4553 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4625
4625Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
4625-Stack size: 3 
4625-Equals Mem:<< []>> 
4625-NonEquals Mem: << []>> 
4625-Equals Sto:<< [<4,9>]>> 
4625-NonEquals Sto: << []>> 
4625-Useless: []
4625-Constancy: [(0, 0)]
4625-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,8>], 'storage_deps_noneqs': []}
{2: ((('18', 'sload0'), 1), 0), 8: ((('18', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('18', 'sload0'), 1), (('18', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('18', 'sload0'), 1), 0), 8: ((('18', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4625 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4767
4767Instr:<<['JUMPDEST', 'PUSH1 0x18', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x19', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x1a', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x12b9', 'DUP4', 'DUP6', 'PUSH2 0x31e5', 'JUMP']>> 
4767-Stack size: 5 
4767-Equals Mem:<< []>> 
4767-NonEquals Mem: << []>> 
4767-Equals Sto:<< []>> 
4767-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
4767-Useless: []
4767-Constancy: []
4767-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,7>, <3,11>, <7,11>]}
{3: ((('24', 's(0)', 'sstore'), 2), 0), 7: ((('25', 's(1)', 'sstore'), 2), 1), 11: ((('26', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('24', 's(0)', 'sstore'), 2), (('25', 's(1)', 'sstore'), 2), (('26', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('24', 's(0)', 'sstore'), 2), 0), 7: ((('25', 's(1)', 'sstore'), 2), 1), 11: ((('26', 's(2)', 'sstore'), 2), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4767 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4935
4935Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH3 0xffff00', 'NOT', 'AND', 'PUSH3 0x010100', 'OR', 'SWAP1', 'SSTORE', 'TIMESTAMP', 'PUSH1 0x0f', 'SSTORE', 'NUMBER', 'PUSH1 0x22', 'SSTORE', 'JUMP']>> 
4935-Stack size: 2 
4935-Equals Mem:<< []>> 
4935-NonEquals Mem: << []>> 
4935-Equals Sto:<< [<3,10>]>> 
4935-NonEquals Sto: << [<3,13>, <3,16>, <10,13>, <10,16>, <13,16>]>> 
4935-Useless: []
4935-Constancy: []
4935-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,9>], 'storage_deps_noneqs': [<2,12>, <2,15>, <9,12>, <9,15>, <12,15>]}
{2: ((('18', 'sload0'), 1), 0), 9: ((('18', 's(0)', 'sstore'), 2), 1), 12: ((('15', 's(3)', 'sstore'), 2), 2), 15: ((('34', 's(4)', 'sstore'), 2), 3)}
Storage order: [(('18', 'sload0'), 1), (('18', 's(0)', 'sstore'), 2), (('15', 's(3)', 'sstore'), 2), (('34', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('18', 'sload0'), 1), 0), 9: ((('18', 's(0)', 'sstore'), 2), 1), 12: ((('15', 's(3)', 'sstore'), 2), 2), 15: ((('34', 's(4)', 'sstore'), 2), 3)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_4935 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5004
5004Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH3 0x010000', 'MUL', 'PUSH3 0xff0000', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5004-Stack size: 3 
5004-Equals Mem:<< []>> 
5004-NonEquals Mem: << []>> 
5004-Equals Sto:<< [<3,19>]>> 
5004-NonEquals Sto: << []>> 
5004-Useless: []
5004-Constancy: []
5004-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,18>], 'storage_deps_noneqs': []}
{2: ((('18', 'sload0'), 1), 0), 18: ((('18', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('18', 'sload0'), 1), (('18', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_1560f8b1022248b8b66282392d55270f/jsons/isolated_block_0_0_input.json --- (7, 5)
{2: ((('18', 'sload0'), 1), 0), 18: ((('18', 's(1)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5004 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5312
5312Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH4 0x01000000', 'MUL', 'PUSH4 0xff000000', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5312-Stack size: 3 
5312-Equals Mem:<< []>> 
5312-NonEquals Mem: << []>> 
5312-Equals Sto:<< [<3,19>]>> 
5312-NonEquals Sto: << []>> 
5312-Useless: []
5312-Constancy: []
5312-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,18>], 'storage_deps_noneqs': []}
{2: ((('18', 'sload0'), 1), 0), 18: ((('18', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('18', 'sload0'), 1), (('18', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_1560f8b1022248b8b66282392d55270f/jsons/isolated_block_0_0_input.json --- (7, 5)
{2: ((('18', 'sload0'), 1), 0), 18: ((('18', 's(1)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5312 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5384
5384Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5384-Stack size: 3 
5384-Equals Mem:<< []>> 
5384-NonEquals Mem: << []>> 
5384-Equals Sto:<< [<3,25>]>> 
5384-NonEquals Sto: << []>> 
5384-Useless: []
5384-Constancy: []
5384-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,24>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('6', 'sload0'), 1), 0), 24: ((('6', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('6', 'sload0'), 1), (('6', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_1560f8b1022248b8b66282392d55270f/jsons/isolated_block_0_0_input.json --- (6, 5)
{2: ((('6', 'sload0'), 1), 0), 24: ((('6', 's(1)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5384 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5819
5819Instr:<<['JUMPDEST', 'PUSH1 0x1c', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x1d', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x1e', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x16d5', 'DUP4', 'DUP6', 'PUSH2 0x31e5', 'JUMP']>> 
5819-Stack size: 5 
5819-Equals Mem:<< []>> 
5819-NonEquals Mem: << []>> 
5819-Equals Sto:<< []>> 
5819-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
5819-Useless: []
5819-Constancy: []
5819-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,7>, <3,11>, <7,11>]}
{3: ((('28', 's(0)', 'sstore'), 2), 0), 7: ((('29', 's(1)', 'sstore'), 2), 1), 11: ((('30', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('28', 's(0)', 'sstore'), 2), (('29', 's(1)', 'sstore'), 2), (('30', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('28', 's(0)', 'sstore'), 2), 0), 7: ((('29', 's(1)', 'sstore'), 2), 1), 11: ((('30', 's(2)', 'sstore'), 2), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_5819 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6535
6535Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x16', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
6535-Stack size: 3 
6535-Equals Mem:<< []>> 
6535-NonEquals Mem: << []>> 
6535-Equals Sto:<< [<4,9>]>> 
6535-NonEquals Sto: << []>> 
6535-Useless: []
6535-Constancy: [(0, 0)]
6535-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,8>], 'storage_deps_noneqs': []}
{2: ((('22', 'sload0'), 1), 0), 8: ((('22', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('22', 'sload0'), 1), (('22', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('22', 'sload0'), 1), 0), 8: ((('22', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6535 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6829
6829Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'SWAP1', 'DUP2', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'SWAP1', 'JUMP']>> 
6829-Stack size: 3 
6829-Equals Mem:<< []>> 
6829-NonEquals Mem: << []>> 
6829-Equals Sto:<< [<4,14>]>> 
6829-NonEquals Sto: << []>> 
6829-Useless: []
6829-Constancy: [(0, 0)]
6829-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,13>], 'storage_deps_noneqs': []}
{2: ((('18', 'sload0'), 1), 0), 13: ((('18', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('18', 'sload0'), 1), (('18', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('18', 'sload0'), 1), 0), 13: ((('18', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6829 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6893
6893Instr:<<['JUMPDEST', 'PUSH1 0x10', 'SLOAD', 'PUSH1 0x11', 'SLOAD', 'PUSH2 0x1afd', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
6893-Stack size: 4 
6893-Equals Mem:<< []>> 
6893-NonEquals Mem: << []>> 
6893-Equals Sto:<< []>> 
6893-NonEquals Sto: << [<2,4>]>> 
6893-Useless: []
6893-Constancy: [(0, 0)]
6893-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
{1: ((('16', 'sload0'), 1), 0), 3: ((('17', 'sload1'), 1), 1)}
Storage order: [(('16', 'sload0'), 1), (('17', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('16', 'sload0'), 1), 0), 3: ((('17', 'sload1'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_6893 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9409
9409Instr:<<['PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x24db', 'PUSH2 0x0e41', 'JUMP']>> 
9409-Stack size: 11 
9409-Equals Mem:<< []>> 
9409-NonEquals Mem: << []>> 
9409-Equals Sto:<< [<2,13>]>> 
9409-NonEquals Sto: << []>> 
9409-Useless: []
9409-Constancy: [(6, 0)]
9409-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,13>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('6', 'sload0'), 1), 0), 13: ((('6', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('6', 'sload0'), 1), (('6', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('6', 'sload0'), 1), 0), 13: ((('6', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9409 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9435
9435Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE']>> 
9435-Stack size: 11 
9435-Equals Mem:<< []>> 
9435-NonEquals Mem: << []>> 
9435-Equals Sto:<< [<3,10>]>> 
9435-NonEquals Sto: << []>> 
9435-Useless: []
9435-Constancy: [(6, 0)]
9435-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,9>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('6', 'sload0'), 1), 0), 9: ((('6', 's(0)', 'sstore'), 2), 1)}
Storage order: [(('6', 'sload0'), 1), (('6', 's(0)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('6', 'sload0'), 1), 0), 9: ((('6', 's(0)', 'sstore'), 2), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9435 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9519
9519Instr:<<['POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0f', 'SLOAD', 'PUSH2 0x253f', 'SWAP2', 'SWAP1', 'PUSH2 0x31e5', 'JUMP']>> 
9519-Stack size: 12 
9519-Equals Mem:<< []>> 
9519-NonEquals Mem: << []>> 
9519-Equals Sto:<< []>> 
9519-NonEquals Sto: << [<2,4>]>> 
9519-Useless: []
9519-Constancy: [(7, 0)]
9519-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{1: ((('14', 'sload0'), 1), 0), 3: ((('15', 'sload1'), 1), 1)}
Storage order: [(('14', 'sload0'), 1), (('15', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('14', 'sload0'), 1), 0), 3: ((('15', 'sload1'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9519 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9828
9828Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1d', 'SLOAD', 'DUP3', 'PUSH2 0x2677', 'SWAP2', 'SWAP1', 'PUSH2 0x31af', 'JUMP']>> 
9828-Stack size: 15 
9828-Equals Mem:<< []>> 
9828-NonEquals Mem: << []>> 
9828-Equals Sto:<< []>> 
9828-NonEquals Sto: << [<4,6>]>> 
9828-Useless: []
9828-Constancy: [(1, 0), (10, 0)]
9828-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,5>]}
{3: ((('27', 'sload0'), 1), 0), 5: ((('29', 'sload1'), 1), 1)}
Storage order: [(('27', 'sload0'), 1), (('29', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('27', 'sload0'), 1), 0), 5: ((('29', 'sload1'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9828 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9873
9873Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1e', 'SLOAD', 'PUSH2 0x26a6', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
9873-Stack size: 18 
9873-Equals Mem:<< []>> 
9873-NonEquals Mem: << []>> 
9873-Equals Sto:<< []>> 
9873-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
9873-Useless: []
9873-Constancy: [(1, 0), (2, 32), (13, 0)]
9873-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('27', 'sload0'), 1), 1), 7: ((('30', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('27', 'sload0'), 1), (('30', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('27', 'sload0'), 1), 1), 7: ((('30', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9873 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9920
9920Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x1b', 'SLOAD', 'PUSH1 0x1c', 'SLOAD', 'PUSH2 0x26d5', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
9920-Stack size: 18 
9920-Equals Mem:<< []>> 
9920-NonEquals Mem: << []>> 
9920-Equals Sto:<< []>> 
9920-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
9920-Useless: []
9920-Constancy: [(1, 0), (13, 0)]
9920-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('27', 'sload0'), 1), 1), 7: ((('28', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('27', 'sload0'), 1), (('28', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('27', 'sload0'), 1), 1), 7: ((('28', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_9920 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10049
10049Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x19', 'SLOAD', 'DUP3', 'PUSH2 0x2754', 'SWAP2', 'SWAP1', 'PUSH2 0x31af', 'JUMP']>> 
10049-Stack size: 15 
10049-Equals Mem:<< []>> 
10049-NonEquals Mem: << []>> 
10049-Equals Sto:<< []>> 
10049-NonEquals Sto: << [<4,6>]>> 
10049-Useless: []
10049-Constancy: [(1, 0), (10, 0)]
10049-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,5>]}
{3: ((('23', 'sload0'), 1), 0), 5: ((('25', 'sload1'), 1), 1)}
Storage order: [(('23', 'sload0'), 1), (('25', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('23', 'sload0'), 1), 0), 5: ((('25', 'sload1'), 1), 1)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10049 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10094
10094Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x1a', 'SLOAD', 'PUSH2 0x2783', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
10094-Stack size: 18 
10094-Equals Mem:<< []>> 
10094-NonEquals Mem: << []>> 
10094-Equals Sto:<< []>> 
10094-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
10094-Useless: []
10094-Constancy: [(1, 0), (2, 32), (13, 0)]
10094-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('23', 'sload0'), 1), 1), 7: ((('26', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('23', 'sload0'), 1), (('26', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('23', 'sload0'), 1), 1), 7: ((('26', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10094 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10141
10141Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x17', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'PUSH2 0x27b2', 'SWAP1', 'DUP4', 'PUSH2 0x31af', 'JUMP']>> 
10141-Stack size: 18 
10141-Equals Mem:<< []>> 
10141-NonEquals Mem: << []>> 
10141-Equals Sto:<< []>> 
10141-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
10141-Useless: []
10141-Constancy: [(1, 0), (13, 0)]
10141-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('23', 'sload0'), 1), 1), 7: ((('24', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('23', 'sload0'), 1), (('24', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('23', 'sload0'), 1), 1), 7: ((('24', 'sload1'), 1), 2)}
BLOCK 0x00532c093780a69ef17a20976edc1228e90a835a.sol_SPUNKY_10141 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3938
3938Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x0f87', 'JUMP']>> 
3938-Stack size: 15 
3938-Equals Mem:<< []>> 
3938-NonEquals Mem: << []>> 
3938-Equals Sto:<< []>> 
3938-NonEquals Sto: << []>> 
3938-Useless: [16, 22]
3938-Constancy: [(10, 0)]
3938-ContextAliasing: []

Block: 4117
4117Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x103a', 'JUMP']>> 
4117-Stack size: 15 
4117-Equals Mem:<< []>> 
4117-NonEquals Mem: << []>> 
4117-Equals Sto:<< []>> 
4117-NonEquals Sto: << []>> 
4117-Useless: [16, 22]
4117-Constancy: []
4117-ContextAliasing: []

