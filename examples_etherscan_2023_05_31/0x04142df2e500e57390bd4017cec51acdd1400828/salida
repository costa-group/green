incomplete push instruction at 45
Green Main
*************************************************************
Compilation time: 1.2275201150332578s
*************************************************************
File: Address
Build CFG: 0.002297562954481691s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Address
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Address: 0
Memory read accesses ContractAddress: 0
Memory write accesses ContractAddress: 0
********************************** INIT
COMPACT CLONES: True
CONTRACT: Address
********************************** END
Memory Analysis: 7.998896762728691e-05s

*************************************************************
File: Reversal
Build CFG: 0.5867317089578137s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Reversal
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> mem40 3651_8:1 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--owner_setSellTaxes(uint8,uint8)
MEMRES: NOT Found read (potential optimization) -> <slot22,0> 5204_1:2 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot22,*> 5204_1:8 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot49,0> 5204_0:2 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--owner_rescueTokens()
MEMRES: NOT Found read (potential optimization) -> <slot49,*> 5204_0:8 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--owner_rescueTokens()
MEMRES: NOT Found read (potential optimization) -> <slot74,0> 5204:2 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot74,*> 5204:8 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> mem40 3651_0:1 --> 0x04142df2e500e57390bd4017cec51acdd1400828.sol Reversal--owner_setBuyTaxes(uint8,uint8)
GASOL: Useless accesses found: {'3651_8': [1], '5204_1': [2, 8], '5204_0': [2, 8], '5204': [2, 8], '3651_0': [1]}
Free memory analyss finished


SLOTS Contract Reversal: 93
Memory read accesses ContractReversal: 410
Memory write accesses ContractReversal: 932
********************************** INIT
GASOL: Adding block useless 3651_8
GASOL: Adding block useless 5204_1
GASOL: Adding block useless 5204_0
GASOL: Adding block useless 5204
GASOL: Adding block useless 3651_0
CONTEXT: Detected context equality 19 <slot22,0> 21 <slot22,0>
CONTEXT: Detected context equality 25 <slot22,0> 22 <slot22,0>
CONTEXT: Detected context equality 31 <slot22,0> 33 <slot22,0>
CONTEXT: Detected context equality 31 <slot22,0> 33 <slot22,0>
CONTEXT: Detected context equality 25 <slot25,0> 22 <slot25,0>
CONTEXT: Detected context equality 31 <slot25,0> 33 <slot25,0>
CONTEXT: Detected context equality 31 <slot25,0> 33 <slot25,0>
CONTEXT: Detected context equality 17 <slot49,0> 19 <slot49,0>
CONTEXT: Detected context equality 23 <slot49,0> 20 <slot49,0>
CONTEXT: Detected context equality 29 <slot49,0> 31 <slot49,0>
CONTEXT: Detected context equality 29 <slot49,0> 31 <slot49,0>
CONTEXT: Detected context equality 23 <slot52,0> 20 <slot52,0>
CONTEXT: Detected context equality 29 <slot52,0> 31 <slot52,0>
CONTEXT: Detected context equality 29 <slot52,0> 31 <slot52,0>
CONTEXT: Detected context equality 22 <slot74,0> 24 <slot74,0>
CONTEXT: Detected context equality 28 <slot74,0> 25 <slot74,0>
CONTEXT: Detected context equality 34 <slot74,0> 36 <slot74,0>
CONTEXT: Detected context equality 34 <slot74,0> 36 <slot74,0>
CONTEXT: Detected context equality 28 <slot77,0> 25 <slot77,0>
CONTEXT: Detected context equality 34 <slot77,0> 36 <slot77,0>
CONTEXT: Detected context equality 34 <slot77,0> 36 <slot77,0>
COMPACT CLONES: True
CONTRACT: Reversal
-----
Block: 484
484Instr:<<['POP', 'PUSH1 0x10', 'SLOAD', 'PUSH1 0x11', 'SLOAD', 'DUP3', 'MLOAD', 'SWAP2', 'DUP3', 'MSTORE', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'RETURN']>> 
484-Stack size: 2 
484-Equals Mem:<< []>> 
484-NonEquals Mem: << [<9,6>, <9,13>, <13,6>]>> 
484-Equals Sto:<< []>> 
484-NonEquals Sto: << [<2,4>]>> 
484-Useless: []
484-Constancy: [(1, 64), (0, 0)]
484-ContextAliasing: []

.....
-----
Block: 524
524Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0f', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
524-Stack size: 2 
524-Equals Mem:<< []>> 
524-NonEquals Mem: << [<8,5>]>> 
524-Equals Sto:<< []>> 
524-NonEquals Sto: << []>> 
524-Useless: []
524-Constancy: [(1, 0), (0, 64)]
524-ContextAliasing: []

.....
-----
Block: 559
559Instr:<<['PUSH1 0x01', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
559-Stack size: 2 
559-Equals Mem:<< []>> 
559-NonEquals Mem: << [<13,3>]>> 
559-Equals Sto:<< []>> 
559-NonEquals Sto: << []>> 
559-Useless: []
559-Constancy: [(1, 0), (0, 64)]
559-ContextAliasing: []

.....
-----
Block: 646
646Instr:<<['JUMPDEST', 'AND', 'DUP5', 'MSTORE', 'PUSH1 0x07', 'PUSH1 0x20', 'MSTORE', 'DUP4', 'KECCAK256', 'SWAP1', 'PUSH1 0xff', 'DUP1', 'NOT', 'DUP4', 'SLOAD', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'AND', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
646-Stack size: 6 
646-Equals Mem:<< []>> 
646-NonEquals Mem: << [<3,6>]>> 
646-Equals Sto:<< [<14,22>]>> 
646-NonEquals Sto: << []>> 
646-Useless: []
646-Constancy: [(5, 0), (2, 64)]
646-ContextAliasing: []

.....
-----
Block: 3716_8
3716_8Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_8-Stack size: 7 
3716_8-Equals Mem:<< []>> 
3716_8-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_8-Equals Sto:<< []>> 
3716_8-NonEquals Sto: << []>> 
3716_8-Useless: []
3716_8-Constancy: [(6, 0), (3, 64)]
3716_8-ContextAliasing: []

.....
-----
Block: 794
794Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
794-Stack size: 7 
794-Equals Mem:<< []>> 
794-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
794-Equals Sto:<< []>> 
794-NonEquals Sto: << []>> 
794-Useless: []
794-Constancy: [(6, 64), (5, 0), (0, 64)]
794-ContextAliasing: []

.....
-----
Block: 3716_7
3716_7Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_7-Stack size: 9 
3716_7-Equals Mem:<< []>> 
3716_7-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_7-Equals Sto:<< []>> 
3716_7-NonEquals Sto: << []>> 
3716_7-Useless: []
3716_7-Constancy: [(8, 64), (7, 0), (6, 64)]
3716_7-ContextAliasing: []

.....
-----
Block: 899
899Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0b', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
899-Stack size: 6 
899-Equals Mem:<< []>> 
899-NonEquals Mem: << [<8,5>]>> 
899-Equals Sto:<< []>> 
899-NonEquals Sto: << []>> 
899-Useless: []
899-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
899-ContextAliasing: []

.....
-----
Block: 951
951Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x08', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
951-Stack size: 10 
951-Equals Mem:<< []>> 
951-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
951-Equals Sto:<< []>> 
951-NonEquals Sto: << []>> 
951-Useless: []
951-Constancy: [(9, 64), (8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
951-ContextAliasing: []

.....
-----
Block: 986
986Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0xff', 'PUSH1 0x0a', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
986-Stack size: 6 
986-Equals Mem:<< []>> 
986-NonEquals Mem: << [<12,7>]>> 
986-Equals Sto:<< []>> 
986-NonEquals Sto: << []>> 
986-Useless: []
986-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
986-ContextAliasing: []

.....
-----
Block: 1043
1043Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'DUP5', 'MSTORE', 'SWAP2', 'DUP7', 'MSTORE', 'DUP4', 'DUP4', 'KECCAK256', 'SWAP2', 'AND', 'DUP3', 'MSTORE', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1043-Stack size: 8 
1043-Equals Mem:<< [<10,20>, <13,22>]>> 
1043-NonEquals Mem: << [<10,26>, <10,13>, <10,22>, <10,29>, <13,26>, <13,20>, <13,29>, <20,26>, <20,22>, <20,29>, <22,26>, <22,29>, <29,16>, <29,23>, <29,26>, <16,26>, <23,26>]>> 
1043-Equals Sto:<< []>> 
1043-NonEquals Sto: << []>> 
1043-Useless: []
1043-Constancy: [(7, 64), (6, 32), (5, 64), (4, 64), (3, 0)]
1043-ContextAliasing: []

.....
-----
Block: 1244
1244Instr:<<['DUP1', 'DUP4', 'DUP6', 'PUSH2 0x050c', 'SWAP4', 'DUP11', 'SHL', 'DUP6', 'ADD', 'ADD', 'MLOAD', 'AND', 'DUP10', 'MSTORE', 'PUSH1 0x07', 'DUP6', 'MSTORE', 'PUSH2 0x0507', 'DUP8', 'DUP8', 'DUP12', 'KECCAK256', 'SWAP1', 'PUSH1 0xff', 'DUP1', 'NOT', 'DUP4', 'SLOAD', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'AND', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
1244-Stack size: 9 
1244-Equals Mem:<< []>> 
1244-NonEquals Mem: << [<13,10>, <13,16>, <16,10>, <10,21>]>> 
1244-Equals Sto:<< [<27,35>]>> 
1244-NonEquals Sto: << []>> 
1244-Useless: []
1244-Constancy: [(8, 64), (7, 0), (4, 64), (3, 32)]
1244-ContextAliasing: []

.....
-----
Block: 3797_60
3797_60Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_60-Stack size: 10 
3797_60-Equals Mem:<< []>> 
3797_60-NonEquals Mem: << [<5,8>]>> 
3797_60-Equals Sto:<< []>> 
3797_60-NonEquals Sto: << []>> 
3797_60-Useless: []
3797_60-Constancy: [(9, 64), (8, 0), (5, 64), (4, 32)]
3797_60-ContextAliasing: []

.....
-----
Block: 3716_6
3716_6Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_6-Stack size: 9 
3716_6-Equals Mem:<< []>> 
3716_6-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_6-Equals Sto:<< []>> 
3716_6-NonEquals Sto: << []>> 
3716_6-Useless: []
3716_6-Constancy: [(8, 64), (7, 0), (4, 64), (3, 32)]
3716_6-ContextAliasing: []

.....
-----
Block: 3655_39
3655_39Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_39-Stack size: 11 
3655_39-Equals Mem:<< []>> 
3655_39-NonEquals Mem: << [<5,8>]>> 
3655_39-Equals Sto:<< []>> 
3655_39-NonEquals Sto: << []>> 
3655_39-Useless: []
3655_39-Constancy: [(10, 64), (9, 0), (6, 64), (5, 32)]
3655_39-ContextAliasing: []

.....
-----
Block: 1340
1340Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP6', 'MSTORE', 'PUSH1 0x41', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP5', 'REVERT']>> 
1340-Stack size: 6 
1340-Equals Mem:<< []>> 
1340-NonEquals Mem: << [<5,8>]>> 
1340-Equals Sto:<< []>> 
1340-NonEquals Sto: << []>> 
1340-Useless: []
1340-Constancy: [(5, 64), (4, 0), (1, 64)]
1340-ContextAliasing: []

.....
-----
Block: 1382
1382Instr:<<['PUSH1 0x13', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0xff', 'DUP1', 'DUP4', 'AND', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'SWAP3', 'SWAP1', 'SWAP3', 'SHR', 'SWAP1', 'SWAP2', 'AND', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'RETURN']>> 
1382-Stack size: 6 
1382-Equals Mem:<< []>> 
1382-NonEquals Mem: << [<9,3>, <9,21>, <21,3>]>> 
1382-Equals Sto:<< []>> 
1382-NonEquals Sto: << []>> 
1382-Useless: []
1382-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1382-ContextAliasing: []

.....
-----
Block: 3655_38
3655_38Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_38-Stack size: 9 
3655_38-Equals Mem:<< []>> 
3655_38-NonEquals Mem: << [<5,8>]>> 
3655_38-Equals Sto:<< []>> 
3655_38-NonEquals Sto: << []>> 
3655_38-Useless: []
3655_38-Constancy: [(8, 64), (7, 0), (4, 0)]
3655_38-ContextAliasing: []

.....
-----
Block: 4125_0
4125_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x086c2dc4ee840e6cae840e8c2f040e8dede40d0d2ced', 'PUSH1 0x53', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
4125_0-Stack size: 10 
4125_0-Equals Mem:<< []>> 
4125_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <24,2>]>> 
4125_0-Equals Sto:<< []>> 
4125_0-NonEquals Sto: << []>> 
4125_0-Useless: []
4125_0-Constancy: [(9, 64), (8, 0), (5, 0), (1, 64)]
4125_0-ContextAliasing: []

.....
-----
Block: 3797_59
3797_59Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_59-Stack size: 14 
3797_59-Equals Mem:<< []>> 
3797_59-NonEquals Mem: << [<5,8>]>> 
3797_59-Equals Sto:<< []>> 
3797_59-NonEquals Sto: << []>> 
3797_59-Useless: []
3797_59-Constancy: [(13, 64), (12, 0), (9, 0), (5, 64)]
3797_59-ContextAliasing: []

.....
-----
Block: 3716_5
3716_5Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_5-Stack size: 10 
3716_5-Equals Mem:<< []>> 
3716_5-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_5-Equals Sto:<< []>> 
3716_5-NonEquals Sto: << []>> 
3716_5-Useless: []
3716_5-Constancy: [(9, 64), (8, 0), (5, 0), (1, 64)]
3716_5-ContextAliasing: []

.....
-----
Block: 4262_1
4262_1Instr:<<['PUSH0', 'SWAP5', 'DUP3', 'DUP7', 'MSTORE', 'PUSH1 0x20', 'SWAP2', 'PUSH1 0x07', 'DUP4', 'MSTORE', 'PUSH1 0xff', 'SWAP1', 'PUSH1 0x40', 'SWAP2', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x16c1', 'JUMPI']>> 
4262_1-Stack size: 12 
4262_1-Equals Mem:<< []>> 
4262_1-NonEquals Mem: << [<4,9>]>> 
4262_1-Equals Sto:<< []>> 
4262_1-NonEquals Sto: << []>> 
4262_1-Useless: []
4262_1-Constancy: [(11, 64), (10, 0), (7, 0), (6, 32), (5, 64)]
4262_1-ContextAliasing: []

.....
-----
Block: 4298_1
4298_1Instr:<<['DUP7', 'DUP10', 'MSTORE', 'PUSH1 0x06', 'DUP6', 'MSTORE', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x1610', 'JUMPI']>> 
4298_1-Stack size: 16 
4298_1-Equals Mem:<< []>> 
4298_1-NonEquals Mem: << [<2,5>]>> 
4298_1-Equals Sto:<< []>> 
4298_1-NonEquals Sto: << []>> 
4298_1-Useless: []
4298_1-Constancy: [(15, 64), (14, 0), (11, 0), (10, 32), (9, 64), (8, 0), (4, 32), (2, 64)]
4298_1-ContextAliasing: []

.....
-----
Block: 4316_1
4316_1Instr:<<['JUMPDEST', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'GT', 'ISZERO', 'DUP1', 'PUSH2 0x15f8', 'JUMPI']>> 
4316_1-Stack size: 16 
4316_1-Equals Mem:<< []>> 
4316_1-NonEquals Mem: << [<3,6>]>> 
4316_1-Equals Sto:<< []>> 
4316_1-NonEquals Sto: << [<10,12>]>> 
4316_1-Useless: []
4316_1-Constancy: [(15, 64), (14, 0), (11, 0), (10, 32), (9, 64), (8, 0), (4, 32), (2, 64)]
4316_1-ContextAliasing: []

.....
-----
Block: 4367_1
4367_1Instr:<<['JUMPDEST', 'DUP6', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'PUSH2 0x1124', 'DUP6', 'DUP3', 'SLOAD', 'PUSH2 0x0ec8', 'JUMP']>> 
4367_1-Stack size: 16 
4367_1-Equals Mem:<< []>> 
4367_1-NonEquals Mem: << [<3,6>]>> 
4367_1-Equals Sto:<< []>> 
4367_1-NonEquals Sto: << []>> 
4367_1-Useless: []
4367_1-Constancy: [(15, 64), (14, 0), (11, 0), (10, 32), (9, 64), (8, 0), (4, 32), (2, 64)]
4367_1-ContextAliasing: []

.....
-----
Block: 4388_1
4388_1Instr:<<['JUMPDEST', 'SWAP1', 'SSTORE', 'DUP4', 'DUP7', 'DUP11', 'MSTORE', 'PUSH1 0x05', 'DUP7', 'MSTORE', 'DUP2', 'DUP5', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x1300', 'JUMPI']>> 
4388_1-Stack size: 18 
4388_1-Equals Mem:<< []>> 
4388_1-NonEquals Mem: << [<6,9>]>> 
4388_1-Equals Sto:<< [<2,14>]>> 
4388_1-NonEquals Sto: << []>> 
4388_1-Useless: []
4388_1-Constancy: [(17, 64), (16, 0), (13, 0), (12, 32), (11, 64), (10, 0), (6, 32), (4, 64)]
4388_1-ContextAliasing: []

.....
-----
Block: 1613
1613Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1613-Stack size: 7 
1613-Equals Mem:<< []>> 
1613-NonEquals Mem: << [<4,1>]>> 
1613-Equals Sto:<< []>> 
1613-NonEquals Sto: << []>> 
1613-Useless: []
1613-Constancy: [(6, 64), (5, 0), (2, 0), (1, 32), (0, 64)]
1613-ContextAliasing: []

.....
-----
Block: 3797_55
3797_55Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_55-Stack size: 17 
3797_55-Equals Mem:<< []>> 
3797_55-NonEquals Mem: << [<5,8>]>> 
3797_55-Equals Sto:<< []>> 
3797_55-NonEquals Sto: << []>> 
3797_55-Useless: []
3797_55-Constancy: [(16, 64), (15, 0), (12, 0), (11, 32), (10, 64), (5, 32), (3, 64)]
3797_55-ContextAliasing: []

.....
-----
Block: 4491_1
4491_1Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x12', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'PUSH2 0x12d9', 'JUMPI']>> 
4491_1-Stack size: 19 
4491_1-Equals Mem:<< []>> 
4491_1-NonEquals Mem: << [<8,15>]>> 
4491_1-Equals Sto:<< []>> 
4491_1-NonEquals Sto: << []>> 
4491_1-Useless: []
4491_1-Constancy: [(18, 64), (17, 0), (14, 0), (13, 32), (12, 64), (11, 0), (7, 32), (5, 64)]
4491_1-ContextAliasing: []

.....
-----
Block: 4568_1
4568_1Instr:<<['JUMPDEST', 'SWAP1', 'ADDRESS', 'DUP12', 'MSTORE', 'PUSH1 0x03', 'DUP8', 'MSTORE', 'DUP5', 'DUP12', 'KECCAK256', 'PUSH2 0x11ee', 'DUP4', 'DUP3', 'SLOAD', 'PUSH2 0x0ee9', 'JUMP']>> 
4568_1-Stack size: 18 
4568_1-Equals Mem:<< []>> 
4568_1-NonEquals Mem: << [<4,7>]>> 
4568_1-Equals Sto:<< []>> 
4568_1-NonEquals Sto: << []>> 
4568_1-Useless: []
4568_1-Constancy: [(17, 64), (16, 0), (13, 0), (12, 32), (11, 64), (10, 0), (6, 32), (4, 64)]
4568_1-ContextAliasing: []

.....
-----
Block: 4680_1
4680_1Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'DUP7', 'MSTORE', 'DUP3', 'DUP3', 'KECCAK256', 'SSTORE', 'PUSH2 0x1224', 'JUMP']>> 
4680_1-Stack size: 17 
4680_1-Equals Mem:<< []>> 
4680_1-NonEquals Mem: << [<3,6>]>> 
4680_1-Equals Sto:<< []>> 
4680_1-NonEquals Sto: << []>> 
4680_1-Useless: []
4680_1-Constancy: [(16, 64), (15, 0), (12, 0), (11, 32), (10, 64), (5, 32), (3, 64), (2, 64), (1, 0)]
4680_1-ContextAliasing: []

.....
-----
Block: 3797_57
3797_57Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_57-Stack size: 18 
3797_57-Equals Mem:<< []>> 
3797_57-NonEquals Mem: << [<5,8>]>> 
3797_57-Equals Sto:<< []>> 
3797_57-NonEquals Sto: << []>> 
3797_57-Useless: []
3797_57-Constancy: [(17, 64), (16, 0), (13, 0), (12, 32), (11, 64), (6, 32), (4, 64), (3, 64), (2, 0)]
3797_57-ContextAliasing: []

.....
-----
Block: 3797_56
3797_56Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_56-Stack size: 18 
3797_56-Equals Mem:<< []>> 
3797_56-NonEquals Mem: << [<5,8>]>> 
3797_56-Equals Sto:<< []>> 
3797_56-NonEquals Sto: << []>> 
3797_56-Useless: []
3797_56-Constancy: [(17, 64), (16, 0), (13, 0), (12, 32), (11, 64), (6, 32), (4, 64), (3, 64), (2, 0)]
3797_56-ContextAliasing: []

.....
-----
Block: 4696_1
4696_1Instr:<<['JUMPDEST', 'POP', 'DUP4', 'DUP8', 'MSTORE', 'PUSH1 0x08', 'DUP4', 'MSTORE', 'DUP1', 'DUP8', 'KECCAK256', 'SLOAD', 'DUP1', 'PUSH2 0x1283', 'JUMPI']>> 
4696_1-Stack size: 15 
4696_1-Equals Mem:<< []>> 
4696_1-NonEquals Mem: << [<4,7>]>> 
4696_1-Equals Sto:<< []>> 
4696_1-NonEquals Sto: << []>> 
4696_1-Useless: []
4696_1-Constancy: [(14, 64), (13, 0), (10, 0), (9, 32), (8, 64), (7, 0), (3, 32), (1, 64)]
4696_1-ContextAliasing: []

.....
-----
Block: 3797_54
3797_54Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_54-Stack size: 17 
3797_54-Equals Mem:<< []>> 
3797_54-NonEquals Mem: << [<5,8>]>> 
3797_54-Equals Sto:<< []>> 
3797_54-NonEquals Sto: << []>> 
3797_54-Useless: []
3797_54-Constancy: [(16, 64), (15, 0), (12, 0), (11, 32), (10, 64), (9, 0), (5, 32), (3, 64)]
3797_54-ContextAliasing: []

.....
-----
Block: 3797_53
3797_53Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_53-Stack size: 21 
3797_53-Equals Mem:<< []>> 
3797_53-NonEquals Mem: << [<5,8>]>> 
3797_53-Equals Sto:<< []>> 
3797_53-NonEquals Sto: << []>> 
3797_53-Useless: []
3797_53-Constancy: [(20, 64), (19, 0), (16, 0), (15, 32), (14, 64), (13, 0), (9, 32), (7, 64)]
3797_53-ContextAliasing: []

.....
-----
Block: 3797_52
3797_52Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_52-Stack size: 19 
3797_52-Equals Mem:<< []>> 
3797_52-NonEquals Mem: << [<5,8>]>> 
3797_52-Equals Sto:<< []>> 
3797_52-NonEquals Sto: << []>> 
3797_52-Useless: []
3797_52-Constancy: [(18, 64), (17, 0), (14, 0), (13, 32), (12, 64), (11, 0), (7, 32), (5, 64)]
3797_52-ContextAliasing: []

.....
-----
Block: 3797_51
3797_51Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_51-Stack size: 22 
3797_51-Equals Mem:<< []>> 
3797_51-NonEquals Mem: << [<5,8>]>> 
3797_51-Equals Sto:<< []>> 
3797_51-NonEquals Sto: << []>> 
3797_51-Useless: []
3797_51-Constancy: [(21, 64), (20, 0), (17, 0), (16, 32), (15, 64), (14, 0), (10, 32), (8, 64)]
3797_51-ContextAliasing: []

.....
-----
Block: 3797_50
3797_50Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_50-Stack size: 22 
3797_50-Equals Mem:<< []>> 
3797_50-NonEquals Mem: << [<5,8>]>> 
3797_50-Equals Sto:<< []>> 
3797_50-NonEquals Sto: << []>> 
3797_50-Useless: []
3797_50-Constancy: [(21, 64), (20, 0), (17, 0), (16, 32), (15, 64), (14, 0), (10, 32), (8, 64)]
3797_50-ContextAliasing: []

.....
-----
Block: 3797_49
3797_49Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_49-Stack size: 22 
3797_49-Equals Mem:<< []>> 
3797_49-NonEquals Mem: << [<5,8>]>> 
3797_49-Equals Sto:<< []>> 
3797_49-NonEquals Sto: << []>> 
3797_49-Useless: []
3797_49-Constancy: [(21, 64), (20, 0), (17, 0), (16, 32), (15, 64), (14, 0), (10, 32), (8, 64)]
3797_49-ContextAliasing: []

.....
-----
Block: 3797_48
3797_48Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_48-Stack size: 26 
3797_48-Equals Mem:<< []>> 
3797_48-NonEquals Mem: << [<5,8>]>> 
3797_48-Equals Sto:<< []>> 
3797_48-NonEquals Sto: << []>> 
3797_48-Useless: []
3797_48-Constancy: [(25, 64), (24, 0), (21, 0), (20, 32), (19, 64), (18, 0), (14, 32), (12, 64), (3, 32)]
3797_48-ContextAliasing: []

.....
-----
Block: 4840_1
4840_1Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x13', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'POP', 'PUSH2 0x11a2', 'JUMP']>> 
4840_1-Stack size: 19 
4840_1-Equals Mem:<< []>> 
4840_1-NonEquals Mem: << [<8,15>]>> 
4840_1-Equals Sto:<< []>> 
4840_1-NonEquals Sto: << []>> 
4840_1-Useless: []
4840_1-Constancy: [(18, 64), (17, 0), (14, 0), (13, 32), (12, 64), (11, 0), (7, 32), (5, 64)]
4840_1-ContextAliasing: []

.....
-----
Block: 3655_34
3655_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_34-Stack size: 21 
3655_34-Equals Mem:<< []>> 
3655_34-NonEquals Mem: << [<5,8>]>> 
3655_34-Equals Sto:<< []>> 
3655_34-NonEquals Sto: << []>> 
3655_34-Useless: []
3655_34-Constancy: [(20, 64), (19, 0), (16, 0), (15, 32), (14, 64), (13, 0), (9, 32), (7, 64)]
3655_34-ContextAliasing: []

.....
-----
Block: 3655_33
3655_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_33-Stack size: 21 
3655_33-Equals Mem:<< []>> 
3655_33-NonEquals Mem: << [<5,8>]>> 
3655_33-Equals Sto:<< []>> 
3655_33-NonEquals Sto: << []>> 
3655_33-Useless: []
3655_33-Constancy: [(20, 64), (19, 0), (16, 0), (15, 32), (14, 64), (13, 0), (9, 32), (7, 64)]
3655_33-ContextAliasing: []

.....
-----
Block: 3797_47
3797_47Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_47-Stack size: 19 
3797_47-Equals Mem:<< []>> 
3797_47-NonEquals Mem: << [<5,8>]>> 
3797_47-Equals Sto:<< []>> 
3797_47-NonEquals Sto: << []>> 
3797_47-Useless: []
3797_47-Constancy: [(18, 64), (17, 0), (14, 0), (13, 32), (12, 64), (11, 0), (7, 32), (5, 64)]
3797_47-ContextAliasing: []

.....
-----
Block: 6354_4
6354_4Instr:<<['SWAP2', 'DUP10', 'SWAP8', 'SWAP5', 'SWAP4', 'SWAP2', 'SWAP8', 'MLOAD', 'SWAP8', 'DUP9', 'SWAP6', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0xa4', 'DUP8', 'ADD', 'SWAP3', 'PUSH1 0x04', 'DUP9', 'ADD', 'MSTORE', 'PUSH0', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP5', 'SWAP4', 'PUSH0', 'SWAP1']>> 
6354_4-Stack size: 30 
6354_4-Equals Mem:<< []>> 
6354_4-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
6354_4-Equals Sto:<< []>> 
6354_4-NonEquals Sto: << []>> 
6354_4-Useless: []
6354_4-Constancy: [(29, 64), (28, 0), (25, 0), (24, 32), (23, 64), (22, 0), (18, 32), (16, 64), (9, 64), (1, 32)]
6354_4-ContextAliasing: []

.....
-----
Block: 5225_1
5225_1Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP9', 'SWAP1', 'MSTORE', 'PUSH1 0x3a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5225_1-Stack size: 18 
5225_1-Equals Mem:<< []>> 
5225_1-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>]>> 
5225_1-Equals Sto:<< []>> 
5225_1-NonEquals Sto: << []>> 
5225_1-Useless: []
5225_1-Constancy: [(17, 64), (16, 0), (13, 0), (12, 32), (11, 64), (10, 0), (6, 32), (4, 64)]
5225_1-ContextAliasing: []

.....
-----
Block: 3655_35
3655_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_35-Stack size: 23 
3655_35-Equals Mem:<< []>> 
3655_35-NonEquals Mem: << [<5,8>]>> 
3655_35-Equals Sto:<< []>> 
3655_35-NonEquals Sto: << []>> 
3655_35-Useless: []
3655_35-Constancy: [(22, 64), (21, 0), (18, 0), (17, 32), (16, 64), (15, 0), (11, 32), (9, 64)]
3655_35-ContextAliasing: []

.....
-----
Block: 5331_1
5331_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP14', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'DUP14', 'REVERT']>> 
5331_1-Stack size: 20 
5331_1-Equals Mem:<< []>> 
5331_1-NonEquals Mem: << [<5,8>]>> 
5331_1-Equals Sto:<< []>> 
5331_1-NonEquals Sto: << []>> 
5331_1-Useless: []
5331_1-Constancy: [(19, 64), (18, 0), (15, 0), (14, 32), (13, 64), (12, 0), (8, 32), (6, 64)]
5331_1-ContextAliasing: []

.....
-----
Block: 5356_1
5356_1Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP11', 'SWAP1', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5356_1-Stack size: 20 
5356_1-Equals Mem:<< []>> 
5356_1-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5356_1-Equals Sto:<< []>> 
5356_1-NonEquals Sto: << []>> 
5356_1-Useless: []
5356_1-Constancy: [(19, 64), (18, 0), (15, 0), (14, 32), (13, 64), (12, 0), (8, 32), (6, 64)]
5356_1-ContextAliasing: []

.....
-----
Block: 3797_58
3797_58Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_58-Stack size: 21 
3797_58-Equals Mem:<< []>> 
3797_58-NonEquals Mem: << [<5,8>]>> 
3797_58-Equals Sto:<< []>> 
3797_58-NonEquals Sto: << []>> 
3797_58-Useless: []
3797_58-Constancy: [(20, 64), (19, 0), (16, 0), (15, 32), (14, 64), (13, 0), (9, 32), (7, 64)]
3797_58-ContextAliasing: []

.....
-----
Block: 3797_46
3797_46Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_46-Stack size: 22 
3797_46-Equals Mem:<< []>> 
3797_46-NonEquals Mem: << [<5,8>]>> 
3797_46-Equals Sto:<< []>> 
3797_46-NonEquals Sto: << []>> 
3797_46-Useless: []
3797_46-Constancy: [(21, 64), (20, 0), (17, 0), (16, 32), (15, 64), (14, 0), (10, 32), (8, 64)]
3797_46-ContextAliasing: []

.....
-----
Block: 3655_32
3655_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_32-Stack size: 25 
3655_32-Equals Mem:<< []>> 
3655_32-NonEquals Mem: << [<5,8>]>> 
3655_32-Equals Sto:<< []>> 
3655_32-NonEquals Sto: << []>> 
3655_32-Useless: []
3655_32-Constancy: [(24, 64), (23, 0), (20, 0), (19, 32), (18, 64), (17, 0), (13, 32), (11, 64), (4, 96)]
3655_32-ContextAliasing: [(5, 21)]

.....
-----
Block: 3923_9
3923_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_9-Stack size: 24 
3923_9-Equals Mem:<< []>> 
3923_9-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_9-Equals Sto:<< []>> 
3923_9-NonEquals Sto: << []>> 
3923_9-Useless: []
3923_9-Constancy: [(23, 64), (22, 0), (19, 0), (18, 32), (17, 64), (16, 0), (12, 32), (10, 64)]
3923_9-ContextAliasing: []

.....
-----
Block: 4003_9
4003_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_9-Stack size: 25 
4003_9-Equals Mem:<< []>> 
4003_9-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_9-Equals Sto:<< []>> 
4003_9-NonEquals Sto: << []>> 
4003_9-Useless: []
4003_9-Constancy: [(24, 64), (23, 0), (20, 0), (19, 32), (18, 64), (17, 0), (13, 32), (11, 64)]
4003_9-ContextAliasing: []

.....
-----
Block: 3797_45
3797_45Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_45-Stack size: 22 
3797_45-Equals Mem:<< []>> 
3797_45-NonEquals Mem: << [<5,8>]>> 
3797_45-Equals Sto:<< []>> 
3797_45-NonEquals Sto: << []>> 
3797_45-Useless: []
3797_45-Constancy: [(21, 64), (20, 0), (17, 0), (16, 32), (15, 64), (14, 0), (10, 32), (8, 64)]
3797_45-ContextAliasing: []

.....
-----
Block: 3655_31
3655_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_31-Stack size: 23 
3655_31-Equals Mem:<< []>> 
3655_31-NonEquals Mem: << [<5,8>]>> 
3655_31-Equals Sto:<< []>> 
3655_31-NonEquals Sto: << []>> 
3655_31-Useless: []
3655_31-Constancy: [(22, 64), (21, 0), (18, 0), (17, 32), (16, 64), (15, 0), (11, 32), (9, 64), (2, 64)]
3655_31-ContextAliasing: []

.....
-----
Block: 6500_4
6500_4Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP11', 'SWAP8', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x190a', 'JUMP']>> 
6500_4-Stack size: 33 
6500_4-Equals Mem:<< []>> 
6500_4-NonEquals Mem: << [<6,2>]>> 
6500_4-Equals Sto:<< []>> 
6500_4-NonEquals Sto: << []>> 
6500_4-Useless: []
6500_4-Constancy: [(32, 64), (31, 0), (28, 0), (27, 32), (26, 64), (25, 0), (21, 32), (19, 64), (12, 64), (2, 32)]
6500_4-ContextAliasing: [(7, 22)]

.....
-----
Block: 3923_8
3923_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_8-Stack size: 33 
3923_8-Equals Mem:<< []>> 
3923_8-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_8-Equals Sto:<< []>> 
3923_8-NonEquals Sto: << []>> 
3923_8-Useless: []
3923_8-Constancy: [(32, 64), (31, 0), (28, 0), (27, 32), (26, 64), (25, 0), (21, 32), (19, 64), (12, 64), (4, 32)]
3923_8-ContextAliasing: []

.....
-----
Block: 4003_8
4003_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_8-Stack size: 34 
4003_8-Equals Mem:<< []>> 
4003_8-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_8-Equals Sto:<< []>> 
4003_8-NonEquals Sto: << []>> 
4003_8-Useless: []
4003_8-Constancy: [(33, 64), (32, 0), (29, 0), (28, 32), (27, 64), (26, 0), (22, 32), (20, 64), (13, 64), (5, 32)]
4003_8-ContextAliasing: []

.....
-----
Block: 6526_10
6526_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_10-Stack size: 31 
6526_10-Equals Mem:<< []>> 
6526_10-NonEquals Mem: << [<5,8>]>> 
6526_10-Equals Sto:<< []>> 
6526_10-NonEquals Sto: << []>> 
6526_10-Useless: []
6526_10-Constancy: [(30, 64), (29, 0), (26, 0), (25, 32), (24, 64), (23, 0), (19, 32), (17, 64), (10, 64), (2, 32)]
6526_10-ContextAliasing: []

.....
-----
Block: 3655_36
3655_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_36-Stack size: 37 
3655_36-Equals Mem:<< []>> 
3655_36-NonEquals Mem: << [<5,8>]>> 
3655_36-Equals Sto:<< []>> 
3655_36-NonEquals Sto: << []>> 
3655_36-Useless: []
3655_36-Constancy: [(36, 64), (35, 0), (32, 0), (31, 32), (30, 64), (29, 0), (25, 32), (23, 64), (16, 64), (8, 32), (6, 0), (4, 32), (2, 32)]
3655_36-ContextAliasing: [(5, 33)]

.....
-----
Block: 3655_30
3655_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_30-Stack size: 37 
3655_30-Equals Mem:<< []>> 
3655_30-NonEquals Mem: << [<5,8>]>> 
3655_30-Equals Sto:<< []>> 
3655_30-NonEquals Sto: << []>> 
3655_30-Useless: []
3655_30-Constancy: [(36, 64), (35, 0), (32, 0), (31, 32), (30, 64), (29, 0), (25, 32), (23, 64), (16, 64), (8, 32), (6, 0), (4, 32)]
3655_30-ContextAliasing: [(5, 33)]

.....
-----
Block: 6526_9
6526_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_9-Stack size: 27 
6526_9-Equals Mem:<< []>> 
6526_9-NonEquals Mem: << [<5,8>]>> 
6526_9-Equals Sto:<< []>> 
6526_9-NonEquals Sto: << []>> 
6526_9-Useless: []
6526_9-Constancy: [(26, 64), (25, 0), (22, 0), (21, 32), (20, 64), (19, 0), (15, 32), (13, 64), (6, 64), (0, 32)]
6526_9-ContextAliasing: []

.....
-----
Block: 3655_29
3655_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_29-Stack size: 26 
3655_29-Equals Mem:<< []>> 
3655_29-NonEquals Mem: << [<5,8>]>> 
3655_29-Equals Sto:<< []>> 
3655_29-NonEquals Sto: << []>> 
3655_29-Useless: []
3655_29-Constancy: [(25, 64), (24, 0), (21, 0), (20, 32), (19, 64), (18, 0), (14, 32), (12, 64), (5, 64)]
3655_29-ContextAliasing: []

.....
-----
Block: 3797_44
3797_44Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_44-Stack size: 22 
3797_44-Equals Mem:<< []>> 
3797_44-NonEquals Mem: << [<5,8>]>> 
3797_44-Equals Sto:<< []>> 
3797_44-NonEquals Sto: << []>> 
3797_44-Useless: []
3797_44-Constancy: [(21, 64), (20, 0), (17, 0), (16, 32), (15, 64), (14, 0), (10, 32), (8, 64)]
3797_44-ContextAliasing: []

.....
-----
Block: 6354_3
6354_3Instr:<<['SWAP2', 'DUP10', 'SWAP8', 'SWAP5', 'SWAP4', 'SWAP2', 'SWAP8', 'MLOAD', 'SWAP8', 'DUP9', 'SWAP6', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0xa4', 'DUP8', 'ADD', 'SWAP3', 'PUSH1 0x04', 'DUP9', 'ADD', 'MSTORE', 'PUSH0', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP5', 'SWAP4', 'PUSH0', 'SWAP1']>> 
6354_3-Stack size: 30 
6354_3-Equals Mem:<< []>> 
6354_3-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
6354_3-Equals Sto:<< []>> 
6354_3-NonEquals Sto: << []>> 
6354_3-Useless: []
6354_3-Constancy: [(29, 64), (28, 0), (25, 0), (24, 32), (23, 64), (22, 0), (18, 32), (16, 64), (11, 0), (9, 64), (1, 32)]
6354_3-ContextAliasing: []

.....
-----
Block: 3797_43
3797_43Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_43-Stack size: 22 
3797_43-Equals Mem:<< []>> 
3797_43-NonEquals Mem: << [<5,8>]>> 
3797_43-Equals Sto:<< []>> 
3797_43-NonEquals Sto: << []>> 
3797_43-Useless: []
3797_43-Constancy: [(21, 64), (20, 0), (17, 0), (16, 32), (15, 64), (14, 0), (10, 32), (8, 64), (3, 0)]
3797_43-ContextAliasing: []

.....
-----
Block: 3655_28
3655_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_28-Stack size: 23 
3655_28-Equals Mem:<< []>> 
3655_28-NonEquals Mem: << [<5,8>]>> 
3655_28-Equals Sto:<< []>> 
3655_28-NonEquals Sto: << []>> 
3655_28-Useless: []
3655_28-Constancy: [(22, 64), (21, 0), (18, 0), (17, 32), (16, 64), (15, 0), (11, 32), (9, 64), (4, 0), (2, 64)]
3655_28-ContextAliasing: []

.....
-----
Block: 6500_3
6500_3Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP11', 'SWAP8', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x190a', 'JUMP']>> 
6500_3-Stack size: 33 
6500_3-Equals Mem:<< []>> 
6500_3-NonEquals Mem: << [<6,2>]>> 
6500_3-Equals Sto:<< []>> 
6500_3-NonEquals Sto: << []>> 
6500_3-Useless: []
6500_3-Constancy: [(32, 64), (31, 0), (28, 0), (27, 32), (26, 64), (25, 0), (21, 32), (19, 64), (14, 0), (12, 64), (2, 32)]
6500_3-ContextAliasing: [(7, 22)]

.....
-----
Block: 3923_7
3923_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_7-Stack size: 33 
3923_7-Equals Mem:<< []>> 
3923_7-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_7-Equals Sto:<< []>> 
3923_7-NonEquals Sto: << []>> 
3923_7-Useless: []
3923_7-Constancy: [(32, 64), (31, 0), (28, 0), (27, 32), (26, 64), (25, 0), (21, 32), (19, 64), (14, 0), (12, 64), (4, 32)]
3923_7-ContextAliasing: []

.....
-----
Block: 4003_7
4003_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_7-Stack size: 34 
4003_7-Equals Mem:<< []>> 
4003_7-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_7-Equals Sto:<< []>> 
4003_7-NonEquals Sto: << []>> 
4003_7-Useless: []
4003_7-Constancy: [(33, 64), (32, 0), (29, 0), (28, 32), (27, 64), (26, 0), (22, 32), (20, 64), (15, 0), (13, 64), (5, 32)]
4003_7-ContextAliasing: []

.....
-----
Block: 6526_8
6526_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_8-Stack size: 31 
6526_8-Equals Mem:<< []>> 
6526_8-NonEquals Mem: << [<5,8>]>> 
6526_8-Equals Sto:<< []>> 
6526_8-NonEquals Sto: << []>> 
6526_8-Useless: []
6526_8-Constancy: [(30, 64), (29, 0), (26, 0), (25, 32), (24, 64), (23, 0), (19, 32), (17, 64), (12, 0), (10, 64), (2, 32)]
6526_8-ContextAliasing: []

.....
-----
Block: 3655_37
3655_37Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_37-Stack size: 37 
3655_37-Equals Mem:<< []>> 
3655_37-NonEquals Mem: << [<5,8>]>> 
3655_37-Equals Sto:<< []>> 
3655_37-NonEquals Sto: << []>> 
3655_37-Useless: []
3655_37-Constancy: [(36, 64), (35, 0), (32, 0), (31, 32), (30, 64), (29, 0), (25, 32), (23, 64), (18, 0), (16, 64), (8, 32), (6, 0), (4, 32), (2, 32)]
3655_37-ContextAliasing: [(5, 33)]

.....
-----
Block: 3655_27
3655_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_27-Stack size: 37 
3655_27-Equals Mem:<< []>> 
3655_27-NonEquals Mem: << [<5,8>]>> 
3655_27-Equals Sto:<< []>> 
3655_27-NonEquals Sto: << []>> 
3655_27-Useless: []
3655_27-Constancy: [(36, 64), (35, 0), (32, 0), (31, 32), (30, 64), (29, 0), (25, 32), (23, 64), (18, 0), (16, 64), (8, 32), (6, 0), (4, 32)]
3655_27-ContextAliasing: [(5, 33)]

.....
-----
Block: 6526_7
6526_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_7-Stack size: 27 
6526_7-Equals Mem:<< []>> 
6526_7-NonEquals Mem: << [<5,8>]>> 
6526_7-Equals Sto:<< []>> 
6526_7-NonEquals Sto: << []>> 
6526_7-Useless: []
6526_7-Constancy: [(26, 64), (25, 0), (22, 0), (21, 32), (20, 64), (19, 0), (15, 32), (13, 64), (8, 0), (6, 64), (0, 32)]
6526_7-ContextAliasing: []

.....
-----
Block: 3655_26
3655_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_26-Stack size: 26 
3655_26-Equals Mem:<< []>> 
3655_26-NonEquals Mem: << [<5,8>]>> 
3655_26-Equals Sto:<< []>> 
3655_26-NonEquals Sto: << []>> 
3655_26-Useless: []
3655_26-Constancy: [(25, 64), (24, 0), (21, 0), (20, 32), (19, 64), (18, 0), (14, 32), (12, 64), (7, 0), (5, 64)]
3655_26-ContextAliasing: []

.....
-----
Block: 3797_42
3797_42Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_42-Stack size: 18 
3797_42-Equals Mem:<< []>> 
3797_42-NonEquals Mem: << [<5,8>]>> 
3797_42-Equals Sto:<< []>> 
3797_42-NonEquals Sto: << []>> 
3797_42-Useless: []
3797_42-Constancy: [(17, 64), (16, 0), (13, 0), (12, 32), (11, 64), (10, 0), (6, 32), (4, 64)]
3797_42-ContextAliasing: []

.....
-----
Block: 5675_1
5675_1Instr:<<['DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x30b63632ba17', 'PUSH1 0xd1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5675_1-Stack size: 16 
5675_1-Equals Mem:<< []>> 
5675_1-NonEquals Mem: << [<6,1>, <12,1>, <17,1>, <22,1>, <29,1>]>> 
5675_1-Equals Sto:<< []>> 
5675_1-NonEquals Sto: << []>> 
5675_1-Useless: []
5675_1-Constancy: [(15, 64), (14, 0), (11, 0), (10, 32), (9, 64), (8, 0), (4, 32), (2, 64)]
5675_1-ContextAliasing: []

.....
-----
Block: 3797_41
3797_41Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_41-Stack size: 18 
3797_41-Equals Mem:<< []>> 
3797_41-NonEquals Mem: << [<5,8>]>> 
3797_41-Equals Sto:<< []>> 
3797_41-NonEquals Sto: << []>> 
3797_41-Useless: []
3797_41-Constancy: [(17, 64), (16, 0), (13, 0), (12, 32), (11, 64), (10, 0), (6, 32), (4, 64)]
3797_41-ContextAliasing: []

.....
-----
Block: 5757_1
5757_1Instr:<<['JUMPDEST', 'DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x18', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5757_1-Stack size: 16 
5757_1-Equals Mem:<< []>> 
5757_1-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5757_1-Equals Sto:<< []>> 
5757_1-NonEquals Sto: << []>> 
5757_1-Useless: []
5757_1-Constancy: [(15, 64), (14, 0), (11, 0), (10, 32), (9, 64), (8, 0), (4, 32), (2, 64)]
5757_1-ContextAliasing: []

.....
-----
Block: 5841_1
5841_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x2a3c20b6b7bab73a17', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5841_1-Stack size: 12 
5841_1-Equals Mem:<< []>> 
5841_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5841_1-Equals Sto:<< []>> 
5841_1-NonEquals Sto: << []>> 
5841_1-Useless: []
5841_1-Constancy: [(11, 64), (10, 0), (7, 0), (6, 32), (5, 64)]
5841_1-ContextAliasing: []

.....
-----
Block: 5928_1
5928_1Instr:<<['JUMPDEST', 'POP', 'DUP2', 'PUSH0', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0xff', 'PUSH1 0x40', 'PUSH0', 'KECCAK256', 'SLOAD', 'AND', 'PUSH2 0x10a0', 'JUMP']>> 
5928_1-Stack size: 13 
5928_1-Equals Mem:<< []>> 
5928_1-NonEquals Mem: << [<4,7>]>> 
5928_1-Equals Sto:<< []>> 
5928_1-NonEquals Sto: << []>> 
5928_1-Useless: []
5928_1-Constancy: [(12, 64), (11, 0), (8, 0), (7, 32), (6, 64)]
5928_1-ContextAliasing: []

.....
-----
Block: 5950_1
5950_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5950_1-Stack size: 12 
5950_1-Equals Mem:<< []>> 
5950_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5950_1-Equals Sto:<< []>> 
5950_1-NonEquals Sto: << []>> 
5950_1-Useless: []
5950_1-Constancy: [(11, 64), (10, 0), (7, 0), (6, 32), (5, 64)]
5950_1-ContextAliasing: []

.....
-----
Block: 6037_1
6037_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6037_1-Stack size: 12 
6037_1-Equals Mem:<< []>> 
6037_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6037_1-Equals Sto:<< []>> 
6037_1-NonEquals Sto: << []>> 
6037_1-Useless: []
6037_1-Constancy: [(11, 64), (10, 0), (7, 0), (6, 32), (5, 64)]
6037_1-ContextAliasing: []

.....
-----
Block: 6118_1
6118_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6118_1-Stack size: 12 
6118_1-Equals Mem:<< []>> 
6118_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6118_1-Equals Sto:<< []>> 
6118_1-NonEquals Sto: << []>> 
6118_1-Useless: []
6118_1-Constancy: [(11, 64), (10, 0), (7, 0), (6, 32), (5, 64)]
6118_1-ContextAliasing: []

.....
-----
Block: 1639
1639Instr:<<['PUSH1 0x02', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1639-Stack size: 6 
1639-Equals Mem:<< []>> 
1639-NonEquals Mem: << [<13,3>]>> 
1639-Equals Sto:<< []>> 
1639-NonEquals Sto: << []>> 
1639-Useless: []
1639-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1639-ContextAliasing: []

.....
-----
Block: 1698
1698Instr:<<['JUMPDEST', 'CALLER', 'DUP3', 'MSTORE', 'SWAP3', 'DUP7', 'MSTORE', 'DUP5', 'DUP2', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'DUP3', 'MSTORE', 'DUP7', 'MSTORE', 'DUP5', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x24', 'CALLDATALOAD', 'SWAP1', 'PUSH2 0x0ec8', 'JUMP']>> 
1698-Stack size: 8 
1698-Equals Mem:<< [<3,18>, <6,20>]>> 
1698-NonEquals Mem: << [<3,6>, <3,20>, <6,18>, <18,20>]>> 
1698-Equals Sto:<< []>> 
1698-NonEquals Sto: << []>> 
1698-Useless: []
1698-Constancy: [(7, 64), (6, 32), (5, 64), (1, 0)]
1698-ContextAliasing: []

.....
-----
Block: 1613_0
1613_0Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1613_0-Stack size: 3 
1613_0-Equals Mem:<< []>> 
1613_0-NonEquals Mem: << [<4,1>]>> 
1613_0-Equals Sto:<< []>> 
1613_0-NonEquals Sto: << []>> 
1613_0-Useless: []
1613_0-Constancy: [(2, 64), (1, 32), (0, 64)]
1613_0-ContextAliasing: []

.....
-----
Block: 3923_3
3923_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_3-Stack size: 7 
3923_3-Equals Mem:<< []>> 
3923_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_3-Equals Sto:<< []>> 
3923_3-NonEquals Sto: << []>> 
3923_3-Useless: []
3923_3-Constancy: [(6, 64), (5, 32), (4, 64)]
3923_3-ContextAliasing: []

.....
-----
Block: 4003_3
4003_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_3-Stack size: 8 
4003_3-Equals Mem:<< []>> 
4003_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_3-Equals Sto:<< []>> 
4003_3-NonEquals Sto: << []>> 
4003_3-Useless: []
4003_3-Constancy: [(7, 64), (6, 32), (5, 64)]
4003_3-ContextAliasing: []

.....
-----
Block: 3797_19
3797_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_19-Stack size: 7 
3797_19-Equals Mem:<< []>> 
3797_19-NonEquals Mem: << [<5,8>]>> 
3797_19-Equals Sto:<< []>> 
3797_19-NonEquals Sto: << []>> 
3797_19-Useless: []
3797_19-Constancy: [(6, 64), (5, 32), (4, 64)]
3797_19-ContextAliasing: []

.....
-----
Block: 1774
1774Instr:<<['JUMPDEST', 'PUSH1 0x08', 'DUP3', 'MSTORE', 'PUSH8 0x149155915494d053', 'PUSH1 0xc2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0d85', 'JUMP']>> 
1774-Stack size: 8 
1774-Equals Mem:<< []>> 
1774-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
1774-Equals Sto:<< []>> 
1774-NonEquals Sto: << []>> 
1774-Useless: []
1774-Constancy: [(7, 64), (6, 0), (3, 0), (0, 64)]
1774-ContextAliasing: []

.....
-----
Block: 3461
3461Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3461-Stack size: 10 
3461-Equals Mem:<< []>> 
3461-NonEquals Mem: << [<4,6>, <4,12>, <12,6>]>> 
3461-Equals Sto:<< []>> 
3461-NonEquals Sto: << []>> 
3461-Useless: []
3461-Constancy: [(9, 64), (8, 0), (5, 0)]
3461-ContextAliasing: []

.....
-----
Block: 3512
3512Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0d97', 'JUMP']>> 
3512-Stack size: 13 
3512-Equals Mem:<< []>> 
3512-NonEquals Mem: << [<12,6>]>> 
3512-Equals Sto:<< []>> 
3512-NonEquals Sto: << []>> 
3512-Useless: []
3512-Constancy: [(12, 64), (11, 0), (8, 0), (5, 32)]
3512-ContextAliasing: []

.....
-----
Block: 3655_25
3655_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_25-Stack size: 10 
3655_25-Equals Mem:<< []>> 
3655_25-NonEquals Mem: << [<5,8>]>> 
3655_25-Equals Sto:<< []>> 
3655_25-NonEquals Sto: << []>> 
3655_25-Useless: []
3655_25-Constancy: [(9, 64), (8, 0), (5, 0), (2, 64)]
3655_25-ContextAliasing: []

.....
-----
Block: 1824
1824Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1824-Stack size: 6 
1824-Equals Mem:<< []>> 
1824-NonEquals Mem: << [<13,3>]>> 
1824-Equals Sto:<< []>> 
1824-NonEquals Sto: << []>> 
1824-Useless: []
1824-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1824-ContextAliasing: []

.....
-----
Block: 1864
1864Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1864-Stack size: 6 
1864-Equals Mem:<< []>> 
1864-NonEquals Mem: << [<8,5>]>> 
1864-Equals Sto:<< []>> 
1864-NonEquals Sto: << []>> 
1864-Useless: []
1864-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1864-ContextAliasing: []

.....
-----
Block: 1919
1919Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1919-Stack size: 11 
1919-Equals Mem:<< []>> 
1919-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
1919-Equals Sto:<< []>> 
1919-NonEquals Sto: << []>> 
1919-Useless: []
1919-Constancy: [(10, 64), (9, 0), (6, 32), (5, 64), (3, 64), (2, 0)]
1919-ContextAliasing: []

.....
-----
Block: 1957
1957Instr:<<['PUSH1 0x14', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1957-Stack size: 6 
1957-Equals Mem:<< []>> 
1957-NonEquals Mem: << [<13,3>]>> 
1957-Equals Sto:<< []>> 
1957-NonEquals Sto: << []>> 
1957-Useless: []
1957-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1957-ContextAliasing: []

.....
-----
Block: 3716_4
3716_4Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_4-Stack size: 9 
3716_4-Equals Mem:<< []>> 
3716_4-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_4-Equals Sto:<< []>> 
3716_4-NonEquals Sto: << []>> 
3716_4-Useless: []
3716_4-Constancy: [(8, 64), (7, 0), (4, 0), (3, 0)]
3716_4-ContextAliasing: []

.....
-----
Block: 2113
2113Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2113-Stack size: 10 
2113-Equals Mem:<< []>> 
2113-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
2113-Equals Sto:<< []>> 
2113-NonEquals Sto: << []>> 
2113-Useless: []
2113-Constancy: [(9, 64), (8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
2113-ContextAliasing: []

.....
-----
Block: 2162
2162Instr:<<['JUMPDEST', 'SWAP1', 'ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'DUP3', 'KECCAK256', 'SLOAD', 'DUP2', 'DUP2', 'GT', 'ISZERO', 'PUSH2 0x036c', 'JUMPI']>> 
2162-Stack size: 7 
2162-Equals Mem:<< []>> 
2162-NonEquals Mem: << [<4,7>]>> 
2162-Equals Sto:<< []>> 
2162-NonEquals Sto: << []>> 
2162-Useless: []
2162-Constancy: [(6, 64), (5, 0), (2, 0), (1, 64)]
2162-ContextAliasing: []

.....
-----
Block: 4262_0
4262_0Instr:<<['PUSH0', 'SWAP5', 'DUP3', 'DUP7', 'MSTORE', 'PUSH1 0x20', 'SWAP2', 'PUSH1 0x07', 'DUP4', 'MSTORE', 'PUSH1 0xff', 'SWAP1', 'PUSH1 0x40', 'SWAP2', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x16c1', 'JUMPI']>> 
4262_0-Stack size: 10 
4262_0-Equals Mem:<< []>> 
4262_0-NonEquals Mem: << [<4,9>]>> 
4262_0-Equals Sto:<< []>> 
4262_0-NonEquals Sto: << []>> 
4262_0-Useless: []
4262_0-Constancy: [(9, 64), (8, 0), (5, 0)]
4262_0-ContextAliasing: []

.....
-----
Block: 4298_0
4298_0Instr:<<['DUP7', 'DUP10', 'MSTORE', 'PUSH1 0x06', 'DUP6', 'MSTORE', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x1610', 'JUMPI']>> 
4298_0-Stack size: 14 
4298_0-Equals Mem:<< []>> 
4298_0-NonEquals Mem: << [<2,5>]>> 
4298_0-Equals Sto:<< []>> 
4298_0-NonEquals Sto: << []>> 
4298_0-Useless: []
4298_0-Constancy: [(13, 64), (12, 0), (9, 0), (8, 0), (4, 32), (2, 64)]
4298_0-ContextAliasing: []

.....
-----
Block: 4316_0
4316_0Instr:<<['JUMPDEST', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'GT', 'ISZERO', 'DUP1', 'PUSH2 0x15f8', 'JUMPI']>> 
4316_0-Stack size: 14 
4316_0-Equals Mem:<< []>> 
4316_0-NonEquals Mem: << [<3,6>]>> 
4316_0-Equals Sto:<< []>> 
4316_0-NonEquals Sto: << [<10,12>]>> 
4316_0-Useless: []
4316_0-Constancy: [(13, 64), (12, 0), (9, 0), (8, 0), (4, 32), (2, 64)]
4316_0-ContextAliasing: []

.....
-----
Block: 4367_0
4367_0Instr:<<['JUMPDEST', 'DUP6', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'PUSH2 0x1124', 'DUP6', 'DUP3', 'SLOAD', 'PUSH2 0x0ec8', 'JUMP']>> 
4367_0-Stack size: 14 
4367_0-Equals Mem:<< []>> 
4367_0-NonEquals Mem: << [<3,6>]>> 
4367_0-Equals Sto:<< []>> 
4367_0-NonEquals Sto: << []>> 
4367_0-Useless: []
4367_0-Constancy: [(13, 64), (12, 0), (9, 0), (8, 0), (4, 32), (2, 64)]
4367_0-ContextAliasing: []

.....
-----
Block: 4388_0
4388_0Instr:<<['JUMPDEST', 'SWAP1', 'SSTORE', 'DUP4', 'DUP7', 'DUP11', 'MSTORE', 'PUSH1 0x05', 'DUP7', 'MSTORE', 'DUP2', 'DUP5', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x1300', 'JUMPI']>> 
4388_0-Stack size: 16 
4388_0-Equals Mem:<< []>> 
4388_0-NonEquals Mem: << [<6,9>]>> 
4388_0-Equals Sto:<< [<2,14>]>> 
4388_0-NonEquals Sto: << []>> 
4388_0-Useless: []
4388_0-Constancy: [(15, 64), (14, 0), (11, 0), (10, 0), (6, 32), (4, 64)]
4388_0-ContextAliasing: []

.....
-----
Block: 3797_37
3797_37Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_37-Stack size: 15 
3797_37-Equals Mem:<< []>> 
3797_37-NonEquals Mem: << [<5,8>]>> 
3797_37-Equals Sto:<< []>> 
3797_37-NonEquals Sto: << []>> 
3797_37-Useless: []
3797_37-Constancy: [(14, 64), (13, 0), (10, 0), (5, 32), (3, 64)]
3797_37-ContextAliasing: []

.....
-----
Block: 4491_0
4491_0Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x12', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'PUSH2 0x12d9', 'JUMPI']>> 
4491_0-Stack size: 17 
4491_0-Equals Mem:<< []>> 
4491_0-NonEquals Mem: << [<8,15>]>> 
4491_0-Equals Sto:<< []>> 
4491_0-NonEquals Sto: << []>> 
4491_0-Useless: []
4491_0-Constancy: [(16, 64), (15, 0), (12, 0), (11, 0), (7, 32), (5, 64)]
4491_0-ContextAliasing: []

.....
-----
Block: 4568_0
4568_0Instr:<<['JUMPDEST', 'SWAP1', 'ADDRESS', 'DUP12', 'MSTORE', 'PUSH1 0x03', 'DUP8', 'MSTORE', 'DUP5', 'DUP12', 'KECCAK256', 'PUSH2 0x11ee', 'DUP4', 'DUP3', 'SLOAD', 'PUSH2 0x0ee9', 'JUMP']>> 
4568_0-Stack size: 16 
4568_0-Equals Mem:<< []>> 
4568_0-NonEquals Mem: << [<4,7>]>> 
4568_0-Equals Sto:<< []>> 
4568_0-NonEquals Sto: << []>> 
4568_0-Useless: []
4568_0-Constancy: [(15, 64), (14, 0), (11, 0), (10, 0), (6, 32), (4, 64)]
4568_0-ContextAliasing: []

.....
-----
Block: 4680_0
4680_0Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'DUP7', 'MSTORE', 'DUP3', 'DUP3', 'KECCAK256', 'SSTORE', 'PUSH2 0x1224', 'JUMP']>> 
4680_0-Stack size: 15 
4680_0-Equals Mem:<< []>> 
4680_0-NonEquals Mem: << [<3,6>]>> 
4680_0-Equals Sto:<< []>> 
4680_0-NonEquals Sto: << []>> 
4680_0-Useless: []
4680_0-Constancy: [(14, 64), (13, 0), (10, 0), (5, 32), (3, 64), (2, 64), (1, 0)]
4680_0-ContextAliasing: []

.....
-----
Block: 3797_39
3797_39Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_39-Stack size: 16 
3797_39-Equals Mem:<< []>> 
3797_39-NonEquals Mem: << [<5,8>]>> 
3797_39-Equals Sto:<< []>> 
3797_39-NonEquals Sto: << []>> 
3797_39-Useless: []
3797_39-Constancy: [(15, 64), (14, 0), (11, 0), (6, 32), (4, 64), (3, 64), (2, 0)]
3797_39-ContextAliasing: []

.....
-----
Block: 3797_38
3797_38Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_38-Stack size: 16 
3797_38-Equals Mem:<< []>> 
3797_38-NonEquals Mem: << [<5,8>]>> 
3797_38-Equals Sto:<< []>> 
3797_38-NonEquals Sto: << []>> 
3797_38-Useless: []
3797_38-Constancy: [(15, 64), (14, 0), (11, 0), (6, 32), (4, 64), (3, 64), (2, 0)]
3797_38-ContextAliasing: []

.....
-----
Block: 4696_0
4696_0Instr:<<['JUMPDEST', 'POP', 'DUP4', 'DUP8', 'MSTORE', 'PUSH1 0x08', 'DUP4', 'MSTORE', 'DUP1', 'DUP8', 'KECCAK256', 'SLOAD', 'DUP1', 'PUSH2 0x1283', 'JUMPI']>> 
4696_0-Stack size: 13 
4696_0-Equals Mem:<< []>> 
4696_0-NonEquals Mem: << [<4,7>]>> 
4696_0-Equals Sto:<< []>> 
4696_0-NonEquals Sto: << []>> 
4696_0-Useless: []
4696_0-Constancy: [(12, 64), (11, 0), (8, 0), (7, 0), (3, 32), (1, 64)]
4696_0-ContextAliasing: []

.....
-----
Block: 3797_36
3797_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_36-Stack size: 15 
3797_36-Equals Mem:<< []>> 
3797_36-NonEquals Mem: << [<5,8>]>> 
3797_36-Equals Sto:<< []>> 
3797_36-NonEquals Sto: << []>> 
3797_36-Useless: []
3797_36-Constancy: [(14, 64), (13, 0), (10, 0), (9, 0), (5, 32), (3, 64)]
3797_36-ContextAliasing: []

.....
-----
Block: 3797_35
3797_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_35-Stack size: 19 
3797_35-Equals Mem:<< []>> 
3797_35-NonEquals Mem: << [<5,8>]>> 
3797_35-Equals Sto:<< []>> 
3797_35-NonEquals Sto: << []>> 
3797_35-Useless: []
3797_35-Constancy: [(18, 64), (17, 0), (14, 0), (13, 0), (9, 32), (7, 64)]
3797_35-ContextAliasing: []

.....
-----
Block: 3797_34
3797_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_34-Stack size: 17 
3797_34-Equals Mem:<< []>> 
3797_34-NonEquals Mem: << [<5,8>]>> 
3797_34-Equals Sto:<< []>> 
3797_34-NonEquals Sto: << []>> 
3797_34-Useless: []
3797_34-Constancy: [(16, 64), (15, 0), (12, 0), (11, 0), (7, 32), (5, 64)]
3797_34-ContextAliasing: []

.....
-----
Block: 3797_33
3797_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_33-Stack size: 20 
3797_33-Equals Mem:<< []>> 
3797_33-NonEquals Mem: << [<5,8>]>> 
3797_33-Equals Sto:<< []>> 
3797_33-NonEquals Sto: << []>> 
3797_33-Useless: []
3797_33-Constancy: [(19, 64), (18, 0), (15, 0), (14, 0), (10, 32), (8, 64)]
3797_33-ContextAliasing: []

.....
-----
Block: 3797_32
3797_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_32-Stack size: 20 
3797_32-Equals Mem:<< []>> 
3797_32-NonEquals Mem: << [<5,8>]>> 
3797_32-Equals Sto:<< []>> 
3797_32-NonEquals Sto: << []>> 
3797_32-Useless: []
3797_32-Constancy: [(19, 64), (18, 0), (15, 0), (14, 0), (10, 32), (8, 64)]
3797_32-ContextAliasing: []

.....
-----
Block: 3797_31
3797_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_31-Stack size: 20 
3797_31-Equals Mem:<< []>> 
3797_31-NonEquals Mem: << [<5,8>]>> 
3797_31-Equals Sto:<< []>> 
3797_31-NonEquals Sto: << []>> 
3797_31-Useless: []
3797_31-Constancy: [(19, 64), (18, 0), (15, 0), (14, 0), (10, 32), (8, 64)]
3797_31-ContextAliasing: []

.....
-----
Block: 3797_30
3797_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_30-Stack size: 24 
3797_30-Equals Mem:<< []>> 
3797_30-NonEquals Mem: << [<5,8>]>> 
3797_30-Equals Sto:<< []>> 
3797_30-NonEquals Sto: << []>> 
3797_30-Useless: []
3797_30-Constancy: [(23, 64), (22, 0), (19, 0), (18, 0), (14, 32), (12, 64), (3, 32)]
3797_30-ContextAliasing: []

.....
-----
Block: 4840_0
4840_0Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x13', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'POP', 'PUSH2 0x11a2', 'JUMP']>> 
4840_0-Stack size: 17 
4840_0-Equals Mem:<< []>> 
4840_0-NonEquals Mem: << [<8,15>]>> 
4840_0-Equals Sto:<< []>> 
4840_0-NonEquals Sto: << []>> 
4840_0-Useless: []
4840_0-Constancy: [(16, 64), (15, 0), (12, 0), (11, 0), (7, 32), (5, 64)]
4840_0-ContextAliasing: []

.....
-----
Block: 3655_21
3655_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_21-Stack size: 19 
3655_21-Equals Mem:<< []>> 
3655_21-NonEquals Mem: << [<5,8>]>> 
3655_21-Equals Sto:<< []>> 
3655_21-NonEquals Sto: << []>> 
3655_21-Useless: []
3655_21-Constancy: [(18, 64), (17, 0), (14, 0), (13, 0), (9, 32), (7, 64)]
3655_21-ContextAliasing: []

.....
-----
Block: 3655_20
3655_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_20-Stack size: 19 
3655_20-Equals Mem:<< []>> 
3655_20-NonEquals Mem: << [<5,8>]>> 
3655_20-Equals Sto:<< []>> 
3655_20-NonEquals Sto: << []>> 
3655_20-Useless: []
3655_20-Constancy: [(18, 64), (17, 0), (14, 0), (13, 0), (9, 32), (7, 64)]
3655_20-ContextAliasing: []

.....
-----
Block: 3797_29
3797_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_29-Stack size: 17 
3797_29-Equals Mem:<< []>> 
3797_29-NonEquals Mem: << [<5,8>]>> 
3797_29-Equals Sto:<< []>> 
3797_29-NonEquals Sto: << []>> 
3797_29-Useless: []
3797_29-Constancy: [(16, 64), (15, 0), (12, 0), (11, 0), (7, 32), (5, 64)]
3797_29-ContextAliasing: []

.....
-----
Block: 6354_2
6354_2Instr:<<['SWAP2', 'DUP10', 'SWAP8', 'SWAP5', 'SWAP4', 'SWAP2', 'SWAP8', 'MLOAD', 'SWAP8', 'DUP9', 'SWAP6', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0xa4', 'DUP8', 'ADD', 'SWAP3', 'PUSH1 0x04', 'DUP9', 'ADD', 'MSTORE', 'PUSH0', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP5', 'SWAP4', 'PUSH0', 'SWAP1']>> 
6354_2-Stack size: 28 
6354_2-Equals Mem:<< []>> 
6354_2-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
6354_2-Equals Sto:<< []>> 
6354_2-NonEquals Sto: << []>> 
6354_2-Useless: []
6354_2-Constancy: [(27, 64), (26, 0), (23, 0), (22, 0), (18, 32), (16, 64), (9, 64), (1, 32)]
6354_2-ContextAliasing: []

.....
-----
Block: 5225_0
5225_0Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP9', 'SWAP1', 'MSTORE', 'PUSH1 0x3a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5225_0-Stack size: 16 
5225_0-Equals Mem:<< []>> 
5225_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>]>> 
5225_0-Equals Sto:<< []>> 
5225_0-NonEquals Sto: << []>> 
5225_0-Useless: []
5225_0-Constancy: [(15, 64), (14, 0), (11, 0), (10, 0), (6, 32), (4, 64)]
5225_0-ContextAliasing: []

.....
-----
Block: 3655_22
3655_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_22-Stack size: 21 
3655_22-Equals Mem:<< []>> 
3655_22-NonEquals Mem: << [<5,8>]>> 
3655_22-Equals Sto:<< []>> 
3655_22-NonEquals Sto: << []>> 
3655_22-Useless: []
3655_22-Constancy: [(20, 64), (19, 0), (16, 0), (15, 0), (11, 32), (9, 64)]
3655_22-ContextAliasing: []

.....
-----
Block: 5331_0
5331_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP14', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'DUP14', 'REVERT']>> 
5331_0-Stack size: 18 
5331_0-Equals Mem:<< []>> 
5331_0-NonEquals Mem: << [<5,8>]>> 
5331_0-Equals Sto:<< []>> 
5331_0-NonEquals Sto: << []>> 
5331_0-Useless: []
5331_0-Constancy: [(17, 64), (16, 0), (13, 0), (12, 0), (8, 32), (6, 64)]
5331_0-ContextAliasing: []

.....
-----
Block: 5356_0
5356_0Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP11', 'SWAP1', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5356_0-Stack size: 18 
5356_0-Equals Mem:<< []>> 
5356_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5356_0-Equals Sto:<< []>> 
5356_0-NonEquals Sto: << []>> 
5356_0-Useless: []
5356_0-Constancy: [(17, 64), (16, 0), (13, 0), (12, 0), (8, 32), (6, 64)]
5356_0-ContextAliasing: []

.....
-----
Block: 3797_40
3797_40Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_40-Stack size: 19 
3797_40-Equals Mem:<< []>> 
3797_40-NonEquals Mem: << [<5,8>]>> 
3797_40-Equals Sto:<< []>> 
3797_40-NonEquals Sto: << []>> 
3797_40-Useless: []
3797_40-Constancy: [(18, 64), (17, 0), (14, 0), (13, 0), (9, 32), (7, 64)]
3797_40-ContextAliasing: []

.....
-----
Block: 3797_28
3797_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_28-Stack size: 20 
3797_28-Equals Mem:<< []>> 
3797_28-NonEquals Mem: << [<5,8>]>> 
3797_28-Equals Sto:<< []>> 
3797_28-NonEquals Sto: << []>> 
3797_28-Useless: []
3797_28-Constancy: [(19, 64), (18, 0), (15, 0), (14, 0), (10, 32), (8, 64)]
3797_28-ContextAliasing: []

.....
-----
Block: 3655_19
3655_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_19-Stack size: 23 
3655_19-Equals Mem:<< []>> 
3655_19-NonEquals Mem: << [<5,8>]>> 
3655_19-Equals Sto:<< []>> 
3655_19-NonEquals Sto: << []>> 
3655_19-Useless: []
3655_19-Constancy: [(22, 64), (21, 0), (18, 0), (17, 0), (13, 32), (11, 64), (4, 96)]
3655_19-ContextAliasing: [(5, 19)]

.....
-----
Block: 3923_6
3923_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_6-Stack size: 22 
3923_6-Equals Mem:<< []>> 
3923_6-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_6-Equals Sto:<< []>> 
3923_6-NonEquals Sto: << []>> 
3923_6-Useless: []
3923_6-Constancy: [(21, 64), (20, 0), (17, 0), (16, 0), (12, 32), (10, 64)]
3923_6-ContextAliasing: []

.....
-----
Block: 4003_6
4003_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_6-Stack size: 23 
4003_6-Equals Mem:<< []>> 
4003_6-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_6-Equals Sto:<< []>> 
4003_6-NonEquals Sto: << []>> 
4003_6-Useless: []
4003_6-Constancy: [(22, 64), (21, 0), (18, 0), (17, 0), (13, 32), (11, 64)]
4003_6-ContextAliasing: []

.....
-----
Block: 3797_27
3797_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_27-Stack size: 20 
3797_27-Equals Mem:<< []>> 
3797_27-NonEquals Mem: << [<5,8>]>> 
3797_27-Equals Sto:<< []>> 
3797_27-NonEquals Sto: << []>> 
3797_27-Useless: []
3797_27-Constancy: [(19, 64), (18, 0), (15, 0), (14, 0), (10, 32), (8, 64)]
3797_27-ContextAliasing: []

.....
-----
Block: 3655_18
3655_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_18-Stack size: 21 
3655_18-Equals Mem:<< []>> 
3655_18-NonEquals Mem: << [<5,8>]>> 
3655_18-Equals Sto:<< []>> 
3655_18-NonEquals Sto: << []>> 
3655_18-Useless: []
3655_18-Constancy: [(20, 64), (19, 0), (16, 0), (15, 0), (11, 32), (9, 64), (2, 64)]
3655_18-ContextAliasing: []

.....
-----
Block: 6500_2
6500_2Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP11', 'SWAP8', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x190a', 'JUMP']>> 
6500_2-Stack size: 31 
6500_2-Equals Mem:<< []>> 
6500_2-NonEquals Mem: << [<6,2>]>> 
6500_2-Equals Sto:<< []>> 
6500_2-NonEquals Sto: << []>> 
6500_2-Useless: []
6500_2-Constancy: [(30, 64), (29, 0), (26, 0), (25, 0), (21, 32), (19, 64), (12, 64), (2, 32)]
6500_2-ContextAliasing: [(7, 20)]

.....
-----
Block: 3923_5
3923_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_5-Stack size: 31 
3923_5-Equals Mem:<< []>> 
3923_5-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_5-Equals Sto:<< []>> 
3923_5-NonEquals Sto: << []>> 
3923_5-Useless: []
3923_5-Constancy: [(30, 64), (29, 0), (26, 0), (25, 0), (21, 32), (19, 64), (12, 64), (4, 32)]
3923_5-ContextAliasing: []

.....
-----
Block: 4003_5
4003_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_5-Stack size: 32 
4003_5-Equals Mem:<< []>> 
4003_5-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_5-Equals Sto:<< []>> 
4003_5-NonEquals Sto: << []>> 
4003_5-Useless: []
4003_5-Constancy: [(31, 64), (30, 0), (27, 0), (26, 0), (22, 32), (20, 64), (13, 64), (5, 32)]
4003_5-ContextAliasing: []

.....
-----
Block: 6526_6
6526_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_6-Stack size: 29 
6526_6-Equals Mem:<< []>> 
6526_6-NonEquals Mem: << [<5,8>]>> 
6526_6-Equals Sto:<< []>> 
6526_6-NonEquals Sto: << []>> 
6526_6-Useless: []
6526_6-Constancy: [(28, 64), (27, 0), (24, 0), (23, 0), (19, 32), (17, 64), (10, 64), (2, 32)]
6526_6-ContextAliasing: []

.....
-----
Block: 3655_23
3655_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_23-Stack size: 35 
3655_23-Equals Mem:<< []>> 
3655_23-NonEquals Mem: << [<5,8>]>> 
3655_23-Equals Sto:<< []>> 
3655_23-NonEquals Sto: << []>> 
3655_23-Useless: []
3655_23-Constancy: [(34, 64), (33, 0), (30, 0), (29, 0), (25, 32), (23, 64), (16, 64), (8, 32), (6, 0), (4, 32), (2, 32)]
3655_23-ContextAliasing: [(5, 31)]

.....
-----
Block: 3655_17
3655_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_17-Stack size: 35 
3655_17-Equals Mem:<< []>> 
3655_17-NonEquals Mem: << [<5,8>]>> 
3655_17-Equals Sto:<< []>> 
3655_17-NonEquals Sto: << []>> 
3655_17-Useless: []
3655_17-Constancy: [(34, 64), (33, 0), (30, 0), (29, 0), (25, 32), (23, 64), (16, 64), (8, 32), (6, 0), (4, 32)]
3655_17-ContextAliasing: [(5, 31)]

.....
-----
Block: 6526_5
6526_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_5-Stack size: 25 
6526_5-Equals Mem:<< []>> 
6526_5-NonEquals Mem: << [<5,8>]>> 
6526_5-Equals Sto:<< []>> 
6526_5-NonEquals Sto: << []>> 
6526_5-Useless: []
6526_5-Constancy: [(24, 64), (23, 0), (20, 0), (19, 0), (15, 32), (13, 64), (6, 64), (0, 32)]
6526_5-ContextAliasing: []

.....
-----
Block: 3655_16
3655_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_16-Stack size: 24 
3655_16-Equals Mem:<< []>> 
3655_16-NonEquals Mem: << [<5,8>]>> 
3655_16-Equals Sto:<< []>> 
3655_16-NonEquals Sto: << []>> 
3655_16-Useless: []
3655_16-Constancy: [(23, 64), (22, 0), (19, 0), (18, 0), (14, 32), (12, 64), (5, 64)]
3655_16-ContextAliasing: []

.....
-----
Block: 3797_26
3797_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_26-Stack size: 20 
3797_26-Equals Mem:<< []>> 
3797_26-NonEquals Mem: << [<5,8>]>> 
3797_26-Equals Sto:<< []>> 
3797_26-NonEquals Sto: << []>> 
3797_26-Useless: []
3797_26-Constancy: [(19, 64), (18, 0), (15, 0), (14, 0), (10, 32), (8, 64)]
3797_26-ContextAliasing: []

.....
-----
Block: 6354_1
6354_1Instr:<<['SWAP2', 'DUP10', 'SWAP8', 'SWAP5', 'SWAP4', 'SWAP2', 'SWAP8', 'MLOAD', 'SWAP8', 'DUP9', 'SWAP6', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0xa4', 'DUP8', 'ADD', 'SWAP3', 'PUSH1 0x04', 'DUP9', 'ADD', 'MSTORE', 'PUSH0', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP5', 'SWAP4', 'PUSH0', 'SWAP1']>> 
6354_1-Stack size: 28 
6354_1-Equals Mem:<< []>> 
6354_1-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
6354_1-Equals Sto:<< []>> 
6354_1-NonEquals Sto: << []>> 
6354_1-Useless: []
6354_1-Constancy: [(27, 64), (26, 0), (23, 0), (22, 0), (18, 32), (16, 64), (11, 0), (9, 64), (1, 32)]
6354_1-ContextAliasing: []

.....
-----
Block: 3797_25
3797_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_25-Stack size: 20 
3797_25-Equals Mem:<< []>> 
3797_25-NonEquals Mem: << [<5,8>]>> 
3797_25-Equals Sto:<< []>> 
3797_25-NonEquals Sto: << []>> 
3797_25-Useless: []
3797_25-Constancy: [(19, 64), (18, 0), (15, 0), (14, 0), (10, 32), (8, 64), (3, 0)]
3797_25-ContextAliasing: []

.....
-----
Block: 3655_15
3655_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_15-Stack size: 21 
3655_15-Equals Mem:<< []>> 
3655_15-NonEquals Mem: << [<5,8>]>> 
3655_15-Equals Sto:<< []>> 
3655_15-NonEquals Sto: << []>> 
3655_15-Useless: []
3655_15-Constancy: [(20, 64), (19, 0), (16, 0), (15, 0), (11, 32), (9, 64), (4, 0), (2, 64)]
3655_15-ContextAliasing: []

.....
-----
Block: 6500_1
6500_1Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP11', 'SWAP8', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x190a', 'JUMP']>> 
6500_1-Stack size: 31 
6500_1-Equals Mem:<< []>> 
6500_1-NonEquals Mem: << [<6,2>]>> 
6500_1-Equals Sto:<< []>> 
6500_1-NonEquals Sto: << []>> 
6500_1-Useless: []
6500_1-Constancy: [(30, 64), (29, 0), (26, 0), (25, 0), (21, 32), (19, 64), (14, 0), (12, 64), (2, 32)]
6500_1-ContextAliasing: [(7, 20)]

.....
-----
Block: 3923_4
3923_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_4-Stack size: 31 
3923_4-Equals Mem:<< []>> 
3923_4-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_4-Equals Sto:<< []>> 
3923_4-NonEquals Sto: << []>> 
3923_4-Useless: []
3923_4-Constancy: [(30, 64), (29, 0), (26, 0), (25, 0), (21, 32), (19, 64), (14, 0), (12, 64), (4, 32)]
3923_4-ContextAliasing: []

.....
-----
Block: 4003_4
4003_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_4-Stack size: 32 
4003_4-Equals Mem:<< []>> 
4003_4-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_4-Equals Sto:<< []>> 
4003_4-NonEquals Sto: << []>> 
4003_4-Useless: []
4003_4-Constancy: [(31, 64), (30, 0), (27, 0), (26, 0), (22, 32), (20, 64), (15, 0), (13, 64), (5, 32)]
4003_4-ContextAliasing: []

.....
-----
Block: 6526_4
6526_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_4-Stack size: 29 
6526_4-Equals Mem:<< []>> 
6526_4-NonEquals Mem: << [<5,8>]>> 
6526_4-Equals Sto:<< []>> 
6526_4-NonEquals Sto: << []>> 
6526_4-Useless: []
6526_4-Constancy: [(28, 64), (27, 0), (24, 0), (23, 0), (19, 32), (17, 64), (12, 0), (10, 64), (2, 32)]
6526_4-ContextAliasing: []

.....
-----
Block: 3655_24
3655_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_24-Stack size: 35 
3655_24-Equals Mem:<< []>> 
3655_24-NonEquals Mem: << [<5,8>]>> 
3655_24-Equals Sto:<< []>> 
3655_24-NonEquals Sto: << []>> 
3655_24-Useless: []
3655_24-Constancy: [(34, 64), (33, 0), (30, 0), (29, 0), (25, 32), (23, 64), (18, 0), (16, 64), (8, 32), (6, 0), (4, 32), (2, 32)]
3655_24-ContextAliasing: [(5, 31)]

.....
-----
Block: 3655_14
3655_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_14-Stack size: 35 
3655_14-Equals Mem:<< []>> 
3655_14-NonEquals Mem: << [<5,8>]>> 
3655_14-Equals Sto:<< []>> 
3655_14-NonEquals Sto: << []>> 
3655_14-Useless: []
3655_14-Constancy: [(34, 64), (33, 0), (30, 0), (29, 0), (25, 32), (23, 64), (18, 0), (16, 64), (8, 32), (6, 0), (4, 32)]
3655_14-ContextAliasing: [(5, 31)]

.....
-----
Block: 6526_3
6526_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_3-Stack size: 25 
6526_3-Equals Mem:<< []>> 
6526_3-NonEquals Mem: << [<5,8>]>> 
6526_3-Equals Sto:<< []>> 
6526_3-NonEquals Sto: << []>> 
6526_3-Useless: []
6526_3-Constancy: [(24, 64), (23, 0), (20, 0), (19, 0), (15, 32), (13, 64), (8, 0), (6, 64), (0, 32)]
6526_3-ContextAliasing: []

.....
-----
Block: 3655_13
3655_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_13-Stack size: 24 
3655_13-Equals Mem:<< []>> 
3655_13-NonEquals Mem: << [<5,8>]>> 
3655_13-Equals Sto:<< []>> 
3655_13-NonEquals Sto: << []>> 
3655_13-Useless: []
3655_13-Constancy: [(23, 64), (22, 0), (19, 0), (18, 0), (14, 32), (12, 64), (7, 0), (5, 64)]
3655_13-ContextAliasing: []

.....
-----
Block: 3797_24
3797_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_24-Stack size: 16 
3797_24-Equals Mem:<< []>> 
3797_24-NonEquals Mem: << [<5,8>]>> 
3797_24-Equals Sto:<< []>> 
3797_24-NonEquals Sto: << []>> 
3797_24-Useless: []
3797_24-Constancy: [(15, 64), (14, 0), (11, 0), (10, 0), (6, 32), (4, 64)]
3797_24-ContextAliasing: []

.....
-----
Block: 5675_0
5675_0Instr:<<['DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x30b63632ba17', 'PUSH1 0xd1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5675_0-Stack size: 14 
5675_0-Equals Mem:<< []>> 
5675_0-NonEquals Mem: << [<6,1>, <12,1>, <17,1>, <22,1>, <29,1>]>> 
5675_0-Equals Sto:<< []>> 
5675_0-NonEquals Sto: << []>> 
5675_0-Useless: []
5675_0-Constancy: [(13, 64), (12, 0), (9, 0), (8, 0), (4, 32), (2, 64)]
5675_0-ContextAliasing: []

.....
-----
Block: 3797_23
3797_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_23-Stack size: 16 
3797_23-Equals Mem:<< []>> 
3797_23-NonEquals Mem: << [<5,8>]>> 
3797_23-Equals Sto:<< []>> 
3797_23-NonEquals Sto: << []>> 
3797_23-Useless: []
3797_23-Constancy: [(15, 64), (14, 0), (11, 0), (10, 0), (6, 32), (4, 64)]
3797_23-ContextAliasing: []

.....
-----
Block: 5757_0
5757_0Instr:<<['JUMPDEST', 'DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x18', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5757_0-Stack size: 14 
5757_0-Equals Mem:<< []>> 
5757_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5757_0-Equals Sto:<< []>> 
5757_0-NonEquals Sto: << []>> 
5757_0-Useless: []
5757_0-Constancy: [(13, 64), (12, 0), (9, 0), (8, 0), (4, 32), (2, 64)]
5757_0-ContextAliasing: []

.....
-----
Block: 5841_0
5841_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x2a3c20b6b7bab73a17', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5841_0-Stack size: 10 
5841_0-Equals Mem:<< []>> 
5841_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5841_0-Equals Sto:<< []>> 
5841_0-NonEquals Sto: << []>> 
5841_0-Useless: []
5841_0-Constancy: [(9, 64), (8, 0), (5, 0)]
5841_0-ContextAliasing: []

.....
-----
Block: 5928_0
5928_0Instr:<<['JUMPDEST', 'POP', 'DUP2', 'PUSH0', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0xff', 'PUSH1 0x40', 'PUSH0', 'KECCAK256', 'SLOAD', 'AND', 'PUSH2 0x10a0', 'JUMP']>> 
5928_0-Stack size: 11 
5928_0-Equals Mem:<< []>> 
5928_0-NonEquals Mem: << [<4,7>]>> 
5928_0-Equals Sto:<< []>> 
5928_0-NonEquals Sto: << []>> 
5928_0-Useless: []
5928_0-Constancy: [(10, 64), (9, 0), (6, 0)]
5928_0-ContextAliasing: []

.....
-----
Block: 5950_0
5950_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5950_0-Stack size: 10 
5950_0-Equals Mem:<< []>> 
5950_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5950_0-Equals Sto:<< []>> 
5950_0-NonEquals Sto: << []>> 
5950_0-Useless: []
5950_0-Constancy: [(9, 64), (8, 0), (5, 0)]
5950_0-ContextAliasing: []

.....
-----
Block: 6037_0
6037_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6037_0-Stack size: 10 
6037_0-Equals Mem:<< []>> 
6037_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6037_0-Equals Sto:<< []>> 
6037_0-NonEquals Sto: << []>> 
6037_0-Useless: []
6037_0-Constancy: [(9, 64), (8, 0), (5, 0)]
6037_0-ContextAliasing: []

.....
-----
Block: 6118_0
6118_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6118_0-Stack size: 10 
6118_0-Equals Mem:<< []>> 
6118_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6118_0-Equals Sto:<< []>> 
6118_0-NonEquals Sto: << []>> 
6118_0-Useless: []
6118_0-Constancy: [(9, 64), (8, 0), (5, 0)]
6118_0-ContextAliasing: []

.....
-----
Block: 3797_22
3797_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_22-Stack size: 8 
3797_22-Equals Mem:<< []>> 
3797_22-NonEquals Mem: << [<5,8>]>> 
3797_22-Equals Sto:<< []>> 
3797_22-NonEquals Sto: << []>> 
3797_22-Useless: []
3797_22-Constancy: [(7, 64), (6, 0), (3, 0)]
3797_22-ContextAliasing: []

.....
-----
Block: 3797_21
3797_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_21-Stack size: 8 
3797_21-Equals Mem:<< []>> 
3797_21-NonEquals Mem: << [<5,8>]>> 
3797_21-Equals Sto:<< []>> 
3797_21-NonEquals Sto: << []>> 
3797_21-Useless: []
3797_21-Constancy: [(7, 64), (6, 0), (3, 0), (2, 64)]
3797_21-ContextAliasing: []

.....
-----
Block: 2308
2308Instr:<<['JUMPDEST', 'PUSH1 0x64', 'SWAP1', 'PUSH1 0x20', 'DUP5', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x18', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x496e73756666696369656e74204554482062616c616e63650000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
2308-Stack size: 5 
2308-Equals Mem:<< []>> 
2308-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>]>> 
2308-Equals Sto:<< []>> 
2308-NonEquals Sto: << []>> 
2308-Useless: []
2308-Constancy: [(4, 64), (3, 0), (2, 64)]
2308-ContextAliasing: []

.....
-----
Block: 3716_3
3716_3Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_3-Stack size: 6 
3716_3-Equals Mem:<< []>> 
3716_3-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_3-Equals Sto:<< []>> 
3716_3-NonEquals Sto: << []>> 
3716_3-Useless: []
3716_3-Constancy: [(5, 64), (4, 0), (3, 64)]
3716_3-ContextAliasing: []

.....
-----
Block: 2394
2394Instr:<<['PUSH1 0x12', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0xff', 'DUP1', 'DUP4', 'AND', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'SWAP3', 'SWAP1', 'SWAP3', 'SHR', 'SWAP1', 'SWAP2', 'AND', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'RETURN']>> 
2394-Stack size: 6 
2394-Equals Mem:<< []>> 
2394-NonEquals Mem: << [<9,3>, <9,21>, <21,3>]>> 
2394-Equals Sto:<< []>> 
2394-NonEquals Sto: << []>> 
2394-Useless: []
2394-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
2394-ContextAliasing: []

.....
-----
Block: 2484
2484Instr:<<['JUMPDEST', 'SWAP3', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'PUSH1 0x20', 'MSTORE', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP1', 'RETURN']>> 
2484-Stack size: 9 
2484-Equals Mem:<< []>> 
2484-NonEquals Mem: << [<4,7>]>> 
2484-Equals Sto:<< []>> 
2484-NonEquals Sto: << []>> 
2484-Useless: []
2484-Constancy: [(8, 64), (7, 0), (4, 0), (2, 64)]
2484-ContextAliasing: []

.....
-----
Block: 3797_20
3797_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_20-Stack size: 10 
3797_20-Equals Mem:<< []>> 
3797_20-NonEquals Mem: << [<5,8>]>> 
3797_20-Equals Sto:<< []>> 
3797_20-NonEquals Sto: << []>> 
3797_20-Useless: []
3797_20-Constancy: [(9, 64), (8, 0), (5, 0), (3, 64)]
3797_20-ContextAliasing: []

.....
-----
Block: 3716_2
3716_2Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_2-Stack size: 9 
3716_2-Equals Mem:<< []>> 
3716_2-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_2-Equals Sto:<< []>> 
3716_2-NonEquals Sto: << []>> 
3716_2-Useless: []
3716_2-Constancy: [(8, 64), (7, 0), (4, 0), (2, 64)]
3716_2-ContextAliasing: []

.....
-----
Block: 2642
2642Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP4', 'MSTORE', 'PUSH1 0x11', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'REVERT']>> 
2642-Stack size: 3 
2642-Equals Mem:<< []>> 
2642-NonEquals Mem: << [<5,8>]>> 
2642-Equals Sto:<< []>> 
2642-NonEquals Sto: << []>> 
2642-Useless: []
2642-Constancy: [(2, 0)]
2642-ContextAliasing: []

.....
-----
Block: 2661
2661Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP6', 'MSTORE', 'PUSH1 0x11', 'DUP4', 'MSTORE', 'PUSH1 0x24', 'DUP6', 'REVERT']>> 
2661-Stack size: 5 
2661-Equals Mem:<< []>> 
2661-NonEquals Mem: << [<5,8>]>> 
2661-Equals Sto:<< []>> 
2661-NonEquals Sto: << []>> 
2661-Useless: []
2661-Constancy: [(4, 0)]
2661-ContextAliasing: []

.....
-----
Block: 2680
2680Instr:<<['JUMPDEST', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x496e76616c69642053657474696e6773', 'PUSH1 0x80', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
2680-Stack size: 6 
2680-Equals Mem:<< []>> 
2680-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
2680-Equals Sto:<< []>> 
2680-NonEquals Sto: << []>> 
2680-Useless: []
2680-Constancy: [(5, 0), (0, 64)]
2680-ContextAliasing: []

.....
-----
Block: 2744
2744Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP6', 'MSTORE', 'PUSH1 0x11', 'DUP5', 'MSTORE', 'PUSH1 0x24', 'DUP6', 'REVERT']>> 
2744-Stack size: 6 
2744-Equals Mem:<< []>> 
2744-NonEquals Mem: << [<5,8>]>> 
2744-Equals Sto:<< []>> 
2744-NonEquals Sto: << []>> 
2744-Useless: []
2744-Constancy: [(4, 0), (0, 64)]
2744-ContextAliasing: []

.....
-----
Block: 3716_1
3716_1Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_1-Stack size: 6 
3716_1-Equals Mem:<< []>> 
3716_1-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_1-Equals Sto:<< []>> 
3716_1-NonEquals Sto: << []>> 
3716_1-Useless: []
3716_1-Constancy: [(5, 64), (4, 0)]
3716_1-ContextAliasing: []

.....
-----
Block: 3716_0
3716_0Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716_0-Stack size: 4 
3716_0-Equals Mem:<< []>> 
3716_0-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716_0-Equals Sto:<< []>> 
3716_0-NonEquals Sto: << []>> 
3716_0-Useless: []
3716_0-Constancy: [(3, 64), (2, 0)]
3716_0-ContextAliasing: []

.....
-----
Block: 2867
2867Instr:<<['JUMPDEST', 'CALLER', 'DUP3', 'MSTORE', 'SWAP3', 'DUP7', 'MSTORE', 'DUP5', 'DUP2', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'DUP3', 'MSTORE', 'DUP7', 'MSTORE', 'DUP5', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x24', 'CALLDATALOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
2867-Stack size: 8 
2867-Equals Mem:<< [<3,18>, <6,20>]>> 
2867-NonEquals Mem: << [<3,6>, <3,20>, <6,18>, <18,20>]>> 
2867-Equals Sto:<< []>> 
2867-NonEquals Sto: << []>> 
2867-Useless: []
2867-Constancy: [(7, 64), (6, 32), (5, 64), (1, 0)]
2867-ContextAliasing: []

.....
-----
Block: 2922
2922Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2922-Stack size: 6 
2922-Equals Mem:<< []>> 
2922-NonEquals Mem: << [<5,2>]>> 
2922-Equals Sto:<< []>> 
2922-NonEquals Sto: << []>> 
2922-Useless: []
2922-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
2922-ContextAliasing: []

.....
-----
Block: 2974
2974Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
2974-Stack size: 11 
2974-Equals Mem:<< []>> 
2974-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
2974-Equals Sto:<< []>> 
2974-NonEquals Sto: << []>> 
2974-Useless: []
2974-Constancy: [(10, 64), (9, 0), (6, 32), (5, 64), (3, 64), (2, 0)]
2974-ContextAliasing: []

.....
-----
Block: 4262
4262Instr:<<['PUSH0', 'SWAP5', 'DUP3', 'DUP7', 'MSTORE', 'PUSH1 0x20', 'SWAP2', 'PUSH1 0x07', 'DUP4', 'MSTORE', 'PUSH1 0xff', 'SWAP1', 'PUSH1 0x40', 'SWAP2', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x16c1', 'JUMPI']>> 
4262-Stack size: 15 
4262-Equals Mem:<< []>> 
4262-NonEquals Mem: << [<4,9>]>> 
4262-Equals Sto:<< []>> 
4262-NonEquals Sto: << []>> 
4262-Useless: []
4262-Constancy: [(14, 64), (13, 32), (12, 64), (7, 64), (6, 0)]
4262-ContextAliasing: []

.....
-----
Block: 4298
4298Instr:<<['DUP7', 'DUP10', 'MSTORE', 'PUSH1 0x06', 'DUP6', 'MSTORE', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x1610', 'JUMPI']>> 
4298-Stack size: 19 
4298-Equals Mem:<< []>> 
4298-NonEquals Mem: << [<2,5>]>> 
4298-Equals Sto:<< []>> 
4298-NonEquals Sto: << []>> 
4298-Useless: []
4298-Constancy: [(18, 64), (17, 32), (16, 64), (11, 64), (10, 0), (8, 0), (4, 32), (2, 64)]
4298-ContextAliasing: []

.....
-----
Block: 4316
4316Instr:<<['JUMPDEST', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'GT', 'ISZERO', 'DUP1', 'PUSH2 0x15f8', 'JUMPI']>> 
4316-Stack size: 19 
4316-Equals Mem:<< []>> 
4316-NonEquals Mem: << [<3,6>]>> 
4316-Equals Sto:<< []>> 
4316-NonEquals Sto: << [<10,12>]>> 
4316-Useless: []
4316-Constancy: [(18, 64), (17, 32), (16, 64), (11, 64), (10, 0), (8, 0), (4, 32), (2, 64)]
4316-ContextAliasing: []

.....
-----
Block: 4367
4367Instr:<<['JUMPDEST', 'DUP6', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'PUSH2 0x1124', 'DUP6', 'DUP3', 'SLOAD', 'PUSH2 0x0ec8', 'JUMP']>> 
4367-Stack size: 19 
4367-Equals Mem:<< []>> 
4367-NonEquals Mem: << [<3,6>]>> 
4367-Equals Sto:<< []>> 
4367-NonEquals Sto: << []>> 
4367-Useless: []
4367-Constancy: [(18, 64), (17, 32), (16, 64), (11, 64), (10, 0), (8, 0), (4, 32), (2, 64)]
4367-ContextAliasing: []

.....
-----
Block: 4388
4388Instr:<<['JUMPDEST', 'SWAP1', 'SSTORE', 'DUP4', 'DUP7', 'DUP11', 'MSTORE', 'PUSH1 0x05', 'DUP7', 'MSTORE', 'DUP2', 'DUP5', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x1300', 'JUMPI']>> 
4388-Stack size: 21 
4388-Equals Mem:<< []>> 
4388-NonEquals Mem: << [<6,9>]>> 
4388-Equals Sto:<< [<2,14>]>> 
4388-NonEquals Sto: << []>> 
4388-Useless: []
4388-Constancy: [(20, 64), (19, 32), (18, 64), (13, 64), (12, 0), (10, 0), (6, 32), (4, 64)]
4388-ContextAliasing: []

.....
-----
Block: 3056
3056Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0ec8', 'JUMP']>> 
3056-Stack size: 10 
3056-Equals Mem:<< [<9,17>, <11,19>]>> 
3056-NonEquals Mem: << [<9,11>, <9,19>, <11,17>, <17,19>]>> 
3056-Equals Sto:<< []>> 
3056-NonEquals Sto: << []>> 
3056-Useless: []
3056-Constancy: [(9, 64), (8, 32), (7, 64), (2, 64), (1, 0)]
3056-ContextAliasing: []

.....
-----
Block: 3797_15
3797_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_15-Stack size: 7 
3797_15-Equals Mem:<< []>> 
3797_15-NonEquals Mem: << [<5,8>]>> 
3797_15-Equals Sto:<< []>> 
3797_15-NonEquals Sto: << []>> 
3797_15-Useless: []
3797_15-Constancy: [(6, 64), (5, 32), (4, 64)]
3797_15-ContextAliasing: []

.....
-----
Block: 3797_14
3797_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_14-Stack size: 20 
3797_14-Equals Mem:<< []>> 
3797_14-NonEquals Mem: << [<5,8>]>> 
3797_14-Equals Sto:<< []>> 
3797_14-NonEquals Sto: << []>> 
3797_14-Useless: []
3797_14-Constancy: [(19, 64), (18, 32), (17, 64), (12, 64), (11, 0), (5, 32), (3, 64)]
3797_14-ContextAliasing: []

.....
-----
Block: 4491
4491Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x12', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'PUSH2 0x12d9', 'JUMPI']>> 
4491-Stack size: 22 
4491-Equals Mem:<< []>> 
4491-NonEquals Mem: << [<8,15>]>> 
4491-Equals Sto:<< []>> 
4491-NonEquals Sto: << []>> 
4491-Useless: []
4491-Constancy: [(21, 64), (20, 32), (19, 64), (14, 64), (13, 0), (11, 0), (7, 32), (5, 64)]
4491-ContextAliasing: []

.....
-----
Block: 4568
4568Instr:<<['JUMPDEST', 'SWAP1', 'ADDRESS', 'DUP12', 'MSTORE', 'PUSH1 0x03', 'DUP8', 'MSTORE', 'DUP5', 'DUP12', 'KECCAK256', 'PUSH2 0x11ee', 'DUP4', 'DUP3', 'SLOAD', 'PUSH2 0x0ee9', 'JUMP']>> 
4568-Stack size: 21 
4568-Equals Mem:<< []>> 
4568-NonEquals Mem: << [<4,7>]>> 
4568-Equals Sto:<< []>> 
4568-NonEquals Sto: << []>> 
4568-Useless: []
4568-Constancy: [(20, 64), (19, 32), (18, 64), (13, 64), (12, 0), (10, 0), (6, 32), (4, 64)]
4568-ContextAliasing: []

.....
-----
Block: 4680
4680Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'DUP7', 'MSTORE', 'DUP3', 'DUP3', 'KECCAK256', 'SSTORE', 'PUSH2 0x1224', 'JUMP']>> 
4680-Stack size: 20 
4680-Equals Mem:<< []>> 
4680-NonEquals Mem: << [<3,6>]>> 
4680-Equals Sto:<< []>> 
4680-NonEquals Sto: << []>> 
4680-Useless: []
4680-Constancy: [(19, 64), (18, 32), (17, 64), (12, 64), (11, 0), (5, 32), (3, 64), (2, 64), (1, 0)]
4680-ContextAliasing: []

.....
-----
Block: 3797_17
3797_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_17-Stack size: 21 
3797_17-Equals Mem:<< []>> 
3797_17-NonEquals Mem: << [<5,8>]>> 
3797_17-Equals Sto:<< []>> 
3797_17-NonEquals Sto: << []>> 
3797_17-Useless: []
3797_17-Constancy: [(20, 64), (19, 32), (18, 64), (13, 64), (12, 0), (6, 32), (4, 64), (3, 64), (2, 0)]
3797_17-ContextAliasing: []

.....
-----
Block: 3797_16
3797_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_16-Stack size: 21 
3797_16-Equals Mem:<< []>> 
3797_16-NonEquals Mem: << [<5,8>]>> 
3797_16-Equals Sto:<< []>> 
3797_16-NonEquals Sto: << []>> 
3797_16-Useless: []
3797_16-Constancy: [(20, 64), (19, 32), (18, 64), (13, 64), (12, 0), (6, 32), (4, 64), (3, 64), (2, 0)]
3797_16-ContextAliasing: []

.....
-----
Block: 4696
4696Instr:<<['JUMPDEST', 'POP', 'DUP4', 'DUP8', 'MSTORE', 'PUSH1 0x08', 'DUP4', 'MSTORE', 'DUP1', 'DUP8', 'KECCAK256', 'SLOAD', 'DUP1', 'PUSH2 0x1283', 'JUMPI']>> 
4696-Stack size: 18 
4696-Equals Mem:<< []>> 
4696-NonEquals Mem: << [<4,7>]>> 
4696-Equals Sto:<< []>> 
4696-NonEquals Sto: << []>> 
4696-Useless: []
4696-Constancy: [(17, 64), (16, 32), (15, 64), (10, 64), (9, 0), (7, 0), (3, 32), (1, 64)]
4696-ContextAliasing: []

.....
-----
Block: 3797_13
3797_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_13-Stack size: 20 
3797_13-Equals Mem:<< []>> 
3797_13-NonEquals Mem: << [<5,8>]>> 
3797_13-Equals Sto:<< []>> 
3797_13-NonEquals Sto: << []>> 
3797_13-Useless: []
3797_13-Constancy: [(19, 64), (18, 32), (17, 64), (12, 64), (11, 0), (9, 0), (5, 32), (3, 64)]
3797_13-ContextAliasing: []

.....
-----
Block: 3797_12
3797_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_12-Stack size: 24 
3797_12-Equals Mem:<< []>> 
3797_12-NonEquals Mem: << [<5,8>]>> 
3797_12-Equals Sto:<< []>> 
3797_12-NonEquals Sto: << []>> 
3797_12-Useless: []
3797_12-Constancy: [(23, 64), (22, 32), (21, 64), (16, 64), (15, 0), (13, 0), (9, 32), (7, 64)]
3797_12-ContextAliasing: []

.....
-----
Block: 3797_11
3797_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_11-Stack size: 22 
3797_11-Equals Mem:<< []>> 
3797_11-NonEquals Mem: << [<5,8>]>> 
3797_11-Equals Sto:<< []>> 
3797_11-NonEquals Sto: << []>> 
3797_11-Useless: []
3797_11-Constancy: [(21, 64), (20, 32), (19, 64), (14, 64), (13, 0), (11, 0), (7, 32), (5, 64)]
3797_11-ContextAliasing: []

.....
-----
Block: 3797_10
3797_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_10-Stack size: 25 
3797_10-Equals Mem:<< []>> 
3797_10-NonEquals Mem: << [<5,8>]>> 
3797_10-Equals Sto:<< []>> 
3797_10-NonEquals Sto: << []>> 
3797_10-Useless: []
3797_10-Constancy: [(24, 64), (23, 32), (22, 64), (17, 64), (16, 0), (14, 0), (10, 32), (8, 64)]
3797_10-ContextAliasing: []

.....
-----
Block: 3797_9
3797_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_9-Stack size: 25 
3797_9-Equals Mem:<< []>> 
3797_9-NonEquals Mem: << [<5,8>]>> 
3797_9-Equals Sto:<< []>> 
3797_9-NonEquals Sto: << []>> 
3797_9-Useless: []
3797_9-Constancy: [(24, 64), (23, 32), (22, 64), (17, 64), (16, 0), (14, 0), (10, 32), (8, 64)]
3797_9-ContextAliasing: []

.....
-----
Block: 3797_8
3797_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_8-Stack size: 25 
3797_8-Equals Mem:<< []>> 
3797_8-NonEquals Mem: << [<5,8>]>> 
3797_8-Equals Sto:<< []>> 
3797_8-NonEquals Sto: << []>> 
3797_8-Useless: []
3797_8-Constancy: [(24, 64), (23, 32), (22, 64), (17, 64), (16, 0), (14, 0), (10, 32), (8, 64)]
3797_8-ContextAliasing: []

.....
-----
Block: 3797_7
3797_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_7-Stack size: 29 
3797_7-Equals Mem:<< []>> 
3797_7-NonEquals Mem: << [<5,8>]>> 
3797_7-Equals Sto:<< []>> 
3797_7-NonEquals Sto: << []>> 
3797_7-Useless: []
3797_7-Constancy: [(28, 64), (27, 32), (26, 64), (21, 64), (20, 0), (18, 0), (14, 32), (12, 64), (3, 32)]
3797_7-ContextAliasing: []

.....
-----
Block: 4840
4840Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x13', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'POP', 'PUSH2 0x11a2', 'JUMP']>> 
4840-Stack size: 22 
4840-Equals Mem:<< []>> 
4840-NonEquals Mem: << [<8,15>]>> 
4840-Equals Sto:<< []>> 
4840-NonEquals Sto: << []>> 
4840-Useless: []
4840-Constancy: [(21, 64), (20, 32), (19, 64), (14, 64), (13, 0), (11, 0), (7, 32), (5, 64)]
4840-ContextAliasing: []

.....
-----
Block: 3655_9
3655_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_9-Stack size: 24 
3655_9-Equals Mem:<< []>> 
3655_9-NonEquals Mem: << [<5,8>]>> 
3655_9-Equals Sto:<< []>> 
3655_9-NonEquals Sto: << []>> 
3655_9-Useless: []
3655_9-Constancy: [(23, 64), (22, 32), (21, 64), (16, 64), (15, 0), (13, 0), (9, 32), (7, 64)]
3655_9-ContextAliasing: []

.....
-----
Block: 3655_8
3655_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_8-Stack size: 24 
3655_8-Equals Mem:<< []>> 
3655_8-NonEquals Mem: << [<5,8>]>> 
3655_8-Equals Sto:<< []>> 
3655_8-NonEquals Sto: << []>> 
3655_8-Useless: []
3655_8-Constancy: [(23, 64), (22, 32), (21, 64), (16, 64), (15, 0), (13, 0), (9, 32), (7, 64)]
3655_8-ContextAliasing: []

.....
-----
Block: 3797_6
3797_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_6-Stack size: 22 
3797_6-Equals Mem:<< []>> 
3797_6-NonEquals Mem: << [<5,8>]>> 
3797_6-Equals Sto:<< []>> 
3797_6-NonEquals Sto: << []>> 
3797_6-Useless: []
3797_6-Constancy: [(21, 64), (20, 32), (19, 64), (14, 64), (13, 0), (11, 0), (7, 32), (5, 64)]
3797_6-ContextAliasing: []

.....
-----
Block: 6354_0
6354_0Instr:<<['SWAP2', 'DUP10', 'SWAP8', 'SWAP5', 'SWAP4', 'SWAP2', 'SWAP8', 'MLOAD', 'SWAP8', 'DUP9', 'SWAP6', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0xa4', 'DUP8', 'ADD', 'SWAP3', 'PUSH1 0x04', 'DUP9', 'ADD', 'MSTORE', 'PUSH0', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP5', 'SWAP4', 'PUSH0', 'SWAP1']>> 
6354_0-Stack size: 33 
6354_0-Equals Mem:<< []>> 
6354_0-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
6354_0-Equals Sto:<< []>> 
6354_0-NonEquals Sto: << []>> 
6354_0-Useless: []
6354_0-Constancy: [(32, 64), (31, 32), (30, 64), (25, 64), (24, 0), (22, 0), (18, 32), (16, 64), (9, 64), (1, 32)]
6354_0-ContextAliasing: []

.....
-----
Block: 5225
5225Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP9', 'SWAP1', 'MSTORE', 'PUSH1 0x3a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5225-Stack size: 21 
5225-Equals Mem:<< []>> 
5225-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>]>> 
5225-Equals Sto:<< []>> 
5225-NonEquals Sto: << []>> 
5225-Useless: []
5225-Constancy: [(20, 64), (19, 32), (18, 64), (13, 64), (12, 0), (10, 0), (6, 32), (4, 64)]
5225-ContextAliasing: []

.....
-----
Block: 3655_10
3655_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_10-Stack size: 26 
3655_10-Equals Mem:<< []>> 
3655_10-NonEquals Mem: << [<5,8>]>> 
3655_10-Equals Sto:<< []>> 
3655_10-NonEquals Sto: << []>> 
3655_10-Useless: []
3655_10-Constancy: [(25, 64), (24, 32), (23, 64), (18, 64), (17, 0), (15, 0), (11, 32), (9, 64)]
3655_10-ContextAliasing: []

.....
-----
Block: 5331
5331Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP14', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'DUP14', 'REVERT']>> 
5331-Stack size: 23 
5331-Equals Mem:<< []>> 
5331-NonEquals Mem: << [<5,8>]>> 
5331-Equals Sto:<< []>> 
5331-NonEquals Sto: << []>> 
5331-Useless: []
5331-Constancy: [(22, 64), (21, 32), (20, 64), (15, 64), (14, 0), (12, 0), (8, 32), (6, 64)]
5331-ContextAliasing: []

.....
-----
Block: 5356
5356Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP11', 'SWAP1', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5356-Stack size: 23 
5356-Equals Mem:<< []>> 
5356-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5356-Equals Sto:<< []>> 
5356-NonEquals Sto: << []>> 
5356-Useless: []
5356-Constancy: [(22, 64), (21, 32), (20, 64), (15, 64), (14, 0), (12, 0), (8, 32), (6, 64)]
5356-ContextAliasing: []

.....
-----
Block: 3797_18
3797_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_18-Stack size: 24 
3797_18-Equals Mem:<< []>> 
3797_18-NonEquals Mem: << [<5,8>]>> 
3797_18-Equals Sto:<< []>> 
3797_18-NonEquals Sto: << []>> 
3797_18-Useless: []
3797_18-Constancy: [(23, 64), (22, 32), (21, 64), (16, 64), (15, 0), (13, 0), (9, 32), (7, 64)]
3797_18-ContextAliasing: []

.....
-----
Block: 3797_5
3797_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_5-Stack size: 25 
3797_5-Equals Mem:<< []>> 
3797_5-NonEquals Mem: << [<5,8>]>> 
3797_5-Equals Sto:<< []>> 
3797_5-NonEquals Sto: << []>> 
3797_5-Useless: []
3797_5-Constancy: [(24, 64), (23, 32), (22, 64), (17, 64), (16, 0), (14, 0), (10, 32), (8, 64)]
3797_5-ContextAliasing: []

.....
-----
Block: 3655_7
3655_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_7-Stack size: 28 
3655_7-Equals Mem:<< []>> 
3655_7-NonEquals Mem: << [<5,8>]>> 
3655_7-Equals Sto:<< []>> 
3655_7-NonEquals Sto: << []>> 
3655_7-Useless: []
3655_7-Constancy: [(27, 64), (26, 32), (25, 64), (20, 64), (19, 0), (17, 0), (13, 32), (11, 64), (4, 96)]
3655_7-ContextAliasing: [(5, 24)]

.....
-----
Block: 3923_2
3923_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_2-Stack size: 27 
3923_2-Equals Mem:<< []>> 
3923_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_2-Equals Sto:<< []>> 
3923_2-NonEquals Sto: << []>> 
3923_2-Useless: []
3923_2-Constancy: [(26, 64), (25, 32), (24, 64), (19, 64), (18, 0), (16, 0), (12, 32), (10, 64)]
3923_2-ContextAliasing: []

.....
-----
Block: 4003_2
4003_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_2-Stack size: 28 
4003_2-Equals Mem:<< []>> 
4003_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_2-Equals Sto:<< []>> 
4003_2-NonEquals Sto: << []>> 
4003_2-Useless: []
4003_2-Constancy: [(27, 64), (26, 32), (25, 64), (20, 64), (19, 0), (17, 0), (13, 32), (11, 64)]
4003_2-ContextAliasing: []

.....
-----
Block: 3797_4
3797_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_4-Stack size: 25 
3797_4-Equals Mem:<< []>> 
3797_4-NonEquals Mem: << [<5,8>]>> 
3797_4-Equals Sto:<< []>> 
3797_4-NonEquals Sto: << []>> 
3797_4-Useless: []
3797_4-Constancy: [(24, 64), (23, 32), (22, 64), (17, 64), (16, 0), (14, 0), (10, 32), (8, 64)]
3797_4-ContextAliasing: []

.....
-----
Block: 3655_6
3655_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_6-Stack size: 26 
3655_6-Equals Mem:<< []>> 
3655_6-NonEquals Mem: << [<5,8>]>> 
3655_6-Equals Sto:<< []>> 
3655_6-NonEquals Sto: << []>> 
3655_6-Useless: []
3655_6-Constancy: [(25, 64), (24, 32), (23, 64), (18, 64), (17, 0), (15, 0), (11, 32), (9, 64), (2, 64)]
3655_6-ContextAliasing: []

.....
-----
Block: 6500_0
6500_0Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP11', 'SWAP8', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x190a', 'JUMP']>> 
6500_0-Stack size: 36 
6500_0-Equals Mem:<< []>> 
6500_0-NonEquals Mem: << [<6,2>]>> 
6500_0-Equals Sto:<< []>> 
6500_0-NonEquals Sto: << []>> 
6500_0-Useless: []
6500_0-Constancy: [(35, 64), (34, 32), (33, 64), (28, 64), (27, 0), (25, 0), (21, 32), (19, 64), (12, 64), (2, 32)]
6500_0-ContextAliasing: [(7, 25)]

.....
-----
Block: 3923_1
3923_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_1-Stack size: 36 
3923_1-Equals Mem:<< []>> 
3923_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_1-Equals Sto:<< []>> 
3923_1-NonEquals Sto: << []>> 
3923_1-Useless: []
3923_1-Constancy: [(35, 64), (34, 32), (33, 64), (28, 64), (27, 0), (25, 0), (21, 32), (19, 64), (12, 64), (4, 32)]
3923_1-ContextAliasing: []

.....
-----
Block: 4003_1
4003_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_1-Stack size: 37 
4003_1-Equals Mem:<< []>> 
4003_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_1-Equals Sto:<< []>> 
4003_1-NonEquals Sto: << []>> 
4003_1-Useless: []
4003_1-Constancy: [(36, 64), (35, 32), (34, 64), (29, 64), (28, 0), (26, 0), (22, 32), (20, 64), (13, 64), (5, 32)]
4003_1-ContextAliasing: []

.....
-----
Block: 6526_2
6526_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_2-Stack size: 34 
6526_2-Equals Mem:<< []>> 
6526_2-NonEquals Mem: << [<5,8>]>> 
6526_2-Equals Sto:<< []>> 
6526_2-NonEquals Sto: << []>> 
6526_2-Useless: []
6526_2-Constancy: [(33, 64), (32, 32), (31, 64), (26, 64), (25, 0), (23, 0), (19, 32), (17, 64), (10, 64), (2, 32)]
6526_2-ContextAliasing: []

.....
-----
Block: 3655_11
3655_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_11-Stack size: 40 
3655_11-Equals Mem:<< []>> 
3655_11-NonEquals Mem: << [<5,8>]>> 
3655_11-Equals Sto:<< []>> 
3655_11-NonEquals Sto: << []>> 
3655_11-Useless: []
3655_11-Constancy: [(39, 64), (38, 32), (37, 64), (32, 64), (31, 0), (29, 0), (25, 32), (23, 64), (16, 64), (8, 32), (6, 0), (4, 32), (2, 32)]
3655_11-ContextAliasing: [(5, 36)]

.....
-----
Block: 3655_5
3655_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_5-Stack size: 40 
3655_5-Equals Mem:<< []>> 
3655_5-NonEquals Mem: << [<5,8>]>> 
3655_5-Equals Sto:<< []>> 
3655_5-NonEquals Sto: << []>> 
3655_5-Useless: []
3655_5-Constancy: [(39, 64), (38, 32), (37, 64), (32, 64), (31, 0), (29, 0), (25, 32), (23, 64), (16, 64), (8, 32), (6, 0), (4, 32)]
3655_5-ContextAliasing: [(5, 36)]

.....
-----
Block: 6526_1
6526_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_1-Stack size: 30 
6526_1-Equals Mem:<< []>> 
6526_1-NonEquals Mem: << [<5,8>]>> 
6526_1-Equals Sto:<< []>> 
6526_1-NonEquals Sto: << []>> 
6526_1-Useless: []
6526_1-Constancy: [(29, 64), (28, 32), (27, 64), (22, 64), (21, 0), (19, 0), (15, 32), (13, 64), (6, 64), (0, 32)]
6526_1-ContextAliasing: []

.....
-----
Block: 3655_4
3655_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_4-Stack size: 29 
3655_4-Equals Mem:<< []>> 
3655_4-NonEquals Mem: << [<5,8>]>> 
3655_4-Equals Sto:<< []>> 
3655_4-NonEquals Sto: << []>> 
3655_4-Useless: []
3655_4-Constancy: [(28, 64), (27, 32), (26, 64), (21, 64), (20, 0), (18, 0), (14, 32), (12, 64), (5, 64)]
3655_4-ContextAliasing: []

.....
-----
Block: 3797_3
3797_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_3-Stack size: 25 
3797_3-Equals Mem:<< []>> 
3797_3-NonEquals Mem: << [<5,8>]>> 
3797_3-Equals Sto:<< []>> 
3797_3-NonEquals Sto: << []>> 
3797_3-Useless: []
3797_3-Constancy: [(24, 64), (23, 32), (22, 64), (17, 64), (16, 0), (14, 0), (10, 32), (8, 64)]
3797_3-ContextAliasing: []

.....
-----
Block: 6354
6354Instr:<<['SWAP2', 'DUP10', 'SWAP8', 'SWAP5', 'SWAP4', 'SWAP2', 'SWAP8', 'MLOAD', 'SWAP8', 'DUP9', 'SWAP6', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0xa4', 'DUP8', 'ADD', 'SWAP3', 'PUSH1 0x04', 'DUP9', 'ADD', 'MSTORE', 'PUSH0', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP5', 'SWAP4', 'PUSH0', 'SWAP1']>> 
6354-Stack size: 33 
6354-Equals Mem:<< []>> 
6354-NonEquals Mem: << [<15,7>, <15,34>, <23,7>, <23,34>, <28,7>, <28,34>, <33,7>, <33,34>, <37,7>, <37,34>, <7,34>]>> 
6354-Equals Sto:<< []>> 
6354-NonEquals Sto: << []>> 
6354-Useless: []
6354-Constancy: [(32, 64), (31, 32), (30, 64), (25, 64), (24, 0), (22, 0), (18, 32), (16, 64), (11, 0), (9, 64), (1, 32)]
6354-ContextAliasing: []

.....
-----
Block: 3797_2
3797_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_2-Stack size: 25 
3797_2-Equals Mem:<< []>> 
3797_2-NonEquals Mem: << [<5,8>]>> 
3797_2-Equals Sto:<< []>> 
3797_2-NonEquals Sto: << []>> 
3797_2-Useless: []
3797_2-Constancy: [(24, 64), (23, 32), (22, 64), (17, 64), (16, 0), (14, 0), (10, 32), (8, 64), (3, 0)]
3797_2-ContextAliasing: []

.....
-----
Block: 3655_3
3655_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_3-Stack size: 26 
3655_3-Equals Mem:<< []>> 
3655_3-NonEquals Mem: << [<5,8>]>> 
3655_3-Equals Sto:<< []>> 
3655_3-NonEquals Sto: << []>> 
3655_3-Useless: []
3655_3-Constancy: [(25, 64), (24, 32), (23, 64), (18, 64), (17, 0), (15, 0), (11, 32), (9, 64), (4, 0), (2, 64)]
3655_3-ContextAliasing: []

.....
-----
Block: 6500
6500Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP11', 'SWAP8', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x190a', 'JUMP']>> 
6500-Stack size: 36 
6500-Equals Mem:<< []>> 
6500-NonEquals Mem: << [<6,2>]>> 
6500-Equals Sto:<< []>> 
6500-NonEquals Sto: << []>> 
6500-Useless: []
6500-Constancy: [(35, 64), (34, 32), (33, 64), (28, 64), (27, 0), (25, 0), (21, 32), (19, 64), (14, 0), (12, 64), (2, 32)]
6500-ContextAliasing: [(7, 25)]

.....
-----
Block: 3923_0
3923_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923_0-Stack size: 36 
3923_0-Equals Mem:<< []>> 
3923_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923_0-Equals Sto:<< []>> 
3923_0-NonEquals Sto: << []>> 
3923_0-Useless: []
3923_0-Constancy: [(35, 64), (34, 32), (33, 64), (28, 64), (27, 0), (25, 0), (21, 32), (19, 64), (14, 0), (12, 64), (4, 32)]
3923_0-ContextAliasing: []

.....
-----
Block: 4003_0
4003_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003_0-Stack size: 37 
4003_0-Equals Mem:<< []>> 
4003_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003_0-Equals Sto:<< []>> 
4003_0-NonEquals Sto: << []>> 
4003_0-Useless: []
4003_0-Constancy: [(36, 64), (35, 32), (34, 64), (29, 64), (28, 0), (26, 0), (22, 32), (20, 64), (15, 0), (13, 64), (5, 32)]
4003_0-ContextAliasing: []

.....
-----
Block: 6526_0
6526_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526_0-Stack size: 34 
6526_0-Equals Mem:<< []>> 
6526_0-NonEquals Mem: << [<5,8>]>> 
6526_0-Equals Sto:<< []>> 
6526_0-NonEquals Sto: << []>> 
6526_0-Useless: []
6526_0-Constancy: [(33, 64), (32, 32), (31, 64), (26, 64), (25, 0), (23, 0), (19, 32), (17, 64), (12, 0), (10, 64), (2, 32)]
6526_0-ContextAliasing: []

.....
-----
Block: 3655_12
3655_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_12-Stack size: 40 
3655_12-Equals Mem:<< []>> 
3655_12-NonEquals Mem: << [<5,8>]>> 
3655_12-Equals Sto:<< []>> 
3655_12-NonEquals Sto: << []>> 
3655_12-Useless: []
3655_12-Constancy: [(39, 64), (38, 32), (37, 64), (32, 64), (31, 0), (29, 0), (25, 32), (23, 64), (18, 0), (16, 64), (8, 32), (6, 0), (4, 32), (2, 32)]
3655_12-ContextAliasing: [(5, 36)]

.....
-----
Block: 3655_2
3655_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_2-Stack size: 40 
3655_2-Equals Mem:<< []>> 
3655_2-NonEquals Mem: << [<5,8>]>> 
3655_2-Equals Sto:<< []>> 
3655_2-NonEquals Sto: << []>> 
3655_2-Useless: []
3655_2-Constancy: [(39, 64), (38, 32), (37, 64), (32, 64), (31, 0), (29, 0), (25, 32), (23, 64), (18, 0), (16, 64), (8, 32), (6, 0), (4, 32)]
3655_2-ContextAliasing: [(5, 36)]

.....
-----
Block: 6526
6526Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526-Stack size: 30 
6526-Equals Mem:<< []>> 
6526-NonEquals Mem: << [<5,8>]>> 
6526-Equals Sto:<< []>> 
6526-NonEquals Sto: << []>> 
6526-Useless: []
6526-Constancy: [(29, 64), (28, 32), (27, 64), (22, 64), (21, 0), (19, 0), (15, 32), (13, 64), (8, 0), (6, 64), (0, 32)]
6526-ContextAliasing: []

.....
-----
Block: 3655_1
3655_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_1-Stack size: 29 
3655_1-Equals Mem:<< []>> 
3655_1-NonEquals Mem: << [<5,8>]>> 
3655_1-Equals Sto:<< []>> 
3655_1-NonEquals Sto: << []>> 
3655_1-Useless: []
3655_1-Constancy: [(28, 64), (27, 32), (26, 64), (21, 64), (20, 0), (18, 0), (14, 32), (12, 64), (7, 0), (5, 64)]
3655_1-ContextAliasing: []

.....
-----
Block: 3797_1
3797_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_1-Stack size: 21 
3797_1-Equals Mem:<< []>> 
3797_1-NonEquals Mem: << [<5,8>]>> 
3797_1-Equals Sto:<< []>> 
3797_1-NonEquals Sto: << []>> 
3797_1-Useless: []
3797_1-Constancy: [(20, 64), (19, 32), (18, 64), (13, 64), (12, 0), (10, 0), (6, 32), (4, 64)]
3797_1-ContextAliasing: []

.....
-----
Block: 5675
5675Instr:<<['DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x30b63632ba17', 'PUSH1 0xd1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5675-Stack size: 19 
5675-Equals Mem:<< []>> 
5675-NonEquals Mem: << [<6,1>, <12,1>, <17,1>, <22,1>, <29,1>]>> 
5675-Equals Sto:<< []>> 
5675-NonEquals Sto: << []>> 
5675-Useless: []
5675-Constancy: [(18, 64), (17, 32), (16, 64), (11, 64), (10, 0), (8, 0), (4, 32), (2, 64)]
5675-ContextAliasing: []

.....
-----
Block: 3797_0
3797_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797_0-Stack size: 21 
3797_0-Equals Mem:<< []>> 
3797_0-NonEquals Mem: << [<5,8>]>> 
3797_0-Equals Sto:<< []>> 
3797_0-NonEquals Sto: << []>> 
3797_0-Useless: []
3797_0-Constancy: [(20, 64), (19, 32), (18, 64), (13, 64), (12, 0), (10, 0), (6, 32), (4, 64)]
3797_0-ContextAliasing: []

.....
-----
Block: 5757
5757Instr:<<['JUMPDEST', 'DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x18', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5757-Stack size: 19 
5757-Equals Mem:<< []>> 
5757-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
5757-Equals Sto:<< []>> 
5757-NonEquals Sto: << []>> 
5757-Useless: []
5757-Constancy: [(18, 64), (17, 32), (16, 64), (11, 64), (10, 0), (8, 0), (4, 32), (2, 64)]
5757-ContextAliasing: []

.....
-----
Block: 5841
5841Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x2a3c20b6b7bab73a17', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5841-Stack size: 15 
5841-Equals Mem:<< []>> 
5841-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5841-Equals Sto:<< []>> 
5841-NonEquals Sto: << []>> 
5841-Useless: []
5841-Constancy: [(14, 64), (13, 32), (12, 64), (7, 64), (6, 0)]
5841-ContextAliasing: []

.....
-----
Block: 5928
5928Instr:<<['JUMPDEST', 'POP', 'DUP2', 'PUSH0', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0xff', 'PUSH1 0x40', 'PUSH0', 'KECCAK256', 'SLOAD', 'AND', 'PUSH2 0x10a0', 'JUMP']>> 
5928-Stack size: 16 
5928-Equals Mem:<< []>> 
5928-NonEquals Mem: << [<4,7>]>> 
5928-Equals Sto:<< []>> 
5928-NonEquals Sto: << []>> 
5928-Useless: []
5928-Constancy: [(15, 64), (14, 32), (13, 64), (8, 64), (7, 0)]
5928-ContextAliasing: []

.....
-----
Block: 5950
5950Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5950-Stack size: 15 
5950-Equals Mem:<< []>> 
5950-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5950-Equals Sto:<< []>> 
5950-NonEquals Sto: << []>> 
5950-Useless: []
5950-Constancy: [(14, 64), (13, 32), (12, 64), (7, 64), (6, 0)]
5950-ContextAliasing: []

.....
-----
Block: 6037
6037Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6037-Stack size: 15 
6037-Equals Mem:<< []>> 
6037-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6037-Equals Sto:<< []>> 
6037-NonEquals Sto: << []>> 
6037-Useless: []
6037-Constancy: [(14, 64), (13, 32), (12, 64), (7, 64), (6, 0)]
6037-ContextAliasing: []

.....
-----
Block: 6118
6118Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6118-Stack size: 15 
6118-Equals Mem:<< []>> 
6118-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6118-Equals Sto:<< []>> 
6118-NonEquals Sto: << []>> 
6118-Useless: []
6118-Constancy: [(14, 64), (13, 32), (12, 64), (7, 64), (6, 0)]
6118-ContextAliasing: []

.....
-----
Block: 3136
3136Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x07', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
3136-Stack size: 11 
3136-Equals Mem:<< []>> 
3136-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
3136-Equals Sto:<< []>> 
3136-NonEquals Sto: << []>> 
3136-Useless: []
3136-Constancy: [(10, 64), (9, 0), (6, 32), (5, 64), (3, 64), (2, 0)]
3136-ContextAliasing: []

.....
-----
Block: 3655_0
3655_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655_0-Stack size: 9 
3655_0-Equals Mem:<< []>> 
3655_0-NonEquals Mem: << [<5,8>]>> 
3655_0-Equals Sto:<< []>> 
3655_0-NonEquals Sto: << []>> 
3655_0-Useless: []
3655_0-Constancy: [(8, 64), (7, 0), (4, 0)]
3655_0-ContextAliasing: []

.....
-----
Block: 4125
4125Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x086c2dc4ee840e6cae840e8c2f040e8dede40d0d2ced', 'PUSH1 0x53', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
4125-Stack size: 10 
4125-Equals Mem:<< []>> 
4125-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <24,2>]>> 
4125-Equals Sto:<< []>> 
4125-NonEquals Sto: << []>> 
4125-Useless: []
4125-Constancy: [(9, 64), (8, 0), (5, 0), (1, 64)]
4125-ContextAliasing: []

.....
-----
Block: 3797
3797Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797-Stack size: 14 
3797-Equals Mem:<< []>> 
3797-NonEquals Mem: << [<5,8>]>> 
3797-Equals Sto:<< []>> 
3797-NonEquals Sto: << []>> 
3797-Useless: []
3797-Constancy: [(13, 64), (12, 0), (9, 0), (5, 64)]
3797-ContextAliasing: []

.....
-----
Block: 3716
3716Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716-Stack size: 10 
3716-Equals Mem:<< []>> 
3716-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
3716-Equals Sto:<< []>> 
3716-NonEquals Sto: << []>> 
3716-Useless: []
3716-Constancy: [(9, 64), (8, 0), (5, 0), (1, 64)]
3716-ContextAliasing: []

.....
-----
Block: 3315
3315Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0c', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
3315-Stack size: 6 
3315-Equals Mem:<< []>> 
3315-NonEquals Mem: << [<8,5>]>> 
3315-Equals Sto:<< []>> 
3315-NonEquals Sto: << []>> 
3315-Useless: []
3315-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
3315-ContextAliasing: []

.....
-----
Block: 3923
3923Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923-Stack size: 11 
3923-Equals Mem:<< []>> 
3923-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923-Equals Sto:<< []>> 
3923-NonEquals Sto: << []>> 
3923-Useless: []
3923-Constancy: [(10, 64), (9, 0), (6, 0), (5, 32), (4, 64)]
3923-ContextAliasing: []

.....
-----
Block: 4003
4003Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003-Stack size: 12 
4003-Equals Mem:<< []>> 
4003-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003-Equals Sto:<< []>> 
4003-NonEquals Sto: << []>> 
4003-Useless: []
4003-Constancy: [(11, 64), (10, 0), (7, 0), (6, 32), (5, 64)]
4003-ContextAliasing: []

.....
-----
Block: 3402
3402Instr:<<['JUMPDEST', 'PUSH1 0x08', 'DUP3', 'MSTORE', 'PUSH8 0x14995d995c9cd85b', 'PUSH1 0xc2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0d85', 'JUMP']>> 
3402-Stack size: 8 
3402-Equals Mem:<< []>> 
3402-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
3402-Equals Sto:<< []>> 
3402-NonEquals Sto: << []>> 
3402-Useless: []
3402-Constancy: [(7, 64), (6, 0), (3, 0), (0, 64)]
3402-ContextAliasing: []

.....
-----
Block: 3655
3655Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655-Stack size: 10 
3655-Equals Mem:<< []>> 
3655-NonEquals Mem: << [<5,8>]>> 
3655-Equals Sto:<< []>> 
3655-NonEquals Sto: << []>> 
3655-Useless: []
3655-Constancy: [(9, 64), (8, 0), (5, 0), (2, 64)]
3655-ContextAliasing: []

.....
-----
Block: 2148
2148Instr:<<['PUSH2 0x0872', 'PUSH1 0x11', 'SLOAD', 'PUSH1 0x10', 'SLOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
2148-Stack size: 6 
2148-Equals Mem:<< []>> 
2148-NonEquals Mem: << []>> 
2148-Equals Sto:<< []>> 
2148-NonEquals Sto: << [<2,4>]>> 
2148-Useless: []
2148-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
2148-ContextAliasing: []

.....
-----
Block: 2813
2813Instr:<<['JUMPDEST', 'PUSH1 0xff', 'DUP1', 'NOT', 'PUSH1 0x0a', 'SLOAD', 'AND', 'SWAP2', 'AND', 'OR', 'PUSH1 0x0a', 'SSTORE', 'DUP1', 'RETURN']>> 
2813-Stack size: 3 
2813-Equals Mem:<< []>> 
2813-NonEquals Mem: << []>> 
2813-Equals Sto:<< [<5,11>]>> 
2813-NonEquals Sto: << []>> 
2813-Useless: []
2813-Constancy: [(2, 64), (1, 0)]
2813-ContextAliasing: []

.....
-----
Block: 4665
4665Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SSTORE', 'PUSH2 0x1248', 'PUSH1 0x09', 'SLOAD', 'TIMESTAMP', 'PUSH2 0x0ee9', 'JUMP']>> 
4665-Stack size: 20 
4665-Equals Mem:<< []>> 
4665-NonEquals Mem: << []>> 
4665-Equals Sto:<< []>> 
4665-NonEquals Sto: << [<2,5>]>> 
4665-Useless: []
4665-Constancy: [(19, 64), (18, 32), (17, 64), (12, 64), (11, 0), (5, 32), (3, 64), (2, 64), (1, 0)]
4665-ContextAliasing: []

.....
-----
Block: 4880
4880Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'SWAP1', 'DUP2', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'DUP3', 'SSTORE', 'PUSH1 0x10', 'SLOAD', 'DUP12', 'SWAP1', 'DUP1', 'PUSH2 0x1571', 'JUMPI']>> 
4880-Stack size: 19 
4880-Equals Mem:<< []>> 
4880-NonEquals Mem: << []>> 
4880-Equals Sto:<< [<3,16>]>> 
4880-NonEquals Sto: << [<3,18>, <16,18>]>> 
4880-Useless: []
4880-Constancy: [(18, 64), (17, 32), (16, 64), (11, 64), (10, 0), (8, 0), (4, 32), (2, 64)]
4880-ContextAliasing: []

.....
-----
Block: 5624
5624Instr:<<['JUMPDEST', 'POP', 'PUSH2 0x1608', 'PUSH1 0x16', 'SLOAD', 'PUSH1 0x15', 'SLOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
5624-Stack size: 20 
5624-Equals Mem:<< []>> 
5624-NonEquals Mem: << []>> 
5624-Equals Sto:<< []>> 
5624-NonEquals Sto: << [<4,6>]>> 
5624-Useless: []
5624-Constancy: [(19, 64), (18, 32), (17, 64), (12, 64), (11, 0), (9, 0), (5, 32), (3, 64)]
5624-ContextAliasing: []

.....
-----
Block: 5624_0
5624_0Instr:<<['JUMPDEST', 'POP', 'PUSH2 0x1608', 'PUSH1 0x16', 'SLOAD', 'PUSH1 0x15', 'SLOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
5624_0-Stack size: 15 
5624_0-Equals Mem:<< []>> 
5624_0-NonEquals Mem: << []>> 
5624_0-Equals Sto:<< []>> 
5624_0-NonEquals Sto: << [<4,6>]>> 
5624_0-Useless: []
5624_0-Constancy: [(14, 64), (13, 0), (10, 0), (9, 0), (5, 32), (3, 64)]
5624_0-ContextAliasing: []

.....
-----
Block: 4880_0
4880_0Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'SWAP1', 'DUP2', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'DUP3', 'SSTORE', 'PUSH1 0x10', 'SLOAD', 'DUP12', 'SWAP1', 'DUP1', 'PUSH2 0x1571', 'JUMPI']>> 
4880_0-Stack size: 14 
4880_0-Equals Mem:<< []>> 
4880_0-NonEquals Mem: << []>> 
4880_0-Equals Sto:<< [<3,16>]>> 
4880_0-NonEquals Sto: << [<3,18>, <16,18>]>> 
4880_0-Useless: []
4880_0-Constancy: [(13, 64), (12, 0), (9, 0), (8, 0), (4, 32), (2, 64)]
4880_0-ContextAliasing: []

.....
-----
Block: 4665_0
4665_0Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SSTORE', 'PUSH2 0x1248', 'PUSH1 0x09', 'SLOAD', 'TIMESTAMP', 'PUSH2 0x0ee9', 'JUMP']>> 
4665_0-Stack size: 15 
4665_0-Equals Mem:<< []>> 
4665_0-NonEquals Mem: << []>> 
4665_0-Equals Sto:<< []>> 
4665_0-NonEquals Sto: << [<2,5>]>> 
4665_0-Useless: []
4665_0-Constancy: [(14, 64), (13, 0), (10, 0), (5, 32), (3, 64), (2, 64), (1, 0)]
4665_0-ContextAliasing: []

.....
-----
Block: 5624_1
5624_1Instr:<<['JUMPDEST', 'POP', 'PUSH2 0x1608', 'PUSH1 0x16', 'SLOAD', 'PUSH1 0x15', 'SLOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
5624_1-Stack size: 17 
5624_1-Equals Mem:<< []>> 
5624_1-NonEquals Mem: << []>> 
5624_1-Equals Sto:<< []>> 
5624_1-NonEquals Sto: << [<4,6>]>> 
5624_1-Useless: []
5624_1-Constancy: [(16, 64), (15, 0), (12, 0), (11, 32), (10, 64), (9, 0), (5, 32), (3, 64)]
5624_1-ContextAliasing: []

.....
-----
Block: 4880_1
4880_1Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'SWAP1', 'DUP2', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'DUP3', 'SSTORE', 'PUSH1 0x10', 'SLOAD', 'DUP12', 'SWAP1', 'DUP1', 'PUSH2 0x1571', 'JUMPI']>> 
4880_1-Stack size: 16 
4880_1-Equals Mem:<< []>> 
4880_1-NonEquals Mem: << []>> 
4880_1-Equals Sto:<< [<3,16>]>> 
4880_1-NonEquals Sto: << [<3,18>, <16,18>]>> 
4880_1-Useless: []
4880_1-Constancy: [(15, 64), (14, 0), (11, 0), (10, 32), (9, 64), (8, 0), (4, 32), (2, 64)]
4880_1-ContextAliasing: []

.....
-----
Block: 4665_1
4665_1Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SSTORE', 'PUSH2 0x1248', 'PUSH1 0x09', 'SLOAD', 'TIMESTAMP', 'PUSH2 0x0ee9', 'JUMP']>> 
4665_1-Stack size: 17 
4665_1-Equals Mem:<< []>> 
4665_1-NonEquals Mem: << []>> 
4665_1-Equals Sto:<< []>> 
4665_1-NonEquals Sto: << [<2,5>]>> 
4665_1-Useless: []
4665_1-Constancy: [(16, 64), (15, 0), (12, 0), (11, 32), (10, 64), (5, 32), (3, 64), (2, 64), (1, 0)]
4665_1-ContextAliasing: []

.....
-----
Block: 3651_8
3651_8Instr:<<['PUSH1 0x40', 'MSTORE', 'JUMP']>> 
3651_8-Stack size: 9 
3651_8-Equals Mem:<< []>> 
3651_8-NonEquals Mem: << []>> 
3651_8-Equals Sto:<< []>> 
3651_8-NonEquals Sto: << []>> 
3651_8-Useless: [1]
3651_8-Constancy: [(8, 64), (7, 0), (4, 0)]
3651_8-ContextAliasing: []

.....
-----
Block: 5204_1
5204_1Instr:<<['JUMPDEST', 'DUP2', 'MSTORE', 'DUP13', 'DUP10', 'RETURNDATASIZE', 'SWAP3', 'ADD', 'RETURNDATACOPY']>> 
5204_1-Stack size: 21 
5204_1-Equals Mem:<< []>> 
5204_1-NonEquals Mem: << []>> 
5204_1-Equals Sto:<< []>> 
5204_1-NonEquals Sto: << []>> 
5204_1-Useless: [2, 8]
5204_1-Constancy: [(20, 64), (19, 0), (16, 0), (15, 32), (14, 64), (13, 0), (9, 32), (7, 64)]
5204_1-ContextAliasing: []

.....
-----
Block: 5204_0
5204_0Instr:<<['JUMPDEST', 'DUP2', 'MSTORE', 'DUP13', 'DUP10', 'RETURNDATASIZE', 'SWAP3', 'ADD', 'RETURNDATACOPY']>> 
5204_0-Stack size: 19 
5204_0-Equals Mem:<< []>> 
5204_0-NonEquals Mem: << []>> 
5204_0-Equals Sto:<< []>> 
5204_0-NonEquals Sto: << []>> 
5204_0-Useless: [2, 8]
5204_0-Constancy: [(18, 64), (17, 0), (14, 0), (13, 0), (9, 32), (7, 64)]
5204_0-ContextAliasing: []

.....
-----
Block: 5204
5204Instr:<<['JUMPDEST', 'DUP2', 'MSTORE', 'DUP13', 'DUP10', 'RETURNDATASIZE', 'SWAP3', 'ADD', 'RETURNDATACOPY']>> 
5204-Stack size: 24 
5204-Equals Mem:<< []>> 
5204-NonEquals Mem: << []>> 
5204-Equals Sto:<< []>> 
5204-NonEquals Sto: << []>> 
5204-Useless: [2, 8]
5204-Constancy: [(23, 64), (22, 32), (21, 64), (16, 64), (15, 0), (13, 0), (9, 32), (7, 64)]
5204-ContextAliasing: []

.....
-----
Block: 3651_0
3651_0Instr:<<['PUSH1 0x40', 'MSTORE', 'JUMP']>> 
3651_0-Stack size: 9 
3651_0-Equals Mem:<< []>> 
3651_0-NonEquals Mem: << []>> 
3651_0-Equals Sto:<< []>> 
3651_0-NonEquals Sto: << []>> 
3651_0-Useless: [1]
3651_0-Constancy: [(8, 64), (7, 0), (4, 0)]
3651_0-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.4545418450143188s

*************************************************************
FILERES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Address;1;1;0;0;0;0;0.002393356990069151
FILERES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal;415;1202;73;426;307;28;1.117645521007944


Aux path: /tmp/0x00//ethir_af83959cf50d494c8d40f981ce47c062
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 484
484Instr:<<['POP', 'PUSH1 0x10', 'SLOAD', 'PUSH1 0x11', 'SLOAD', 'DUP3', 'MLOAD', 'SWAP2', 'DUP3', 'MSTORE', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'RETURN']>> 
484-Stack size: 2 
484-Equals Mem:<< []>> 
484-NonEquals Mem: << [<9,6>, <9,13>, <13,6>]>> 
484-Equals Sto:<< []>> 
484-NonEquals Sto: << [<2,4>]>> 
484-Useless: []
484-Constancy: [(1, 64), (0, 0)]
484-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,9>, <9,13>, <6,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,9>, <9,13>, <6,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
Storage order: [(('16', 'sload0'), 1), (('17', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2), (('s(5)', 's(7)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 1), (0, 2)]
Memory dep simplified: [(1, 2), (0, 1)]
********************IT*********************
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_484 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 524
524Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0f', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
524-Stack size: 2 
524-Equals Mem:<< []>> 
524-NonEquals Mem: << [<8,5>]>> 
524-Equals Sto:<< []>> 
524-NonEquals Sto: << []>> 
524-Useless: []
524-Constancy: [(1, 0), (0, 64)]
524-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('15', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x0f SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0xf SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_524_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_524_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_524;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;524;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x0f SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0xf SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.039985722047276795;0;0;2100;2100;0

Block: 559
559Instr:<<['PUSH1 0x01', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
559-Stack size: 2 
559-Equals Mem:<< []>> 
559-NonEquals Mem: << [<13,3>]>> 
559-Equals Sto:<< []>> 
559-NonEquals Sto: << []>> 
559-Useless: []
559-Constancy: [(1, 0), (0, 64)]
559-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('1', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x01 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x1 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Reversal_559_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_559_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2124

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 32

Initial number of instructions: 17
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_559;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;559;2;False;True;True;PUSH1 0x01 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x1 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2145;22;17;2124;32;10;21;-10;7;True;False;False;False;0.11013392696622759;2;0;2100;2100;4

Block: 646
646Instr:<<['JUMPDEST', 'AND', 'DUP5', 'MSTORE', 'PUSH1 0x07', 'PUSH1 0x20', 'MSTORE', 'DUP4', 'KECCAK256', 'SWAP1', 'PUSH1 0xff', 'DUP1', 'NOT', 'DUP4', 'SLOAD', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'AND', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
646-Stack size: 6 
646-Equals Mem:<< []>> 
646-NonEquals Mem: << [<3,6>]>> 
646-Equals Sto:<< [<14,22>]>> 
646-NonEquals Sto: << []>> 
646-Useless: []
646-Constancy: [(5, 0), (2, 64)]
646-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [<13,21>], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('s(7)', 's(8)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(0)', 's(6)', 'mstore'), 2), (('32', '7', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP5 MSTORE PUSH1 0x07 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP

Optimized sequence (basic block per line):
JUMPDEST AND DUP5 MSTORE PUSH1 0x07 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP

Optimized code stored in /tmp/0x00/Reversal_646_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_646_statistics.csv

Estimated initial gas: 5096
Estimated gas optimized: 5096

Estimated initial size in bytes: 27
Estimated size optimized in bytes: 27

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_646;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;646;2;True;False;False;JUMPDEST AND DUP5 MSTORE PUSH1 0x07 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP;JUMPDEST AND DUP5 MSTORE PUSH1 0x07 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP;5096;27;24;5096;27;24;0;0;0;True;True;False;False;2.170048892032355;1;2;5000;5000;0

Block: 794
794Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
794-Stack size: 7 
794-Equals Mem:<< []>> 
794-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
794-Equals Sto:<< []>> 
794-NonEquals Sto: << []>> 
794-Useless: []
794-Constancy: [(6, 64), (5, 0), (0, 64)]
794-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '38', 'mstore'), 2), (('s(9)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(11)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_794_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_794_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 94

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_794;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;794;2;True;False;False;JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT;JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT;94;82;33;94;82;33;0;0;0;True;False;False;False;2.1181697360007092;2;4;0;0;4

Block: 899
899Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0b', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
899-Stack size: 6 
899-Equals Mem:<< []>> 
899-NonEquals Mem: << [<8,5>]>> 
899-Equals Sto:<< []>> 
899-NonEquals Sto: << []>> 
899-Useless: []
899-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
899-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('11', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x0b SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0xb SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_899_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_899_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_899;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;899;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x0b SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0xb SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.03653538698563352;0;0;2100;2100;0

Block: 951
951Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x08', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
951-Stack size: 10 
951-Equals Mem:<< []>> 
951-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
951-Equals Sto:<< []>> 
951-NonEquals Sto: << []>> 
951-Useless: []
951-Constancy: [(9, 64), (8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
951-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(3)', 's(2)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(7)', 'mstore'), 2), (('s(0)', '8', 'mstore'), 2), (('s(3)', 's(2)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(6)', 's(10)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x08 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND DUP2 PUSH1 0x8 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Reversal_951_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_951_statistics.csv

Estimated initial gas: 2164
Estimated gas optimized: 2161

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 15

Initial number of instructions: 15
Final number of instructions: 14

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_951;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;951;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x08 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST AND DUP2 PUSH1 0x8 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN;2164;16;15;2161;15;14;3;1;1;True;False;False;False;0.3109677499742247;0;2;2100;2100;0

Block: 986
986Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0xff', 'PUSH1 0x0a', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
986-Stack size: 6 
986-Equals Mem:<< []>> 
986-NonEquals Mem: << [<12,7>]>> 
986-Equals Sto:<< []>> 
986-NonEquals Sto: << []>> 
986-Useless: []
986-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
986-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('10', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(7)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
MEJORADO: /tmp/gasol_2cb191017fc54a828279b952e3ca2ed0/jsons/isolated_block_0_0_input.json --- (6, 5)
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0xff PUSH1 0x0a SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
MLOAD PUSH1 0xa SLOAD PUSH1 0xff AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Reversal_986_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_986_statistics.csv

Estimated initial gas: 2136
Estimated gas optimized: 2130

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_986;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;986;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0xff PUSH1 0x0a SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;MLOAD PUSH1 0xa SLOAD PUSH1 0xff AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2136;17;14;2130;15;12;6;2;2;True;False;False;False;0.08964740595547482;0;0;2100;2100;0

Block: 1043
1043Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'DUP5', 'MSTORE', 'SWAP2', 'DUP7', 'MSTORE', 'DUP4', 'DUP4', 'KECCAK256', 'SWAP2', 'AND', 'DUP3', 'MSTORE', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1043-Stack size: 8 
1043-Equals Mem:<< [<10,20>, <13,22>]>> 
1043-NonEquals Mem: << [<10,26>, <10,13>, <10,22>, <10,29>, <13,26>, <13,20>, <13,29>, <20,26>, <20,22>, <20,29>, <22,26>, <22,29>, <29,16>, <29,23>, <29,26>, <16,26>, <23,26>]>> 
1043-Equals Sto:<< []>> 
1043-NonEquals Sto: << []>> 
1043-Useless: []
1043-Constancy: [(7, 64), (6, 32), (5, 64), (4, 64), (3, 0)]
1043-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<9,19>, <12,21>], 'memory_deps_noneqs': [<9,25>, <9,12>, <9,21>, <9,28>, <12,25>, <12,19>, <12,28>, <19,25>, <19,21>, <19,28>, <21,25>, <21,28>, <15,28>, <22,28>, <25,28>, <15,25>, <22,25>]}
{'memory_deps_eqs': [<9,19>, <12,21>], 'memory_deps_noneqs': [<9,25>, <9,12>, <9,21>, <9,28>, <12,25>, <12,19>, <12,28>, <19,25>, <19,21>, <19,28>, <21,25>, <21,28>, <15,28>, <22,28>, <25,28>, <15,25>, <22,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(3)', 's(2)', 'keccak2560'), 2), (('s(3)', 's(2)', 'keccak2561'), 2), (('s(16)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(3)', 's(8)', 'mstore'), 2), (('s(0)', 's(4)', 'mstore'), 2), (('s(3)', 's(2)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(17)', 'mstore'), 2)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND DUP5 MSTORE SWAP2 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP6 SWAP1 DUP4 MSTORE MSTORE KECCAK256 SWAP1 MLOAD DUP1 SWAP2 DUP4 SWAP4 POP SWAP1 SWAP1 SWAP1 POP SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_1043_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1043_statistics.csv

Estimated initial gas: 2239
Estimated gas optimized: 2191

Estimated initial size in bytes: 34
Estimated size optimized in bytes: 45

Initial number of instructions: 31
Final number of instructions: 25

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1043;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1043;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND DUP5 MSTORE SWAP2 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP6 SWAP1 DUP4 MSTORE MSTORE KECCAK256 SWAP1 MLOAD DUP1 SWAP2 DUP4 SWAP4 POP SWAP1 SWAP1 SWAP1 POP SLOAD DUP2 MSTORE RETURN;2239;34;31;2191;45;25;48;-11;6;True;False;False;False;2.1375959750148468;4;4;2100;2100;4

Block: 1244
1244Instr:<<['DUP1', 'DUP4', 'DUP6', 'PUSH2 0x050c', 'SWAP4', 'DUP11', 'SHL', 'DUP6', 'ADD', 'ADD', 'MLOAD', 'AND', 'DUP10', 'MSTORE', 'PUSH1 0x07', 'DUP6', 'MSTORE', 'PUSH2 0x0507', 'DUP8', 'DUP8', 'DUP12', 'KECCAK256', 'SWAP1', 'PUSH1 0xff', 'DUP1', 'NOT', 'DUP4', 'SLOAD', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'AND', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
1244-Stack size: 9 
1244-Equals Mem:<< []>> 
1244-NonEquals Mem: << [<13,10>, <13,16>, <16,10>, <10,21>]>> 
1244-Equals Sto:<< [<27,35>]>> 
1244-NonEquals Sto: << []>> 
1244-Useless: []
1244-Constancy: [(8, 64), (7, 0), (4, 64), (3, 32)]
1244-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>, <13,16>, <10,16>, <10,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>, <13,16>, <10,16>, <10,21>], 'storage_deps_eqs': [<27,35>], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('s(15)', 's(16)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('s(11)', 'mload0'), 1), (('s(0)', 's(10)', 'mstore'), 2), (('s(4)', '7', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(2, 3), (1, 3)]
Memory dep simplified: [(2, 3), (1, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP1 DUP4 DUP6 PUSH2 0x050c SWAP4 DUP11 SHL DUP6 ADD ADD MLOAD AND DUP10 MSTORE PUSH1 0x07 DUP6 MSTORE PUSH2 0x0507 DUP8 DUP8 DUP12 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP

Optimized sequence (basic block per line):
DUP1 DUP4 DUP6 PUSH2 0x050c SWAP4 DUP11 SHL DUP6 ADD ADD MLOAD AND DUP10 MSTORE PUSH1 0x07 DUP6 MSTORE PUSH2 0x0507 DUP8 DUP8 DUP12 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP

Optimized code stored in /tmp/0x00/Reversal_1244_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1244_statistics.csv

Estimated initial gas: 5137
Estimated gas optimized: 5137

Estimated initial size in bytes: 43
Estimated size optimized in bytes: 43

Initial number of instructions: 37
Final number of instructions: 37

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1244;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1244;2;True;False;False;DUP1 DUP4 DUP6 PUSH2 0x050c SWAP4 DUP11 SHL DUP6 ADD ADD MLOAD AND DUP10 MSTORE PUSH1 0x07 DUP6 MSTORE PUSH2 0x0507 DUP8 DUP8 DUP12 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP;DUP1 DUP4 DUP6 PUSH2 0x050c SWAP4 DUP11 SHL DUP6 ADD ADD MLOAD AND DUP10 MSTORE PUSH1 0x07 DUP6 MSTORE PUSH2 0x0507 DUP8 DUP8 DUP12 KECCAK256 SWAP1 PUSH1 0xff DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP;5137;43;37;5137;43;37;0;0;0;True;True;False;False;2.4694742650026456;1;2;5000;5000;0

Block: 1340
1340Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP6', 'MSTORE', 'PUSH1 0x41', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP5', 'REVERT']>> 
1340-Stack size: 6 
1340-Equals Mem:<< []>> 
1340-NonEquals Mem: << [<5,8>]>> 
1340-Equals Sto:<< []>> 
1340-NonEquals Sto: << []>> 
1340-Useless: []
1340-Constancy: [(5, 64), (4, 0), (1, 64)]
1340-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('s(4)', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x41 PUSH1 0x24 SWAP2 MSTORE DUP5 REVERT

Optimized code stored in /tmp/0x00/Reversal_1340_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1340_statistics.csv

Estimated initial gas: 31
Estimated gas optimized: 25

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 44

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1340;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1340;2;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT;JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x41 PUSH1 0x24 SWAP2 MSTORE DUP5 REVERT;31;19;12;25;44;10;6;-25;2;True;False;False;False;0.03527474601287395;1;0;0;0;2

Block: 1382
1382Instr:<<['PUSH1 0x13', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0xff', 'DUP1', 'DUP4', 'AND', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'SWAP3', 'SWAP1', 'SWAP3', 'SHR', 'SWAP1', 'SWAP2', 'AND', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'RETURN']>> 
1382-Stack size: 6 
1382-Equals Mem:<< []>> 
1382-NonEquals Mem: << [<9,3>, <9,21>, <21,3>]>> 
1382-Equals Sto:<< []>> 
1382-NonEquals Sto: << []>> 
1382-Useless: []
1382-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1382-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,9>, <9,21>, <3,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,9>, <9,21>, <3,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('19', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2), (('s(6)', 's(8)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x13 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN

Optimized sequence (basic block per line):
PUSH1 0x13 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Reversal_1382_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1382_statistics.csv

Estimated initial gas: 2169
Estimated gas optimized: 2169

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 30

Initial number of instructions: 25
Final number of instructions: 25

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1382;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1382;2;True;True;False;PUSH1 0x13 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN;PUSH1 0x13 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN;2169;30;25;2169;30;25;0;0;0;True;False;False;False;2.106772899045609;0;0;2100;2100;0

Block: 1613
1613Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1613-Stack size: 3 
1613-Equals Mem:<< []>> 
1613-NonEquals Mem: << [<4,1>]>> 
1613-Equals Sto:<< []>> 
1613-NonEquals Sto: << []>> 
1613-Useless: []
1613-Constancy: [(0, 64), (1, 32)]
1613-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(1)', '1', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_1613_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1613_statistics.csv

Estimated initial gas: 13
Estimated gas optimized: 13

Estimated initial size in bytes: 7
Estimated size optimized in bytes: 7

Initial number of instructions: 6
Final number of instructions: 6

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1613;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1613;2;False;True;True;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;13;7;6;13;7;6;0;0;0;True;False;False;False;0.009017075994051993;0;0;0;0;0

Block: 1639
1639Instr:<<['PUSH1 0x02', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1639-Stack size: 6 
1639-Equals Mem:<< []>> 
1639-NonEquals Mem: << [<13,3>]>> 
1639-Equals Sto:<< []>> 
1639-NonEquals Sto: << []>> 
1639-Useless: []
1639-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1639-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('2', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x02 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x2 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Reversal_1639_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1639_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2124

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 32

Initial number of instructions: 17
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1639;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1639;2;False;True;True;PUSH1 0x02 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x2 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2145;22;17;2124;32;10;21;-10;7;True;False;False;False;0.11033973505254835;2;0;2100;2100;4

Block: 1698
1698Instr:<<['JUMPDEST', 'CALLER', 'DUP3', 'MSTORE', 'SWAP3', 'DUP7', 'MSTORE', 'DUP5', 'DUP2', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'DUP3', 'MSTORE', 'DUP7', 'MSTORE', 'DUP5', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x24', 'CALLDATALOAD', 'SWAP1', 'PUSH2 0x0ec8', 'JUMP']>> 
1698-Stack size: 8 
1698-Equals Mem:<< [<3,18>, <6,20>]>> 
1698-NonEquals Mem: << [<3,6>, <3,20>, <6,18>, <18,20>]>> 
1698-Equals Sto:<< []>> 
1698-NonEquals Sto: << []>> 
1698-Useless: []
1698-Constancy: [(7, 64), (6, 32), (5, 64), (1, 0)]
1698-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<2,17>, <5,19>], 'memory_deps_noneqs': [<2,5>, <2,19>, <5,17>, <17,19>]}
{'memory_deps_eqs': [<2,17>, <5,19>], 'memory_deps_noneqs': [<2,5>, <2,19>, <5,17>, <17,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(5)', 's(1)', 'keccak2560'), 2), (('s(5)', 's(1)', 'keccak2561'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(5)', 's(11)', 'mstore'), 2), (('s(0)', 's(3)', 'mstore'), 2), (('s(5)', 's(1)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ec8 JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ec8 JUMP

Optimized code stored in /tmp/0x00/Reversal_1698_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1698_statistics.csv

Estimated initial gas: 2243
Estimated gas optimized: 2243

Estimated initial size in bytes: 36
Estimated size optimized in bytes: 36

Initial number of instructions: 30
Final number of instructions: 30

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1698;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1698;2;True;False;False;JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ec8 JUMP;JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ec8 JUMP;2243;36;30;2243;36;30;0;0;0;True;False;False;False;2.115319475007709;4;2;2100;2100;4

Block: 1774
1774Instr:<<['JUMPDEST', 'PUSH1 0x08', 'DUP3', 'MSTORE', 'PUSH8 0x149155915494d053', 'PUSH1 0xc2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0d85', 'JUMP']>> 
1774-Stack size: 8 
1774-Equals Mem:<< []>> 
1774-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
1774-Equals Sto:<< []>> 
1774-NonEquals Sto: << []>> 
1774-Useless: []
1774-Constancy: [(7, 64), (6, 0), (3, 0), (0, 64)]
1774-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('194', '1482059835059261523', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '8', 'mstore'), 2), (('s(9)', '37212161450389553451652406942534445850041104440911583844572926944475120402432', 'mstore'), 2), (('s(2)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x08 DUP3 MSTORE PUSH8 0x149155915494d053 PUSH1 0xc2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0d85 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x524556455253414c000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x8 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xd85 JUMP

Optimized code stored in /tmp/0x00/Reversal_1774_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1774_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 31
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1774;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1774;2;False;True;True;JUMPDEST PUSH1 0x08 DUP3 MSTORE PUSH8 0x149155915494d053 PUSH1 0xc2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0d85 JUMP;JUMPDEST PUSH32 0x524556455253414c000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x8 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xd85 JUMP;57;31;18;51;52;16;6;-21;2;True;False;False;False;0.27224678499624133;1;0;0;0;2

Block: 3461
3461Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
3461-Stack size: 10 
3461-Equals Mem:<< []>> 
3461-NonEquals Mem: << [<4,6>, <4,12>, <12,6>]>> 
3461-Equals Sto:<< []>> 
3461-NonEquals Sto: << []>> 
3461-Useless: []
3461-Constancy: [(9, 64), (8, 0), (5, 0)]
3461-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,5>, <3,11>, <5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,5>, <3,11>, <5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', '32', 'mstore'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0

Optimized sequence (basic block per line):
JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x20 DUP4 MSTORE DUP2 DUP2 DUP5 ADD MSTORE SWAP4 SWAP3 PUSH1 0x0

Optimized code stored in /tmp/0x00/Reversal_3461_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3461_statistics.csv

Estimated initial gas: 48
Estimated gas optimized: 43

Estimated initial size in bytes: 18
Estimated size optimized in bytes: 18

Initial number of instructions: 17
Final number of instructions: 15

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3461;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3461;2;False;True;True;JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0;JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH1 0x20 DUP4 MSTORE DUP2 DUP2 DUP5 ADD MSTORE SWAP4 SWAP3 PUSH1 0x0;48;18;17;43;18;15;5;0;2;True;False;False;False;1.7147189099923708;0;0;0;0;0

Block: 3512
3512Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0d97', 'JUMP']>> 
3512-Stack size: 13 
3512-Equals Mem:<< []>> 
3512-NonEquals Mem: << [<12,6>]>> 
3512-Equals Sto:<< []>> 
3512-NonEquals Sto: << []>> 
3512-Useless: []
3512-Constancy: [(12, 64), (11, 0), (8, 0), (5, 32)]
3512-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0d97 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0d97 JUMP

Optimized code stored in /tmp/0x00/Reversal_3512_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3512_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 54

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 20

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3512;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3512;2;False;True;True;JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0d97 JUMP;JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0d97 JUMP;54;20;17;54;20;17;0;0;0;True;False;False;False;0.97399021795718;0;0;0;0;0

Block: 1824
1824Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1824-Stack size: 6 
1824-Equals Mem:<< []>> 
1824-NonEquals Mem: << [<13,3>]>> 
1824-Equals Sto:<< []>> 
1824-NonEquals Sto: << []>> 
1824-Useless: []
1824-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1824-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_1824_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1824_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2121

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 30

Initial number of instructions: 17
Final number of instructions: 9

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1824;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1824;2;False;True;True;SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2145;21;17;2121;30;9;24;-9;8;True;False;False;False;0.08789666899247095;2;0;2100;2100;4

Block: 1864
1864Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1864-Stack size: 6 
1864-Equals Mem:<< []>> 
1864-NonEquals Mem: << [<8,5>]>> 
1864-Equals Sto:<< []>> 
1864-NonEquals Sto: << []>> 
1864-Useless: []
1864-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1864-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('14', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x0e SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0xe SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_1864_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1864_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1864;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1864;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x0e SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0xe SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.036316243989858776;0;0;2100;2100;0

Block: 1919
1919Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1919-Stack size: 11 
1919-Equals Mem:<< []>> 
1919-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
1919-Equals Sto:<< []>> 
1919-NonEquals Sto: << []>> 
1919-Useless: []
1919-Constancy: [(10, 64), (9, 0), (6, 32), (5, 64), (3, 64), (2, 0)]
1919-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(4)', 's(3)', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(8)', 'mstore'), 2), (('s(0)', '5', 'mstore'), 2), (('s(4)', 's(3)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(14)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x05 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND PUSH1 0x5 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Reversal_1919_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1919_statistics.csv

Estimated initial gas: 2173
Estimated gas optimized: 2170

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 18

Initial number of instructions: 18
Final number of instructions: 17

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1919;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1919;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x05 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;JUMPDEST AND PUSH1 0x5 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN;2173;19;18;2170;18;17;3;1;1;True;False;False;False;0.6076422990299761;0;2;2100;2100;0

Block: 1957
1957Instr:<<['PUSH1 0x14', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1957-Stack size: 6 
1957-Equals Mem:<< []>> 
1957-NonEquals Mem: << [<13,3>]>> 
1957-Equals Sto:<< []>> 
1957-NonEquals Sto: << []>> 
1957-Useless: []
1957-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
1957-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('20', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x14 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x14 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Reversal_1957_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_1957_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2124

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 32

Initial number of instructions: 17
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_1957;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;1957;2;False;True;True;PUSH1 0x14 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x14 SLOAD AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2145;22;17;2124;32;10;21;-10;7;True;False;False;False;0.10786995897069573;2;0;2100;2100;4

Block: 2113
2113Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2113-Stack size: 10 
2113-Equals Mem:<< []>> 
2113-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
2113-Equals Sto:<< []>> 
2113-NonEquals Sto: << []>> 
2113-Useless: []
2113-Constancy: [(9, 64), (8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
2113-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(3)', 's(2)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(7)', 'mstore'), 2), (('s(0)', '3', 'mstore'), 2), (('s(3)', 's(2)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(6)', 's(10)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x03 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND DUP2 PUSH1 0x3 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Reversal_2113_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2113_statistics.csv

Estimated initial gas: 2164
Estimated gas optimized: 2161

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 15

Initial number of instructions: 15
Final number of instructions: 14

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2113;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2113;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x03 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST AND DUP2 PUSH1 0x3 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN;2164;16;15;2161;15;14;3;1;1;True;False;False;False;0.341377887991257;0;2;2100;2100;0

Block: 2162
2162Instr:<<['JUMPDEST', 'SWAP1', 'ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'DUP3', 'KECCAK256', 'SLOAD', 'DUP2', 'DUP2', 'GT', 'ISZERO', 'PUSH2 0x036c', 'JUMPI']>> 
2162-Stack size: 7 
2162-Equals Mem:<< []>> 
2162-NonEquals Mem: << [<4,7>]>> 
2162-Equals Sto:<< []>> 
2162-NonEquals Sto: << []>> 
2162-Useless: []
2162-Constancy: [(6, 64), (5, 0), (2, 0), (1, 64)]
2162-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(1)', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(11)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('s(0)', 's(1)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 ADDRESS DUP4 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE DUP3 KECCAK256 SLOAD DUP2 DUP2 GT ISZERO PUSH2 0x036c JUMPI

Optimized sequence (basic block per line):
JUMPDEST SWAP1 ADDRESS DUP4 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE DUP3 KECCAK256 SLOAD DUP2 DUP2 GT ISZERO PUSH2 0x036c JUMPI

Optimized code stored in /tmp/0x00/Reversal_2162_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2162_statistics.csv

Estimated initial gas: 2179
Estimated gas optimized: 2179

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 21

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2162;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2162;2;False;True;True;JUMPDEST SWAP1 ADDRESS DUP4 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE DUP3 KECCAK256 SLOAD DUP2 DUP2 GT ISZERO PUSH2 0x036c JUMPI;JUMPDEST SWAP1 ADDRESS DUP4 MSTORE PUSH1 0x03 PUSH1 0x20 MSTORE DUP3 KECCAK256 SLOAD DUP2 DUP2 GT ISZERO PUSH2 0x036c JUMPI;2179;21;17;2179;21;17;0;0;0;True;False;False;False;0.499691228964366;0;2;2100;2100;0

Block: 2308
2308Instr:<<['JUMPDEST', 'PUSH1 0x64', 'SWAP1', 'PUSH1 0x20', 'DUP5', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x18', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x496e73756666696369656e74204554482062616c616e63650000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
2308-Stack size: 5 
2308-Equals Mem:<< []>> 
2308-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>]>> 
2308-Equals Sto:<< []>> 
2308-NonEquals Sto: << []>> 
2308-Useless: []
2308-Constancy: [(4, 64), (3, 0), (2, 64)]
2308-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '24', 'mstore'), 2), (('s(11)', '33213987989631693067883787898814167535533089720074211946551924484277108998144', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496e73756666696369656e74204554482062616c616e63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP3 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 PUSH1 0x64 SWAP4 DUP4 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP4 ADD MSTORE DUP2 PUSH32 0x496e73756666696369656e74204554482062616c616e63650000000000000000 SWAP2 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_2308_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2308_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 67

Estimated initial size in bytes: 67
Estimated size optimized in bytes: 93

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2308;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2308;2;True;True;False;JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496e73756666696369656e74204554482062616c616e63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST DUP3 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x44 PUSH1 0x20 PUSH1 0x64 SWAP4 DUP4 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP4 ADD MSTORE DUP2 PUSH32 0x496e73756666696369656e74204554482062616c616e63650000000000000000 SWAP2 ADD MSTORE REVERT;73;67;26;67;93;24;6;-26;2;True;False;False;False;2.108092352980748;1;3;0;0;2

Block: 2394
2394Instr:<<['PUSH1 0x12', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0xff', 'DUP1', 'DUP4', 'AND', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'SWAP3', 'SWAP1', 'SWAP3', 'SHR', 'SWAP1', 'SWAP2', 'AND', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'RETURN']>> 
2394-Stack size: 6 
2394-Equals Mem:<< []>> 
2394-NonEquals Mem: << [<9,3>, <9,21>, <21,3>]>> 
2394-Equals Sto:<< []>> 
2394-NonEquals Sto: << []>> 
2394-Useless: []
2394-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
2394-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,9>, <9,21>, <3,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,9>, <9,21>, <3,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('18', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2), (('s(6)', 's(8)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x12 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN

Optimized sequence (basic block per line):
PUSH1 0x12 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN

Optimized code stored in /tmp/0x00/Reversal_2394_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2394_statistics.csv

Estimated initial gas: 2169
Estimated gas optimized: 2169

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 30

Initial number of instructions: 25
Final number of instructions: 25

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2394;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2394;2;True;True;False;PUSH1 0x12 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN;PUSH1 0x12 SLOAD SWAP1 MLOAD PUSH1 0xff DUP1 DUP4 AND DUP3 MSTORE PUSH1 0x08 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN;2169;30;25;2169;30;25;0;0;0;True;False;False;False;2.109150529024191;0;0;2100;2100;0

Block: 2484
2484Instr:<<['JUMPDEST', 'SWAP3', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'PUSH1 0x20', 'MSTORE', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP1', 'RETURN']>> 
2484-Stack size: 9 
2484-Equals Mem:<< []>> 
2484-NonEquals Mem: << [<4,7>]>> 
2484-Equals Sto:<< []>> 
2484-NonEquals Sto: << []>> 
2484-Useless: []
2484-Constancy: [(8, 64), (7, 0), (4, 0), (2, 64)]
2484-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(2)', 'keccak2560'), 2), (('s(6)', 's(4)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(5)', 'mstore'), 2), (('32', '8', 'mstore'), 2), (('s(0)', 's(2)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP3 AND DUP4 MSTORE PUSH1 0x08 PUSH1 0x20 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST SWAP3 AND DUP4 MSTORE PUSH1 0x08 PUSH1 0x20 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN

Optimized code stored in /tmp/0x00/Reversal_2484_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2484_statistics.csv

Estimated initial gas: 5058
Estimated gas optimized: 5058

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2484;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2484;2;False;True;True;JUMPDEST SWAP3 AND DUP4 MSTORE PUSH1 0x08 PUSH1 0x20 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN;JUMPDEST SWAP3 AND DUP4 MSTORE PUSH1 0x08 PUSH1 0x20 MSTORE DUP3 KECCAK256 SSTORE DUP1 RETURN;5058;15;13;5058;15;13;0;0;0;True;False;False;False;0.07976242701988667;0;2;5000;5000;0

Block: 2642
2642Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP4', 'MSTORE', 'PUSH1 0x11', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'REVERT']>> 
2642-Stack size: 3 
2642-Equals Mem:<< []>> 
2642-NonEquals Mem: << [<5,8>]>> 
2642-Equals Sto:<< []>> 
2642-NonEquals Sto: << []>> 
2642-Useless: []
2642-Constancy: [(2, 0)]
2642-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('s(2)', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP4 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x11 PUSH1 0x24 SWAP2 MSTORE DUP3 REVERT

Optimized code stored in /tmp/0x00/Reversal_2642_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2642_statistics.csv

Estimated initial gas: 31
Estimated gas optimized: 25

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 44

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2642;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2642;2;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP4 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT;JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x11 PUSH1 0x24 SWAP2 MSTORE DUP3 REVERT;31;19;12;25;44;10;6;-25;2;True;False;False;False;0.025712758011650294;1;0;0;0;2

Block: 2661
2661Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP6', 'MSTORE', 'PUSH1 0x11', 'DUP4', 'MSTORE', 'PUSH1 0x24', 'DUP6', 'REVERT']>> 
2661-Stack size: 5 
2661-Equals Mem:<< []>> 
2661-NonEquals Mem: << [<5,8>]>> 
2661-Equals Sto:<< []>> 
2661-NonEquals Sto: << []>> 
2661-Useless: []
2661-Constancy: [(4, 0)]
2661-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('s(2)', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP6 MSTORE PUSH1 0x11 DUP4 MSTORE PUSH1 0x24 DUP6 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x11 DUP4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x24 DUP6 REVERT

Optimized code stored in /tmp/0x00/Reversal_2661_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2661_statistics.csv

Estimated initial gas: 31
Estimated gas optimized: 25

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 44

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2661;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2661;2;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP6 MSTORE PUSH1 0x11 DUP4 MSTORE PUSH1 0x24 DUP6 REVERT;JUMPDEST PUSH1 0x11 DUP4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x24 DUP6 REVERT;31;19;12;25;44;10;6;-25;2;True;False;False;False;0.03132913901936263;1;0;0;0;2

Block: 2680
2680Instr:<<['JUMPDEST', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0x10', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x496e76616c69642053657474696e6773', 'PUSH1 0x80', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
2680-Stack size: 6 
2680-Equals Mem:<< []>> 
2680-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
2680-Equals Sto:<< []>> 
2680-NonEquals Sto: << []>> 
2680-Useless: []
2680-Constancy: [(5, 0), (0, 64)]
2680-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,5>, <0,10>, <0,15>, <0,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,5>, <0,10>, <0,15>, <0,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('128', '97607197389754475646585280476071487347', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '16', 'mstore'), 2), (('s(12)', '33214008156304899519196214583500982521067973758951761719251099926011924447232', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496e76616c69642053657474696e6773 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x20 DUP6 PUSH1 0x64 SWAP4 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496e76616c69642053657474696e677300000000000000000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_2680_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2680_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 64

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 92

Initial number of instructions: 27
Final number of instructions: 23

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2680;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2680;2;False;True;True;JUMPDEST MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496e76616c69642053657474696e6773 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 PUSH1 0x20 DUP6 PUSH1 0x64 SWAP4 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496e76616c69642053657474696e677300000000000000000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE REVERT;76;53;27;64;92;23;12;-39;4;True;False;False;False;1.6221967180026695;2;3;0;0;4

Block: 2744
2744Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP6', 'MSTORE', 'PUSH1 0x11', 'DUP5', 'MSTORE', 'PUSH1 0x24', 'DUP6', 'REVERT']>> 
2744-Stack size: 6 
2744-Equals Mem:<< []>> 
2744-NonEquals Mem: << [<5,8>]>> 
2744-Equals Sto:<< []>> 
2744-NonEquals Sto: << []>> 
2744-Useless: []
2744-Constancy: [(4, 0), (0, 64)]
2744-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('s(1)', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP6 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x11 DUP5 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x24 DUP6 REVERT

Optimized code stored in /tmp/0x00/Reversal_2744_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2744_statistics.csv

Estimated initial gas: 31
Estimated gas optimized: 25

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 44

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2744;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2744;2;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP6 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP6 REVERT;JUMPDEST PUSH1 0x11 DUP5 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x24 DUP6 REVERT;31;19;12;25;44;10;6;-25;2;True;False;False;False;0.03161130502121523;1;0;0;0;2

Block: 2867
2867Instr:<<['JUMPDEST', 'CALLER', 'DUP3', 'MSTORE', 'SWAP3', 'DUP7', 'MSTORE', 'DUP5', 'DUP2', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'DUP3', 'MSTORE', 'DUP7', 'MSTORE', 'DUP5', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x24', 'CALLDATALOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
2867-Stack size: 8 
2867-Equals Mem:<< [<3,18>, <6,20>]>> 
2867-NonEquals Mem: << [<3,6>, <3,20>, <6,18>, <18,20>]>> 
2867-Equals Sto:<< []>> 
2867-NonEquals Sto: << []>> 
2867-Useless: []
2867-Constancy: [(7, 64), (6, 32), (5, 64), (1, 0)]
2867-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<2,17>, <5,19>], 'memory_deps_noneqs': [<2,5>, <2,19>, <5,17>, <17,19>]}
{'memory_deps_eqs': [<2,17>, <5,19>], 'memory_deps_noneqs': [<2,5>, <2,19>, <5,17>, <17,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(5)', 's(1)', 'keccak2560'), 2), (('s(5)', 's(1)', 'keccak2561'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(5)', 's(11)', 'mstore'), 2), (('s(0)', 's(3)', 'mstore'), 2), (('s(5)', 's(1)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ee9 JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ee9 JUMP

Optimized code stored in /tmp/0x00/Reversal_2867_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2867_statistics.csv

Estimated initial gas: 2243
Estimated gas optimized: 2243

Estimated initial size in bytes: 36
Estimated size optimized in bytes: 36

Initial number of instructions: 30
Final number of instructions: 30

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2867;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2867;2;True;False;False;JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ee9 JUMP;JUMPDEST CALLER DUP3 MSTORE SWAP3 DUP7 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND DUP3 MSTORE DUP7 MSTORE DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x0ee9 JUMP;2243;36;30;2243;36;30;0;0;0;True;False;False;False;2.11106829700293;4;2;2100;2100;4

Block: 2922
2922Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2922-Stack size: 6 
2922-Equals Mem:<< []>> 
2922-NonEquals Mem: << [<5,2>]>> 
2922-Equals Sto:<< []>> 
2922-NonEquals Sto: << []>> 
2922-Useless: []
2922-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
2922-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', '9', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_2922_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2922_statistics.csv

Estimated initial gas: 18
Estimated gas optimized: 18

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 7
Final number of instructions: 7

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2922;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2922;2;False;True;True;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;18;9;7;18;9;7;0;0;0;True;False;False;False;0.01622486498672515;0;0;0;0;0

Block: 2974
2974Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
2974-Stack size: 11 
2974-Equals Mem:<< []>> 
2974-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
2974-Equals Sto:<< []>> 
2974-NonEquals Sto: << []>> 
2974-Useless: []
2974-Constancy: [(10, 64), (9, 0), (6, 32), (5, 64), (3, 64), (2, 0)]
2974-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(4)', 's(3)', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(8)', 'mstore'), 2), (('s(0)', '6', 'mstore'), 2), (('s(4)', 's(3)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(14)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x06 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND PUSH1 0x6 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Reversal_2974_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_2974_statistics.csv

Estimated initial gas: 2173
Estimated gas optimized: 2170

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 18

Initial number of instructions: 18
Final number of instructions: 17

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2974;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;2974;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x06 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;JUMPDEST AND PUSH1 0x6 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN;2173;19;18;2170;18;17;3;1;1;True;False;False;False;0.6077717620064504;0;2;2100;2100;0

Block: 4262
4262Instr:<<['PUSH0', 'SWAP5', 'DUP3', 'DUP7', 'MSTORE', 'PUSH1 0x20', 'SWAP2', 'PUSH1 0x07', 'DUP4', 'MSTORE', 'PUSH1 0xff', 'SWAP1', 'PUSH1 0x40', 'SWAP2', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x16c1', 'JUMPI']>> 
4262-Stack size: 10 
4262-Equals Mem:<< []>> 
4262-NonEquals Mem: << [<4,9>]>> 
4262-Equals Sto:<< []>> 
4262-NonEquals Sto: << []>> 
4262-Useless: []
4262-Constancy: []
4262-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(13)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(3)', 'mstore'), 2), (('32', '7', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4262 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4298
4298Instr:<<['DUP7', 'DUP10', 'MSTORE', 'PUSH1 0x06', 'DUP6', 'MSTORE', 'DUP1', 'DUP4', 'DUP11', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x1610', 'JUMPI']>> 
4298-Stack size: 14 
4298-Equals Mem:<< []>> 
4298-NonEquals Mem: << [<2,5>]>> 
4298-Equals Sto:<< []>> 
4298-NonEquals Sto: << []>> 
4298-Useless: []
4298-Constancy: [(4, 32), (8, 0), (2, 64)]
4298-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(6)', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(2)', 'mstore'), 2), (('s(4)', '6', 'mstore'), 2), (('s(0)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP7 DUP10 MSTORE PUSH1 0x06 DUP6 MSTORE DUP1 DUP4 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0x1610 JUMPI

Optimized sequence (basic block per line):
DUP7 DUP10 MSTORE PUSH1 0x06 DUP6 MSTORE DUP1 DUP4 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0x1610 JUMPI

Optimized code stored in /tmp/0x00/Reversal_4298_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4298_statistics.csv

Estimated initial gas: 2176
Estimated gas optimized: 2176

Estimated initial size in bytes: 18
Estimated size optimized in bytes: 18

Initial number of instructions: 15
Final number of instructions: 15

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4298;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4298;2;False;True;True;DUP7 DUP10 MSTORE PUSH1 0x06 DUP6 MSTORE DUP1 DUP4 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0x1610 JUMPI;DUP7 DUP10 MSTORE PUSH1 0x06 DUP6 MSTORE DUP1 DUP4 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0x1610 JUMPI;2176;18;15;2176;18;15;0;0;0;True;False;False;False;0.8648237310117111;0;2;2100;2100;0

Block: 4316
4316Instr:<<['JUMPDEST', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'GT', 'ISZERO', 'DUP1', 'PUSH2 0x15f8', 'JUMPI']>> 
4316-Stack size: 14 
4316-Equals Mem:<< []>> 
4316-NonEquals Mem: << [<3,6>]>> 
4316-Equals Sto:<< []>> 
4316-NonEquals Sto: << [<10,12>]>> 
4316-Useless: []
4316-Constancy: [(4, 32), (8, 0), (2, 64)]
4316-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<9,11>]}
Storage order: [(('s(0)', 's(6)', 'keccak2560'), 2), (('s(14)', 'sload0'), 1), (('13', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(22)', 'mstore'), 2), (('s(4)', '3', 'mstore'), 2), (('s(0)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST ADDRESS DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 SLOAD PUSH1 0x0d SLOAD GT ISZERO DUP1 PUSH2 0x15f8 JUMPI

Optimized sequence (basic block per line):
JUMPDEST ADDRESS DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 SLOAD PUSH1 0x0d SLOAD GT ISZERO DUP1 PUSH2 0x15f8 JUMPI

Optimized code stored in /tmp/0x00/Reversal_4316_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4316_statistics.csv

Estimated initial gas: 4279
Estimated gas optimized: 4279

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 18
Final number of instructions: 18

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4316;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4316;2;False;True;True;JUMPDEST ADDRESS DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 SLOAD PUSH1 0x0d SLOAD GT ISZERO DUP1 PUSH2 0x15f8 JUMPI;JUMPDEST ADDRESS DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 SLOAD PUSH1 0x0d SLOAD GT ISZERO DUP1 PUSH2 0x15f8 JUMPI;4279;22;18;4279;22;18;0;0;0;True;True;False;False;1.1627914040000178;0;2;4200;4200;0

Block: 4367
4367Instr:<<['JUMPDEST', 'DUP6', 'DUP10', 'MSTORE', 'PUSH1 0x03', 'DUP6', 'MSTORE', 'DUP3', 'DUP10', 'KECCAK256', 'PUSH2 0x1124', 'DUP6', 'DUP3', 'SLOAD', 'PUSH2 0x0ec8', 'JUMP']>> 
4367-Stack size: 14 
4367-Equals Mem:<< []>> 
4367-NonEquals Mem: << [<3,6>]>> 
4367-Equals Sto:<< []>> 
4367-NonEquals Sto: << []>> 
4367-Useless: []
4367-Constancy: [(4, 32), (8, 0), (2, 64)]
4367-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(6)', 'keccak2560'), 2), (('s(14)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(3)', 'mstore'), 2), (('s(4)', '3', 'mstore'), 2), (('s(0)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 PUSH2 0x1124 DUP6 DUP3 SLOAD PUSH2 0x0ec8 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 PUSH2 0x1124 DUP6 DUP3 SLOAD PUSH2 0x0ec8 JUMP

Optimized code stored in /tmp/0x00/Reversal_4367_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4367_statistics.csv

Estimated initial gas: 2175
Estimated gas optimized: 2175

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 21

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4367;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4367;2;False;True;True;JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 PUSH2 0x1124 DUP6 DUP3 SLOAD PUSH2 0x0ec8 JUMP;JUMPDEST DUP6 DUP10 MSTORE PUSH1 0x03 DUP6 MSTORE DUP3 DUP10 KECCAK256 PUSH2 0x1124 DUP6 DUP3 SLOAD PUSH2 0x0ec8 JUMP;2175;21;16;2175;21;16;0;0;0;True;False;False;False;0.3066268319962546;0;2;2100;2100;0

Block: 4388
4388Instr:<<['JUMPDEST', 'SWAP1', 'SSTORE', 'DUP4', 'DUP7', 'DUP11', 'MSTORE', 'PUSH1 0x05', 'DUP7', 'MSTORE', 'DUP2', 'DUP5', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x1300', 'JUMPI']>> 
4388-Stack size: 16 
4388-Equals Mem:<< []>> 
4388-NonEquals Mem: << [<6,9>]>> 
4388-Equals Sto:<< [<2,14>]>> 
4388-NonEquals Sto: << []>> 
4388-Useless: []
4388-Constancy: [(10, 0), (6, 32), (4, 64)]
4388-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [<1,13>], 'storage_deps_noneqs': []}
[OPT]: Replaced sload by its value
Storage order: [(('s(9)', 's(10)', 'sstore'), 2), (('s(0)', 's(6)', 'keccak2560'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(3)', 'mstore'), 2), (('s(4)', '5', 'mstore'), 2), (('s(0)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 SSTORE DUP4 DUP7 DUP11 MSTORE PUSH1 0x05 DUP7 MSTORE DUP2 DUP5 DUP12 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1300 JUMPI

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SSTORE DUP4 DUP7 DUP11 MSTORE PUSH1 0x05 DUP7 MSTORE DUP2 DUP5 DUP12 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1300 JUMPI

Optimized code stored in /tmp/0x00/Reversal_4388_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4388_statistics.csv

Estimated initial gas: 7186
Estimated gas optimized: 7186

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 23

Initial number of instructions: 20
Final number of instructions: 20

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4388;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4388;2;True;False;False;JUMPDEST SWAP1 SSTORE DUP4 DUP7 DUP11 MSTORE PUSH1 0x05 DUP7 MSTORE DUP2 DUP5 DUP12 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1300 JUMPI;JUMPDEST SWAP1 SSTORE DUP4 DUP7 DUP11 MSTORE PUSH1 0x05 DUP7 MSTORE DUP2 DUP5 DUP12 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x1300 JUMPI;7186;23;20;7186;23;20;0;0;0;True;True;False;False;2.109045452962164;1;0;7100;7100;0

Block: 3056
3056Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0ec8', 'JUMP']>> 
3056-Stack size: 10 
3056-Equals Mem:<< [<9,17>, <11,19>]>> 
3056-NonEquals Mem: << [<9,11>, <9,19>, <11,17>, <17,19>]>> 
3056-Equals Sto:<< []>> 
3056-NonEquals Sto: << []>> 
3056-Useless: []
3056-Constancy: [(9, 64), (8, 32), (7, 64), (2, 64), (1, 0)]
3056-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<8,16>, <10,18>], 'memory_deps_noneqs': [<8,10>, <8,18>, <10,16>, <16,18>]}
{'memory_deps_eqs': [<8,16>, <10,18>], 'memory_deps_noneqs': [<8,10>, <8,18>, <10,16>, <16,18>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(7)', 's(6)', 'keccak2560'), 2), (('s(7)', 's(6)', 'keccak2561'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(7)', 's(11)', 'mstore'), 2), (('s(0)', 's(8)', 'mstore'), 2), (('s(7)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP3 MSTORE DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD PUSH2 0x0ec8 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP9 MSTORE PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xec8 JUMP

Optimized code stored in /tmp/0x00/Reversal_3056_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3056_statistics.csv

Estimated initial gas: 2225
Estimated gas optimized: 2163

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 34

Initial number of instructions: 24
Final number of instructions: 12

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3056;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3056;2;False;True;True;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP3 MSTORE DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD PUSH2 0x0ec8 JUMP;JUMPDEST DUP9 MSTORE PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xec8 JUMP;2225;29;24;2163;34;12;62;-5;12;True;False;False;False;1.089232602971606;4;2;2100;2100;4

Block: 4491
4491Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x12', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'PUSH2 0x12d9', 'JUMPI']>> 
4491-Stack size: 17 
4491-Equals Mem:<< []>> 
4491-NonEquals Mem: << [<8,15>]>> 
4491-Equals Sto:<< []>> 
4491-NonEquals Sto: << []>> 
4491-Useless: []
4491-Constancy: [(7, 32), (5, 64), (11, 0)]
4491-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('18', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(7)', 's(9)', 'mstore'), 2), (('s(11)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP5 PUSH1 0x12 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 PUSH2 0x12d9 JUMPI

Optimized sequence (basic block per line):
JUMPDEST DUP5 PUSH1 0x12 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 PUSH2 0x12d9 JUMPI

Optimized code stored in /tmp/0x00/Reversal_4491_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4491_statistics.csv

Estimated initial gas: 2159
Estimated gas optimized: 2159

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 23

Initial number of instructions: 19
Final number of instructions: 19

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4491;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4491;2;False;True;True;JUMPDEST DUP5 PUSH1 0x12 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 PUSH2 0x12d9 JUMPI;JUMPDEST DUP5 PUSH1 0x12 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 PUSH2 0x12d9 JUMPI;2159;23;19;2159;23;19;0;0;0;True;False;False;False;2.1183388929930516;0;0;2100;2100;0

Block: 4568
4568Instr:<<['JUMPDEST', 'SWAP1', 'ADDRESS', 'DUP12', 'MSTORE', 'PUSH1 0x03', 'DUP8', 'MSTORE', 'DUP5', 'DUP12', 'KECCAK256', 'PUSH2 0x11ee', 'DUP4', 'DUP3', 'SLOAD', 'PUSH2 0x0ee9', 'JUMP']>> 
4568-Stack size: 16 
4568-Equals Mem:<< []>> 
4568-NonEquals Mem: << [<4,7>]>> 
4568-Equals Sto:<< []>> 
4568-NonEquals Sto: << []>> 
4568-Useless: []
4568-Constancy: [(10, 0), (6, 32), (4, 64)]
4568-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(6)', 'keccak2560'), 2), (('s(16)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(19)', 'mstore'), 2), (('s(4)', '3', 'mstore'), 2), (('s(0)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 ADDRESS DUP12 MSTORE PUSH1 0x03 DUP8 MSTORE DUP5 DUP12 KECCAK256 PUSH2 0x11ee DUP4 DUP3 SLOAD PUSH2 0x0ee9 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 ADDRESS DUP12 MSTORE PUSH1 0x03 DUP8 MSTORE DUP5 DUP12 KECCAK256 PUSH2 0x11ee DUP4 DUP3 SLOAD PUSH2 0x0ee9 JUMP

Optimized code stored in /tmp/0x00/Reversal_4568_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4568_statistics.csv

Estimated initial gas: 2177
Estimated gas optimized: 2177

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4568;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4568;2;False;True;True;JUMPDEST SWAP1 ADDRESS DUP12 MSTORE PUSH1 0x03 DUP8 MSTORE DUP5 DUP12 KECCAK256 PUSH2 0x11ee DUP4 DUP3 SLOAD PUSH2 0x0ee9 JUMP;JUMPDEST SWAP1 ADDRESS DUP12 MSTORE PUSH1 0x03 DUP8 MSTORE DUP5 DUP12 KECCAK256 PUSH2 0x11ee DUP4 DUP3 SLOAD PUSH2 0x0ee9 JUMP;2177;22;17;2177;22;17;0;0;0;True;False;False;False;0.9908889929647557;0;2;2100;2100;0

Block: 4680
4680Instr:<<['JUMPDEST', 'DUP9', 'DUP3', 'MSTORE', 'PUSH1 0x08', 'DUP7', 'MSTORE', 'DUP3', 'DUP3', 'KECCAK256', 'SSTORE', 'PUSH2 0x1224', 'JUMP']>> 
4680-Stack size: 15 
4680-Equals Mem:<< []>> 
4680-NonEquals Mem: << [<3,6>]>> 
4680-Equals Sto:<< []>> 
4680-NonEquals Sto: << []>> 
4680-Useless: []
4680-Constancy: [(1, 0), (5, 32), (3, 64), (2, 64)]
4680-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(7)', 's(6)', 'keccak2560'), 2), (('s(9)', 's(8)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(7)', 's(0)', 'mstore'), 2), (('s(3)', '8', 'mstore'), 2), (('s(7)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x08 DUP7 MSTORE DUP3 DUP3 KECCAK256 SSTORE PUSH2 0x1224 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x08 DUP7 MSTORE DUP3 DUP3 KECCAK256 SSTORE PUSH2 0x1224 JUMP

Optimized code stored in /tmp/0x00/Reversal_4680_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4680_statistics.csv

Estimated initial gas: 5066
Estimated gas optimized: 5066

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4680;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4680;2;False;True;True;JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x08 DUP7 MSTORE DUP3 DUP3 KECCAK256 SSTORE PUSH2 0x1224 JUMP;JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x08 DUP7 MSTORE DUP3 DUP3 KECCAK256 SSTORE PUSH2 0x1224 JUMP;5066;16;13;5066;16;13;0;0;0;True;False;False;False;0.14579176402185112;0;2;5000;5000;0

Block: 4696
4696Instr:<<['JUMPDEST', 'POP', 'DUP4', 'DUP8', 'MSTORE', 'PUSH1 0x08', 'DUP4', 'MSTORE', 'DUP1', 'DUP8', 'KECCAK256', 'SLOAD', 'DUP1', 'PUSH2 0x1283', 'JUMPI']>> 
4696-Stack size: 13 
4696-Equals Mem:<< []>> 
4696-NonEquals Mem: << [<4,7>]>> 
4696-Equals Sto:<< []>> 
4696-NonEquals Sto: << []>> 
4696-Useless: []
4696-Constancy: [(1, 64), (3, 32), (7, 0)]
4696-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(0)', 's(6)', 'keccak2560'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(3)', 'mstore'), 2), (('s(4)', '8', 'mstore'), 2), (('s(0)', 's(6)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
********************IT*********************
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4696 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4840
4840Instr:<<['JUMPDEST', 'DUP5', 'PUSH1 0x13', 'SLOAD', 'DUP2', 'DUP2', 'AND', 'DUP4', 'MSTORE', 'PUSH1 0x08', 'SHR', 'AND', 'DUP9', 'DUP3', 'ADD', 'MSTORE', 'SWAP1', 'POP', 'PUSH2 0x11a2', 'JUMP']>> 
4840-Stack size: 17 
4840-Equals Mem:<< []>> 
4840-NonEquals Mem: << [<8,15>]>> 
4840-Equals Sto:<< []>> 
4840-NonEquals Sto: << []>> 
4840-Useless: []
4840-Constancy: [(7, 32), (5, 64), (11, 0)]
4840-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('19', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(7)', 's(8)', 'mstore'), 2), (('s(10)', 's(11)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP5 PUSH1 0x13 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x11a2 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP5 PUSH1 0x13 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x11a2 JUMP

Optimized code stored in /tmp/0x00/Reversal_4840_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4840_statistics.csv

Estimated initial gas: 2159
Estimated gas optimized: 2159

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 24

Initial number of instructions: 20
Final number of instructions: 20

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4840;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4840;2;True;False;False;JUMPDEST DUP5 PUSH1 0x13 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x11a2 JUMP;JUMPDEST DUP5 PUSH1 0x13 SLOAD DUP2 DUP2 AND DUP4 MSTORE PUSH1 0x08 SHR AND DUP9 DUP3 ADD MSTORE SWAP1 POP PUSH2 0x11a2 JUMP;2159;24;20;2159;24;20;0;0;0;True;False;False;False;2.137406462978106;0;0;2100;2100;0

Block: 5225
5225Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP9', 'SWAP1', 'MSTORE', 'PUSH1 0x3a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5225-Stack size: 16 
5225-Equals Mem:<< []>> 
5225-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>]>> 
5225-Equals Sto:<< []>> 
5225-NonEquals Sto: << []>> 
5225-Useless: []
5225-Constancy: [(10, 0), (6, 32), (4, 64)]
5225-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,12>, <1,17>, <1,22>, <1,27>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,12>, <1,17>, <1,22>, <1,27>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(9)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(12)', 's(0)', 'mstore'), 2), (('s(14)', '58', 'mstore'), 2), (('s(16)', '29577713123142787666066216585352832718387704262830617199261620224463112773746', 'mstore'), 2), (('s(18)', '45859243280302922111798473445315618765294229552794349084811014972219968192512', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Reversal_5225_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_5225_statistics.csv

Estimated initial gas: 91
Estimated gas optimized: 91

Estimated initial size in bytes: 106
Estimated size optimized in bytes: 106

Initial number of instructions: 32
Final number of instructions: 32

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5225;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;5225;2;True;False;False;JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x3a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656e74206d61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;91;106;32;91;106;32;0;0;0;True;False;False;False;2.2043622540077195;1;4;0;0;2

Block: 5331
5331Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP14', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'DUP14', 'REVERT']>> 
5331-Stack size: 18 
5331-Equals Mem:<< []>> 
5331-NonEquals Mem: << [<5,8>]>> 
5331-Equals Sto:<< []>> 
5331-NonEquals Sto: << []>> 
5331-Useless: []
5331-Constancy: [(12, 0), (8, 32), (6, 64)]
5331-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP14 MSTORE PUSH1 0x41 PUSH1 0x04 MSTORE PUSH1 0x24 DUP14 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP14 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP14 REVERT

Optimized code stored in /tmp/0x00/Reversal_5331_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_5331_statistics.csv

Estimated initial gas: 31
Estimated gas optimized: 25

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 45

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5331;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;5331;2;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP14 MSTORE PUSH1 0x41 PUSH1 0x04 MSTORE PUSH1 0x24 DUP14 REVERT;JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP14 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP14 REVERT;31;20;12;25;45;10;6;-25;2;True;False;False;False;0.08500377699965611;1;0;0;0;2

Block: 5356
5356Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP11', 'SWAP1', 'MSTORE', 'PUSH1 0x1d', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5356-Stack size: 18 
5356-Equals Mem:<< []>> 
5356-NonEquals Mem: << [<7,2>, <18,2>, <23,2>, <13,2>]>> 
5356-Equals Sto:<< []>> 
5356-NonEquals Sto: << []>> 
5356-Useless: []
5356-Constancy: [(12, 0), (8, 32), (6, 64)]
5356-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(11)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(14)', 's(0)', 'mstore'), 2), (('s(16)', '29', 'mstore'), 2), (('s(18)', '29577713123142787666065067240112549905804921883822091486361548830754339815424', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Reversal_5356_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_5356_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 76

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 68

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5356;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;5356;2;True;False;False;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1d PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733a20696e73756666696369656e742062616c616e6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;76;68;27;76;68;27;0;0;0;True;False;False;False;2.18962687603198;1;3;0;0;2

Block: 6354
6354Instr:<<['SWAP2', 'DUP10', 'SWAP8', 'SWAP5', 'SWAP4', 'SWAP2', 'SWAP8', 'MLOAD', 'SWAP8', 'DUP9', 'SWAP6', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP8', 'MSTORE', 'PUSH1 0xa4', 'DUP8', 'ADD', 'SWAP3', 'PUSH1 0x04', 'DUP9', 'ADD', 'MSTORE', 'PUSH0', 'PUSH1 0x24', 'DUP9', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP9', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP7', 'ADD', 'SWAP5', 'SWAP4', 'PUSH0', 'SWAP1']>> 
6354-Stack size: 28 
6354-Equals Mem:<< []>> 
6354-NonEquals Mem: << [<33,34>, <28,7>, <37,34>, <33,7>, <7,34>, <37,7>, <15,34>, <15,7>, <23,7>, <23,34>, <28,34>]>> 
6354-Equals Sto:<< []>> 
6354-NonEquals Sto: << []>> 
6354-Useless: []
6354-Constancy: [(9, 64), (16, 64), (18, 32), (1, 32), (22, 0)]
6354-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<33,34>, <7,28>, <34,37>, <7,33>, <7,34>, <7,37>, <15,34>, <7,15>, <7,23>, <23,34>, <28,34>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<33,34>, <7,28>, <34,37>, <7,33>, <7,34>, <7,37>, <15,34>, <7,15>, <7,23>, <23,34>, <28,34>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(15)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2), (('s(20)', 's(7)', 'mstore'), 2), (('s(22)', '0', 'mstore'), 2), (('s(24)', '160', 'mstore'), 2), (('s(2)', 'mload1'), 1), (('s(26)', 's(13)', 'mstore'), 2)]
Memory dep: [(4, 6), (3, 6), (2, 6), (1, 6), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 6), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP2 DUP10 SWAP8 SWAP5 SWAP4 SWAP2 SWAP8 MLOAD SWAP8 DUP9 SWAP6 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP8 MSTORE PUSH1 0xa4 DUP8 ADD SWAP3 PUSH1 0x04 DUP9 ADD MSTORE PUSH0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP5 SWAP4 PUSH0 SWAP1

Optimized sequence (basic block per line):
SWAP2 DUP10 SWAP8 SWAP5 SWAP4 SWAP2 SWAP8 MLOAD SWAP8 DUP9 SWAP6 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP8 MSTORE PUSH1 0xa4 DUP8 ADD SWAP3 PUSH1 0x04 DUP9 ADD MSTORE PUSH0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP5 SWAP4 PUSH0 SWAP1

Optimized code stored in /tmp/0x00/Reversal_6354_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_6354_statistics.csv

Estimated initial gas: 133
Estimated gas optimized: 133

Estimated initial size in bytes: 56
Estimated size optimized in bytes: 56

Initial number of instructions: 45
Final number of instructions: 45

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_6354;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;6354;2;True;False;False;SWAP2 DUP10 SWAP8 SWAP5 SWAP4 SWAP2 SWAP8 MLOAD SWAP8 DUP9 SWAP6 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP8 MSTORE PUSH1 0xa4 DUP8 ADD SWAP3 PUSH1 0x04 DUP9 ADD MSTORE PUSH0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP5 SWAP4 PUSH0 SWAP1;SWAP2 DUP10 SWAP8 SWAP5 SWAP4 SWAP2 SWAP8 MLOAD SWAP8 DUP9 SWAP6 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP8 MSTORE PUSH1 0xa4 DUP8 ADD SWAP3 PUSH1 0x04 DUP9 ADD MSTORE PUSH0 PUSH1 0x24 DUP9 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP9 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP7 ADD SWAP5 SWAP4 PUSH0 SWAP1;133;56;45;133;56;45;0;0;0;True;False;False;False;2.54467225499684;1;4;0;0;2

Block: 6500
6500Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP11', 'SWAP8', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x190a', 'JUMP']>> 
6500-Stack size: 31 
6500-Equals Mem:<< []>> 
6500-NonEquals Mem: << [<6,2>]>> 
6500-Equals Sto:<< []>> 
6500-NonEquals Sto: << []>> 
6500-Useless: []
6500-Constancy: [(25, 0), (21, 32), (12, 64), (19, 64), (2, 32)]
6500-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 'mload0'), 1), (('s(4)', 's(15)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP11 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x190a JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP11 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x190a JUMP

Optimized code stored in /tmp/0x00/Reversal_6500_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_6500_statistics.csv

Estimated initial gas: 74
Estimated gas optimized: 74

Estimated initial size in bytes: 26
Estimated size optimized in bytes: 26

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_6500;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;6500;2;True;False;False;JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP11 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x190a JUMP;JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP11 SWAP8 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x190a JUMP;74;26;24;74;26;24;0;0;0;True;False;False;False;2.1925038099871017;0;0;0;0;0

Block: 6526
6526Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6526-Stack size: 25 
6526-Equals Mem:<< []>> 
6526-NonEquals Mem: << [<5,8>]>> 
6526-Equals Sto:<< []>> 
6526-NonEquals Sto: << []>> 
6526-Useless: []
6526-Constancy: []
6526-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_6526 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5675
5675Instr:<<['DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x30b63632ba17', 'PUSH1 0xd1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5675-Stack size: 14 
5675-Equals Mem:<< []>> 
5675-NonEquals Mem: << [<6,1>, <12,1>, <17,1>, <22,1>, <29,1>]>> 
5675-Equals Sto:<< []>> 
5675-NonEquals Sto: << []>> 
5675-Useless: []
5675-Constancy: [(4, 32), (8, 0), (2, 64)]
5675-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,12>, <1,17>, <1,22>, <1,29>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,12>, <1,17>, <1,22>, <1,29>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('209', '53559151475223', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(7)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(10)', 's(0)', 'mstore'), 2), (('s(12)', '38', 'mstore'), 2), (('s(14)', '38196372293521921433411288587964294122151274768672549037638891791258891679831', 'mstore'), 2), (('s(16)', '44065913919368121078872929409973310849374190824997650422817119878247325106176', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x30b63632ba17 PUSH1 0xd1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x30b63632ba17 PUSH1 0xd1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Reversal_5675_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_5675_statistics.csv

Estimated initial gas: 96
Estimated gas optimized: 96

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5675;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;5675;2;True;False;False;DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x30b63632ba17 PUSH1 0xd1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617857 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x30b63632ba17 PUSH1 0xd1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;96;82;33;96;82;33;0;0;0;True;False;False;False;2.1718378940131515;2;4;0;0;4

Block: 5757
5757Instr:<<['JUMPDEST', 'DUP3', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'ADD', 'DUP7', 'SWAP1', 'MSTORE', 'PUSH1 0x18', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5757-Stack size: 14 
5757-Equals Mem:<< []>> 
5757-NonEquals Mem: << [<7,2>, <18,2>, <23,2>, <13,2>]>> 
5757-Equals Sto:<< []>> 
5757-NonEquals Sto: << []>> 
5757-Useless: []
5757-Constancy: [(4, 32), (8, 0), (2, 64)]
5757-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(7)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(10)', 's(0)', 'mstore'), 2), (('s(12)', '24', 'mstore'), 2), (('s(14)', '30044139639235019157633772930130051130782294401173348532376298530006707994624', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Reversal_5757_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_5757_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 76

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 68

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5757;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;5757;2;True;False;False;JUMPDEST DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST DUP3 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c69737465642c2063616e27742074726164650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;76;68;27;76;68;27;0;0;0;True;False;False;False;2.121376498020254;1;3;0;0;2

Block: 5841
5841Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x2a3c20b6b7bab73a17', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5841-Stack size: 10 
5841-Equals Mem:<< []>> 
5841-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5841-Equals Sto:<< []>> 
5841-NonEquals Sto: << []>> 
5841-Useless: []
5841-Constancy: []
5841-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('185', '779095914837559425559', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '41', 'mstore'), 2), (('s(9)', '38196372293521921433411288587964294122151274768672549037638891791258657579384', 'mstore'), 2), (('s(11)', '38206752492652483724943225545965068820058359056196627365346771720318157324288', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2a3c20b6b7bab73a17 PUSH1 0xb9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5478416d6f756e742e0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_5841_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_5841_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 87
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5841;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;5841;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2a3c20b6b7bab73a17 PUSH1 0xb9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865205f6d6178 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5478416d6f756e742e0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;87;33;79;132;28;15;-45;5;True;False;False;False;2.1263522829976864;2;4;0;0;4

Block: 5928
5928Instr:<<['JUMPDEST', 'POP', 'DUP2', 'PUSH0', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0xff', 'PUSH1 0x40', 'PUSH0', 'KECCAK256', 'SLOAD', 'AND', 'PUSH2 0x10a0', 'JUMP']>> 
5928-Stack size: 11 
5928-Equals Mem:<< []>> 
5928-NonEquals Mem: << [<4,7>]>> 
5928-Equals Sto:<< []>> 
5928-NonEquals Sto: << []>> 
5928-Useless: []
5928-Constancy: []
5928-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(0)', 'mstore'), 2), (('32', '6', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5928 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5950
5950Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5950-Stack size: 10 
5950-Equals Mem:<< []>> 
5950-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5950-Equals Sto:<< []>> 
5950-NonEquals Sto: << []>> 
5950-Useless: []
5950-Constancy: []
5950-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '41', 'mstore'), 2), (('s(9)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(11)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_5950_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_5950_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 87
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5950;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;5950;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;87;33;79;132;28;15;-45;5;True;False;False;False;2.117759697022848;2;4;0;0;4

Block: 6037
6037Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6037-Stack size: 10 
6037-Equals Mem:<< []>> 
6037-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6037-Equals Sto:<< []>> 
6037-NonEquals Sto: << []>> 
6037-Useless: []
6037-Constancy: []
6037-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '35', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(11)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_6037_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_6037_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_6037;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;6037;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;79;132;28;15;-51;5;True;False;False;False;2.131547778029926;2;4;0;0;4

Block: 6118
6118Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
6118-Stack size: 10 
6118-Equals Mem:<< []>> 
6118-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
6118-Equals Sto:<< []>> 
6118-NonEquals Sto: << []>> 
6118-Useless: []
6118-Constancy: []
6118-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '37', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(11)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_6118_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_6118_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_6118;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;6118;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;83;33;79;132;28;15;-49;5;True;False;False;False;2.11466904199915;2;4;0;0;4

Block: 3136
3136Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x07', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
3136-Stack size: 11 
3136-Equals Mem:<< []>> 
3136-NonEquals Mem: << [<3,11>, <3,6>, <3,16>, <6,11>, <6,16>, <16,7>, <16,11>, <7,11>]>> 
3136-Equals Sto:<< []>> 
3136-NonEquals Sto: << []>> 
3136-Useless: []
3136-Constancy: [(10, 64), (9, 0), (6, 32), (5, 64), (3, 64), (2, 0)]
3136-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,5>, <2,15>, <5,10>, <5,15>, <6,15>, <10,15>, <6,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('s(4)', 's(3)', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(8)', 'mstore'), 2), (('s(0)', '7', 'mstore'), 2), (('s(4)', 's(3)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(14)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x07 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND PUSH1 0x7 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/Reversal_3136_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3136_statistics.csv

Estimated initial gas: 2173
Estimated gas optimized: 2170

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 18

Initial number of instructions: 18
Final number of instructions: 17

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3136;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3136;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x07 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;JUMPDEST AND PUSH1 0x7 DUP7 MSTORE DUP2 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN;2173;19;18;2170;18;17;3;1;1;True;False;False;False;0.5985239610308781;0;2;2100;2100;0

Block: 4125
4125Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x086c2dc4ee840e6cae840e8c2f040e8dede40d0d2ced', 'PUSH1 0x53', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
4125-Stack size: 10 
4125-Equals Mem:<< []>> 
4125-NonEquals Mem: << [<7,2>, <24,2>, <17,2>, <12,2>]>> 
4125-Equals Sto:<< []>> 
4125-NonEquals Sto: << []>> 
4125-Useless: []
4125-Constancy: [(1, 64), (5, 0), (9, 64), (8, 0)]
4125-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,23>, <1,16>, <1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,23>, <1,16>, <1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('83', '3151258826393833174119976912217898454593045370055917', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '22', 'mstore'), 2), (('s(9)', '30477105276127993586594857026838120941605103494590353408269712054137321947136', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x086c2dc4ee840e6cae840e8c2f040e8dede40d0d2ced PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x43616e2774207365742074617820746f6f206869676800000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized code stored in /tmp/0x00/Reversal_4125_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4125_statistics.csv

Estimated initial gas: 79
Estimated gas optimized: 67

Estimated initial size in bytes: 62
Estimated size optimized in bytes: 95

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4125;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4125;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x086c2dc4ee840e6cae840e8c2f040e8dede40d0d2ced PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x43616e2774207365742074617820746f6f206869676800000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;79;62;28;67;95;24;12;-33;4;True;False;False;False;0.46210836595855653;2;3;0;0;4

Block: 3797
3797Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3797-Stack size: 7 
3797-Equals Mem:<< []>> 
3797-NonEquals Mem: << [<5,8>]>> 
3797-Equals Sto:<< []>> 
3797-NonEquals Sto: << []>> 
3797-Useless: []
3797-Constancy: []
3797-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3797 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3716
3716Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
3716-Stack size: 4 
3716-Equals Mem:<< []>> 
3716-NonEquals Mem: << [<13,3>, <23,3>, <8,3>, <18,3>]>> 
3716-Equals Sto:<< []>> 
3716-NonEquals Sto: << []>> 
3716-Useless: []
3716-Constancy: []
3716-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_3716_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3716_statistics.csv

Estimated initial gas: 70
Estimated gas optimized: 64

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 94

Initial number of instructions: 25
Final number of instructions: 23

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3716;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3716;2;False;True;True;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT;70;68;25;64;94;23;6;-26;2;True;False;False;False;0.6665777279995382;1;3;0;0;2

Block: 3315
3315Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0c', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
3315-Stack size: 6 
3315-Equals Mem:<< []>> 
3315-NonEquals Mem: << [<8,5>]>> 
3315-Equals Sto:<< []>> 
3315-NonEquals Sto: << []>> 
3315-Useless: []
3315-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
3315-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
Storage order: [(('12', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x0c SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0xc SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Reversal_3315_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3315_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3315;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3315;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x0c SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0xc SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.03755152004305273;0;0;2100;2100;0

Block: 3923
3923Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3923-Stack size: 7 
3923-Equals Mem:<< []>> 
3923-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3923-Equals Sto:<< []>> 
3923-NonEquals Sto: << []>> 
3923-Useless: []
3923-Constancy: []
3923-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '34', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(11)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_3923_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3923_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3923;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3923;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;80;33;79;132;28;15;-52;5;True;False;False;False;2.1391015280387364;2;4;0;0;4

Block: 4003
4003Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
4003-Stack size: 8 
4003-Equals Mem:<< []>> 
4003-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
4003-Equals Sto:<< []>> 
4003-NonEquals Sto: << []>> 
4003-Useless: []
4003-Constancy: []
4003-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '36', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(11)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/Reversal_4003_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_4003_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 82

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 133

Initial number of instructions: 33
Final number of instructions: 29

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4003;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;4003;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;82;133;29;12;-52;4;True;False;False;False;2.119262148044072;2;4;0;0;4

Block: 3402
3402Instr:<<['JUMPDEST', 'PUSH1 0x08', 'DUP3', 'MSTORE', 'PUSH8 0x14995d995c9cd85b', 'PUSH1 0xc2', 'SHL', 'PUSH1 0x20', 'DUP4', 'ADD', 'MSTORE', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0d85', 'JUMP']>> 
3402-Stack size: 8 
3402-Equals Mem:<< []>> 
3402-NonEquals Mem: << [<3,11>, <3,10>, <10,11>]>> 
3402-Equals Sto:<< []>> 
3402-NonEquals Sto: << []>> 
3402-Useless: []
3402-Constancy: [(7, 64), (6, 0), (3, 0), (0, 64)]
3402-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>, <2,9>, <9,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('194', '1484320465460451419', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '8', 'mstore'), 2), (('s(9)', '37268922278447061389797815246823513316860373015580445590414718410271747997696', 'mstore'), 2), (('s(2)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x08 DUP3 MSTORE PUSH8 0x14995d995c9cd85b PUSH1 0xc2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0d85 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x526576657273616c000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x8 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xd85 JUMP

Optimized code stored in /tmp/0x00/Reversal_3402_optimized.txt
Optimality results stored in /tmp/0x00/Reversal_3402_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 31
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3402;0x04142df2e500e57390bd4017cec51acdd1400828.sol;Reversal;3402;2;False;True;True;JUMPDEST PUSH1 0x08 DUP3 MSTORE PUSH8 0x14995d995c9cd85b PUSH1 0xc2 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0d85 JUMP;JUMPDEST PUSH32 0x526576657273616c000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x8 DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP4 PUSH2 0xd85 JUMP;57;31;18;51;52;16;6;-21;2;True;False;False;False;0.2688038960332051;1;0;0;0;2

Block: 3655
3655Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3655-Stack size: 9 
3655-Equals Mem:<< []>> 
3655-NonEquals Mem: << [<5,8>]>> 
3655-Equals Sto:<< []>> 
3655-NonEquals Sto: << []>> 
3655-Useless: []
3655-Constancy: []
3655-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_3655 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2148
2148Instr:<<['PUSH2 0x0872', 'PUSH1 0x11', 'SLOAD', 'PUSH1 0x10', 'SLOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
2148-Stack size: 6 
2148-Equals Mem:<< []>> 
2148-NonEquals Mem: << []>> 
2148-Equals Sto:<< []>> 
2148-NonEquals Sto: << [<2,4>]>> 
2148-Useless: []
2148-Constancy: [(5, 64), (4, 0), (1, 0), (0, 64)]
2148-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
Storage order: [(('17', 'sload0'), 1), (('16', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2148 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2813
2813Instr:<<['JUMPDEST', 'PUSH1 0xff', 'DUP1', 'NOT', 'PUSH1 0x0a', 'SLOAD', 'AND', 'SWAP2', 'AND', 'OR', 'PUSH1 0x0a', 'SSTORE', 'DUP1', 'RETURN']>> 
2813-Stack size: 3 
2813-Equals Mem:<< []>> 
2813-NonEquals Mem: << []>> 
2813-Equals Sto:<< [<5,11>]>> 
2813-NonEquals Sto: << []>> 
2813-Useless: []
2813-Constancy: [(2, 64), (1, 0)]
2813-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<4,10>], 'storage_deps_noneqs': []}
Storage order: [(('10', 'sload0'), 1), (('10', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_2813 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4665
4665Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SSTORE', 'PUSH2 0x1248', 'PUSH1 0x09', 'SLOAD', 'TIMESTAMP', 'PUSH2 0x0ee9', 'JUMP']>> 
4665-Stack size: 15 
4665-Equals Mem:<< []>> 
4665-NonEquals Mem: << []>> 
4665-Equals Sto:<< []>> 
4665-NonEquals Sto: << [<2,5>]>> 
4665-Useless: []
4665-Constancy: [(1, 0), (3, 64), (5, 32), (2, 64)]
4665-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,4>]}
Storage order: [(('11', 's(0)', 'sstore'), 2), (('9', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4665 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4880
4880Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'SWAP1', 'DUP2', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'DUP3', 'SSTORE', 'PUSH1 0x10', 'SLOAD', 'DUP12', 'SWAP1', 'DUP1', 'PUSH2 0x1571', 'JUMPI']>> 
4880-Stack size: 14 
4880-Equals Mem:<< []>> 
4880-NonEquals Mem: << []>> 
4880-Equals Sto:<< [<3,16>]>> 
4880-NonEquals Sto: << [<16,18>, <3,18>]>> 
4880-Useless: []
4880-Constancy: [(4, 32), (8, 0), (2, 64)]
4880-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,15>], 'storage_deps_noneqs': [<15,17>, <2,17>]}
[RULE]: Evaluate expression ('160', '255', 'shl')
[RULE]: Evaluate expression ('160', '1', 'shl')
Storage order: [(('20', 'sload0'), 1), (('20', 's(18)', 'sstore'), 2), (('16', 'sload1'), 1)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_4880 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5624
5624Instr:<<['JUMPDEST', 'POP', 'PUSH2 0x1608', 'PUSH1 0x16', 'SLOAD', 'PUSH1 0x15', 'SLOAD', 'SWAP1', 'PUSH2 0x0ee9', 'JUMP']>> 
5624-Stack size: 15 
5624-Equals Mem:<< []>> 
5624-NonEquals Mem: << []>> 
5624-Equals Sto:<< []>> 
5624-NonEquals Sto: << [<4,6>]>> 
5624-Useless: []
5624-Constancy: [(9, 0), (3, 64), (5, 32)]
5624-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,5>]}
Storage order: [(('22', 'sload0'), 1), (('21', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
BLOCK 0x04142df2e500e57390bd4017cec51acdd1400828.sol_Reversal_5624 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5204
5204Instr:<<['JUMPDEST', 'DUP2', 'MSTORE', 'DUP13', 'DUP10', 'RETURNDATASIZE', 'SWAP3', 'ADD', 'RETURNDATACOPY']>> 
5204-Stack size: 19 
5204-Equals Mem:<< []>> 
5204-NonEquals Mem: << []>> 
5204-Equals Sto:<< []>> 
5204-NonEquals Sto: << []>> 
5204-Useless: [8, 2]
5204-Constancy: [(13, 0), (7, 64), (9, 32)]
5204-ContextAliasing: []

