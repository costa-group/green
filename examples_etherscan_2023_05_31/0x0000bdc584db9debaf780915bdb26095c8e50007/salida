Green Main
*************************************************************
Compilation time: 0.13978196104289964s
*************************************************************
File: DestinyToken
Build CFG: 0.1009130019810982s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis DestinyToken
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> mem0 3270:31 --> 0x0000bdc584db9debaf780915bdb26095c8e50007.sol DestinyToken--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> mem0 3091:19 --> 0x0000bdc584db9debaf780915bdb26095c8e50007.sol DestinyToken--initialization(address,address[])
MEMRES: NOT Found read (potential optimization) -> <slot7,0> 1436:6 --> 0x0000bdc584db9debaf780915bdb26095c8e50007.sol DestinyToken--burn(address,uint256)
MEMRES: NOT Found read (potential optimization) -> mem0 1753:26 --> 0x0000bdc584db9debaf780915bdb26095c8e50007.sol DestinyToken--burn(address,uint256)
MEMRES: NOT Found read (potential optimization) -> mem0 1355:31 --> 0x0000bdc584db9debaf780915bdb26095c8e50007.sol DestinyToken--mint(address,uint256)
MEMRES: NOT Found read (potential optimization) -> mem0 1121:25 --> 0x0000bdc584db9debaf780915bdb26095c8e50007.sol DestinyToken--transferFrom(address,address,uint256)
GASOL: Useless accesses found: {'3270': [31], '3091': [19], '1436': [6], '1753': [26], '1355': [31], '1121': [25]}
Free memory analyss finished


SLOTS Contract DestinyToken: 20
Memory read accesses ContractDestinyToken: 97
Memory write accesses ContractDestinyToken: 210
********************************** INIT
GASOL: Adding block useless 3270
GASOL: Adding block useless 3091
GASOL: Adding block useless 1436
GASOL: Adding block useless 1753
GASOL: Adding block useless 1355
GASOL: Adding block useless 1121
CONTEXT: Detected context equality 3 <slot4,0> 8 <slot4,0>
CONTEXT: Detected context equality 3 <slot4,0> 8 <slot4,0>
CONTEXT: Detected context equality 3 <slot4,0> 5 <slot4,0>
COMPACT CLONES: True
CONTRACT: DestinyToken
-----
Block: 590
590Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
590-Stack size: 4 
590-Equals Mem:<< [<12,27>, <17,31>]>> 
590-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
590-Equals Sto:<< []>> 
590-NonEquals Sto: << []>> 
590-Useless: []
590-Constancy: []
590-ContextAliasing: []

.....
-----
Block: 330
330Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x011a', 'JUMP']>> 
330-Stack size: 2 
330-Equals Mem:<< []>> 
330-NonEquals Mem: << [<5,2>]>> 
330-Equals Sto:<< []>> 
330-NonEquals Sto: << []>> 
330-Useless: []
330-Constancy: []
330-ContextAliasing: []

.....
-----
Block: 3148
3148Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'DUP3', 'DUP1', 'DUP3', 'LT', 'ISZERO', 'PUSH2 0x0c7c', 'JUMPI']>> 
3148-Stack size: 4 
3148-Equals Mem:<< []>> 
3148-NonEquals Mem: << [<5,8>]>> 
3148-Equals Sto:<< []>> 
3148-NonEquals Sto: << []>> 
3148-Useless: []
3148-Constancy: []
3148-ContextAliasing: []

.....
-----
Block: 3173
3173Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x031d', 'SWAP1', 'PUSH2 0x0f02', 'JUMP']>> 
3173-Stack size: 7 
3173-Equals Mem:<< []>> 
3173-NonEquals Mem: << [<6,1>]>> 
3173-Equals Sto:<< []>> 
3173-NonEquals Sto: << []>> 
3173-Useless: []
3173-Constancy: [(2, 0)]
3173-ContextAliasing: []

.....
-----
Block: 3196
3196Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP7', 'SWAP3', 'SWAP1', 'PUSH2 0x0c9a', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f5d', 'JUMP']>> 
3196-Stack size: 7 
3196-Equals Mem:<< []>> 
3196-NonEquals Mem: << [<5,8>]>> 
3196-Equals Sto:<< []>> 
3196-NonEquals Sto: << []>> 
3196-Useless: []
3196-Constancy: [(2, 0)]
3196-ContextAliasing: []

.....
-----
Block: 3913_35
3913_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_35-Stack size: 15 
3913_35-Equals Mem:<< []>> 
3913_35-NonEquals Mem: << [<5,8>]>> 
3913_35-Equals Sto:<< []>> 
3913_35-NonEquals Sto: << []>> 
3913_35-Useless: []
3913_35-Constancy: [(10, 0), (5, 0)]
3913_35-ContextAliasing: []

.....
-----
Block: 3226
3226Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP7', 'SWAP3', 'SWAP1', 'PUSH2 0x0cc6', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
3226-Stack size: 11 
3226-Equals Mem:<< []>> 
3226-NonEquals Mem: << [<16,19>]>> 
3226-Equals Sto:<< [<3,24>]>> 
3226-NonEquals Sto: << []>> 
3226-Useless: []
3226-Constancy: [(6, 0), (1, 0)]
3226-ContextAliasing: []

.....
-----
Block: 3913_34
3913_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_34-Stack size: 15 
3913_34-Equals Mem:<< []>> 
3913_34-NonEquals Mem: << [<5,8>]>> 
3913_34-Equals Sto:<< []>> 
3913_34-NonEquals Sto: << []>> 
3913_34-Useless: []
3913_34-Constancy: [(10, 0), (5, 0)]
3913_34-ContextAliasing: []

.....
-----
Block: 310
310Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x011a', 'JUMP']>> 
310-Stack size: 2 
310-Equals Mem:<< []>> 
310-NonEquals Mem: << [<7,2>]>> 
310-Equals Sto:<< []>> 
310-NonEquals Sto: << []>> 
310-Useless: []
310-Constancy: []
310-ContextAliasing: []

.....
-----
Block: 3562_0
3562_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3562_0-Stack size: 12 
3562_0-Equals Mem:<< []>> 
3562_0-NonEquals Mem: << [<5,8>]>> 
3562_0-Equals Sto:<< []>> 
3562_0-NonEquals Sto: << []>> 
3562_0-Useless: []
3562_0-Constancy: [(5, 0), (4, 32)]
3562_0-ContextAliasing: []

.....
-----
Block: 3562
3562Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3562-Stack size: 15 
3562-Equals Mem:<< []>> 
3562-NonEquals Mem: << [<5,8>]>> 
3562-Equals Sto:<< []>> 
3562-NonEquals Sto: << []>> 
3562-Useless: []
3562-Constancy: [(8, 0), (7, 32)]
3562-ContextAliasing: []

.....
-----
Block: 3711
3711Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MSTORE', 'SWAP2', 'DUP3', 'MSTORE', 'DUP5', 'DUP3', 'ADD', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'ADD', 'DUP6', 'ADD', 'SWAP2', 'DUP10', 'DUP4', 'GT', 'ISZERO', 'PUSH2 0x0e9c', 'JUMPI']>> 
3711-Stack size: 14 
3711-Equals Mem:<< []>> 
3711-NonEquals Mem: << [<2,5>]>> 
3711-Equals Sto:<< []>> 
3711-NonEquals Sto: << []>> 
3711-Useless: []
3711-Constancy: [(7, 0), (6, 32)]
3711-ContextAliasing: []

.....
-----
Block: 1881
1881Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH12 0x34b734ba34b0b634bd32b217', 'PUSH1 0xa1', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x031d', 'JUMP']>> 
1881-Stack size: 4 
1881-Equals Mem:<< []>> 
1881-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
1881-Equals Sto:<< []>> 
1881-NonEquals Sto: << []>> 
1881-Useless: []
1881-Constancy: []
1881-ContextAliasing: []

.....
-----
Block: 3913_33
3913_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_33-Stack size: 10 
3913_33-Equals Mem:<< []>> 
3913_33-NonEquals Mem: << [<5,8>]>> 
3913_33-Equals Sto:<< []>> 
3913_33-NonEquals Sto: << []>> 
3913_33-Useless: []
3913_33-Constancy: []
3913_33-ContextAliasing: []

.....
-----
Block: 3913_32
3913_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_32-Stack size: 9 
3913_32-Equals Mem:<< []>> 
3913_32-NonEquals Mem: << [<5,8>]>> 
3913_32-Equals Sto:<< []>> 
3913_32-NonEquals Sto: << []>> 
3913_32-Useless: []
3913_32-Constancy: []
3913_32-ContextAliasing: []

.....
-----
Block: 1999
1999Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'DUP2', 'AND', 'DUP3', 'MSTORE', 'PUSH32 0x7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP3', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'SLOAD', 'PUSH1 0x01', 'SLOAD', 'SWAP2', 'AND', 'SWAP1', 'PUSH20 0x7777777777777777777777777777777777777777', 'SWAP1', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP1', 'PUSH2 0x1e61', 'SWAP1', 'PUSH2 0x085b', 'SWAP1', 'PUSH3 0x76adf1', 'PUSH2 0x0f83', 'JUMP']>> 
1999-Stack size: 5 
1999-Equals Mem:<< []>> 
1999-NonEquals Mem: << [<13,16>]>> 
1999-Equals Sto:<< [<3,24>]>> 
1999-NonEquals Sto: << [<3,23>, <3,26>, <23,24>, <23,26>, <24,26>]>> 
1999-Useless: []
1999-Constancy: []
1999-ContextAliasing: []

.....
-----
Block: 3913_31
3913_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_31-Stack size: 13 
3913_31-Equals Mem:<< []>> 
3913_31-NonEquals Mem: << [<5,8>]>> 
3913_31-Equals Sto:<< []>> 
3913_31-NonEquals Sto: << []>> 
3913_31-Useless: []
3913_31-Constancy: []
3913_31-ContextAliasing: []

.....
-----
Block: 3913_30
3913_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_30-Stack size: 12 
3913_30-Equals Mem:<< []>> 
3913_30-NonEquals Mem: << [<5,8>]>> 
3913_30-Equals Sto:<< []>> 
3913_30-NonEquals Sto: << []>> 
3913_30-Useless: []
3913_30-Constancy: []
3913_30-ContextAliasing: []

.....
-----
Block: 3913_29
3913_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_29-Stack size: 9 
3913_29-Equals Mem:<< []>> 
3913_29-NonEquals Mem: << [<5,8>]>> 
3913_29-Equals Sto:<< []>> 
3913_29-NonEquals Sto: << []>> 
3913_29-Useless: []
3913_29-Constancy: []
3913_29-ContextAliasing: []

.....
-----
Block: 3913_28
3913_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_28-Stack size: 10 
3913_28-Equals Mem:<< []>> 
3913_28-NonEquals Mem: << [<5,8>]>> 
3913_28-Equals Sto:<< []>> 
3913_28-NonEquals Sto: << []>> 
3913_28-Useless: []
3913_28-Constancy: []
3913_28-ContextAliasing: []

.....
-----
Block: 3913_27
3913_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_27-Stack size: 9 
3913_27-Equals Mem:<< []>> 
3913_27-NonEquals Mem: << [<5,8>]>> 
3913_27-Equals Sto:<< []>> 
3913_27-NonEquals Sto: << []>> 
3913_27-Useless: []
3913_27-Constancy: []
3913_27-ContextAliasing: []

.....
-----
Block: 2204
2204Instr:<<['JUMPDEST', 'PUSH20 0x7777777777777777777777777777777777777777', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH32 0xe64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1', 'DUP1', 'SLOAD', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH2 0x08eb', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
2204-Stack size: 5 
2204-Equals Mem:<< []>> 
2204-NonEquals Mem: << [<5,8>]>> 
2204-Equals Sto:<< []>> 
2204-NonEquals Sto: << []>> 
2204-Useless: []
2204-Constancy: []
2204-ContextAliasing: []

.....
-----
Block: 3913_26
3913_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_26-Stack size: 12 
3913_26-Equals Mem:<< []>> 
3913_26-NonEquals Mem: << [<5,8>]>> 
3913_26-Equals Sto:<< []>> 
3913_26-NonEquals Sto: << []>> 
3913_26-Useless: []
3913_26-Constancy: [(5, 0)]
3913_26-ContextAliasing: []

.....
-----
Block: 3913_25
3913_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_25-Stack size: 12 
3913_25-Equals Mem:<< []>> 
3913_25-NonEquals Mem: << [<5,8>]>> 
3913_25-Equals Sto:<< []>> 
3913_25-NonEquals Sto: << []>> 
3913_25-Useless: []
3913_25-Constancy: [(6, 0)]
3913_25-ContextAliasing: []

.....
-----
Block: 3913_24
3913_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_24-Stack size: 13 
3913_24-Equals Mem:<< []>> 
3913_24-NonEquals Mem: << [<5,8>]>> 
3913_24-Equals Sto:<< []>> 
3913_24-NonEquals Sto: << []>> 
3913_24-Useless: []
3913_24-Constancy: [(7, 0)]
3913_24-ContextAliasing: []

.....
-----
Block: 3913_23
3913_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_23-Stack size: 12 
3913_23-Equals Mem:<< []>> 
3913_23-NonEquals Mem: << [<5,8>]>> 
3913_23-Equals Sto:<< []>> 
3913_23-NonEquals Sto: << []>> 
3913_23-Useless: []
3913_23-Constancy: [(6, 0)]
3913_23-ContextAliasing: []

.....
-----
Block: 3913_22
3913_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_22-Stack size: 9 
3913_22-Equals Mem:<< []>> 
3913_22-NonEquals Mem: << [<5,8>]>> 
3913_22-Equals Sto:<< []>> 
3913_22-NonEquals Sto: << []>> 
3913_22-Useless: []
3913_22-Constancy: []
3913_22-ContextAliasing: []

.....
-----
Block: 2392
2392Instr:<<['JUMPDEST', 'PUSH2 0xdead', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH32 0x6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc', 'DUP1', 'SLOAD', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH2 0x0995', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
2392-Stack size: 5 
2392-Equals Mem:<< []>> 
2392-NonEquals Mem: << [<5,8>]>> 
2392-Equals Sto:<< []>> 
2392-NonEquals Sto: << []>> 
2392-Useless: []
2392-Constancy: []
2392-ContextAliasing: []

.....
-----
Block: 3913_21
3913_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_21-Stack size: 12 
3913_21-Equals Mem:<< []>> 
3913_21-NonEquals Mem: << [<5,8>]>> 
3913_21-Equals Sto:<< []>> 
3913_21-NonEquals Sto: << []>> 
3913_21-Useless: []
3913_21-Constancy: [(5, 0)]
3913_21-ContextAliasing: []

.....
-----
Block: 3913_20
3913_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_20-Stack size: 12 
3913_20-Equals Mem:<< []>> 
3913_20-NonEquals Mem: << [<5,8>]>> 
3913_20-Equals Sto:<< []>> 
3913_20-NonEquals Sto: << []>> 
3913_20-Useless: []
3913_20-Constancy: [(6, 0)]
3913_20-ContextAliasing: []

.....
-----
Block: 3913_19
3913_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_19-Stack size: 10 
3913_19-Equals Mem:<< []>> 
3913_19-NonEquals Mem: << [<5,8>]>> 
3913_19-Equals Sto:<< []>> 
3913_19-NonEquals Sto: << []>> 
3913_19-Useless: []
3913_19-Constancy: []
3913_19-ContextAliasing: []

.....
-----
Block: 3994_0
3994_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3994_0-Stack size: 11 
3994_0-Equals Mem:<< []>> 
3994_0-NonEquals Mem: << [<5,8>]>> 
3994_0-Equals Sto:<< []>> 
3994_0-NonEquals Sto: << []>> 
3994_0-Useless: []
3994_0-Constancy: [(3, 0)]
3994_0-ContextAliasing: [(7, 8)]

.....
-----
Block: 2552
2552Instr:<<['JUMPDEST', 'PUSH1 0x20', 'MUL', 'PUSH1 0x20', 'ADD', 'ADD', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH0', 'KECCAK256', 'PUSH0', 'DUP3', 'DUP3', 'SLOAD', 'PUSH2 0x0a2d', 'SWAP2', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
2552-Stack size: 10 
2552-Equals Mem:<< []>> 
2552-NonEquals Mem: << [<20,6>, <20,25>, <25,6>, <6,29>]>> 
2552-Equals Sto:<< []>> 
2552-NonEquals Sto: << []>> 
2552-Useless: []
2552-Constancy: [(2, 0)]
2552-ContextAliasing: [(6, 8)]

.....
-----
Block: 3913_18
3913_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_18-Stack size: 13 
3913_18-Equals Mem:<< []>> 
3913_18-NonEquals Mem: << [<5,8>]>> 
3913_18-Equals Sto:<< []>> 
3913_18-NonEquals Sto: << []>> 
3913_18-Useless: []
3913_18-Constancy: [(5, 0)]
3913_18-ContextAliasing: []

.....
-----
Block: 3994
3994Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3994-Stack size: 8 
3994-Equals Mem:<< []>> 
3994-NonEquals Mem: << [<5,8>]>> 
3994-Equals Sto:<< []>> 
3994-NonEquals Sto: << []>> 
3994-Useless: []
3994-Constancy: []
3994-ContextAliasing: [(4, 5)]

.....
-----
Block: 3913_17
3913_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_17-Stack size: 13 
3913_17-Equals Mem:<< []>> 
3913_17-NonEquals Mem: << [<5,8>]>> 
3913_17-Equals Sto:<< []>> 
3913_17-NonEquals Sto: << []>> 
3913_17-Useless: []
3913_17-Constancy: []
3913_17-ContextAliasing: []

.....
-----
Block: 3913_16
3913_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_16-Stack size: 10 
3913_16-Equals Mem:<< []>> 
3913_16-NonEquals Mem: << [<5,8>]>> 
3913_16-Equals Sto:<< []>> 
3913_16-NonEquals Sto: << []>> 
3913_16-Useless: []
3913_16-Constancy: [(1, 0)]
3913_16-ContextAliasing: []

.....
-----
Block: 3913_15
3913_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_15-Stack size: 9 
3913_15-Equals Mem:<< []>> 
3913_15-NonEquals Mem: << [<5,8>]>> 
3913_15-Equals Sto:<< []>> 
3913_15-NonEquals Sto: << []>> 
3913_15-Useless: []
3913_15-Constancy: []
3913_15-ContextAliasing: []

.....
-----
Block: 2735
2735Instr:<<['JUMPDEST', 'PUSH20 0x99995d080a1bfa91d065dd14c567089d103bfbb9', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH32 0x329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1', 'DUP1', 'SLOAD', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH2 0x0afe', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
2735-Stack size: 5 
2735-Equals Mem:<< []>> 
2735-NonEquals Mem: << [<5,8>]>> 
2735-Equals Sto:<< []>> 
2735-NonEquals Sto: << []>> 
2735-Useless: []
2735-Constancy: []
2735-ContextAliasing: []

.....
-----
Block: 3913_14
3913_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_14-Stack size: 12 
3913_14-Equals Mem:<< []>> 
3913_14-NonEquals Mem: << [<5,8>]>> 
3913_14-Equals Sto:<< []>> 
3913_14-NonEquals Sto: << []>> 
3913_14-Useless: []
3913_14-Constancy: [(5, 0)]
3913_14-ContextAliasing: []

.....
-----
Block: 3913_13
3913_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_13-Stack size: 12 
3913_13-Equals Mem:<< []>> 
3913_13-NonEquals Mem: << [<5,8>]>> 
3913_13-Equals Sto:<< []>> 
3913_13-NonEquals Sto: << []>> 
3913_13-Useless: []
3913_13-Constancy: [(6, 0)]
3913_13-ContextAliasing: []

.....
-----
Block: 3913_12
3913_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_12-Stack size: 9 
3913_12-Equals Mem:<< []>> 
3913_12-NonEquals Mem: << [<5,8>]>> 
3913_12-Equals Sto:<< []>> 
3913_12-NonEquals Sto: << []>> 
3913_12-Useless: []
3913_12-Constancy: []
3913_12-ContextAliasing: []

.....
-----
Block: 2899
2899Instr:<<['JUMPDEST', 'PUSH18 0x1c1d6ab92f943ed4a31da8f447fd96589960', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH32 0xb0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631', 'DUP1', 'SLOAD', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH2 0x0ba0', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
2899-Stack size: 5 
2899-Equals Mem:<< []>> 
2899-NonEquals Mem: << [<5,8>]>> 
2899-Equals Sto:<< []>> 
2899-NonEquals Sto: << []>> 
2899-Useless: []
2899-Constancy: []
2899-ContextAliasing: []

.....
-----
Block: 3913_11
3913_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_11-Stack size: 12 
3913_11-Equals Mem:<< []>> 
3913_11-NonEquals Mem: << [<5,8>]>> 
3913_11-Equals Sto:<< []>> 
3913_11-NonEquals Sto: << []>> 
3913_11-Useless: []
3913_11-Constancy: [(5, 0)]
3913_11-ContextAliasing: []

.....
-----
Block: 3913_10
3913_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_10-Stack size: 12 
3913_10-Equals Mem:<< []>> 
3913_10-NonEquals Mem: << [<5,8>]>> 
3913_10-Equals Sto:<< []>> 
3913_10-NonEquals Sto: << []>> 
3913_10-Useless: []
3913_10-Constancy: [(6, 0)]
3913_10-ContextAliasing: []

.....
-----
Block: 3913_9
3913_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_9-Stack size: 9 
3913_9-Equals Mem:<< []>> 
3913_9-NonEquals Mem: << [<5,8>]>> 
3913_9-Equals Sto:<< []>> 
3913_9-NonEquals Sto: << []>> 
3913_9-Useless: []
3913_9-Constancy: []
3913_9-ContextAliasing: []

.....
-----
Block: 3061
3061Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH2 0x0c13', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
3061-Stack size: 5 
3061-Equals Mem:<< []>> 
3061-NonEquals Mem: << [<5,8>]>> 
3061-Equals Sto:<< []>> 
3061-NonEquals Sto: << []>> 
3061-Useless: []
3061-Constancy: []
3061-ContextAliasing: []

.....
-----
Block: 3913_8
3913_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_8-Stack size: 12 
3913_8-Equals Mem:<< []>> 
3913_8-NonEquals Mem: << [<5,8>]>> 
3913_8-Equals Sto:<< []>> 
3913_8-NonEquals Sto: << []>> 
3913_8-Useless: []
3913_8-Constancy: [(5, 0)]
3913_8-ContextAliasing: []

.....
-----
Block: 3913_7
3913_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_7-Stack size: 12 
3913_7-Equals Mem:<< []>> 
3913_7-NonEquals Mem: << [<5,8>]>> 
3913_7-Equals Sto:<< []>> 
3913_7-NonEquals Sto: << []>> 
3913_7-Useless: []
3913_7-Constancy: [(6, 0)]
3913_7-ContextAliasing: []

.....
-----
Block: 1402
1402Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'DUP3', 'DUP1', 'DUP3', 'LT', 'ISZERO', 'PUSH2 0x05b3', 'JUMPI']>> 
1402-Stack size: 4 
1402-Equals Mem:<< []>> 
1402-NonEquals Mem: << [<11,14>]>> 
1402-Equals Sto:<< []>> 
1402-NonEquals Sto: << []>> 
1402-Useless: []
1402-Constancy: []
1402-ContextAliasing: []

.....
-----
Block: 1436
1436Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x031d', 'SWAP1', 'PUSH2 0x0f02', 'JUMP']>> 
1436-Stack size: 7 
1436-Equals Mem:<< []>> 
1436-NonEquals Mem: << [<6,1>]>> 
1436-Equals Sto:<< []>> 
1436-NonEquals Sto: << []>> 
1436-Useless: [6]
1436-Constancy: [(2, 0)]
1436-ContextAliasing: []

.....
-----
Block: 1459
1459Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'ORIGIN', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP6', 'SWAP1', 'DUP6', 'SWAP1', 'DUP2', 'GT', 'ISZERO', 'DUP1', 'PUSH2 0x05f0', 'JUMPI']>> 
1459-Stack size: 7 
1459-Equals Mem:<< [<11,23>, <16,26>]>> 
1459-NonEquals Mem: << [<11,16>, <11,26>, <16,23>, <23,26>]>> 
1459-Equals Sto:<< []>> 
1459-NonEquals Sto: << []>> 
1459-Useless: []
1459-Constancy: [(2, 0)]
1459-ContextAliasing: []

.....
-----
Block: 1525
1525Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x28', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x031d', 'JUMP']>> 
1525-Stack size: 9 
1525-Equals Mem:<< []>> 
1525-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1525-Equals Sto:<< []>> 
1525-NonEquals Sto: << []>> 
1525-Useless: []
1525-Constancy: [(4, 0)]
1525-ContextAliasing: []

.....
-----
Block: 1613
1613Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP9', 'SWAP3', 'SWAP1', 'PUSH2 0x0674', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f5d', 'JUMP']>> 
1613-Stack size: 9 
1613-Equals Mem:<< []>> 
1613-NonEquals Mem: << [<11,14>]>> 
1613-Equals Sto:<< []>> 
1613-NonEquals Sto: << []>> 
1613-Useless: []
1613-Constancy: [(4, 0)]
1613-ContextAliasing: []

.....
-----
Block: 3913_6
3913_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_6-Stack size: 17 
3913_6-Equals Mem:<< []>> 
3913_6-NonEquals Mem: << [<5,8>]>> 
3913_6-Equals Sto:<< []>> 
3913_6-NonEquals Sto: << []>> 
3913_6-Useless: []
3913_6-Constancy: [(12, 0), (5, 0)]
3913_6-ContextAliasing: []

.....
-----
Block: 3913_5
3913_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_5-Stack size: 17 
3913_5-Equals Mem:<< []>> 
3913_5-NonEquals Mem: << [<5,8>]>> 
3913_5-Equals Sto:<< []>> 
3913_5-NonEquals Sto: << []>> 
3913_5-Useless: []
3913_5-Constancy: [(12, 0), (5, 0)]
3913_5-ContextAliasing: []

.....
-----
Block: 1698
1698Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'ORIGIN', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP9', 'SWAP3', 'SWAP1', 'PUSH2 0x06d3', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f5d', 'JUMP']>> 
1698-Stack size: 9 
1698-Equals Mem:<< [<10,22>, <15,25>]>> 
1698-NonEquals Mem: << [<10,15>, <10,25>, <15,22>, <22,25>]>> 
1698-Equals Sto:<< []>> 
1698-NonEquals Sto: << []>> 
1698-Useless: []
1698-Constancy: [(4, 0)]
1698-ContextAliasing: []

.....
-----
Block: 3913_4
3913_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_4-Stack size: 17 
3913_4-Equals Mem:<< []>> 
3913_4-NonEquals Mem: << [<5,8>]>> 
3913_4-Equals Sto:<< []>> 
3913_4-NonEquals Sto: << []>> 
3913_4-Useless: []
3913_4-Constancy: [(12, 0), (5, 0)]
3913_4-ContextAliasing: []

.....
-----
Block: 486
486Instr:<<['JUMPDEST', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x03', 'DUP2', 'MSTORE', 'PUSH3 0x444959', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x010d', 'JUMP']>> 
486-Stack size: 1 
486-Equals Mem:<< [<9,3>]>> 
486-NonEquals Mem: << [<9,12>, <9,19>, <12,3>, <12,19>, <19,3>]>> 
486-Equals Sto:<< []>> 
486-NonEquals Sto: << []>> 
486-Useless: []
486-Constancy: []
486-ContextAliasing: []

.....
-----
Block: 3331
3331Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
3331-Stack size: 4 
3331-Equals Mem:<< []>> 
3331-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
3331-Equals Sto:<< []>> 
3331-NonEquals Sto: << []>> 
3331-Useless: []
3331-Constancy: []
3331-ContextAliasing: []

.....
-----
Block: 3355
3355Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x0d12', 'JUMP']>> 
3355-Stack size: 8 
3355-Equals Mem:<< []>> 
3355-NonEquals Mem: << [<11,5>]>> 
3355-Equals Sto:<< []>> 
3355-NonEquals Sto: << []>> 
3355-Useless: []
3355-Constancy: [(3, 0), (2, 32)]
3355-ContextAliasing: []

.....
-----
Block: 390_0
390_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x011a', 'JUMP']>> 
390_0-Stack size: 2 
390_0-Equals Mem:<< []>> 
390_0-NonEquals Mem: << [<12,2>]>> 
390_0-Equals Sto:<< []>> 
390_0-NonEquals Sto: << []>> 
390_0-Useless: []
390_0-Constancy: [(0, 0)]
390_0-ContextAliasing: []

.....
-----
Block: 454
454Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
454-Stack size: 3 
454-Equals Mem:<< []>> 
454-NonEquals Mem: << [<10,13>]>> 
454-Equals Sto:<< []>> 
454-NonEquals Sto: << []>> 
454-Useless: []
454-Constancy: []
454-ContextAliasing: []

.....
-----
Block: 1212
1212Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a204d73672e73656e646572206e6f742044657374696e79537761', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x3817', 'PUSH1 0xf1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x031d', 'JUMP']>> 
1212-Stack size: 5 
1212-Equals Mem:<< []>> 
1212-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1212-Equals Sto:<< []>> 
1212-NonEquals Sto: << []>> 
1212-Useless: []
1212-Constancy: [(0, 0)]
1212-ContextAliasing: []

.....
-----
Block: 3913_3
3913_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_3-Stack size: 13 
3913_3-Equals Mem:<< []>> 
3913_3-NonEquals Mem: << [<5,8>]>> 
3913_3-Equals Sto:<< []>> 
3913_3-NonEquals Sto: << []>> 
3913_3-Useless: []
3913_3-Constancy: [(8, 0), (5, 0)]
3913_3-ContextAliasing: []

.....
-----
Block: 1311
1311Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP5', 'SWAP3', 'SWAP1', 'PUSH2 0x054b', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
1311-Stack size: 9 
1311-Equals Mem:<< []>> 
1311-NonEquals Mem: << [<16,19>]>> 
1311-Equals Sto:<< []>> 
1311-NonEquals Sto: << [<3,24>]>> 
1311-Useless: []
1311-Constancy: [(4, 0), (1, 0)]
1311-ContextAliasing: []

.....
-----
Block: 3913_2
3913_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_2-Stack size: 13 
3913_2-Equals Mem:<< []>> 
3913_2-NonEquals Mem: << [<5,8>]>> 
3913_2-Equals Sto:<< []>> 
3913_2-NonEquals Sto: << []>> 
3913_2-Useless: []
3913_2-Constancy: [(8, 0), (5, 0)]
3913_2-ContextAliasing: []

.....
-----
Block: 390
390Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x011a', 'JUMP']>> 
390-Stack size: 3 
390-Equals Mem:<< []>> 
390-NonEquals Mem: << [<12,2>]>> 
390-Equals Sto:<< []>> 
390-NonEquals Sto: << []>> 
390-Useless: []
390-Constancy: []
390-ContextAliasing: []

.....
-----
Block: 740
740Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'DUP3', 'DUP1', 'DUP3', 'LT', 'ISZERO', 'PUSH2 0x0326', 'JUMPI']>> 
740-Stack size: 5 
740-Equals Mem:<< []>> 
740-NonEquals Mem: << [<11,14>]>> 
740-Equals Sto:<< []>> 
740-NonEquals Sto: << []>> 
740-Useless: []
740-Constancy: []
740-ContextAliasing: []

.....
-----
Block: 774
774Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x031d', 'SWAP1', 'PUSH2 0x0f02', 'JUMP']>> 
774-Stack size: 8 
774-Equals Mem:<< []>> 
774-NonEquals Mem: << [<6,1>]>> 
774-Equals Sto:<< []>> 
774-NonEquals Sto: << []>> 
774-Useless: []
774-Constancy: [(2, 0)]
774-ContextAliasing: []

.....
-----
Block: 806
806Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'CALLER', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP7', 'SWAP1', 'DUP6', 'SWAP1', 'DUP2', 'GT', 'ISZERO', 'DUP1', 'PUSH2 0x0363', 'JUMPI']>> 
806-Stack size: 8 
806-Equals Mem:<< [<11,23>, <16,26>]>> 
806-NonEquals Mem: << [<11,16>, <11,26>, <16,23>, <23,26>]>> 
806-Equals Sto:<< []>> 
806-NonEquals Sto: << []>> 
806-Useless: []
806-Constancy: [(2, 0)]
806-ContextAliasing: []

.....
-----
Block: 872
872Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x363637bbb0b731b297', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x031d', 'JUMP']>> 
872-Stack size: 10 
872-Equals Mem:<< []>> 
872-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
872-Equals Sto:<< []>> 
872-NonEquals Sto: << []>> 
872-Useless: []
872-Constancy: [(4, 0)]
872-ContextAliasing: []

.....
-----
Block: 961
961Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP9', 'SWAP3', 'SWAP1', 'PUSH2 0x03e8', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f5d', 'JUMP']>> 
961-Stack size: 10 
961-Equals Mem:<< []>> 
961-NonEquals Mem: << [<11,14>]>> 
961-Equals Sto:<< []>> 
961-NonEquals Sto: << []>> 
961-Useless: []
961-Constancy: [(4, 0)]
961-ContextAliasing: []

.....
-----
Block: 3913_1
3913_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_1-Stack size: 18 
3913_1-Equals Mem:<< []>> 
3913_1-NonEquals Mem: << [<5,8>]>> 
3913_1-Equals Sto:<< []>> 
3913_1-NonEquals Sto: << []>> 
3913_1-Useless: []
3913_1-Constancy: [(12, 0), (5, 0)]
3913_1-ContextAliasing: []

.....
-----
Block: 1000
1000Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP9', 'SWAP3', 'SWAP1', 'PUSH2 0x0414', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f70', 'JUMP']>> 
1000-Stack size: 14 
1000-Equals Mem:<< []>> 
1000-NonEquals Mem: << [<16,19>]>> 
1000-Equals Sto:<< [<3,24>]>> 
1000-NonEquals Sto: << []>> 
1000-Useless: []
1000-Constancy: [(8, 0), (1, 0)]
1000-ContextAliasing: []

.....
-----
Block: 3913_0
3913_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913_0-Stack size: 18 
3913_0-Equals Mem:<< []>> 
3913_0-NonEquals Mem: << [<5,8>]>> 
3913_0-Equals Sto:<< []>> 
3913_0-NonEquals Sto: << []>> 
3913_0-Useless: []
3913_0-Constancy: [(12, 0), (5, 0)]
3913_0-ContextAliasing: []

.....
-----
Block: 1066
1066Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'CALLER', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP9', 'SWAP3', 'SWAP1', 'PUSH2 0x045b', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f5d', 'JUMP']>> 
1066-Stack size: 10 
1066-Equals Mem:<< [<10,22>, <15,25>]>> 
1066-NonEquals Mem: << [<10,15>, <10,25>, <15,22>, <22,25>]>> 
1066-Equals Sto:<< []>> 
1066-NonEquals Sto: << []>> 
1066-Useless: []
1066-Constancy: [(4, 0)]
1066-ContextAliasing: []

.....
-----
Block: 3913
3913Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3913-Stack size: 18 
3913-Equals Mem:<< []>> 
3913-NonEquals Mem: << [<5,8>]>> 
3913-Equals Sto:<< []>> 
3913-NonEquals Sto: << []>> 
3913-Useless: []
3913-Constancy: [(12, 0), (5, 0)]
3913-ContextAliasing: []

.....
-----
Block: 632
632Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP1', 'DUP6', 'MSTORE', 'SWAP3', 'MSTORE', 'DUP1', 'DUP4', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'MLOAD', 'SWAP2', 'SWAP3', 'SWAP1', 'SWAP2', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP1', 'PUSH2 0x02d2', 'SWAP1', 'DUP7', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
632-Stack size: 4 
632-Equals Mem:<< [<5,24>, <10,26>]>> 
632-NonEquals Mem: << [<5,33>, <5,10>, <5,26>, <5,44>, <10,33>, <10,24>, <10,44>, <24,33>, <24,26>, <24,44>, <26,33>, <26,44>, <44,14>, <44,29>, <44,33>, <14,33>, <29,33>]>> 
632-Equals Sto:<< []>> 
632-NonEquals Sto: << []>> 
632-Useless: []
632-Constancy: []
632-ContextAliasing: []

.....
-----
Block: 233
233Instr:<<['JUMPDEST', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x0c', 'DUP2', 'MSTORE', 'PUSH12 0x2232b9ba34b73caa37b5b2b7', 'PUSH1 0xa1', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
233-Stack size: 1 
233-Equals Mem:<< [<9,3>]>> 
233-NonEquals Mem: << [<9,12>, <9,19>, <12,3>, <12,19>, <19,3>]>> 
233-Equals Sto:<< []>> 
233-NonEquals Sto: << []>> 
233-Useless: []
233-Constancy: []
233-ContextAliasing: []

.....
-----
Block: 282
282Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
282-Stack size: 2 
282-Equals Mem:<< []>> 
282-NonEquals Mem: << []>> 
282-Equals Sto:<< []>> 
282-NonEquals Sto: << []>> 
282-Useless: []
282-Constancy: []
282-ContextAliasing: []

.....
-----
Block: 797_3
797_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
797_3-Stack size: 8 
797_3-Equals Mem:<< []>> 
797_3-NonEquals Mem: << []>> 
797_3-Equals Sto:<< []>> 
797_3-NonEquals Sto: << []>> 
797_3-Useless: []
797_3-Constancy: [(3, 0)]
797_3-ContextAliasing: []

.....
-----
Block: 797_4
797_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
797_4-Stack size: 5 
797_4-Equals Mem:<< []>> 
797_4-NonEquals Mem: << []>> 
797_4-Equals Sto:<< []>> 
797_4-NonEquals Sto: << []>> 
797_4-Useless: []
797_4-Constancy: []
797_4-ContextAliasing: []

.....
-----
Block: 797_2
797_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
797_2-Stack size: 10 
797_2-Equals Mem:<< []>> 
797_2-NonEquals Mem: << []>> 
797_2-Equals Sto:<< []>> 
797_2-NonEquals Sto: << []>> 
797_2-Useless: []
797_2-Constancy: [(5, 0)]
797_2-ContextAliasing: []

.....
-----
Block: 797_1
797_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
797_1-Stack size: 6 
797_1-Equals Mem:<< []>> 
797_1-NonEquals Mem: << []>> 
797_1-Equals Sto:<< []>> 
797_1-NonEquals Sto: << []>> 
797_1-Useless: []
797_1-Constancy: [(1, 0)]
797_1-ContextAliasing: []

.....
-----
Block: 282_0
282_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
282_0-Stack size: 3 
282_0-Equals Mem:<< []>> 
282_0-NonEquals Mem: << []>> 
282_0-Equals Sto:<< []>> 
282_0-NonEquals Sto: << []>> 
282_0-Useless: []
282_0-Constancy: []
282_0-ContextAliasing: []

.....
-----
Block: 797_0
797_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
797_0-Stack size: 9 
797_0-Equals Mem:<< []>> 
797_0-NonEquals Mem: << []>> 
797_0-Equals Sto:<< []>> 
797_0-NonEquals Sto: << []>> 
797_0-Useless: []
797_0-Constancy: [(3, 0)]
797_0-ContextAliasing: []

.....
-----
Block: 797
797Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
797-Stack size: 11 
797-Equals Mem:<< []>> 
797-NonEquals Mem: << []>> 
797-Equals Sto:<< []>> 
797-NonEquals Sto: << []>> 
797-Useless: []
797-Constancy: [(5, 0)]
797-ContextAliasing: []

.....
-----
Block: 1652
1652Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'POP', 'DUP2', 'SWAP1', 'SSTORE', 'POP', 'DUP6', 'PUSH1 0x01', 'PUSH0', 'DUP3', 'DUP3', 'SLOAD', 'PUSH2 0x068c', 'SWAP2', 'SWAP1', 'PUSH2 0x0f5d', 'JUMP']>> 
1652-Stack size: 13 
1652-Equals Mem:<< []>> 
1652-NonEquals Mem: << []>> 
1652-Equals Sto:<< []>> 
1652-NonEquals Sto: << [<6,13>]>> 
1652-Useless: []
1652-Constancy: [(8, 0), (1, 0)]
1652-ContextAliasing: []

.....
-----
Block: 1935
1935Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'SUB', 'NOT', 'SWAP1', 'SWAP2', 'AND', 'OR', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SLOAD', 'PUSH2 0x1e61', 'SWAP1', 'PUSH2 0x07c5', 'SWAP1', 'PUSH3 0x76adf1', 'PUSH2 0x0f83', 'JUMP']>> 
1935-Stack size: 4 
1935-Equals Mem:<< []>> 
1935-NonEquals Mem: << []>> 
1935-Equals Sto:<< [<3,26>]>> 
1935-NonEquals Sto: << [<3,28>, <26,28>]>> 
1935-Useless: []
1935-Constancy: []
1935-ContextAliasing: []

.....
-----
Block: 3270
3270Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'SWAP1', 'CALLER', 'SWAP1', 'PUSH0', 'DUP1', 'MLOAD', 'PUSH1 0x20', 'PUSH2 0x0fc7', 'DUP4', 'CODECOPY', 'DUP2', 'MLOAD', 'SWAP2', 'MSTORE', 'SWAP1', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'LOG3', 'POP', 'PUSH1 0x01', 'SWAP5', 'SWAP4', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
3270-Stack size: 11 
3270-Equals Mem:<< []>> 
3270-NonEquals Mem: << []>> 
3270-Equals Sto:<< []>> 
3270-NonEquals Sto: << []>> 
3270-Useless: [31]
3270-Constancy: [(6, 0), (1, 0)]
3270-ContextAliasing: []

.....
-----
Block: 3091
3091Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'ORIGIN', 'SWAP1', 'POP', 'PUSH0', 'PUSH0', 'DUP1', 'MLOAD', 'PUSH1 0x20', 'PUSH2 0x0fc7', 'DUP4', 'CODECOPY', 'DUP2', 'MLOAD', 'SWAP2', 'MSTORE', 'PUSH2 0x0c37', 'PUSH2 0x1e61', 'PUSH2 0x97e5', 'PUSH2 0x0f83', 'JUMP']>> 
3091-Stack size: 8 
3091-Equals Mem:<< []>> 
3091-NonEquals Mem: << []>> 
3091-Equals Sto:<< []>> 
3091-NonEquals Sto: << []>> 
3091-Useless: [19]
3091-Constancy: [(1, 0)]
3091-ContextAliasing: []

.....
-----
Block: 1753
1753Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP7', 'DUP2', 'MSTORE', 'PUSH0', 'SWAP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP10', 'AND', 'SWAP1', 'PUSH0', 'DUP1', 'MLOAD', 'PUSH1 0x20', 'PUSH2 0x0fc7', 'DUP4', 'CODECOPY', 'DUP2', 'MLOAD', 'SWAP2', 'MSTORE', 'SWAP1', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'LOG3', 'POP', 'PUSH1 0x01', 'SWAP7', 'SWAP6', 'POP', 'POP', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
1753-Stack size: 9 
1753-Equals Mem:<< []>> 
1753-NonEquals Mem: << []>> 
1753-Equals Sto:<< []>> 
1753-NonEquals Sto: << []>> 
1753-Useless: [26]
1753-Constancy: [(4, 0)]
1753-ContextAliasing: []

.....
-----
Block: 1355
1355Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'DUP3', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'SWAP1', 'PUSH0', 'SWAP1', 'PUSH0', 'DUP1', 'MLOAD', 'PUSH1 0x20', 'PUSH2 0x0fc7', 'DUP4', 'CODECOPY', 'DUP2', 'MLOAD', 'SWAP2', 'MSTORE', 'SWAP1', 'PUSH1 0x20', 'ADD', 'PUSH2 0x02d2', 'JUMP']>> 
1355-Stack size: 9 
1355-Equals Mem:<< []>> 
1355-NonEquals Mem: << []>> 
1355-Equals Sto:<< []>> 
1355-NonEquals Sto: << []>> 
1355-Useless: [31]
1355-Constancy: [(4, 0), (1, 0)]
1355-ContextAliasing: []

.....
-----
Block: 1121
1121Instr:<<['JUMPDEST', 'DUP7', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP9', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'DUP1', 'MLOAD', 'PUSH1 0x20', 'PUSH2 0x0fc7', 'DUP4', 'CODECOPY', 'DUP2', 'MLOAD', 'SWAP2', 'MSTORE', 'DUP9', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x0493', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
1121-Stack size: 10 
1121-Equals Mem:<< []>> 
1121-NonEquals Mem: << []>> 
1121-Equals Sto:<< []>> 
1121-NonEquals Sto: << []>> 
1121-Useless: [25]
1121-Constancy: [(4, 0)]
1121-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.0712856970494613s

*************************************************************
FILERES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken;186;377;50;117;99;6;0.177892433013767


Aux path: /tmp/0x00//ethir_299ffba4a90749068f2f7859ee42b787
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/

NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(8)', 'mstore'), 2), (('32', 's(11)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_590_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_590_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2261

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 42

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_590;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;590;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;2261;42;36;2261;42;36;0;0;0;False;False;False;False;1.131067116977647;2;6;2100;2100


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP

Optimized code stored in /tmp/0x00/DestinyToken_330_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_330_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_330;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;330;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP;33;14;10;33;14;10;0;0;0;False;False;False;False;0.019767990976106375;0;1;0;0


NORMAL EXECUTION

Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0c7c)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 0)', 'nop(CALLER)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP4)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH c7c)']
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0c7c)']

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x0c7c JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x0 CALLER DUP2 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP4 DUP3 LT ISZERO PUSH2 0xc7c JUMPI

Optimized code stored in /tmp/0x00/DestinyToken_3148_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3148_statistics.csv

Estimated initial gas: 2187
Estimated gas optimized: 2185

Estimated initial size in bytes: 25
Estimated size optimized in bytes: 25

Initial number of instructions: 20
Final number of instructions: 19

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3148;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3148;1;False;True;True;JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x0c7c JUMPI;JUMPDEST PUSH1 0x0 CALLER DUP2 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP4 DUP3 LT ISZERO PUSH2 0xc7c JUMPI;2187;25;20;2185;25;19;2;0;1;False;False;False;False;0.44536212796811014;0;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 031d)', 'nop(SWAP1)', 'nop(PUSH 0f02)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 31d)', 'nop(SWAP1)', 'nop(PUSH 4)', 'nop(ADD)', 'nop(PUSH f02)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 031d)', 'nop(SWAP1)', 'nop(PUSH 0f02)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x031d SWAP1 PUSH2 0x0f02 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x31d SWAP1 PUSH1 0x4 ADD PUSH2 0xf02 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_3173_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3173_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 49

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3173;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3173;1;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x031d SWAP1 PUSH2 0x0f02 JUMP;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x31d SWAP1 PUSH1 0x4 ADD PUSH2 0xf02 JUMP;44;23;13;38;49;11;6;-26;2;False;False;False;False;0.026005562976934016;1;1;0;0


NORMAL EXECUTION

Storage order: [(('0', '64', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0c9a)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0c9a)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0c9a)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0c9a SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0c9a SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_3196_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3196_statistics.csv

Estimated initial gas: 2194
Estimated gas optimized: 2194

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 30

Initial number of instructions: 23
Final number of instructions: 23

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3196;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3196;1;True;True;False;JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0c9a SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0c9a SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;2194;30;23;2194;30;23;0;0;0;False;False;False;False;1.1260530109866522;0;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(6)', 's(8)', 'sstore'), 2), (('0', '64', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: [(0, 2)]
Storage dep simplified: [(0, 2)]
Memory order: [(('0', 's(15)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0cc6)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0cc6)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0cc6)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0cc6 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0cc6 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_3226_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3226_statistics.csv

Estimated initial gas: 7223
Estimated gas optimized: 7223

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3226;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3226;1;True;False;False;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0cc6 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x0cc6 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;7223;44;34;7223;44;34;0;0;0;False;False;False;False;1.1795033939997666;2;2;7100;7100


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP

Optimized code stored in /tmp/0x00/DestinyToken_310_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_310_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_310;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;310;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP;39;16;12;39;16;12;0;0;0;False;False;False;False;0.051129196013789624;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 41)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 41)', 'nop(PUSH 4)', 'nop(MSTORE)', 'nop(PUSH 4e487b7100000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH 0)']
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 41)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x41 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT

Optimized code stored in /tmp/0x00/DestinyToken_3562_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3562_statistics.csv

Estimated initial gas: 29
Estimated gas optimized: 25

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 47

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3562;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3562;1;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT;JUMPDEST PUSH1 0x41 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT;29;20;12;25;47;10;4;-27;2;False;False;False;False;0.015241004002746195;1;0;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 's(10)', 'mstore'), 2), (('s(9)', 's(7)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(DUP5)', 'nop(DUP3)', 'nop(ADD)', 'nop(SWAP3)', 'nop(POP)', 'nop(DUP4)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP6)', 'nop(ADD)', 'nop(SWAP2)', 'nop(DUP10)', 'nop(DUP4)', 'nop(GT)', 'nop(ISZERO)', 'nop(PUSH 0e9c)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(DUP5)', 'nop(DUP3)', 'nop(ADD)', 'nop(SWAP3)', 'nop(POP)', 'nop(DUP4)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP6)', 'nop(ADD)', 'nop(SWAP2)', 'nop(DUP10)', 'nop(DUP4)', 'nop(GT)', 'nop(ISZERO)', 'nop(PUSH 0e9c)']
{}
['nop(PUSH 40)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(DUP5)', 'nop(DUP3)', 'nop(ADD)', 'nop(SWAP3)', 'nop(POP)', 'nop(DUP4)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP6)', 'nop(ADD)', 'nop(SWAP2)', 'nop(DUP10)', 'nop(DUP4)', 'nop(GT)', 'nop(ISZERO)', 'nop(PUSH 0e9c)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x0e9c JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x0e9c JUMPI

Optimized code stored in /tmp/0x00/DestinyToken_3711_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3711_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 26
Estimated size optimized in bytes: 26

Initial number of instructions: 23
Final number of instructions: 23

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3711;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3711;1;True;False;False;JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x0e9c JUMPI;JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x0e9c JUMPI;73;26;23;73;26;23;0;0;0;False;False;False;False;1.1686841589980759;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('161', '16314702933647662467689656855', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '12', 'mstore'), 2), (('s(10)', '47687930100186687776244245067688471531529850024927158730406466602945961000960', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 0c)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 34b734ba34b0b634bd32b217)', 'nop(PUSH a1)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 031d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 64)', 'nop(PUSH 20)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(PUSH 4)', 'nop(DUP4)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH c)', 'nop(DUP3)', 'nop(PUSH 24)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 696e697469616c697a65642e0000000000000000000000000000000000000000)', 'nop(DUP3)', 'nop(PUSH 44)', 'nop(ADD)', 'nop(MSTORE)', 'nop(ADD)', 'nop(PUSH 31d)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 0c)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 34b734ba34b0b634bd32b217)', 'nop(PUSH a1)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 031d)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0c PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x34b734ba34b0b634bd32b217 PUSH1 0xa1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x031d JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xc DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x696e697469616c697a65642e0000000000000000000000000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x31d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1881_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1881_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1881;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1881;1;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0c PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x34b734ba34b0b634bd32b217 PUSH1 0xa1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x031d JUMP;PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xc DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x696e697469616c697a65642e0000000000000000000000000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x31d JUMP;89;54;28;77;97;24;12;-43;4;False;False;False;False;1.1088738339603879;2;4;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(17)', 's(0)', 'sstore'), 2), (('0', 'sload1'), 1), (('1', 'sload2'), 1)]
Storage dep: [(2, 4), (2, 3), (0, 2)]
Storage dep simplified: [(2, 3), (2, 4), (0, 2)]
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '55373201939786013732116977760349802004989882050231404359387360955102056049795', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH0)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(PUSH 7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP3)', 'nop(SSTORE)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(SLOAD)', 'nop(SWAP2)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH 7777777777777777777777777777777777777777)', 'nop(SWAP1)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP1)', 'nop(PUSH 1e61)', 'nop(SWAP1)', 'nop(PUSH 085b)', 'nop(SWAP1)', 'nop(PUSH 76adf1)', 'nop(PUSH 0f83)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH0)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(PUSH 7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP3)', 'nop(SSTORE)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(SLOAD)', 'nop(SWAP2)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH 7777777777777777777777777777777777777777)', 'nop(SWAP1)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP1)', 'nop(PUSH 1e61)', 'nop(SWAP1)', 'nop(PUSH 085b)', 'nop(SWAP1)', 'nop(PUSH 76adf1)', 'nop(PUSH 0f83)']
{}
['nop(PUSH0)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(PUSH 7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP3)', 'nop(SSTORE)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(SLOAD)', 'nop(SWAP2)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH 7777777777777777777777777777777777777777)', 'nop(SWAP1)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP1)', 'nop(PUSH 1e61)', 'nop(SWAP1)', 'nop(PUSH 085b)', 'nop(SWAP1)', 'nop(PUSH 76adf1)', 'nop(PUSH 0f83)']

Initial sequence (basic block per line):
JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH32 0x7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SLOAD PUSH1 0x01 SLOAD SWAP2 AND SWAP1 PUSH20 0x7777777777777777777777777777777777777777 SWAP1 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x1e61 SWAP1 PUSH2 0x085b SWAP1 PUSH3 0x76adf1 PUSH2 0x0f83 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH32 0x7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SLOAD PUSH1 0x01 SLOAD SWAP2 AND SWAP1 PUSH20 0x7777777777777777777777777777777777777777 SWAP1 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x1e61 SWAP1 PUSH2 0x085b SWAP1 PUSH3 0x76adf1 PUSH2 0x0f83 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1999_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1999_statistics.csv

Estimated initial gas: 9440
Estimated gas optimized: 9440

Estimated initial size in bytes: 140
Estimated size optimized in bytes: 140

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1999;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1999;1;True;False;False;JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH32 0x7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SLOAD PUSH1 0x01 SLOAD SWAP2 AND SWAP1 PUSH20 0x7777777777777777777777777777777777777777 SWAP1 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x1e61 SWAP1 PUSH2 0x085b SWAP1 PUSH3 0x76adf1 PUSH2 0x0f83 JUMP;JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH32 0x7a6c1f242ee0411f1667669020a7fa737fde9649ce8d8fec89f5c1cde8766c83 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SLOAD PUSH1 0x01 SLOAD SWAP2 AND SWAP1 PUSH20 0x7777777777777777777777777777777777777777 SWAP1 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x1e61 SWAP1 PUSH2 0x085b SWAP1 PUSH3 0x76adf1 PUSH2 0x0f83 JUMP;9440;140;41;9440;140;41;0;0;0;False;False;False;False;1.1844096429995261;2;2;9300;9300


NORMAL EXECUTION

Storage order: [(('104169740227862947704123559934471243435330663770791152840660250700415900183505', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '682034097421088028495052921934265409172768520055', 'mstore'), 2), (('32', '2', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 7777777777777777777777777777777777777777)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH e64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 08eb)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH e64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1)', 'nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 7777777777777777777777777777777777777777)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(PUSH 8eb)', 'nop(DUP4)', 'nop(PUSH e64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1)', 'nop(SLOAD)', 'nop(PUSH f70)']
{}
['nop(PUSH 7777777777777777777777777777777777777777)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH e64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 08eb)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST PUSH20 0x7777777777777777777777777777777777777777 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0xe64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x08eb SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0xe64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH20 0x7777777777777777777777777777777777777777 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0x8eb DUP4 PUSH32 0xe64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1 SLOAD PUSH2 0xf70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_2204_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_2204_statistics.csv

Estimated initial gas: 2162
Estimated gas optimized: 2145

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 107

Initial number of instructions: 21
Final number of instructions: 15

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_2204;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;2204;1;False;True;True;JUMPDEST PUSH20 0x7777777777777777777777777777777777777777 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0xe64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x08eb SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST PUSH32 0xe64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH20 0x7777777777777777777777777777777777777777 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0x8eb DUP4 PUSH32 0xe64dfbcbafdf5541796997694339436e11ba40e54c30e154cfc300042d95ebd1 SLOAD PUSH2 0xf70 JUMP;2162;79;21;2145;107;15;17;-28;6;False;False;False;False;0.7415637309895828;0;0;2100;2100


NORMAL EXECUTION

Storage order: [(('48210256156808294423517103555528798462269305769718889304213717144748189496268', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '57005', 'mstore'), 2), (('32', '2', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH dead)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0995)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc)', 'nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH dead)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(PUSH 995)', 'nop(DUP4)', 'nop(PUSH 6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc)', 'nop(SLOAD)', 'nop(PUSH f70)']
{}
['nop(PUSH dead)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0995)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST PUSH2 0xdead PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0x6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0995 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xdead PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0x995 DUP4 PUSH32 0x6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc SLOAD PUSH2 0xf70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_2392_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_2392_statistics.csv

Estimated initial gas: 2162
Estimated gas optimized: 2145

Estimated initial size in bytes: 61
Estimated size optimized in bytes: 89

Initial number of instructions: 21
Final number of instructions: 15

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_2392;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;2392;1;False;True;True;JUMPDEST PUSH2 0xdead PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0x6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0995 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST PUSH32 0x6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xdead PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0x995 DUP4 PUSH32 0x6a9609baa168169acaea398c4407efea4be641bb08e21e88806d9836fd9333cc SLOAD PUSH2 0xf70 JUMP;2162;61;21;2145;89;15;17;-28;6;False;False;False;False;0.7389888620236889;0;0;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', 's(8)', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(20)', 'mload0'), 1), (('s(2)', 's(14)', 'mstore'), 2), (('s(9)', 's(1)', 'mstore'), 2), (('0', 's(8)', 'keccak2560'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 20)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(ADD)', 'nop(MLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH0)', 'nop(KECCAK256)', 'nop(PUSH0)', 'nop(DUP3)', 'nop(DUP3)', 'nop(SLOAD)', 'nop(PUSH 0a2d)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
AND(X,AND(X,Y))
[RULE]: Simplification rule type 2: {'id': 'AND_1', 'opcode': '16', 'disasm': 'AND', 'inpt_sk': [1461501637330902918203684832716283019655932542975, 's(23)'], 'outpt_sk': ['s(14)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}
[RULE]: Delete rules: [{'id': 'AND_0', 'opcode': '16', 'disasm': 'AND', 'inpt_sk': [1461501637330902918203684832716283019655932542975, 's(14)'], 'outpt_sk': ['s(14)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 20)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(ADD)', 'nop(MLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH0)', 'nop(KECCAK256)', 'nop(PUSH0)', 'nop(DUP3)', 'nop(DUP3)', 'nop(SLOAD)', 'nop(PUSH 0a2d)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
{}
['nop(PUSH 20)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(ADD)', 'nop(MLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH0)', 'nop(KECCAK256)', 'nop(PUSH0)', 'nop(DUP3)', 'nop(DUP3)', 'nop(SLOAD)', 'nop(PUSH 0a2d)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x0a2d SWAP2 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x0a2d SWAP2 SWAP1 PUSH2 0x0f70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_2552_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_2552_statistics.csv

Estimated initial gas: 2244
Estimated gas optimized: 2244

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 39
Final number of instructions: 39

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_2552;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;2552;1;True;False;False;JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x0a2d SWAP2 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x0a2d SWAP2 SWAP1 PUSH2 0x0f70 JUMP;2244;53;39;2244;53;39;0;0;0;False;False;False;False;1.220588922034949;5;3;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 32)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 32)', 'nop(PUSH 4)', 'nop(MSTORE)', 'nop(PUSH 4e487b7100000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH 0)']
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 32)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x32 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT

Optimized code stored in /tmp/0x00/DestinyToken_3994_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3994_statistics.csv

Estimated initial gas: 29
Estimated gas optimized: 25

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 47

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3994;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3994;1;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT;JUMPDEST PUSH1 0x32 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT;29;20;12;25;47;10;4;-27;2;False;False;False;False;0.016023702977690846;1;0;0;0


NORMAL EXECUTION

Storage order: [(('22882551442855699794486372951426134957175741491789890612767044633216553108401', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '876895706129710775746781926066172944574697962425', 'mstore'), 2), (('32', '2', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 99995d080a1bfa91d065dd14c567089d103bfbb9)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0afe)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1)', 'nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 99995d080a1bfa91d065dd14c567089d103bfbb9)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(PUSH afe)', 'nop(DUP4)', 'nop(PUSH 329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1)', 'nop(SLOAD)', 'nop(PUSH f70)']
{}
['nop(PUSH 99995d080a1bfa91d065dd14c567089d103bfbb9)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0afe)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST PUSH20 0x99995d080a1bfa91d065dd14c567089d103bfbb9 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0x329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0afe SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH20 0x99995d080a1bfa91d065dd14c567089d103bfbb9 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0xafe DUP4 PUSH32 0x329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1 SLOAD PUSH2 0xf70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_2735_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_2735_statistics.csv

Estimated initial gas: 2162
Estimated gas optimized: 2145

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 107

Initial number of instructions: 21
Final number of instructions: 15

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_2735;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;2735;1;False;True;True;JUMPDEST PUSH20 0x99995d080a1bfa91d065dd14c567089d103bfbb9 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0x329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0afe SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST PUSH32 0x329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH20 0x99995d080a1bfa91d065dd14c567089d103bfbb9 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0xafe DUP4 PUSH32 0x329710ad8d784d2c9156f8778d0d70e3a54edd2bf1c0948532ce957ac6f0c3b1 SLOAD PUSH2 0xf70 JUMP;2162;79;21;2145;107;15;17;-28;6;False;False;False;False;0.7542578379507177;0;0;2100;2100


NORMAL EXECUTION

Storage order: [(('80048339386383282772730579810187309068563901925015336319993360067160280958513', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '2449154054437484616128461311682394640128352', 'mstore'), 2), (('32', '2', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 1c1d6ab92f943ed4a31da8f447fd96589960)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH b0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0ba0)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH b0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631)', 'nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 1c1d6ab92f943ed4a31da8f447fd96589960)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(PUSH ba0)', 'nop(DUP4)', 'nop(PUSH b0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631)', 'nop(SLOAD)', 'nop(PUSH f70)']
{}
['nop(PUSH 1c1d6ab92f943ed4a31da8f447fd96589960)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH b0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0ba0)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST PUSH18 0x1c1d6ab92f943ed4a31da8f447fd96589960 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0xb0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0ba0 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0xb0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH18 0x1c1d6ab92f943ed4a31da8f447fd96589960 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0xba0 DUP4 PUSH32 0xb0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631 SLOAD PUSH2 0xf70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_2899_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_2899_statistics.csv

Estimated initial gas: 2162
Estimated gas optimized: 2145

Estimated initial size in bytes: 77
Estimated size optimized in bytes: 105

Initial number of instructions: 21
Final number of instructions: 15

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_2899;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;2899;1;False;True;True;JUMPDEST PUSH18 0x1c1d6ab92f943ed4a31da8f447fd96589960 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH32 0xb0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0ba0 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST PUSH32 0xb0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH18 0x1c1d6ab92f943ed4a31da8f447fd96589960 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH2 0xba0 DUP4 PUSH32 0xb0f9c1280af98dcf7f3a2d3b674a46ad4a5e46bbf3115ee72203dad98c188631 SLOAD PUSH2 0xf70 JUMP;2162;77;21;2145;105;15;17;-28;6;False;False;False;False;0.7662291879532859;0;0;2100;2100


NORMAL EXECUTION

Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(ORIGIN)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0c13)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 0)', 'nop(ORIGIN)', 'nop(PUSH 40)', 'nop(DUP3)', 'nop(PUSH 20)', 'nop(SWAP3)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(PUSH c13)', 'nop(SWAP4)', 'nop(SWAP3)', 'nop(PUSH 2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SWAP2)', 'nop(DUP4)', 'nop(DUP4)', 'nop(SLOAD)', 'nop(PUSH f70)']
{}
['nop(ORIGIN)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0c13)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST ORIGIN PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0c13 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x0 ORIGIN PUSH1 0x40 DUP3 PUSH1 0x20 SWAP3 DUP5 MSTORE PUSH2 0xc13 SWAP4 SWAP3 PUSH1 0x2 SWAP1 MSTORE KECCAK256 SWAP2 DUP4 DUP4 SLOAD PUSH2 0xf70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_3061_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3061_statistics.csv

Estimated initial gas: 2194
Estimated gas optimized: 2192

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 30

Initial number of instructions: 23
Final number of instructions: 22

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3061;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3061;1;True;True;False;JUMPDEST ORIGIN PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x0c13 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST PUSH1 0x0 ORIGIN PUSH1 0x40 DUP3 PUSH1 0x20 SWAP3 DUP5 MSTORE PUSH2 0xc13 SWAP4 SWAP3 PUSH1 0x2 SWAP1 MSTORE KECCAK256 SWAP2 DUP4 DUP4 SLOAD PUSH2 0xf70 JUMP;2194;30;23;2192;30;22;2;0;1;False;False;False;False;1.0831353169633076;0;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 05b3)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(PUSH 40)', 'nop(DUP4)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 5b3)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 05b3)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x05b3 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x5b3 JUMPI

Optimized code stored in /tmp/0x00/DestinyToken_1402_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1402_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2192

Estimated initial size in bytes: 34
Estimated size optimized in bytes: 49

Initial number of instructions: 26
Final number of instructions: 21

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1402;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1402;1;False;True;True;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x05b3 JUMPI;JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x5b3 JUMPI;2206;34;26;2192;49;21;14;-15;5;False;False;False;False;0.5169595599872991;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 031d)', 'nop(SWAP1)', 'nop(PUSH 0f02)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 31d)', 'nop(SWAP1)', 'nop(PUSH 4)', 'nop(ADD)', 'nop(PUSH f02)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 031d)', 'nop(SWAP1)', 'nop(PUSH 0f02)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x031d SWAP1 PUSH2 0x0f02 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x31d SWAP1 PUSH1 0x4 ADD PUSH2 0xf02 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1436_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1436_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 49

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1436;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1436;1;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x031d SWAP1 PUSH2 0x0f02 JUMP;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x31d SWAP1 PUSH1 0x4 ADD PUSH2 0xf02 JUMP;44;23;13;38;49;11;6;-26;2;False;False;False;False;0.027158676995895803;1;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(18)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(21)', 'mstore'), 2), (('32', 's(22)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(ORIGIN)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(GT)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(PUSH 05f0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(ORIGIN)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(GT)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(PUSH 05f0)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(ORIGIN)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(GT)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(PUSH 05f0)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x05f0 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x05f0 JUMPI

Optimized code stored in /tmp/0x00/DestinyToken_1459_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1459_statistics.csv

Estimated initial gas: 2274
Estimated gas optimized: 2274

Estimated initial size in bytes: 48
Estimated size optimized in bytes: 48

Initial number of instructions: 40
Final number of instructions: 40

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1459;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1459;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x05f0 JUMPI;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x05f0 JUMPI;2274;48;40;2274;48;40;0;0;0;False;False;False;False;1.2397334430133924;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('192', '7812742012107383653', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '40', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859100820671745083778533502622993977909345', 'mstore'), 2), (('s(12)', '49041376442327685983450583443845300569967147870487584211451521639864848089088', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1525_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1525_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 88
Estimated size optimized in bytes: 88

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1525;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1525;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP;104;88;33;104;88;33;0;0;0;False;False;False;False;1.123312662995886;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(14)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0674)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0674)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0674)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0674 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0674 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1613_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1613_statistics.csv

Estimated initial gas: 2213
Estimated gas optimized: 2213

Estimated initial size in bytes: 39
Estimated size optimized in bytes: 39

Initial number of instructions: 29
Final number of instructions: 29

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1613;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1613;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0674 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0674 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;2213;39;29;2213;39;29;0;0;0;False;False;False;False;1.1679162940126844;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(14)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(20)', 'mstore'), 2), (('32', 's(21)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(ORIGIN)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 06d3)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(ORIGIN)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 06d3)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(ORIGIN)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 06d3)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']

Initial sequence (basic block per line):
PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x06d3 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized sequence (basic block per line):
PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x06d3 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1698_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1698_statistics.csv

Estimated initial gas: 2271
Estimated gas optimized: 2271

Estimated initial size in bytes: 49
Estimated size optimized in bytes: 49

Initial number of instructions: 39
Final number of instructions: 39

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1698;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1698;1;True;False;False;PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x06d3 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x06d3 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;2271;49;39;2271;49;39;0;0;0;False;False;False;False;1.284376979980152;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('232', '4475225', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(3)', 'mstore'), 2), (('s(2)', '3', 'mstore'), 2), (('s(6)', '30886867794815800825622705303758701230445514149981218171327207469452204441600', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 444959)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 20)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 010d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(PUSH 4449590000000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 3)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 10d)']
{}
['nop(PUSH 40)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 444959)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 20)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 010d)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x03 DUP2 MSTORE PUSH3 0x444959 PUSH1 0xe8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x010d JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE PUSH32 0x4449590000000000000000000000000000000000000000000000000000000000 PUSH1 0x3 DUP3 MSTORE DUP2 PUSH1 0x20 ADD MSTORE PUSH2 0x10d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_486_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_486_statistics.csv

Estimated initial gas: 69
Estimated gas optimized: 57

Estimated initial size in bytes: 31
Estimated size optimized in bytes: 57

Initial number of instructions: 22
Final number of instructions: 18

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_486;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;486;1;False;True;True;JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x03 DUP2 MSTORE PUSH3 0x444959 PUSH1 0xe8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x010d JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE PUSH32 0x4449590000000000000000000000000000000000000000000000000000000000 PUSH1 0x3 DUP3 MSTORE DUP2 PUSH1 0x20 ADD MSTORE PUSH2 0x10d JUMP;69;31;22;57;57;18;12;-26;4;False;False;False;False;0.16478595696389675;1;3;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2), (0, 1), (1, 2)]
Memory dep simplified: [(0, 1), (1, 2)]
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/DestinyToken_3331_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3331_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3331;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3331;1;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;False;False;False;False;0.1286260630004108;0;2;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0d12)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0d12)']
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0d12)']

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d12 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d12 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_3355_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3355_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3355;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3355;1;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d12 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d12 JUMP;53;19;16;53;19;16;0;0;0;False;False;False;False;0.6865413439809345;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_454_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_454_statistics.csv

Estimated initial gas: 2186
Estimated gas optimized: 2169

Estimated initial size in bytes: 26
Estimated size optimized in bytes: 39

Initial number of instructions: 20
Final number of instructions: 14

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_454;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;454;1;False;True;True;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP;2186;26;20;2169;39;14;17;-13;6;False;False;False;False;0.10966775100678205;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('241', '14359', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678362446772286284506489912879507342935583336943579975631730529', 'mstore'), 2), (('s(12)', '50740314006305641176973137626335133937533682550474025239336286888721454727168', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a204d73672e73656e646572206e6f742044657374696e79537761)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 3817)', 'nop(PUSH f1)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a204d73672e73656e646572206e6f742044657374696e79537761)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 3817)', 'nop(PUSH f1)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a204d73672e73656e646572206e6f742044657374696e79537761)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 3817)', 'nop(PUSH f1)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a204d73672e73656e646572206e6f742044657374696e79537761 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3817 PUSH1 0xf1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a204d73672e73656e646572206e6f742044657374696e79537761 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3817 PUSH1 0xf1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1212_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1212_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1212;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1212;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a204d73672e73656e646572206e6f742044657374696e79537761 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3817 PUSH1 0xf1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a204d73672e73656e646572206e6f742044657374696e79537761 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3817 PUSH1 0xf1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP;104;82;33;104;82;33;0;0;0;False;False;False;False;1.120885492011439;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(4)', 's(6)', 'sstore'), 2), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: [(0, 2)]
Storage dep simplified: [(0, 2)]
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 054b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 054b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 054b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x054b SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x054b SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1311_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1311_statistics.csv

Estimated initial gas: 7223
Estimated gas optimized: 7223

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1311;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1311;1;True;False;False;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x054b SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x054b SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;7223;44;34;7223;44;34;0;0;0;False;False;False;False;1.149141360016074;2;2;7100;7100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 11a)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 011a)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11a JUMP

Optimized code stored in /tmp/0x00/DestinyToken_390_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_390_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 39

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 36

Initial number of instructions: 17
Final number of instructions: 12

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_390;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;390;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x011a JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11a JUMP;54;24;17;39;36;12;15;-12;5;False;False;False;False;0.0835567979956977;2;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0326)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 0)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(PUSH 2)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(DUP5)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP4)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 326)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(DUP3)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0326)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x0326 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x2 PUSH1 0x20 MSTORE DUP5 AND DUP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP4 DUP3 LT ISZERO PUSH2 0x326 JUMPI

Optimized code stored in /tmp/0x00/DestinyToken_740_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_740_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2192

Estimated initial size in bytes: 34
Estimated size optimized in bytes: 47

Initial number of instructions: 26
Final number of instructions: 21

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_740;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;740;1;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP1 DUP3 LT ISZERO PUSH2 0x0326 JUMPI;JUMPDEST PUSH1 0x0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x2 PUSH1 0x20 MSTORE DUP5 AND DUP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP4 DUP3 LT ISZERO PUSH2 0x326 JUMPI;2206;34;26;2192;47;21;14;-13;5;False;False;False;False;1.0863704980001785;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 031d)', 'nop(SWAP1)', 'nop(PUSH 0f02)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 31d)', 'nop(SWAP1)', 'nop(PUSH 4)', 'nop(ADD)', 'nop(PUSH f02)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 031d)', 'nop(SWAP1)', 'nop(PUSH 0f02)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x031d SWAP1 PUSH2 0x0f02 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x31d SWAP1 PUSH1 0x4 ADD PUSH2 0xf02 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_774_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_774_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 49

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_774;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;774;1;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x031d SWAP1 PUSH2 0x0f02 JUMP;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x31d SWAP1 PUSH1 0x4 ADD PUSH2 0xf02 JUMP;44;23;13;38;49;11;6;-26;2;False;False;False;False;0.026518604950979352;1;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(19)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(22)', 'mstore'), 2), (('32', 's(23)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(GT)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(PUSH 0363)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(GT)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(PUSH 0363)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(GT)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(PUSH 0363)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP7 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x0363 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP7 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x0363 JUMPI

Optimized code stored in /tmp/0x00/DestinyToken_806_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_806_statistics.csv

Estimated initial gas: 2274
Estimated gas optimized: 2274

Estimated initial size in bytes: 48
Estimated size optimized in bytes: 48

Initial number of instructions: 40
Final number of instructions: 40

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_806;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;806;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP7 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x0363 JUMPI;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP7 SWAP1 DUP6 SWAP1 DUP2 GT ISZERO DUP1 PUSH2 0x0363 JUMPI;2274;48;40;2274;48;40;0;0;0;False;False;False;False;1.2437762169865891;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('185', '1000030977549745107607', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '41', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859100820671745083778533502622993977909345', 'mstore'), 2), (('s(12)', '49041376442327685984578500161922594769718891282470211770594913633791979290624', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 29)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 363637bbb0b731b297)', 'nop(PUSH b9)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 29)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 363637bbb0b731b297)', 'nop(PUSH b9)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 29)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 363637bbb0b731b297)', 'nop(PUSH b9)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 031d)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x363637bbb0b731b297 PUSH1 0xb9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x363637bbb0b731b297 PUSH1 0xb9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_872_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_872_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 89
Estimated size optimized in bytes: 89

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_872;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;872;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x363637bbb0b731b297 PUSH1 0xb9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x363637bbb0b731b297 PUSH1 0xb9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x031d JUMP;104;89;33;104;89;33;0;0;0;False;False;False;False;1.1265125770005397;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(18)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP9)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 03e8)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP9)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 03e8)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP9)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 03e8)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x03e8 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x03e8 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_961_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_961_statistics.csv

Estimated initial gas: 2213
Estimated gas optimized: 2213

Estimated initial size in bytes: 39
Estimated size optimized in bytes: 39

Initial number of instructions: 29
Final number of instructions: 29

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_961;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;961;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x03e8 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x03e8 SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;2213;39;29;2213;39;29;0;0;0;False;False;False;False;1.1847477550036274;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(8)', 's(10)', 'sstore'), 2), (('0', '64', 'keccak2560'), 2), (('s(14)', 'sload0'), 1)]
Storage dep: [(0, 2)]
Storage dep simplified: [(0, 2)]
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0414)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0414)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0414)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f70)']

Initial sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0414 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0414 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1000_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1000_statistics.csv

Estimated initial gas: 7223
Estimated gas optimized: 7223

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1000;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1000;1;True;False;False;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0414 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x0414 SWAP1 DUP5 SWAP1 PUSH2 0x0f70 JUMP;7223;44;34;7223;44;34;0;0;0;False;False;False;False;1.2169591789715923;2;2;7100;7100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(15)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(18)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(21)', 'mstore'), 2), (('32', 's(22)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP9)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP9)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP9)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP9)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']

Initial sequence (basic block per line):
PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x045b SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized sequence (basic block per line):
PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x045b SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1066_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1066_statistics.csv

Estimated initial gas: 2271
Estimated gas optimized: 2271

Estimated initial size in bytes: 49
Estimated size optimized in bytes: 49

Initial number of instructions: 39
Final number of instructions: 39

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1066;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1066;1;True;False;False;PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x045b SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x045b SWAP1 DUP5 SWAP1 PUSH2 0x0f5d JUMP;2271;49;39;2271;49;39;0;0;0;False;False;False;False;1.3086031569982879;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 11)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 11)', 'nop(PUSH 4)', 'nop(MSTORE)', 'nop(PUSH 4e487b7100000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH 0)']
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 11)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x11 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT

Optimized code stored in /tmp/0x00/DestinyToken_3913_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3913_statistics.csv

Estimated initial gas: 29
Estimated gas optimized: 25

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 47

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3913;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3913;1;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT;JUMPDEST PUSH1 0x11 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT;29;20;12;25;47;10;4;-27;2;False;False;False;False;0.015538416977506131;1;0;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(19)', 's(1)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(11)', 'mstore'), 2), (('32', 's(18)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2), (('64', 'mload0'), 1), (('s(9)', 's(1)', 'mstore'), 2)]
Memory dep: [(4, 7), (3, 7), (1, 7), (0, 7), (6, 7), (4, 5), (3, 5), (1, 5), (0, 5), (5, 7), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4), (2, 7)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (6, 7), (5, 7), (2, 3), (2, 4)]
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP1)', 'nop(DUP6)', 'nop(MSTORE)', 'nop(SWAP3)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP1)', 'nop(PUSH 02d2)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP1)', 'nop(DUP6)', 'nop(MSTORE)', 'nop(SWAP3)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP1)', 'nop(PUSH 02d2)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 03)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP1)', 'nop(DUP6)', 'nop(MSTORE)', 'nop(SWAP3)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP1)', 'nop(PUSH 02d2)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x02d2 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x02d2 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_632_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_632_statistics.csv

Estimated initial gas: 5199
Estimated gas optimized: 5199

Estimated initial size in bytes: 90
Estimated size optimized in bytes: 90

Initial number of instructions: 49
Final number of instructions: 49

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_632;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;632;1;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x02d2 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x03 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP1 PUSH2 0x02d2 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;5199;90;49;5199;90;49;0;0;0;False;False;False;False;1.306804382998962;2;8;5000;5000


NORMAL EXECUTION

[RULE]: Evaluate expression ('161', '10583813697598763902206063287', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(2)', 'mstore'), 2), (('s(1)', '12', 'mstore'), 2), (('s(5)', '30936522096491662501020464592409725723162682775169042453211359042415806644224', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 0c)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 2232b9ba34b73caa37b5b2b7)', 'nop(PUSH a1)', 'nop(SHL)', 'nop(PUSH 20)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(PUSH 44657374696e79546f6b656e0000000000000000000000000000000000000000)', 'nop(PUSH c)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)']
{}
['nop(PUSH 40)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 0c)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 2232b9ba34b73caa37b5b2b7)', 'nop(PUSH a1)', 'nop(SHL)', 'nop(PUSH 20)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0c DUP2 MSTORE PUSH12 0x2232b9ba34b73caa37b5b2b7 PUSH1 0xa1 SHL PUSH1 0x20 DUP3 ADD MSTORE

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE PUSH32 0x44657374696e79546f6b656e0000000000000000000000000000000000000000 PUSH1 0xc DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE

Optimized code stored in /tmp/0x00/DestinyToken_233_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_233_statistics.csv

Estimated initial gas: 58
Estimated gas optimized: 46

Estimated initial size in bytes: 36
Estimated size optimized in bytes: 53

Initial number of instructions: 20
Final number of instructions: 16

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_233;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;233;1;False;True;True;JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0c DUP2 MSTORE PUSH12 0x2232b9ba34b73caa37b5b2b7 PUSH1 0xa1 SHL PUSH1 0x20 DUP3 ADD MSTORE;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE PUSH32 0x44657374696e79546f6b656e0000000000000000000000000000000000000000 PUSH1 0xc DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE;58;36;20;46;53;16;12;-17;4;False;False;False;False;0.12282231298740953;1;3;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
MEJORADO: /tmp/gasol_ae4a5e8845834e9d9194bb0aeca985e1/jsons/isolated_block_0_0_input.json --- (4, 3)
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN

Optimized code stored in /tmp/0x00/DestinyToken_282_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_282_statistics.csv

Estimated initial gas: 19
Estimated gas optimized: 19

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 8
Final number of instructions: 8

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_282;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;282;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN;19;9;8;19;9;8;0;0;0;False;False;False;False;0.012783451995346695;0;0;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
MEJORADO: /tmp/gasol_ae4a5e8845834e9d9194bb0aeca985e1/jsons/isolated_block_0_0_input.json --- (4, 3)
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized code stored in /tmp/0x00/DestinyToken_797_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_797_statistics.csv

Estimated initial gas: 19
Estimated gas optimized: 19

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 8
Final number of instructions: 8

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_797;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;797;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;19;9;8;19;9;8;0;0;0;False;False;False;False;0.01158429798670113;0;0;0;0


NORMAL EXECUTION

Storage order: [(('s(7)', 's(9)', 'sstore'), 2), (('1', 'sload0'), 1)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP6)', 'nop(PUSH 01)', 'nop(PUSH0)', 'nop(DUP3)', 'nop(DUP3)', 'nop(SLOAD)', 'nop(PUSH 068c)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP6)', 'nop(PUSH 01)', 'nop(PUSH0)', 'nop(DUP3)', 'nop(DUP3)', 'nop(SLOAD)', 'nop(PUSH 068c)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP6)', 'nop(PUSH 01)', 'nop(PUSH0)', 'nop(DUP3)', 'nop(DUP3)', 'nop(SLOAD)', 'nop(PUSH 068c)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(PUSH 0f5d)']

Initial sequence (basic block per line):
JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x01 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x068c SWAP2 SWAP1 PUSH2 0x0f5d JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x01 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x068c SWAP2 SWAP1 PUSH2 0x0f5d JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1652_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1652_statistics.csv

Estimated initial gas: 7150
Estimated gas optimized: 7150

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 24

Initial number of instructions: 19
Final number of instructions: 19

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1652;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1652;1;True;False;False;JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x01 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x068c SWAP2 SWAP1 PUSH2 0x0f5d JUMP;JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x01 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x068c SWAP2 SWAP1 PUSH2 0x0f5d JUMP;7150;24;19;7150;24;19;0;0;0;False;False;False;False;1.0998796250205487;0;0;7100;7100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('168', '1', 'shl')
[RULE]: Evaluate expression ('374144419156711147060143317175368453031918731001856', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', 'sload0'), 1), (('0', 's(8)', 'sstore'), 2), (('1', 'sload1'), 1)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH0)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a8)', 'nop(SHL)', 'nop(SUB)', 'nop(NOT)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(OR)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(OR)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(PUSH 01)', 'nop(SLOAD)', 'nop(PUSH 1e61)', 'nop(SWAP1)', 'nop(PUSH 07c5)', 'nop(SWAP1)', 'nop(PUSH 76adf1)', 'nop(PUSH 0f83)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH ffffffffffffffffffffff000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(SLOAD)', 'nop(AND)', 'nop(PUSH 7c5)', 'nop(PUSH 1)', 'nop(SLOAD)', 'nop(PUSH 1e61)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(SWAP5)', 'nop(SWAP1)', 'nop(SWAP3)', 'nop(DUP6)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 76adf1)', 'nop(SWAP2)', 'nop(OR)', 'nop(PUSH 10000000000000000000000000000000000000000)', 'nop(OR)', 'nop(PUSH 0)', 'nop(SSTORE)', 'nop(PUSH f83)']
{}
['nop(PUSH0)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a8)', 'nop(SHL)', 'nop(SUB)', 'nop(NOT)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(OR)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(OR)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(PUSH 01)', 'nop(SLOAD)', 'nop(PUSH 1e61)', 'nop(SWAP1)', 'nop(PUSH 07c5)', 'nop(SWAP1)', 'nop(PUSH 76adf1)', 'nop(PUSH 0f83)']

Initial sequence (basic block per line):
JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x01 PUSH1 0xa0 SHL OR SWAP1 SSTORE PUSH1 0x01 SLOAD PUSH2 0x1e61 SWAP1 PUSH2 0x07c5 SWAP1 PUSH3 0x76adf1 PUSH2 0x0f83 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0xffffffffffffffffffffff000000000000000000000000000000000000000000 PUSH1 0x0 SLOAD AND PUSH2 0x7c5 PUSH1 0x1 SLOAD PUSH2 0x1e61 SWAP1 SWAP5 SWAP5 SWAP1 SWAP3 DUP6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH3 0x76adf1 SWAP2 OR PUSH21 0x10000000000000000000000000000000000000000 OR PUSH1 0x0 SSTORE PUSH2 0xf83 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1935_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1935_statistics.csv

Estimated initial gas: 7201
Estimated gas optimized: 7172

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 111

Initial number of instructions: 36
Final number of instructions: 26

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1935;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1935;1;True;True;False;JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x01 PUSH1 0xa0 SHL OR SWAP1 SSTORE PUSH1 0x01 SLOAD PUSH2 0x1e61 SWAP1 PUSH2 0x07c5 SWAP1 PUSH3 0x76adf1 PUSH2 0x0f83 JUMP;JUMPDEST PUSH32 0xffffffffffffffffffffff000000000000000000000000000000000000000000 PUSH1 0x0 SLOAD AND PUSH2 0x7c5 PUSH1 0x1 SLOAD PUSH2 0x1e61 SWAP1 SWAP5 SWAP5 SWAP1 SWAP3 DUP6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH3 0x76adf1 SWAP2 OR PUSH21 0x10000000000000000000000000000000000000000 OR PUSH1 0x0 SSTORE PUSH2 0xf83 JUMP;7201;54;36;7172;111;26;29;-57;10;False;False;False;False;1.114461889024824;6;0;7100;7100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(7)', 's(9)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(15)', 's(2)', 'mstore'), 2), (('0', 'mload1'), 1)]
Memory dep: [(1, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP5)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(SWAP1)', 'nop(CALLER)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(9)', 'mload2'), 1), (('s(9)', 's(10)', 'mstore'), 2), (('64', 'mload3'), 1)]
Memory dep: [(1, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
/tmp/gasol_ae4a5e8845834e9d9194bb0aeca985e1/jsons/isolated_block_0_2_input.json
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
{}
['nop(POP)', 'nop(PUSH 01)', 'nop(SWAP5)', 'nop(SWAP4)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
Optimizing isolated_block_0_1... Timeout:1
Optimizing isolated_block_0_2... Timeout:1
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP5)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(SWAP1)', 'nop(CALLER)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 1)', 'nop(SWAP1)']
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP5)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(SWAP1)', 'nop(CALLER)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(POP)', 'nop(PUSH 01)', 'nop(SWAP5)', 'nop(SWAP4)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)']

Initial sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x01 SWAP5 SWAP4 POP POP POP POP JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_3270_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3270_statistics.csv

Estimated initial gas: 6641
Estimated gas optimized: 6638

Estimated initial size in bytes: 61
Estimated size optimized in bytes: 60

Initial number of instructions: 51
Final number of instructions: 50

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3270;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3270;1;True;False;False;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x01 SWAP5 SWAP4 POP POP POP POP JUMP;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP;6641;61;51;6638;60;50;3;1;1;False;False;False;False;1.3368858370231465;2;4;5000;5000


NORMAL EXECUTION

Storage order: [(('s(1)', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(ORIGIN)', 'nop(SWAP1)', 'nop(POP)', 'nop(PUSH0)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
********************IT*********************
/tmp/gasol_ae4a5e8845834e9d9194bb0aeca985e1/jsons/isolated_block_0_1_input.json
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload1'), 1), (('s(2)', 's(3)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 0c37)', 'nop(PUSH 1e61)', 'nop(PUSH 97e5)', 'nop(PUSH 0f83)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
Optimizing isolated_block_0_1... Timeout:1
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(ORIGIN)', 'nop(SWAP1)', 'nop(POP)', 'nop(PUSH0)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 0c37)', 'nop(PUSH 1e61)', 'nop(PUSH 97e5)', 'nop(PUSH 0f83)']
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(ORIGIN)', 'nop(SWAP1)', 'nop(POP)', 'nop(PUSH0)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 0c37)', 'nop(PUSH 1e61)', 'nop(PUSH 97e5)', 'nop(PUSH 0f83)']

Initial sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP ORIGIN SWAP1 POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x0c37 PUSH2 0x1e61 PUSH2 0x97e5 PUSH2 0x0f83 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP ORIGIN SWAP1 POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x0c37 PUSH2 0x1e61 PUSH2 0x97e5 PUSH2 0x0f83 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_3091_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_3091_statistics.csv

Estimated initial gas: 5070
Estimated gas optimized: 5070

Estimated initial size in bytes: 36
Estimated size optimized in bytes: 36

Initial number of instructions: 25
Final number of instructions: 25

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_3091;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;3091;1;True;True;False;JUMPDEST SWAP1 SWAP2 SSTORE POP ORIGIN SWAP1 POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x0c37 PUSH2 0x1e61 PUSH2 0x97e5 PUSH2 0x0f83 JUMP;JUMPDEST SWAP1 SWAP2 SSTORE POP ORIGIN SWAP1 POP PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x0c37 PUSH2 0x1e61 PUSH2 0x97e5 PUSH2 0x0f83 JUMP;5070;36;25;5070;36;25;0;0;0;False;False;False;False;1.0742768769850954;0;1;5000;5000


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(17)', 's(2)', 'mstore'), 2), (('0', 'mload1'), 1)]
Memory dep: [(1, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP7)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP10)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(11)', 'mload2'), 1), (('s(11)', 's(12)', 'mstore'), 2), (('64', 'mload3'), 1)]
Memory dep: [(1, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
/tmp/gasol_ae4a5e8845834e9d9194bb0aeca985e1/jsons/isolated_block_0_2_input.json
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
{}
['nop(POP)', 'nop(PUSH 01)', 'nop(SWAP7)', 'nop(SWAP6)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
Optimizing isolated_block_0_1... Timeout:1
Optimizing isolated_block_0_2... Timeout:1
{}
['nop(PUSH 0)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(DUP10)', 'nop(AND)', 'nop(DUP9)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 0)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH fc7)', 'nop(PUSH 0)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 1)', 'nop(SWAP1)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP7)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP10)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(POP)', 'nop(PUSH 01)', 'nop(SWAP7)', 'nop(SWAP6)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)', 'nop(POP)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP10 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x01 SWAP7 SWAP6 POP POP POP POP POP POP JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP10 AND DUP9 DUP3 MSTORE SWAP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 PUSH2 0xfc7 PUSH1 0x0 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1753_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1753_statistics.csv

Estimated initial gas: 1635
Estimated gas optimized: 1619

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 72

Initial number of instructions: 48
Final number of instructions: 42

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1753;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1753;1;True;True;False;JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP10 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x01 SWAP7 SWAP6 POP POP POP POP POP POP JUMP;JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP10 AND DUP9 DUP3 MSTORE SWAP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 PUSH2 0xfc7 PUSH1 0x0 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP PUSH1 0x1 SWAP1 JUMP;1635;58;48;1619;72;42;16;-14;6;False;False;False;False;1.3649755460210145;2;4;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(4)', 's(6)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(12)', 's(1)', 'mstore'), 2), (('0', 'mload1'), 1)]
Memory dep: [(1, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
/tmp/gasol_ae4a5e8845834e9d9194bb0aeca985e1/jsons/isolated_block_0_1_input.json
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(6)', 'mload2'), 1), (('s(6)', 's(7)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 02d2)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
Optimizing isolated_block_0_1... Timeout:1
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 02d2)']
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 02d2)']

Initial sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND SWAP1 PUSH0 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x02d2 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND SWAP1 PUSH0 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x02d2 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1355_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1355_statistics.csv

Estimated initial gas: 5107
Estimated gas optimized: 5107

Estimated initial size in bytes: 47
Estimated size optimized in bytes: 47

Initial number of instructions: 37
Final number of instructions: 37

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1355;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1355;1;True;False;False;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND SWAP1 PUSH0 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x02d2 JUMP;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND SWAP1 PUSH0 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x02d2 JUMP;5107;47;37;5107;47;37;0;0;0;False;False;False;False;1.1390145359910093;2;3;5000;5000


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(DUP7)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP9)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
/tmp/gasol_ae4a5e8845834e9d9194bb0aeca985e1/jsons/isolated_block_0_1_input.json
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload1'), 1), (('s(10)', 's(11)', 'mstore'), 2), (('64', 'mload2'), 1), (('s(14)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 3), (1, 2), (2, 3), (0, 1), (0, 3)]
Memory dep simplified: [(1, 2), (2, 3), (0, 1)]
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP9)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 0493)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
Optimizing isolated_block_0_1... Timeout:1
{}
['nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP9)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(DUP11)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(ADD)', 'nop(PUSH 493)']
{}
['nop(DUP7)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP9)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(DUP1)', 'nop(MLOAD)', 'nop(PUSH 20)', 'nop(PUSH 0fc7)', 'nop(DUP4)']
{}
['nop(DUP2)', 'nop(MLOAD)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP9)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 0493)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST DUP7 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP9 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH1 0x40 MLOAD PUSH2 0x0493 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP8 AND DUP9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xfc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP11 DUP3 MSTORE ADD PUSH2 0x493 JUMP

Optimized code stored in /tmp/0x00/DestinyToken_1121_optimized.txt
Optimality results stored in /tmp/0x00/DestinyToken_1121_statistics.csv

Estimated initial gas: 113
Estimated gas optimized: 84

Estimated initial size in bytes: 50
Estimated size optimized in bytes: 75

Initial number of instructions: 37
Final number of instructions: 27

GREENRES: 0x0000bdc584db9debaf780915bdb26095c8e50007.sol_DestinyToken_1121;0x0000bdc584db9debaf780915bdb26095c8e50007.sol;DestinyToken;1121;1;False;True;True;JUMPDEST DUP7 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP9 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x0fc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH1 0x40 MLOAD PUSH2 0x0493 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP8 AND DUP9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xfc7 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP11 DUP3 MSTORE ADD PUSH2 0x493 JUMP;113;50;37;84;75;27;29;-25;10;False;False;False;False;1.0710849679890089;4;3;0;0

