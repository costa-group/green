incomplete push instruction at 6251
incomplete push instruction at 302
Green Main
*************************************************************
Compilation time: 0.30487735400674865s
*************************************************************
File: HandsomeSquidward
Build CFG: 0.41221425199182704s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis HandsomeSquidward
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract HandsomeSquidward: 90
Memory read accesses ContractHandsomeSquidward: 308
Memory write accesses ContractHandsomeSquidward: 555
********************************** INIT
CONTEXT: Detected context equality 17 <slot19,0> 19 <slot19,0>
CONTEXT: Detected context equality 17 <slot19,0> 20 <slot19,0>
CONTEXT: Detected context equality 17 <slot19,0> 20 <slot19,0>
CONTEXT: Detected context equality 17 <slot21,0> 19 <slot21,0>
CONTEXT: Detected context equality 17 <slot21,0> 20 <slot21,0>
CONTEXT: Detected context equality 17 <slot21,0> 20 <slot21,0>
CONTEXT: Detected context equality 13 <slot24,0> 15 <slot24,0>
CONTEXT: Detected context equality 13 <slot24,0> 15 <slot24,0>
CONTEXT: Detected context equality 13 <slot24,0> 19 <slot24,0>
CONTEXT: Detected context equality 13 <slot24,0> 19 <slot24,0>
CONTEXT: Detected context equality 17 <slot33,0> 19 <slot33,0>
CONTEXT: Detected context equality 17 <slot33,0> 20 <slot33,0>
CONTEXT: Detected context equality 17 <slot33,0> 20 <slot33,0>
CONTEXT: Detected context equality 18 <slot35,0> 20 <slot35,0>
CONTEXT: Detected context equality 18 <slot35,0> 21 <slot35,0>
CONTEXT: Detected context equality 18 <slot35,0> 21 <slot35,0>
CONTEXT: Detected context equality 20 <slot38,0> 22 <slot38,0>
CONTEXT: Detected context equality 20 <slot38,0> 23 <slot38,0>
CONTEXT: Detected context equality 20 <slot38,0> 23 <slot38,0>
CONTEXT: Detected context equality 5 <slot48,0> 7 <slot48,0>
CONTEXT: Detected context equality 5 <slot48,0> 7 <slot48,0>
CONTEXT: Detected context equality 5 <slot48,0> 11 <slot48,0>
CONTEXT: Detected context equality 5 <slot48,0> 11 <slot48,0>
CONTEXT: Detected context equality 18 <slot61,0> 20 <slot61,0>
CONTEXT: Detected context equality 18 <slot61,0> 21 <slot61,0>
CONTEXT: Detected context equality 18 <slot61,0> 21 <slot61,0>
CONTEXT: Detected context equality 18 <slot63,0> 20 <slot63,0>
CONTEXT: Detected context equality 18 <slot63,0> 21 <slot63,0>
CONTEXT: Detected context equality 18 <slot63,0> 21 <slot63,0>
CONTEXT: Detected context equality 14 <slot66,0> 16 <slot66,0>
CONTEXT: Detected context equality 14 <slot66,0> 16 <slot66,0>
CONTEXT: Detected context equality 14 <slot66,0> 20 <slot66,0>
CONTEXT: Detected context equality 14 <slot66,0> 20 <slot66,0>
CONTEXT: Detected context equality 18 <slot75,0> 20 <slot75,0>
CONTEXT: Detected context equality 18 <slot75,0> 21 <slot75,0>
CONTEXT: Detected context equality 18 <slot75,0> 21 <slot75,0>
CONTEXT: Detected context equality 19 <slot77,0> 21 <slot77,0>
CONTEXT: Detected context equality 19 <slot77,0> 22 <slot77,0>
CONTEXT: Detected context equality 19 <slot77,0> 22 <slot77,0>
CONTEXT: Detected context equality 21 <slot80,0> 23 <slot80,0>
CONTEXT: Detected context equality 21 <slot80,0> 24 <slot80,0>
CONTEXT: Detected context equality 21 <slot80,0> 24 <slot80,0>
CONTEXT: Detected context equality 12 <slot82,0> 14 <slot82,0>
CONTEXT: Detected context equality 12 <slot82,0> 15 <slot82,0>
CONTEXT: Detected context equality 12 <slot82,0> 15 <slot82,0>
COMPACT CLONES: True
CONTRACT: HandsomeSquidward
-----
Block: 949
949Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
949-Stack size: 4 
949-Equals Mem:<< [<12,27>, <17,31>]>> 
949-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
949-Equals Sto:<< []>> 
949-NonEquals Sto: << []>> 
949-Useless: []
949-Constancy: []
949-ContextAliasing: []

.....
-----
Block: 441_0
441_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
441_0-Stack size: 2 
441_0-Equals Mem:<< []>> 
441_0-NonEquals Mem: << [<5,2>]>> 
441_0-Equals Sto:<< []>> 
441_0-NonEquals Sto: << []>> 
441_0-Useless: []
441_0-Constancy: []
441_0-ContextAliasing: []

.....
-----
Block: 1573
1573Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP1', 'PUSH2 0x169c', 'JUMP']>> 
1573-Stack size: 2 
1573-Equals Mem:<< []>> 
1573-NonEquals Mem: << [<6,1>]>> 
1573-Equals Sto:<< []>> 
1573-NonEquals Sto: << []>> 
1573-Useless: []
1573-Constancy: []
1573-ContextAliasing: []

.....
-----
Block: 1615
1615Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
1615-Stack size: 2 
1615-Equals Mem:<< []>> 
1615-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1615-Equals Sto:<< []>> 
1615-NonEquals Sto: << []>> 
1615-Useless: []
1615-Constancy: []
1615-ContextAliasing: []

.....
-----
Block: 5507_34
5507_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_34-Stack size: 10 
5507_34-Equals Mem:<< []>> 
5507_34-NonEquals Mem: << [<5,8>]>> 
5507_34-Equals Sto:<< []>> 
5507_34-NonEquals Sto: << []>> 
5507_34-Useless: []
5507_34-Constancy: []
5507_34-ContextAliasing: []

.....
-----
Block: 2507_4
2507_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2507_4-Stack size: 6 
2507_4-Equals Mem:<< []>> 
2507_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2507_4-Equals Sto:<< []>> 
2507_4-NonEquals Sto: << []>> 
2507_4-Useless: []
2507_4-Constancy: []
2507_4-ContextAliasing: []

.....
-----
Block: 2605_4
2605_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2605_4-Stack size: 6 
2605_4-Equals Mem:<< []>> 
2605_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2605_4-Equals Sto:<< []>> 
2605_4-NonEquals Sto: << []>> 
2605_4-Useless: []
2605_4-Constancy: []
2605_4-ContextAliasing: []

.....
-----
Block: 1839
1839Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0753', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
1839-Stack size: 6 
1839-Equals Mem:<< [<18,6>]>> 
1839-NonEquals Mem: << []>> 
1839-Equals Sto:<< []>> 
1839-NonEquals Sto: << []>> 
1839-Useless: []
1839-Constancy: []
1839-ContextAliasing: []

.....
-----
Block: 1970
1970Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x07d6', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
1970-Stack size: 9 
1970-Equals Mem:<< [<18,6>]>> 
1970-NonEquals Mem: << []>> 
1970-Equals Sto:<< []>> 
1970-NonEquals Sto: << []>> 
1970-Useless: []
1970-Constancy: []
1970-ContextAliasing: []

.....
-----
Block: 2080
2080Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0844', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
2080-Stack size: 6 
2080-Equals Mem:<< [<18,6>]>> 
2080-NonEquals Mem: << []>> 
2080-Equals Sto:<< []>> 
2080-NonEquals Sto: << []>> 
2080-Useless: []
2080-Constancy: []
2080-ContextAliasing: []

.....
-----
Block: 2116
2116Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'SWAP1', 'SWAP2', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'AND', 'PUSH4 0xf305d719', 'SELFBALANCE', 'ADDRESS', 'PUSH2 0x088b', 'DUP2', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2116-Stack size: 3 
2116-Equals Mem:<< []>> 
2116-NonEquals Mem: << [<41,44>]>> 
2116-Equals Sto:<< [<3,23>]>> 
2116-NonEquals Sto: << [<3,25>, <3,48>, <23,25>, <23,48>, <25,48>]>> 
2116-Useless: []
2116-Constancy: []
2116-ContextAliasing: []

.....
-----
Block: 2308
2308Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0929', 'SWAP2', 'SWAP1', 'PUSH2 0x16ec', 'JUMP']>> 
2308-Stack size: 7 
2308-Equals Mem:<< [<19,7>]>> 
2308-NonEquals Mem: << []>> 
2308-Equals Sto:<< []>> 
2308-NonEquals Sto: << []>> 
2308-Useless: []
2308-Constancy: []
2308-ContextAliasing: []

.....
-----
Block: 2430
2430Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x09a2', 'SWAP2', 'SWAP1', 'PUSH2 0x1717', 'JUMP']>> 
2430-Stack size: 6 
2430-Equals Mem:<< [<18,6>]>> 
2430-NonEquals Mem: << []>> 
2430-Equals Sto:<< []>> 
2430-NonEquals Sto: << []>> 
2430-Useless: []
2430-Constancy: []
2430-ContextAliasing: []

.....
-----
Block: 5507_37
5507_37Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_37-Stack size: 20 
5507_37-Equals Mem:<< []>> 
5507_37-NonEquals Mem: << [<5,8>]>> 
5507_37-Equals Sto:<< []>> 
5507_37-NonEquals Sto: << []>> 
5507_37-Useless: []
5507_37-Constancy: [(11, 0), (7, 0)]
5507_37-ContextAliasing: []

.....
-----
Block: 5507_36
5507_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_36-Stack size: 16 
5507_36-Equals Mem:<< []>> 
5507_36-NonEquals Mem: << [<5,8>]>> 
5507_36-Equals Sto:<< []>> 
5507_36-NonEquals Sto: << []>> 
5507_36-Useless: []
5507_36-Constancy: [(7, 0), (3, 0)]
5507_36-ContextAliasing: []

.....
-----
Block: 5507_35
5507_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_35-Stack size: 15 
5507_35-Equals Mem:<< []>> 
5507_35-NonEquals Mem: << [<5,8>]>> 
5507_35-Equals Sto:<< []>> 
5507_35-NonEquals Sto: << []>> 
5507_35-Useless: []
5507_35-Constancy: [(6, 0), (2, 0)]
5507_35-ContextAliasing: []

.....
-----
Block: 404_0
404_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
404_0-Stack size: 3 
404_0-Equals Mem:<< []>> 
404_0-NonEquals Mem: << [<7,2>]>> 
404_0-Equals Sto:<< []>> 
404_0-NonEquals Sto: << []>> 
404_0-Useless: []
404_0-Constancy: []
404_0-ContextAliasing: []

.....
-----
Block: 441
441Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
441-Stack size: 3 
441-Equals Mem:<< []>> 
441-NonEquals Mem: << [<5,2>]>> 
441-Equals Sto:<< []>> 
441-NonEquals Sto: << []>> 
441-Useless: []
441-Constancy: []
441-ContextAliasing: []

.....
-----
Block: 2798_0
2798_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2798_0-Stack size: 9 
2798_0-Equals Mem:<< []>> 
2798_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2798_0-Equals Sto:<< []>> 
2798_0-NonEquals Sto: << []>> 
2798_0-Useless: []
2798_0-Constancy: [(4, 0)]
2798_0-ContextAliasing: []

.....
-----
Block: 2898_0
2898_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2898_0-Stack size: 9 
2898_0-Equals Mem:<< []>> 
2898_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2898_0-Equals Sto:<< []>> 
2898_0-NonEquals Sto: << []>> 
2898_0-Useless: []
2898_0-Constancy: [(4, 0)]
2898_0-ContextAliasing: []

.....
-----
Block: 2989_0
2989_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2989_0-Stack size: 9 
2989_0-Equals Mem:<< []>> 
2989_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2989_0-Equals Sto:<< []>> 
2989_0-NonEquals Sto: << []>> 
2989_0-Useless: []
2989_0-Constancy: [(4, 0)]
2989_0-ContextAliasing: []

.....
-----
Block: 3127_0
3127_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0c76', 'JUMPI']>> 
3127_0-Stack size: 10 
3127_0-Equals Mem:<< []>> 
3127_0-NonEquals Mem: << [<10,13>]>> 
3127_0-Equals Sto:<< []>> 
3127_0-NonEquals Sto: << []>> 
3127_0-Useless: []
3127_0-Constancy: [(5, 0), (0, 0)]
3127_0-ContextAliasing: []

.....
-----
Block: 3161_0
3161_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3161_0-Stack size: 11 
3161_0-Equals Mem:<< []>> 
3161_0-NonEquals Mem: << [<11,14>]>> 
3161_0-Equals Sto:<< []>> 
3161_0-NonEquals Sto: << []>> 
3161_0-Useless: []
3161_0-Constancy: [(6, 0), (1, 0)]
3161_0-ContextAliasing: []

.....
-----
Block: 3259_0
3259_0Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x0d23', 'JUMPI']>> 
3259_0-Stack size: 10 
3259_0-Equals Mem:<< []>> 
3259_0-NonEquals Mem: << [<4,7>]>> 
3259_0-Equals Sto:<< []>> 
3259_0-NonEquals Sto: << []>> 
3259_0-Useless: []
3259_0-Constancy: [(5, 0), (0, 0)]
3259_0-ContextAliasing: []

.....
-----
Block: 3280_0
3280_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x3bb2b217', 'PUSH1 0xe1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3280_0-Stack size: 10 
3280_0-Equals Mem:<< []>> 
3280_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3280_0-Equals Sto:<< []>> 
3280_0-NonEquals Sto: << []>> 
3280_0-Useless: []
3280_0-Constancy: [(5, 0), (0, 0)]
3280_0-ContextAliasing: []

.....
-----
Block: 3363_0
3363_0Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
3363_0-Stack size: 10 
3363_0-Equals Mem:<< []>> 
3363_0-NonEquals Mem: << [<5,8>]>> 
3363_0-Equals Sto:<< []>> 
3363_0-NonEquals Sto: << []>> 
3363_0-Useless: []
3363_0-Constancy: [(5, 0), (0, 0)]
3363_0-ContextAliasing: []

.....
-----
Block: 3431_0
3431_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3431_0-Stack size: 11 
3431_0-Equals Mem:<< []>> 
3431_0-NonEquals Mem: << [<11,14>]>> 
3431_0-Equals Sto:<< []>> 
3431_0-NonEquals Sto: << []>> 
3431_0-Useless: []
3431_0-Constancy: [(6, 0), (1, 0)]
3431_0-ContextAliasing: []

.....
-----
Block: 3476_0
3476_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3476_0-Stack size: 10 
3476_0-Equals Mem:<< []>> 
3476_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3476_0-Equals Sto:<< []>> 
3476_0-NonEquals Sto: << []>> 
3476_0-Useless: []
3476_0-Constancy: [(5, 0), (0, 0)]
3476_0-ContextAliasing: []

.....
-----
Block: 3547_0
3547_0Instr:<<['JUMPDEST', 'PUSH1 0x10', 'SLOAD', 'DUP3', 'PUSH2 0x0dfd', 'DUP6', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3547_0-Stack size: 10 
3547_0-Equals Mem:<< []>> 
3547_0-NonEquals Mem: << [<15,18>]>> 
3547_0-Equals Sto:<< []>> 
3547_0-NonEquals Sto: << [<2,22>]>> 
3547_0-Useless: []
3547_0-Constancy: [(5, 0), (0, 0)]
3547_0-ContextAliasing: []

.....
-----
Block: 5507_33
5507_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_33-Stack size: 16 
5507_33-Equals Mem:<< []>> 
5507_33-NonEquals Mem: << [<5,8>]>> 
5507_33-Equals Sto:<< []>> 
5507_33-NonEquals Sto: << []>> 
5507_33-Useless: []
5507_33-Constancy: [(11, 0), (6, 0)]
5507_33-ContextAliasing: []

.....
-----
Block: 3598_0
3598_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3598_0-Stack size: 10 
3598_0-Equals Mem:<< []>> 
3598_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3598_0-Equals Sto:<< []>> 
3598_0-NonEquals Sto: << []>> 
3598_0-Useless: []
3598_0-Constancy: [(5, 0), (0, 0)]
3598_0-ContextAliasing: []

.....
-----
Block: 5507_32
5507_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_32-Stack size: 17 
5507_32-Equals Mem:<< []>> 
5507_32-NonEquals Mem: << [<5,8>]>> 
5507_32-Equals Sto:<< []>> 
5507_32-NonEquals Sto: << []>> 
5507_32-Useless: []
5507_32-Constancy: [(12, 0), (7, 0), (4, 0), (1, 0)]
5507_32-ContextAliasing: []

.....
-----
Block: 4935_1
4935_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x143b', 'JUMP']>> 
4935_1-Stack size: 13 
4935_1-Equals Mem:<< [<11,6>]>> 
4935_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4935_1-Equals Sto:<< []>> 
4935_1-NonEquals Sto: << []>> 
4935_1-Useless: []
4935_1-Constancy: [(8, 0), (3, 0)]
4935_1-ContextAliasing: []

.....
-----
Block: 5187_2
5187_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
5187_2-Stack size: 20 
5187_2-Equals Mem:<< []>> 
5187_2-NonEquals Mem: << [<6,1>]>> 
5187_2-Equals Sto:<< []>> 
5187_2-NonEquals Sto: << []>> 
5187_2-Useless: []
5187_2-Constancy: [(15, 0), (10, 0), (6, 0), (1, 0)]
5187_2-ContextAliasing: [(2, 19)]

.....
-----
Block: 5223_10
5223_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_10-Stack size: 22 
5223_10-Equals Mem:<< []>> 
5223_10-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_10-Equals Sto:<< []>> 
5223_10-NonEquals Sto: << []>> 
5223_10-Useless: []
5223_10-Constancy: [(17, 0), (12, 0), (8, 0), (3, 0)]
5223_10-ContextAliasing: [(4, 20)]

.....
-----
Block: 5247_10
5247_10Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_10-Stack size: 26 
5247_10-Equals Mem:<< []>> 
5247_10-NonEquals Mem: << [<11,5>]>> 
5247_10-Equals Sto:<< []>> 
5247_10-NonEquals Sto: << []>> 
5247_10-Useless: []
5247_10-Constancy: [(21, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_10-ContextAliasing: [(8, 20)]

.....
-----
Block: 6142_5
6142_5Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142_5-Stack size: 24 
6142_5-Equals Mem:<< []>> 
6142_5-NonEquals Mem: << [<4,7>]>> 
6142_5-Equals Sto:<< []>> 
6142_5-NonEquals Sto: << []>> 
6142_5-Useless: []
6142_5-Constancy: [(19, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6142_5-ContextAliasing: []

.....
-----
Block: 4935_2
4935_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x143b', 'JUMP']>> 
4935_2-Stack size: 13 
4935_2-Equals Mem:<< [<11,6>]>> 
4935_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4935_2-Equals Sto:<< []>> 
4935_2-NonEquals Sto: << []>> 
4935_2-Useless: []
4935_2-Constancy: [(8, 0)]
4935_2-ContextAliasing: []

.....
-----
Block: 5187_1
5187_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
5187_1-Stack size: 20 
5187_1-Equals Mem:<< []>> 
5187_1-NonEquals Mem: << [<6,1>]>> 
5187_1-Equals Sto:<< []>> 
5187_1-NonEquals Sto: << []>> 
5187_1-Useless: []
5187_1-Constancy: [(15, 0), (6, 0), (1, 0)]
5187_1-ContextAliasing: [(2, 19)]

.....
-----
Block: 5223_9
5223_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_9-Stack size: 22 
5223_9-Equals Mem:<< []>> 
5223_9-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_9-Equals Sto:<< []>> 
5223_9-NonEquals Sto: << []>> 
5223_9-Useless: []
5223_9-Constancy: [(17, 0), (8, 0), (3, 0)]
5223_9-ContextAliasing: [(4, 20)]

.....
-----
Block: 5247_9
5247_9Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_9-Stack size: 26 
5247_9-Equals Mem:<< []>> 
5247_9-NonEquals Mem: << [<11,5>]>> 
5247_9-Equals Sto:<< []>> 
5247_9-NonEquals Sto: << []>> 
5247_9-Useless: []
5247_9-Constancy: [(21, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_9-ContextAliasing: [(8, 20)]

.....
-----
Block: 6142_3
6142_3Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142_3-Stack size: 24 
6142_3-Equals Mem:<< []>> 
6142_3-NonEquals Mem: << [<4,7>]>> 
6142_3-Equals Sto:<< []>> 
6142_3-NonEquals Sto: << []>> 
6142_3-Useless: []
6142_3-Constancy: [(19, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6142_3-ContextAliasing: []

.....
-----
Block: 5507_30
5507_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_30-Stack size: 22 
5507_30-Equals Mem:<< []>> 
5507_30-NonEquals Mem: << [<5,8>]>> 
5507_30-Equals Sto:<< []>> 
5507_30-NonEquals Sto: << []>> 
5507_30-Useless: []
5507_30-Constancy: [(17, 0), (6, 0), (5, 0)]
5507_30-ContextAliasing: []

.....
-----
Block: 6142_4
6142_4Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142_4-Stack size: 22 
6142_4-Equals Mem:<< []>> 
6142_4-NonEquals Mem: << [<4,7>]>> 
6142_4-Equals Sto:<< []>> 
6142_4-NonEquals Sto: << []>> 
6142_4-Useless: []
6142_4-Constancy: [(17, 0), (6, 0), (0, 0)]
6142_4-ContextAliasing: []

.....
-----
Block: 4847_1
4847_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
4847_1-Stack size: 17 
4847_1-Equals Mem:<< []>> 
4847_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4847_1-Equals Sto:<< []>> 
4847_1-NonEquals Sto: << []>> 
4847_1-Useless: []
4847_1-Constancy: [(12, 0), (1, 0)]
4847_1-ContextAliasing: []

.....
-----
Block: 3820_0
3820_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'SWAP1', 'DIV', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0f22', 'JUMPI']>> 
3820_0-Stack size: 10 
3820_0-Equals Mem:<< []>> 
3820_0-NonEquals Mem: << [<5,8>]>> 
3820_0-Equals Sto:<< []>> 
3820_0-NonEquals Sto: << [<12,14>]>> 
3820_0-Useless: []
3820_0-Constancy: [(5, 0)]
3820_0-ContextAliasing: []

.....
-----
Block: 6004_4
6004_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6004_4-Stack size: 18 
6004_4-Equals Mem:<< []>> 
6004_4-NonEquals Mem: << [<5,8>]>> 
6004_4-Equals Sto:<< []>> 
6004_4-NonEquals Sto: << []>> 
6004_4-Useless: []
6004_4-Constancy: [(13, 0), (1, 0)]
6004_4-ContextAliasing: [(4, 15)]

.....
-----
Block: 4531_1
4531_1Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x11d7', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
4531_1-Stack size: 18 
4531_1-Equals Mem:<< [<18,6>]>> 
4531_1-NonEquals Mem: << []>> 
4531_1-Equals Sto:<< []>> 
4531_1-NonEquals Sto: << []>> 
4531_1-Useless: []
4531_1-Constancy: [(13, 0)]
4531_1-ContextAliasing: []

.....
-----
Block: 6004_3
6004_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6004_3-Stack size: 18 
6004_3-Equals Mem:<< []>> 
6004_3-NonEquals Mem: << [<5,8>]>> 
6004_3-Equals Sto:<< []>> 
6004_3-NonEquals Sto: << []>> 
6004_3-Useless: []
6004_3-Constancy: [(13, 0)]
6004_3-ContextAliasing: [(4, 15)]

.....
-----
Block: 2507_3
2507_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2507_3-Stack size: 18 
2507_3-Equals Mem:<< []>> 
2507_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2507_3-Equals Sto:<< []>> 
2507_3-NonEquals Sto: << []>> 
2507_3-Useless: []
2507_3-Constancy: [(13, 0)]
2507_3-ContextAliasing: []

.....
-----
Block: 2605_3
2605_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2605_3-Stack size: 18 
2605_3-Equals Mem:<< []>> 
2605_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2605_3-Equals Sto:<< []>> 
2605_3-NonEquals Sto: << []>> 
2605_3-Useless: []
2605_3-Constancy: [(13, 0)]
2605_3-ContextAliasing: []

.....
-----
Block: 4624_1
4624_1Instr:<<['JUMPDEST', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1248', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1788', 'JUMP']>> 
4624_1-Stack size: 14 
4624_1-Equals Mem:<< []>> 
4624_1-NonEquals Mem: << [<9,4>]>> 
4624_1-Equals Sto:<< []>> 
4624_1-NonEquals Sto: << []>> 
4624_1-Useless: []
4624_1-Constancy: [(9, 0)]
4624_1-ContextAliasing: []

.....
-----
Block: 6024_1
6024_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6024_1-Stack size: 23 
6024_1-Equals Mem:<< []>> 
6024_1-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
6024_1-Equals Sto:<< []>> 
6024_1-NonEquals Sto: << []>> 
6024_1-Useless: []
6024_1-Constancy: [(18, 0), (4, 0)]
6024_1-ContextAliasing: [(9, 19)]

.....
-----
Block: 6074_1
6074_1Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x17b1', 'JUMP']>> 
6074_1-Stack size: 29 
6074_1-Equals Mem:<< []>> 
6074_1-NonEquals Mem: << [<9,1>]>> 
6074_1-Equals Sto:<< []>> 
6074_1-NonEquals Sto: << []>> 
6074_1-Useless: []
6074_1-Constancy: [(24, 0), (10, 0), (5, 0), (3, 32)]
6074_1-ContextAliasing: [(15, 19)]

.....
-----
Block: 5507_31
5507_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_31-Stack size: 22 
5507_31-Equals Mem:<< []>> 
5507_31-NonEquals Mem: << [<5,8>]>> 
5507_31-Equals Sto:<< []>> 
5507_31-NonEquals Sto: << []>> 
5507_31-Useless: []
5507_31-Constancy: [(17, 0), (12, 0), (6, 0), (5, 0)]
5507_31-ContextAliasing: []

.....
-----
Block: 6142_6
6142_6Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142_6-Stack size: 22 
6142_6-Equals Mem:<< []>> 
6142_6-NonEquals Mem: << [<4,7>]>> 
6142_6-Equals Sto:<< []>> 
6142_6-NonEquals Sto: << []>> 
6142_6-Useless: []
6142_6-Constancy: [(17, 0), (12, 0), (6, 0), (0, 0)]
6142_6-ContextAliasing: []

.....
-----
Block: 4847_2
4847_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
4847_2-Stack size: 17 
4847_2-Equals Mem:<< []>> 
4847_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4847_2-Equals Sto:<< []>> 
4847_2-NonEquals Sto: << []>> 
4847_2-Useless: []
4847_2-Constancy: [(12, 0), (7, 0), (1, 0)]
4847_2-ContextAliasing: []

.....
-----
Block: 3984_0
3984_0Instr:<<['ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x0fa8', 'SWAP1', 'DUP3', 'PUSH2 0x139c', 'JUMP']>> 
3984_0-Stack size: 10 
3984_0-Equals Mem:<< []>> 
3984_0-NonEquals Mem: << [<4,7>]>> 
3984_0-Equals Sto:<< []>> 
3984_0-NonEquals Sto: << []>> 
3984_0-Useless: []
3984_0-Constancy: [(5, 0)]
3984_0-ContextAliasing: []

.....
-----
Block: 5507_29
5507_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_29-Stack size: 20 
5507_29-Equals Mem:<< []>> 
5507_29-NonEquals Mem: << [<5,8>]>> 
5507_29-Equals Sto:<< []>> 
5507_29-NonEquals Sto: << []>> 
5507_29-Useless: []
5507_29-Constancy: [(15, 0), (6, 0), (5, 0)]
5507_29-ContextAliasing: []

.....
-----
Block: 5043_2
5043_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
5043_2-Stack size: 15 
5043_2-Equals Mem:<< []>> 
5043_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5043_2-Equals Sto:<< []>> 
5043_2-NonEquals Sto: << []>> 
5043_2-Useless: []
5043_2-Constancy: [(10, 0), (1, 0)]
5043_2-ContextAliasing: []

.....
-----
Block: 4008_0
4008_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'DUP2', 'SWAP1', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH2 0x0ff8', 'SWAP1', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
4008_0-Stack size: 11 
4008_0-Equals Mem:<< []>> 
4008_0-NonEquals Mem: << [<5,19>, <5,8>, <5,34>, <8,19>, <8,34>, <34,13>, <34,19>, <13,19>]>> 
4008_0-Equals Sto:<< []>> 
4008_0-NonEquals Sto: << []>> 
4008_0-Useless: []
4008_0-Constancy: [(6, 0)]
4008_0-ContextAliasing: []

.....
-----
Block: 4097_0
4097_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x1023', 'SWAP1', 'DUP4', 'PUSH2 0x13fa', 'JUMP']>> 
4097_0-Stack size: 10 
4097_0-Equals Mem:<< []>> 
4097_0-NonEquals Mem: << [<11,14>]>> 
4097_0-Equals Sto:<< []>> 
4097_0-NonEquals Sto: << []>> 
4097_0-Useless: []
4097_0-Constancy: [(5, 0)]
4097_0-ContextAliasing: []

.....
-----
Block: 5114_2
5114_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x10c6', 'JUMP']>> 
5114_2-Stack size: 13 
5114_2-Equals Mem:<< [<11,6>]>> 
5114_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5114_2-Equals Sto:<< []>> 
5114_2-NonEquals Sto: << []>> 
5114_2-Useless: []
5114_2-Constancy: [(8, 0)]
5114_2-ContextAliasing: []

.....
-----
Block: 4305_5
4305_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305_5-Stack size: 20 
4305_5-Equals Mem:<< []>> 
4305_5-NonEquals Mem: << [<6,1>]>> 
4305_5-Equals Sto:<< []>> 
4305_5-NonEquals Sto: << []>> 
4305_5-Useless: []
4305_5-Constancy: [(15, 0), (6, 0), (1, 0)]
4305_5-ContextAliasing: [(2, 19)]

.....
-----
Block: 5223_8
5223_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_8-Stack size: 22 
5223_8-Equals Mem:<< []>> 
5223_8-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_8-Equals Sto:<< []>> 
5223_8-NonEquals Sto: << []>> 
5223_8-Useless: []
5223_8-Constancy: [(17, 0), (8, 0), (3, 0)]
5223_8-ContextAliasing: [(4, 20)]

.....
-----
Block: 5247_8
5247_8Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_8-Stack size: 26 
5247_8-Equals Mem:<< []>> 
5247_8-NonEquals Mem: << [<11,5>]>> 
5247_8-Equals Sto:<< []>> 
5247_8-NonEquals Sto: << []>> 
5247_8-Useless: []
5247_8-Constancy: [(21, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_8-ContextAliasing: [(8, 20)]

.....
-----
Block: 5507_28
5507_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_28-Stack size: 25 
5507_28-Equals Mem:<< []>> 
5507_28-NonEquals Mem: << [<5,8>]>> 
5507_28-Equals Sto:<< []>> 
5507_28-NonEquals Sto: << []>> 
5507_28-Useless: []
5507_28-Constancy: [(20, 0), (11, 0), (6, 0), (5, 0)]
5507_28-ContextAliasing: []

.....
-----
Block: 4131_0
4131_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1066', 'PUSH2 0x1048', 'DUP4', 'DUP4', 'PUSH2 0x13fa', 'JUMP']>> 
4131_0-Stack size: 11 
4131_0-Equals Mem:<< []>> 
4131_0-NonEquals Mem: << [<11,14>]>> 
4131_0-Equals Sto:<< []>> 
4131_0-NonEquals Sto: << []>> 
4131_0-Useless: []
4131_0-Constancy: [(6, 0)]
4131_0-ContextAliasing: []

.....
-----
Block: 5114_3
5114_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x10c6', 'JUMP']>> 
5114_3-Stack size: 14 
5114_3-Equals Mem:<< [<11,6>]>> 
5114_3-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5114_3-Equals Sto:<< []>> 
5114_3-NonEquals Sto: << []>> 
5114_3-Useless: []
5114_3-Constancy: [(9, 0)]
5114_3-ContextAliasing: []

.....
-----
Block: 4305_4
4305_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305_4-Stack size: 21 
4305_4-Equals Mem:<< []>> 
4305_4-NonEquals Mem: << [<6,1>]>> 
4305_4-Equals Sto:<< []>> 
4305_4-NonEquals Sto: << []>> 
4305_4-Useless: []
4305_4-Constancy: [(16, 0), (6, 0), (1, 0)]
4305_4-ContextAliasing: [(2, 20)]

.....
-----
Block: 5223_7
5223_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_7-Stack size: 23 
5223_7-Equals Mem:<< []>> 
5223_7-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_7-Equals Sto:<< []>> 
5223_7-NonEquals Sto: << []>> 
5223_7-Useless: []
5223_7-Constancy: [(18, 0), (8, 0), (3, 0)]
5223_7-ContextAliasing: [(4, 21)]

.....
-----
Block: 5247_7
5247_7Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_7-Stack size: 27 
5247_7-Equals Mem:<< []>> 
5247_7-NonEquals Mem: << [<11,5>]>> 
5247_7-Equals Sto:<< []>> 
5247_7-NonEquals Sto: << []>> 
5247_7-Useless: []
5247_7-Constancy: [(22, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_7-ContextAliasing: [(8, 21)]

.....
-----
Block: 5507_27
5507_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_27-Stack size: 26 
5507_27-Equals Mem:<< []>> 
5507_27-NonEquals Mem: << [<5,8>]>> 
5507_27-Equals Sto:<< []>> 
5507_27-NonEquals Sto: << []>> 
5507_27-Useless: []
5507_27-Constancy: [(21, 0), (11, 0), (6, 0), (5, 0)]
5507_27-ContextAliasing: []

.....
-----
Block: 4168_0
4168_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x139c', 'JUMP']>> 
4168_0-Stack size: 12 
4168_0-Equals Mem:<< []>> 
4168_0-NonEquals Mem: << [<11,14>]>> 
4168_0-Equals Sto:<< []>> 
4168_0-NonEquals Sto: << []>> 
4168_0-Useless: []
4168_0-Constancy: [(7, 0)]
4168_0-ContextAliasing: []

.....
-----
Block: 5507_26
5507_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_26-Stack size: 20 
5507_26-Equals Mem:<< []>> 
5507_26-NonEquals Mem: << [<5,8>]>> 
5507_26-Equals Sto:<< []>> 
5507_26-NonEquals Sto: << []>> 
5507_26-Useless: []
5507_26-Constancy: [(15, 0), (6, 0), (5, 0)]
5507_26-ContextAliasing: []

.....
-----
Block: 5043_1
5043_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
5043_1-Stack size: 15 
5043_1-Equals Mem:<< []>> 
5043_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5043_1-Equals Sto:<< []>> 
5043_1-NonEquals Sto: << []>> 
5043_1-Useless: []
5043_1-Constancy: [(10, 0), (1, 0)]
5043_1-ContextAliasing: []

.....
-----
Block: 4198_0
4198_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'DUP6', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'PUSH2 0x10af', 'DUP6', 'DUP6', 'PUSH2 0x13fa', 'JUMP']>> 
4198_0-Stack size: 11 
4198_0-Equals Mem:<< []>> 
4198_0-NonEquals Mem: << [<12,15>]>> 
4198_0-Equals Sto:<< []>> 
4198_0-NonEquals Sto: << []>> 
4198_0-Useless: []
4198_0-Constancy: [(6, 0)]
4198_0-ContextAliasing: []

.....
-----
Block: 5114_4
5114_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x10c6', 'JUMP']>> 
5114_4-Stack size: 16 
5114_4-Equals Mem:<< [<11,6>]>> 
5114_4-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5114_4-Equals Sto:<< []>> 
5114_4-NonEquals Sto: << []>> 
5114_4-Useless: []
5114_4-Constancy: [(11, 0)]
5114_4-ContextAliasing: []

.....
-----
Block: 4305_3
4305_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305_3-Stack size: 23 
4305_3-Equals Mem:<< []>> 
4305_3-NonEquals Mem: << [<6,1>]>> 
4305_3-Equals Sto:<< []>> 
4305_3-NonEquals Sto: << []>> 
4305_3-Useless: []
4305_3-Constancy: [(18, 0), (6, 0), (1, 0)]
4305_3-ContextAliasing: [(2, 22)]

.....
-----
Block: 5223_6
5223_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_6-Stack size: 25 
5223_6-Equals Mem:<< []>> 
5223_6-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_6-Equals Sto:<< []>> 
5223_6-NonEquals Sto: << []>> 
5223_6-Useless: []
5223_6-Constancy: [(20, 0), (8, 0), (3, 0)]
5223_6-ContextAliasing: [(4, 23)]

.....
-----
Block: 5247_6
5247_6Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_6-Stack size: 29 
5247_6-Equals Mem:<< []>> 
5247_6-NonEquals Mem: << [<11,5>]>> 
5247_6-Equals Sto:<< []>> 
5247_6-NonEquals Sto: << []>> 
5247_6-Useless: []
5247_6-Constancy: [(24, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_6-ContextAliasing: [(8, 23)]

.....
-----
Block: 5507_25
5507_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_25-Stack size: 28 
5507_25-Equals Mem:<< []>> 
5507_25-NonEquals Mem: << [<5,8>]>> 
5507_25-Equals Sto:<< []>> 
5507_25-NonEquals Sto: << []>> 
5507_25-Useless: []
5507_25-Constancy: [(23, 0), (11, 0), (6, 0), (5, 0)]
5507_25-ContextAliasing: []

.....
-----
Block: 404
404Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
404-Stack size: 2 
404-Equals Mem:<< []>> 
404-NonEquals Mem: << [<7,2>]>> 
404-Equals Sto:<< []>> 
404-NonEquals Sto: << []>> 
404-Useless: []
404-Constancy: []
404-ContextAliasing: []

.....
-----
Block: 793
793Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'MSTORE', 'PUSH4 0x48535753', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x015f', 'JUMP']>> 
793-Stack size: 2 
793-Equals Mem:<< [<10,4>]>> 
793-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
793-Equals Sto:<< []>> 
793-NonEquals Sto: << []>> 
793-Useless: []
793-Constancy: []
793-ContextAliasing: []

.....
-----
Block: 5223
5223Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223-Stack size: 4 
5223-Equals Mem:<< []>> 
5223-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
5223-Equals Sto:<< []>> 
5223-NonEquals Sto: << []>> 
5223-Useless: []
5223-Constancy: []
5223-ContextAliasing: []

.....
-----
Block: 5247
5247Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247-Stack size: 8 
5247-Equals Mem:<< []>> 
5247-NonEquals Mem: << [<11,5>]>> 
5247-Equals Sto:<< []>> 
5247-NonEquals Sto: << []>> 
5247-Useless: []
5247-Constancy: [(3, 0), (2, 32)]
5247-ContextAliasing: []

.....
-----
Block: 734
734Instr:<<['JUMPDEST', 'POP', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
734-Stack size: 2 
734-Equals Mem:<< []>> 
734-NonEquals Mem: << [<15,5>]>> 
734-Equals Sto:<< []>> 
734-NonEquals Sto: << []>> 
734-Useless: []
734-Constancy: []
734-ContextAliasing: []

.....
-----
Block: 1374
1374Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP1', 'PUSH2 0x169c', 'JUMP']>> 
1374-Stack size: 2 
1374-Equals Mem:<< []>> 
1374-NonEquals Mem: << [<6,1>]>> 
1374-Equals Sto:<< []>> 
1374-NonEquals Sto: << []>> 
1374-Useless: []
1374-Constancy: []
1374-ContextAliasing: []

.....
-----
Block: 5507_21
5507_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_21-Stack size: 7 
5507_21-Equals Mem:<< []>> 
5507_21-NonEquals Mem: << [<5,8>]>> 
5507_21-Equals Sto:<< []>> 
5507_21-NonEquals Sto: << []>> 
5507_21-Useless: []
5507_21-Constancy: []
5507_21-ContextAliasing: []

.....
-----
Block: 5507_17
5507_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_17-Stack size: 7 
5507_17-Equals Mem:<< []>> 
5507_17-NonEquals Mem: << [<5,8>]>> 
5507_17-Equals Sto:<< []>> 
5507_17-NonEquals Sto: << []>> 
5507_17-Useless: []
5507_17-Constancy: []
5507_17-ContextAliasing: []

.....
-----
Block: 5507_13
5507_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_13-Stack size: 8 
5507_13-Equals Mem:<< []>> 
5507_13-NonEquals Mem: << [<5,8>]>> 
5507_13-Equals Sto:<< []>> 
5507_13-NonEquals Sto: << []>> 
5507_13-Useless: []
5507_13-Constancy: []
5507_13-ContextAliasing: []

.....
-----
Block: 5507_16
5507_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_16-Stack size: 18 
5507_16-Equals Mem:<< []>> 
5507_16-NonEquals Mem: << [<5,8>]>> 
5507_16-Equals Sto:<< []>> 
5507_16-NonEquals Sto: << []>> 
5507_16-Useless: []
5507_16-Constancy: [(11, 0), (7, 0)]
5507_16-ContextAliasing: []

.....
-----
Block: 5507_15
5507_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_15-Stack size: 14 
5507_15-Equals Mem:<< []>> 
5507_15-NonEquals Mem: << [<5,8>]>> 
5507_15-Equals Sto:<< []>> 
5507_15-NonEquals Sto: << []>> 
5507_15-Useless: []
5507_15-Constancy: [(7, 0), (3, 0)]
5507_15-ContextAliasing: []

.....
-----
Block: 5507_14
5507_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_14-Stack size: 13 
5507_14-Equals Mem:<< []>> 
5507_14-NonEquals Mem: << [<5,8>]>> 
5507_14-Equals Sto:<< []>> 
5507_14-NonEquals Sto: << []>> 
5507_14-Useless: []
5507_14-Constancy: [(6, 0), (2, 0)]
5507_14-ContextAliasing: []

.....
-----
Block: 5507_20
5507_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_20-Stack size: 17 
5507_20-Equals Mem:<< []>> 
5507_20-NonEquals Mem: << [<5,8>]>> 
5507_20-Equals Sto:<< []>> 
5507_20-NonEquals Sto: << []>> 
5507_20-Useless: []
5507_20-Constancy: [(11, 0), (7, 0)]
5507_20-ContextAliasing: []

.....
-----
Block: 5507_19
5507_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_19-Stack size: 13 
5507_19-Equals Mem:<< []>> 
5507_19-NonEquals Mem: << [<5,8>]>> 
5507_19-Equals Sto:<< []>> 
5507_19-NonEquals Sto: << []>> 
5507_19-Useless: []
5507_19-Constancy: [(7, 0), (3, 0)]
5507_19-ContextAliasing: []

.....
-----
Block: 5507_18
5507_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_18-Stack size: 12 
5507_18-Equals Mem:<< []>> 
5507_18-NonEquals Mem: << [<5,8>]>> 
5507_18-Equals Sto:<< []>> 
5507_18-NonEquals Sto: << []>> 
5507_18-Useless: []
5507_18-Constancy: [(6, 0), (2, 0)]
5507_18-ContextAliasing: []

.....
-----
Block: 5507_24
5507_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_24-Stack size: 17 
5507_24-Equals Mem:<< []>> 
5507_24-NonEquals Mem: << [<5,8>]>> 
5507_24-Equals Sto:<< []>> 
5507_24-NonEquals Sto: << []>> 
5507_24-Useless: []
5507_24-Constancy: [(11, 0), (7, 0)]
5507_24-ContextAliasing: []

.....
-----
Block: 5507_23
5507_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_23-Stack size: 13 
5507_23-Equals Mem:<< []>> 
5507_23-NonEquals Mem: << [<5,8>]>> 
5507_23-Equals Sto:<< []>> 
5507_23-NonEquals Sto: << []>> 
5507_23-Useless: []
5507_23-Constancy: [(7, 0), (3, 0)]
5507_23-ContextAliasing: []

.....
-----
Block: 5507_22
5507_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_22-Stack size: 12 
5507_22-Equals Mem:<< []>> 
5507_22-NonEquals Mem: << [<5,8>]>> 
5507_22-Equals Sto:<< []>> 
5507_22-NonEquals Sto: << []>> 
5507_22-Useless: []
5507_22-Constancy: [(6, 0), (2, 0)]
5507_22-ContextAliasing: []

.....
-----
Block: 1252
1252Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP1', 'PUSH2 0x169c', 'JUMP']>> 
1252-Stack size: 2 
1252-Equals Mem:<< []>> 
1252-NonEquals Mem: << [<6,1>]>> 
1252-Equals Sto:<< []>> 
1252-NonEquals Sto: << []>> 
1252-Useless: []
1252-Constancy: []
1252-ContextAliasing: []

.....
-----
Block: 636
636Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
636-Stack size: 3 
636-Equals Mem:<< []>> 
636-NonEquals Mem: << [<10,13>]>> 
636-Equals Sto:<< []>> 
636-NonEquals Sto: << []>> 
636-Useless: []
636-Constancy: []
636-ContextAliasing: []

.....
-----
Block: 1184
1184Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP1', 'ISZERO', 'PUSH2 0x04be', 'JUMPI']>> 
1184-Stack size: 2 
1184-Equals Mem:<< []>> 
1184-NonEquals Mem: << [<5,8>]>> 
1184-Equals Sto:<< []>> 
1184-NonEquals Sto: << []>> 
1184-Useless: []
1184-Constancy: []
1184-ContextAliasing: []

.....
-----
Block: 6004_2
6004_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6004_2-Stack size: 10 
6004_2-Equals Mem:<< []>> 
6004_2-NonEquals Mem: << [<5,8>]>> 
6004_2-Equals Sto:<< []>> 
6004_2-NonEquals Sto: << []>> 
6004_2-Useless: []
6004_2-Constancy: [(1, 0)]
6004_2-ContextAliasing: [(4, 7)]

.....
-----
Block: 4531_0
4531_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x11d7', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
4531_0-Stack size: 10 
4531_0-Equals Mem:<< [<18,6>]>> 
4531_0-NonEquals Mem: << []>> 
4531_0-Equals Sto:<< []>> 
4531_0-NonEquals Sto: << []>> 
4531_0-Useless: []
4531_0-Constancy: []
4531_0-ContextAliasing: []

.....
-----
Block: 6004_1
6004_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6004_1-Stack size: 10 
6004_1-Equals Mem:<< []>> 
6004_1-NonEquals Mem: << [<5,8>]>> 
6004_1-Equals Sto:<< []>> 
6004_1-NonEquals Sto: << []>> 
6004_1-Useless: []
6004_1-Constancy: []
6004_1-ContextAliasing: [(4, 7)]

.....
-----
Block: 2507_2
2507_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2507_2-Stack size: 10 
2507_2-Equals Mem:<< []>> 
2507_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2507_2-Equals Sto:<< []>> 
2507_2-NonEquals Sto: << []>> 
2507_2-Useless: []
2507_2-Constancy: []
2507_2-ContextAliasing: []

.....
-----
Block: 2605_2
2605_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2605_2-Stack size: 10 
2605_2-Equals Mem:<< []>> 
2605_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2605_2-Equals Sto:<< []>> 
2605_2-NonEquals Sto: << []>> 
2605_2-Useless: []
2605_2-Constancy: []
2605_2-ContextAliasing: []

.....
-----
Block: 4624_0
4624_0Instr:<<['JUMPDEST', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1248', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1788', 'JUMP']>> 
4624_0-Stack size: 6 
4624_0-Equals Mem:<< []>> 
4624_0-NonEquals Mem: << [<9,4>]>> 
4624_0-Equals Sto:<< []>> 
4624_0-NonEquals Sto: << []>> 
4624_0-Useless: []
4624_0-Constancy: []
4624_0-ContextAliasing: []

.....
-----
Block: 6024_0
6024_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6024_0-Stack size: 15 
6024_0-Equals Mem:<< []>> 
6024_0-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
6024_0-Equals Sto:<< []>> 
6024_0-NonEquals Sto: << []>> 
6024_0-Useless: []
6024_0-Constancy: [(4, 0)]
6024_0-ContextAliasing: [(9, 11)]

.....
-----
Block: 6074_0
6074_0Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x17b1', 'JUMP']>> 
6074_0-Stack size: 21 
6074_0-Equals Mem:<< []>> 
6074_0-NonEquals Mem: << [<9,1>]>> 
6074_0-Equals Sto:<< []>> 
6074_0-NonEquals Sto: << []>> 
6074_0-Useless: []
6074_0-Constancy: [(10, 0), (5, 0), (3, 32)]
6074_0-ContextAliasing: [(15, 11)]

.....
-----
Block: 559
559Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'SWAP1', 'JUMP']>> 
559-Stack size: 3 
559-Equals Mem:<< []>> 
559-NonEquals Mem: << [<10,13>]>> 
559-Equals Sto:<< []>> 
559-NonEquals Sto: << []>> 
559-Useless: []
559-Constancy: []
559-ContextAliasing: []

.....
-----
Block: 517
517Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x08', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
517-Stack size: 2 
517-Equals Mem:<< []>> 
517-NonEquals Mem: << [<6,3>]>> 
517-Equals Sto:<< []>> 
517-NonEquals Sto: << []>> 
517-Useless: []
517-Constancy: []
517-ContextAliasing: []

.....
-----
Block: 2798
2798Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2798-Stack size: 10 
2798-Equals Mem:<< []>> 
2798-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2798-Equals Sto:<< []>> 
2798-NonEquals Sto: << []>> 
2798-Useless: []
2798-Constancy: [(4, 0)]
2798-ContextAliasing: []

.....
-----
Block: 2898
2898Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2898-Stack size: 10 
2898-Equals Mem:<< []>> 
2898-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2898-Equals Sto:<< []>> 
2898-NonEquals Sto: << []>> 
2898-Useless: []
2898-Constancy: [(4, 0)]
2898-ContextAliasing: []

.....
-----
Block: 2989
2989Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2989-Stack size: 10 
2989-Equals Mem:<< []>> 
2989-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2989-Equals Sto:<< []>> 
2989-NonEquals Sto: << []>> 
2989-Useless: []
2989-Constancy: [(4, 0)]
2989-ContextAliasing: []

.....
-----
Block: 3127
3127Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0c76', 'JUMPI']>> 
3127-Stack size: 11 
3127-Equals Mem:<< []>> 
3127-NonEquals Mem: << [<10,13>]>> 
3127-Equals Sto:<< []>> 
3127-NonEquals Sto: << []>> 
3127-Useless: []
3127-Constancy: [(5, 0), (0, 0)]
3127-ContextAliasing: []

.....
-----
Block: 3161
3161Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3161-Stack size: 12 
3161-Equals Mem:<< []>> 
3161-NonEquals Mem: << [<11,14>]>> 
3161-Equals Sto:<< []>> 
3161-NonEquals Sto: << []>> 
3161-Useless: []
3161-Constancy: [(6, 0), (1, 0)]
3161-ContextAliasing: []

.....
-----
Block: 3259
3259Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x0d23', 'JUMPI']>> 
3259-Stack size: 11 
3259-Equals Mem:<< []>> 
3259-NonEquals Mem: << [<4,7>]>> 
3259-Equals Sto:<< []>> 
3259-NonEquals Sto: << []>> 
3259-Useless: []
3259-Constancy: [(5, 0), (0, 0)]
3259-ContextAliasing: []

.....
-----
Block: 3280
3280Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x3bb2b217', 'PUSH1 0xe1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3280-Stack size: 11 
3280-Equals Mem:<< []>> 
3280-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3280-Equals Sto:<< []>> 
3280-NonEquals Sto: << []>> 
3280-Useless: []
3280-Constancy: [(5, 0), (0, 0)]
3280-ContextAliasing: []

.....
-----
Block: 3363
3363Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
3363-Stack size: 11 
3363-Equals Mem:<< []>> 
3363-NonEquals Mem: << [<5,8>]>> 
3363-Equals Sto:<< []>> 
3363-NonEquals Sto: << []>> 
3363-Useless: []
3363-Constancy: [(5, 0), (0, 0)]
3363-ContextAliasing: []

.....
-----
Block: 3431
3431Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3431-Stack size: 12 
3431-Equals Mem:<< []>> 
3431-NonEquals Mem: << [<11,14>]>> 
3431-Equals Sto:<< []>> 
3431-NonEquals Sto: << []>> 
3431-Useless: []
3431-Constancy: [(6, 0), (1, 0)]
3431-ContextAliasing: []

.....
-----
Block: 3476
3476Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3476-Stack size: 11 
3476-Equals Mem:<< []>> 
3476-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3476-Equals Sto:<< []>> 
3476-NonEquals Sto: << []>> 
3476-Useless: []
3476-Constancy: [(5, 0), (0, 0)]
3476-ContextAliasing: []

.....
-----
Block: 3547
3547Instr:<<['JUMPDEST', 'PUSH1 0x10', 'SLOAD', 'DUP3', 'PUSH2 0x0dfd', 'DUP6', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3547-Stack size: 11 
3547-Equals Mem:<< []>> 
3547-NonEquals Mem: << [<15,18>]>> 
3547-Equals Sto:<< []>> 
3547-NonEquals Sto: << [<2,22>]>> 
3547-Useless: []
3547-Constancy: [(5, 0), (0, 0)]
3547-ContextAliasing: []

.....
-----
Block: 5507_12
5507_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_12-Stack size: 17 
5507_12-Equals Mem:<< []>> 
5507_12-NonEquals Mem: << [<5,8>]>> 
5507_12-Equals Sto:<< []>> 
5507_12-NonEquals Sto: << []>> 
5507_12-Useless: []
5507_12-Constancy: [(11, 0), (6, 0)]
5507_12-ContextAliasing: []

.....
-----
Block: 3598
3598Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3598-Stack size: 11 
3598-Equals Mem:<< []>> 
3598-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3598-Equals Sto:<< []>> 
3598-NonEquals Sto: << []>> 
3598-Useless: []
3598-Constancy: [(5, 0), (0, 0)]
3598-ContextAliasing: []

.....
-----
Block: 5507_11
5507_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_11-Stack size: 18 
5507_11-Equals Mem:<< []>> 
5507_11-NonEquals Mem: << [<5,8>]>> 
5507_11-Equals Sto:<< []>> 
5507_11-NonEquals Sto: << []>> 
5507_11-Useless: []
5507_11-Constancy: [(12, 0), (7, 0), (4, 0), (1, 0)]
5507_11-ContextAliasing: []

.....
-----
Block: 4935
4935Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x143b', 'JUMP']>> 
4935-Stack size: 14 
4935-Equals Mem:<< [<11,6>]>> 
4935-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4935-Equals Sto:<< []>> 
4935-NonEquals Sto: << []>> 
4935-Useless: []
4935-Constancy: [(8, 0), (3, 0)]
4935-ContextAliasing: []

.....
-----
Block: 5187_0
5187_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
5187_0-Stack size: 21 
5187_0-Equals Mem:<< []>> 
5187_0-NonEquals Mem: << [<6,1>]>> 
5187_0-Equals Sto:<< []>> 
5187_0-NonEquals Sto: << []>> 
5187_0-Useless: []
5187_0-Constancy: [(15, 0), (10, 0), (6, 0), (1, 0)]
5187_0-ContextAliasing: [(2, 20)]

.....
-----
Block: 5223_5
5223_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_5-Stack size: 23 
5223_5-Equals Mem:<< []>> 
5223_5-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_5-Equals Sto:<< []>> 
5223_5-NonEquals Sto: << []>> 
5223_5-Useless: []
5223_5-Constancy: [(17, 0), (12, 0), (8, 0), (3, 0)]
5223_5-ContextAliasing: [(4, 21)]

.....
-----
Block: 5247_5
5247_5Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_5-Stack size: 27 
5247_5-Equals Mem:<< []>> 
5247_5-NonEquals Mem: << [<11,5>]>> 
5247_5-Equals Sto:<< []>> 
5247_5-NonEquals Sto: << []>> 
5247_5-Useless: []
5247_5-Constancy: [(21, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_5-ContextAliasing: [(8, 21)]

.....
-----
Block: 6142_1
6142_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142_1-Stack size: 25 
6142_1-Equals Mem:<< []>> 
6142_1-NonEquals Mem: << [<4,7>]>> 
6142_1-Equals Sto:<< []>> 
6142_1-NonEquals Sto: << []>> 
6142_1-Useless: []
6142_1-Constancy: [(19, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6142_1-ContextAliasing: []

.....
-----
Block: 4935_0
4935_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x143b', 'JUMP']>> 
4935_0-Stack size: 14 
4935_0-Equals Mem:<< [<11,6>]>> 
4935_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4935_0-Equals Sto:<< []>> 
4935_0-NonEquals Sto: << []>> 
4935_0-Useless: []
4935_0-Constancy: [(8, 0)]
4935_0-ContextAliasing: []

.....
-----
Block: 5187
5187Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
5187-Stack size: 21 
5187-Equals Mem:<< []>> 
5187-NonEquals Mem: << [<6,1>]>> 
5187-Equals Sto:<< []>> 
5187-NonEquals Sto: << []>> 
5187-Useless: []
5187-Constancy: [(15, 0), (6, 0), (1, 0)]
5187-ContextAliasing: [(2, 20)]

.....
-----
Block: 5223_4
5223_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_4-Stack size: 23 
5223_4-Equals Mem:<< []>> 
5223_4-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_4-Equals Sto:<< []>> 
5223_4-NonEquals Sto: << []>> 
5223_4-Useless: []
5223_4-Constancy: [(17, 0), (8, 0), (3, 0)]
5223_4-ContextAliasing: [(4, 21)]

.....
-----
Block: 5247_4
5247_4Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_4-Stack size: 27 
5247_4-Equals Mem:<< []>> 
5247_4-NonEquals Mem: << [<11,5>]>> 
5247_4-Equals Sto:<< []>> 
5247_4-NonEquals Sto: << []>> 
5247_4-Useless: []
5247_4-Constancy: [(21, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_4-ContextAliasing: [(8, 21)]

.....
-----
Block: 6142
6142Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142-Stack size: 25 
6142-Equals Mem:<< []>> 
6142-NonEquals Mem: << [<4,7>]>> 
6142-Equals Sto:<< []>> 
6142-NonEquals Sto: << []>> 
6142-Useless: []
6142-Constancy: [(19, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6142-ContextAliasing: []

.....
-----
Block: 5507_9
5507_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_9-Stack size: 23 
5507_9-Equals Mem:<< []>> 
5507_9-NonEquals Mem: << [<5,8>]>> 
5507_9-Equals Sto:<< []>> 
5507_9-NonEquals Sto: << []>> 
5507_9-Useless: []
5507_9-Constancy: [(17, 0), (6, 0), (5, 0)]
5507_9-ContextAliasing: []

.....
-----
Block: 6142_0
6142_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142_0-Stack size: 23 
6142_0-Equals Mem:<< []>> 
6142_0-NonEquals Mem: << [<4,7>]>> 
6142_0-Equals Sto:<< []>> 
6142_0-NonEquals Sto: << []>> 
6142_0-Useless: []
6142_0-Constancy: [(17, 0), (6, 0), (0, 0)]
6142_0-ContextAliasing: []

.....
-----
Block: 4847
4847Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
4847-Stack size: 18 
4847-Equals Mem:<< []>> 
4847-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4847-Equals Sto:<< []>> 
4847-NonEquals Sto: << []>> 
4847-Useless: []
4847-Constancy: [(12, 0), (1, 0)]
4847-ContextAliasing: []

.....
-----
Block: 3820
3820Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'SWAP1', 'DIV', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0f22', 'JUMPI']>> 
3820-Stack size: 11 
3820-Equals Mem:<< []>> 
3820-NonEquals Mem: << [<5,8>]>> 
3820-Equals Sto:<< []>> 
3820-NonEquals Sto: << [<12,14>]>> 
3820-Useless: []
3820-Constancy: [(5, 0)]
3820-ContextAliasing: []

.....
-----
Block: 6004_0
6004_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6004_0-Stack size: 19 
6004_0-Equals Mem:<< []>> 
6004_0-NonEquals Mem: << [<5,8>]>> 
6004_0-Equals Sto:<< []>> 
6004_0-NonEquals Sto: << []>> 
6004_0-Useless: []
6004_0-Constancy: [(13, 0), (1, 0)]
6004_0-ContextAliasing: [(4, 16)]

.....
-----
Block: 4531
4531Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x11d7', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
4531-Stack size: 19 
4531-Equals Mem:<< [<18,6>]>> 
4531-NonEquals Mem: << []>> 
4531-Equals Sto:<< []>> 
4531-NonEquals Sto: << []>> 
4531-Useless: []
4531-Constancy: [(13, 0)]
4531-ContextAliasing: []

.....
-----
Block: 6004
6004Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6004-Stack size: 19 
6004-Equals Mem:<< []>> 
6004-NonEquals Mem: << [<5,8>]>> 
6004-Equals Sto:<< []>> 
6004-NonEquals Sto: << []>> 
6004-Useless: []
6004-Constancy: [(13, 0)]
6004-ContextAliasing: [(4, 16)]

.....
-----
Block: 2507_1
2507_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2507_1-Stack size: 19 
2507_1-Equals Mem:<< []>> 
2507_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2507_1-Equals Sto:<< []>> 
2507_1-NonEquals Sto: << []>> 
2507_1-Useless: []
2507_1-Constancy: [(13, 0)]
2507_1-ContextAliasing: []

.....
-----
Block: 2605_1
2605_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2605_1-Stack size: 19 
2605_1-Equals Mem:<< []>> 
2605_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2605_1-Equals Sto:<< []>> 
2605_1-NonEquals Sto: << []>> 
2605_1-Useless: []
2605_1-Constancy: [(13, 0)]
2605_1-ContextAliasing: []

.....
-----
Block: 4624
4624Instr:<<['JUMPDEST', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1248', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1788', 'JUMP']>> 
4624-Stack size: 15 
4624-Equals Mem:<< []>> 
4624-NonEquals Mem: << [<9,4>]>> 
4624-Equals Sto:<< []>> 
4624-NonEquals Sto: << []>> 
4624-Useless: []
4624-Constancy: [(9, 0)]
4624-ContextAliasing: []

.....
-----
Block: 6024
6024Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6024-Stack size: 24 
6024-Equals Mem:<< []>> 
6024-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
6024-Equals Sto:<< []>> 
6024-NonEquals Sto: << []>> 
6024-Useless: []
6024-Constancy: [(18, 0), (4, 0)]
6024-ContextAliasing: [(9, 20)]

.....
-----
Block: 6074
6074Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x17b1', 'JUMP']>> 
6074-Stack size: 30 
6074-Equals Mem:<< []>> 
6074-NonEquals Mem: << [<9,1>]>> 
6074-Equals Sto:<< []>> 
6074-NonEquals Sto: << []>> 
6074-Useless: []
6074-Constancy: [(24, 0), (10, 0), (5, 0), (3, 32)]
6074-ContextAliasing: [(15, 20)]

.....
-----
Block: 5507_10
5507_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_10-Stack size: 23 
5507_10-Equals Mem:<< []>> 
5507_10-NonEquals Mem: << [<5,8>]>> 
5507_10-Equals Sto:<< []>> 
5507_10-NonEquals Sto: << []>> 
5507_10-Useless: []
5507_10-Constancy: [(17, 0), (12, 0), (6, 0), (5, 0)]
5507_10-ContextAliasing: []

.....
-----
Block: 6142_2
6142_2Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142_2-Stack size: 23 
6142_2-Equals Mem:<< []>> 
6142_2-NonEquals Mem: << [<4,7>]>> 
6142_2-Equals Sto:<< []>> 
6142_2-NonEquals Sto: << []>> 
6142_2-Useless: []
6142_2-Constancy: [(17, 0), (12, 0), (6, 0), (0, 0)]
6142_2-ContextAliasing: []

.....
-----
Block: 4847_0
4847_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
4847_0-Stack size: 18 
4847_0-Equals Mem:<< []>> 
4847_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4847_0-Equals Sto:<< []>> 
4847_0-NonEquals Sto: << []>> 
4847_0-Useless: []
4847_0-Constancy: [(12, 0), (7, 0), (1, 0)]
4847_0-ContextAliasing: []

.....
-----
Block: 3984
3984Instr:<<['ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x0fa8', 'SWAP1', 'DUP3', 'PUSH2 0x139c', 'JUMP']>> 
3984-Stack size: 11 
3984-Equals Mem:<< []>> 
3984-NonEquals Mem: << [<4,7>]>> 
3984-Equals Sto:<< []>> 
3984-NonEquals Sto: << []>> 
3984-Useless: []
3984-Constancy: [(5, 0)]
3984-ContextAliasing: []

.....
-----
Block: 5507_8
5507_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_8-Stack size: 21 
5507_8-Equals Mem:<< []>> 
5507_8-NonEquals Mem: << [<5,8>]>> 
5507_8-Equals Sto:<< []>> 
5507_8-NonEquals Sto: << []>> 
5507_8-Useless: []
5507_8-Constancy: [(15, 0), (6, 0), (5, 0)]
5507_8-ContextAliasing: []

.....
-----
Block: 5043_0
5043_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
5043_0-Stack size: 16 
5043_0-Equals Mem:<< []>> 
5043_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5043_0-Equals Sto:<< []>> 
5043_0-NonEquals Sto: << []>> 
5043_0-Useless: []
5043_0-Constancy: [(10, 0), (1, 0)]
5043_0-ContextAliasing: []

.....
-----
Block: 4008
4008Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'DUP2', 'SWAP1', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH2 0x0ff8', 'SWAP1', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
4008-Stack size: 12 
4008-Equals Mem:<< []>> 
4008-NonEquals Mem: << [<5,19>, <5,8>, <5,34>, <8,19>, <8,34>, <34,13>, <34,19>, <13,19>]>> 
4008-Equals Sto:<< []>> 
4008-NonEquals Sto: << []>> 
4008-Useless: []
4008-Constancy: [(6, 0)]
4008-ContextAliasing: []

.....
-----
Block: 4097
4097Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x1023', 'SWAP1', 'DUP4', 'PUSH2 0x13fa', 'JUMP']>> 
4097-Stack size: 11 
4097-Equals Mem:<< []>> 
4097-NonEquals Mem: << [<11,14>]>> 
4097-Equals Sto:<< []>> 
4097-NonEquals Sto: << []>> 
4097-Useless: []
4097-Constancy: [(5, 0)]
4097-ContextAliasing: []

.....
-----
Block: 5114
5114Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x10c6', 'JUMP']>> 
5114-Stack size: 14 
5114-Equals Mem:<< [<11,6>]>> 
5114-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5114-Equals Sto:<< []>> 
5114-NonEquals Sto: << []>> 
5114-Useless: []
5114-Constancy: [(8, 0)]
5114-ContextAliasing: []

.....
-----
Block: 4305_2
4305_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305_2-Stack size: 21 
4305_2-Equals Mem:<< []>> 
4305_2-NonEquals Mem: << [<6,1>]>> 
4305_2-Equals Sto:<< []>> 
4305_2-NonEquals Sto: << []>> 
4305_2-Useless: []
4305_2-Constancy: [(15, 0), (6, 0), (1, 0)]
4305_2-ContextAliasing: [(2, 20)]

.....
-----
Block: 5223_3
5223_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_3-Stack size: 23 
5223_3-Equals Mem:<< []>> 
5223_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_3-Equals Sto:<< []>> 
5223_3-NonEquals Sto: << []>> 
5223_3-Useless: []
5223_3-Constancy: [(17, 0), (8, 0), (3, 0)]
5223_3-ContextAliasing: [(4, 21)]

.....
-----
Block: 5247_3
5247_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_3-Stack size: 27 
5247_3-Equals Mem:<< []>> 
5247_3-NonEquals Mem: << [<11,5>]>> 
5247_3-Equals Sto:<< []>> 
5247_3-NonEquals Sto: << []>> 
5247_3-Useless: []
5247_3-Constancy: [(21, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_3-ContextAliasing: [(8, 21)]

.....
-----
Block: 5507_7
5507_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_7-Stack size: 26 
5507_7-Equals Mem:<< []>> 
5507_7-NonEquals Mem: << [<5,8>]>> 
5507_7-Equals Sto:<< []>> 
5507_7-NonEquals Sto: << []>> 
5507_7-Useless: []
5507_7-Constancy: [(20, 0), (11, 0), (6, 0), (5, 0)]
5507_7-ContextAliasing: []

.....
-----
Block: 4131
4131Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1066', 'PUSH2 0x1048', 'DUP4', 'DUP4', 'PUSH2 0x13fa', 'JUMP']>> 
4131-Stack size: 12 
4131-Equals Mem:<< []>> 
4131-NonEquals Mem: << [<11,14>]>> 
4131-Equals Sto:<< []>> 
4131-NonEquals Sto: << []>> 
4131-Useless: []
4131-Constancy: [(6, 0)]
4131-ContextAliasing: []

.....
-----
Block: 5114_0
5114_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x10c6', 'JUMP']>> 
5114_0-Stack size: 15 
5114_0-Equals Mem:<< [<11,6>]>> 
5114_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5114_0-Equals Sto:<< []>> 
5114_0-NonEquals Sto: << []>> 
5114_0-Useless: []
5114_0-Constancy: [(9, 0)]
5114_0-ContextAliasing: []

.....
-----
Block: 4305_1
4305_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305_1-Stack size: 22 
4305_1-Equals Mem:<< []>> 
4305_1-NonEquals Mem: << [<6,1>]>> 
4305_1-Equals Sto:<< []>> 
4305_1-NonEquals Sto: << []>> 
4305_1-Useless: []
4305_1-Constancy: [(16, 0), (6, 0), (1, 0)]
4305_1-ContextAliasing: [(2, 21)]

.....
-----
Block: 5223_2
5223_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_2-Stack size: 24 
5223_2-Equals Mem:<< []>> 
5223_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_2-Equals Sto:<< []>> 
5223_2-NonEquals Sto: << []>> 
5223_2-Useless: []
5223_2-Constancy: [(18, 0), (8, 0), (3, 0)]
5223_2-ContextAliasing: [(4, 22)]

.....
-----
Block: 5247_2
5247_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_2-Stack size: 28 
5247_2-Equals Mem:<< []>> 
5247_2-NonEquals Mem: << [<11,5>]>> 
5247_2-Equals Sto:<< []>> 
5247_2-NonEquals Sto: << []>> 
5247_2-Useless: []
5247_2-Constancy: [(22, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_2-ContextAliasing: [(8, 22)]

.....
-----
Block: 5507_6
5507_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_6-Stack size: 27 
5507_6-Equals Mem:<< []>> 
5507_6-NonEquals Mem: << [<5,8>]>> 
5507_6-Equals Sto:<< []>> 
5507_6-NonEquals Sto: << []>> 
5507_6-Useless: []
5507_6-Constancy: [(21, 0), (11, 0), (6, 0), (5, 0)]
5507_6-ContextAliasing: []

.....
-----
Block: 4168
4168Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x139c', 'JUMP']>> 
4168-Stack size: 13 
4168-Equals Mem:<< []>> 
4168-NonEquals Mem: << [<11,14>]>> 
4168-Equals Sto:<< []>> 
4168-NonEquals Sto: << []>> 
4168-Useless: []
4168-Constancy: [(7, 0)]
4168-ContextAliasing: []

.....
-----
Block: 5507_5
5507_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_5-Stack size: 21 
5507_5-Equals Mem:<< []>> 
5507_5-NonEquals Mem: << [<5,8>]>> 
5507_5-Equals Sto:<< []>> 
5507_5-NonEquals Sto: << []>> 
5507_5-Useless: []
5507_5-Constancy: [(15, 0), (6, 0), (5, 0)]
5507_5-ContextAliasing: []

.....
-----
Block: 5043
5043Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
5043-Stack size: 16 
5043-Equals Mem:<< []>> 
5043-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5043-Equals Sto:<< []>> 
5043-NonEquals Sto: << []>> 
5043-Useless: []
5043-Constancy: [(10, 0), (1, 0)]
5043-ContextAliasing: []

.....
-----
Block: 4198
4198Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'DUP6', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'PUSH2 0x10af', 'DUP6', 'DUP6', 'PUSH2 0x13fa', 'JUMP']>> 
4198-Stack size: 12 
4198-Equals Mem:<< []>> 
4198-NonEquals Mem: << [<12,15>]>> 
4198-Equals Sto:<< []>> 
4198-NonEquals Sto: << []>> 
4198-Useless: []
4198-Constancy: [(6, 0)]
4198-ContextAliasing: []

.....
-----
Block: 5114_1
5114_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x10c6', 'JUMP']>> 
5114_1-Stack size: 17 
5114_1-Equals Mem:<< [<11,6>]>> 
5114_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5114_1-Equals Sto:<< []>> 
5114_1-NonEquals Sto: << []>> 
5114_1-Useless: []
5114_1-Constancy: [(11, 0)]
5114_1-ContextAliasing: []

.....
-----
Block: 4305_0
4305_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305_0-Stack size: 24 
4305_0-Equals Mem:<< []>> 
4305_0-NonEquals Mem: << [<6,1>]>> 
4305_0-Equals Sto:<< []>> 
4305_0-NonEquals Sto: << []>> 
4305_0-Useless: []
4305_0-Constancy: [(18, 0), (6, 0), (1, 0)]
4305_0-ContextAliasing: [(2, 23)]

.....
-----
Block: 5223_1
5223_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_1-Stack size: 26 
5223_1-Equals Mem:<< []>> 
5223_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_1-Equals Sto:<< []>> 
5223_1-NonEquals Sto: << []>> 
5223_1-Useless: []
5223_1-Constancy: [(20, 0), (8, 0), (3, 0)]
5223_1-ContextAliasing: [(4, 24)]

.....
-----
Block: 5247_1
5247_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_1-Stack size: 30 
5247_1-Equals Mem:<< []>> 
5247_1-NonEquals Mem: << [<11,5>]>> 
5247_1-Equals Sto:<< []>> 
5247_1-NonEquals Sto: << []>> 
5247_1-Useless: []
5247_1-Constancy: [(24, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5247_1-ContextAliasing: [(8, 24)]

.....
-----
Block: 5507_4
5507_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_4-Stack size: 29 
5507_4-Equals Mem:<< []>> 
5507_4-NonEquals Mem: << [<5,8>]>> 
5507_4-Equals Sto:<< []>> 
5507_4-NonEquals Sto: << []>> 
5507_4-Useless: []
5507_4-Constancy: [(23, 0), (11, 0), (6, 0), (5, 0)]
5507_4-ContextAliasing: []

.....
-----
Block: 4305
4305Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305-Stack size: 15 
4305-Equals Mem:<< []>> 
4305-NonEquals Mem: << [<6,1>]>> 
4305-Equals Sto:<< []>> 
4305-NonEquals Sto: << []>> 
4305-Useless: []
4305-Constancy: [(9, 0), (1, 0)]
4305-ContextAliasing: [(2, 14)]

.....
-----
Block: 5223_0
5223_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223_0-Stack size: 17 
5223_0-Equals Mem:<< []>> 
5223_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
5223_0-Equals Sto:<< []>> 
5223_0-NonEquals Sto: << []>> 
5223_0-Useless: []
5223_0-Constancy: [(11, 0), (3, 0)]
5223_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 5247_0
5247_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247_0-Stack size: 21 
5247_0-Equals Mem:<< []>> 
5247_0-NonEquals Mem: << [<11,5>]>> 
5247_0-Equals Sto:<< []>> 
5247_0-NonEquals Sto: << []>> 
5247_0-Useless: []
5247_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
5247_0-ContextAliasing: [(8, 15)]

.....
-----
Block: 5507_3
5507_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_3-Stack size: 20 
5507_3-Equals Mem:<< []>> 
5507_3-NonEquals Mem: << [<5,8>]>> 
5507_3-Equals Sto:<< []>> 
5507_3-NonEquals Sto: << []>> 
5507_3-Useless: []
5507_3-Constancy: [(14, 0), (6, 0), (5, 0)]
5507_3-ContextAliasing: []

.....
-----
Block: 2507_0
2507_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2507_0-Stack size: 10 
2507_0-Equals Mem:<< []>> 
2507_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2507_0-Equals Sto:<< []>> 
2507_0-NonEquals Sto: << []>> 
2507_0-Useless: []
2507_0-Constancy: [(4, 0)]
2507_0-ContextAliasing: []

.....
-----
Block: 2605_0
2605_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2605_0-Stack size: 10 
2605_0-Equals Mem:<< []>> 
2605_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2605_0-Equals Sto:<< []>> 
2605_0-NonEquals Sto: << []>> 
2605_0-Useless: []
2605_0-Constancy: [(4, 0)]
2605_0-ContextAliasing: []

.....
-----
Block: 5507
5507Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507-Stack size: 8 
5507-Equals Mem:<< []>> 
5507-NonEquals Mem: << [<5,8>]>> 
5507-Equals Sto:<< []>> 
5507-NonEquals Sto: << []>> 
5507-Useless: []
5507-Constancy: [(5, 0)]
5507-ContextAliasing: []

.....
-----
Block: 5507_2
5507_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_2-Stack size: 18 
5507_2-Equals Mem:<< []>> 
5507_2-NonEquals Mem: << [<5,8>]>> 
5507_2-Equals Sto:<< []>> 
5507_2-NonEquals Sto: << []>> 
5507_2-Useless: []
5507_2-Constancy: [(15, 0), (11, 0), (7, 0)]
5507_2-ContextAliasing: []

.....
-----
Block: 5507_1
5507_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_1-Stack size: 14 
5507_1-Equals Mem:<< []>> 
5507_1-NonEquals Mem: << [<5,8>]>> 
5507_1-Equals Sto:<< []>> 
5507_1-NonEquals Sto: << []>> 
5507_1-Useless: []
5507_1-Constancy: [(11, 0), (7, 0), (3, 0)]
5507_1-ContextAliasing: []

.....
-----
Block: 5507_0
5507_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507_0-Stack size: 13 
5507_0-Equals Mem:<< []>> 
5507_0-NonEquals Mem: << [<5,8>]>> 
5507_0-Equals Sto:<< []>> 
5507_0-NonEquals Sto: << []>> 
5507_0-Useless: []
5507_0-Constancy: [(10, 0), (6, 0), (2, 0)]
5507_0-ContextAliasing: []

.....
-----
Block: 2507
2507Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2507-Stack size: 9 
2507-Equals Mem:<< []>> 
2507-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2507-Equals Sto:<< []>> 
2507-NonEquals Sto: << []>> 
2507-Useless: []
2507-Constancy: [(4, 0)]
2507-ContextAliasing: []

.....
-----
Block: 2605
2605Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2605-Stack size: 9 
2605-Equals Mem:<< []>> 
2605-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2605-Equals Sto:<< []>> 
2605-NonEquals Sto: << []>> 
2605-Useless: []
2605-Constancy: [(4, 0)]
2605-ContextAliasing: []

.....
-----
Block: 308
308Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH18 0x12185b991cdbdb594814dc5d5a591dd85c99', 'PUSH1 0x72', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
308-Stack size: 2 
308-Equals Mem:<< [<10,4>]>> 
308-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
308-Equals Sto:<< []>> 
308-NonEquals Sto: << []>> 
308-Useless: []
308-Constancy: []
308-ContextAliasing: []

.....
-----
Block: 364
364Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
364-Stack size: 2 
364-Equals Mem:<< []>> 
364-NonEquals Mem: << []>> 
364-Equals Sto:<< []>> 
364-NonEquals Sto: << []>> 
364-Useless: []
364-Constancy: []
364-ContextAliasing: []

.....
-----
Block: 1275_15
1275_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_15-Stack size: 3 
1275_15-Equals Mem:<< []>> 
1275_15-NonEquals Mem: << []>> 
1275_15-Equals Sto:<< []>> 
1275_15-NonEquals Sto: << []>> 
1275_15-Useless: []
1275_15-Constancy: []
1275_15-ContextAliasing: []

.....
-----
Block: 1275_27
1275_27Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_27-Stack size: 7 
1275_27-Equals Mem:<< []>> 
1275_27-NonEquals Mem: << []>> 
1275_27-Equals Sto:<< []>> 
1275_27-NonEquals Sto: << []>> 
1275_27-Useless: []
1275_27-Constancy: []
1275_27-ContextAliasing: []

.....
-----
Block: 5886
5886Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
5886-Stack size: 8 
5886-Equals Mem:<< []>> 
5886-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
5886-Equals Sto:<< []>> 
5886-NonEquals Sto: << []>> 
5886-Useless: []
5886-Constancy: [(2, 0), (1, 0), (0, 0)]
5886-ContextAliasing: []

.....
-----
Block: 364_1
364_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
364_1-Stack size: 3 
364_1-Equals Mem:<< []>> 
364_1-NonEquals Mem: << []>> 
364_1-Equals Sto:<< []>> 
364_1-NonEquals Sto: << []>> 
364_1-Useless: []
364_1-Constancy: []
364_1-ContextAliasing: []

.....
-----
Block: 364_0
364_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
364_0-Stack size: 3 
364_0-Equals Mem:<< []>> 
364_0-NonEquals Mem: << []>> 
364_0-Equals Sto:<< []>> 
364_0-NonEquals Sto: << []>> 
364_0-Useless: []
364_0-Constancy: []
364_0-ContextAliasing: []

.....
-----
Block: 1275
1275Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275-Stack size: 10 
1275-Equals Mem:<< []>> 
1275-NonEquals Mem: << []>> 
1275-Equals Sto:<< []>> 
1275-NonEquals Sto: << []>> 
1275-Useless: []
1275-Constancy: [(5, 0)]
1275-ContextAliasing: []

.....
-----
Block: 1275_26
1275_26Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_26-Stack size: 11 
1275_26-Equals Mem:<< []>> 
1275_26-NonEquals Mem: << []>> 
1275_26-Equals Sto:<< []>> 
1275_26-NonEquals Sto: << []>> 
1275_26-Useless: []
1275_26-Constancy: [(6, 0), (1, 0)]
1275_26-ContextAliasing: []

.....
-----
Block: 1275_24
1275_24Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_24-Stack size: 20 
1275_24-Equals Mem:<< []>> 
1275_24-NonEquals Mem: << []>> 
1275_24-Equals Sto:<< []>> 
1275_24-NonEquals Sto: << []>> 
1275_24-Useless: []
1275_24-Constancy: [(15, 0), (10, 0), (6, 0), (1, 0)]
1275_24-ContextAliasing: []

.....
-----
Block: 1275_22
1275_22Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_22-Stack size: 20 
1275_22-Equals Mem:<< []>> 
1275_22-NonEquals Mem: << []>> 
1275_22-Equals Sto:<< []>> 
1275_22-NonEquals Sto: << []>> 
1275_22-Useless: []
1275_22-Constancy: [(15, 0), (6, 0), (1, 0)]
1275_22-ContextAliasing: []

.....
-----
Block: 1275_23
1275_23Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_23-Stack size: 18 
1275_23-Equals Mem:<< []>> 
1275_23-NonEquals Mem: << []>> 
1275_23-Equals Sto:<< []>> 
1275_23-NonEquals Sto: << []>> 
1275_23-Useless: []
1275_23-Constancy: [(13, 0), (2, 0)]
1275_23-ContextAliasing: []

.....
-----
Block: 1275_21
1275_21Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_21-Stack size: 19 
1275_21-Equals Mem:<< []>> 
1275_21-NonEquals Mem: << []>> 
1275_21-Equals Sto:<< []>> 
1275_21-NonEquals Sto: << []>> 
1275_21-Useless: []
1275_21-Constancy: [(14, 0)]
1275_21-ContextAliasing: []

.....
-----
Block: 1275_25
1275_25Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_25-Stack size: 18 
1275_25-Equals Mem:<< []>> 
1275_25-NonEquals Mem: << []>> 
1275_25-Equals Sto:<< []>> 
1275_25-NonEquals Sto: << []>> 
1275_25-Useless: []
1275_25-Constancy: [(13, 0), (8, 0), (2, 0)]
1275_25-ContextAliasing: []

.....
-----
Block: 1275_20
1275_20Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_20-Stack size: 16 
1275_20-Equals Mem:<< []>> 
1275_20-NonEquals Mem: << []>> 
1275_20-Equals Sto:<< []>> 
1275_20-NonEquals Sto: << []>> 
1275_20-Useless: []
1275_20-Constancy: [(11, 0), (2, 0)]
1275_20-ContextAliasing: []

.....
-----
Block: 1275_19
1275_19Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_19-Stack size: 20 
1275_19-Equals Mem:<< []>> 
1275_19-NonEquals Mem: << []>> 
1275_19-Equals Sto:<< []>> 
1275_19-NonEquals Sto: << []>> 
1275_19-Useless: []
1275_19-Constancy: [(15, 0), (6, 0), (1, 0)]
1275_19-ContextAliasing: []

.....
-----
Block: 1275_18
1275_18Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_18-Stack size: 21 
1275_18-Equals Mem:<< []>> 
1275_18-NonEquals Mem: << []>> 
1275_18-Equals Sto:<< []>> 
1275_18-NonEquals Sto: << []>> 
1275_18-Useless: []
1275_18-Constancy: [(16, 0), (6, 0), (1, 0)]
1275_18-ContextAliasing: []

.....
-----
Block: 1275_17
1275_17Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_17-Stack size: 16 
1275_17-Equals Mem:<< []>> 
1275_17-NonEquals Mem: << []>> 
1275_17-Equals Sto:<< []>> 
1275_17-NonEquals Sto: << []>> 
1275_17-Useless: []
1275_17-Constancy: [(11, 0), (2, 0)]
1275_17-ContextAliasing: []

.....
-----
Block: 1275_16
1275_16Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_16-Stack size: 23 
1275_16-Equals Mem:<< []>> 
1275_16-NonEquals Mem: << []>> 
1275_16-Equals Sto:<< []>> 
1275_16-NonEquals Sto: << []>> 
1275_16-Useless: []
1275_16-Constancy: [(18, 0), (6, 0), (1, 0)]
1275_16-ContextAliasing: []

.....
-----
Block: 1275_14
1275_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_14-Stack size: 11 
1275_14-Equals Mem:<< []>> 
1275_14-NonEquals Mem: << []>> 
1275_14-Equals Sto:<< []>> 
1275_14-NonEquals Sto: << []>> 
1275_14-Useless: []
1275_14-Constancy: []
1275_14-ContextAliasing: []

.....
-----
Block: 1275_13
1275_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_13-Stack size: 11 
1275_13-Equals Mem:<< []>> 
1275_13-NonEquals Mem: << []>> 
1275_13-Equals Sto:<< []>> 
1275_13-NonEquals Sto: << []>> 
1275_13-Useless: []
1275_13-Constancy: [(5, 0)]
1275_13-ContextAliasing: []

.....
-----
Block: 1275_12
1275_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_12-Stack size: 12 
1275_12-Equals Mem:<< []>> 
1275_12-NonEquals Mem: << []>> 
1275_12-Equals Sto:<< []>> 
1275_12-NonEquals Sto: << []>> 
1275_12-Useless: []
1275_12-Constancy: [(6, 0), (1, 0)]
1275_12-ContextAliasing: []

.....
-----
Block: 1275_10
1275_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_10-Stack size: 21 
1275_10-Equals Mem:<< []>> 
1275_10-NonEquals Mem: << []>> 
1275_10-Equals Sto:<< []>> 
1275_10-NonEquals Sto: << []>> 
1275_10-Useless: []
1275_10-Constancy: [(15, 0), (10, 0), (6, 0), (1, 0)]
1275_10-ContextAliasing: []

.....
-----
Block: 1275_8
1275_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_8-Stack size: 21 
1275_8-Equals Mem:<< []>> 
1275_8-NonEquals Mem: << []>> 
1275_8-Equals Sto:<< []>> 
1275_8-NonEquals Sto: << []>> 
1275_8-Useless: []
1275_8-Constancy: [(15, 0), (6, 0), (1, 0)]
1275_8-ContextAliasing: []

.....
-----
Block: 1275_9
1275_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_9-Stack size: 19 
1275_9-Equals Mem:<< []>> 
1275_9-NonEquals Mem: << []>> 
1275_9-Equals Sto:<< []>> 
1275_9-NonEquals Sto: << []>> 
1275_9-Useless: []
1275_9-Constancy: [(13, 0), (2, 0)]
1275_9-ContextAliasing: []

.....
-----
Block: 1275_7
1275_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_7-Stack size: 20 
1275_7-Equals Mem:<< []>> 
1275_7-NonEquals Mem: << []>> 
1275_7-Equals Sto:<< []>> 
1275_7-NonEquals Sto: << []>> 
1275_7-Useless: []
1275_7-Constancy: [(14, 0)]
1275_7-ContextAliasing: []

.....
-----
Block: 1275_11
1275_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_11-Stack size: 19 
1275_11-Equals Mem:<< []>> 
1275_11-NonEquals Mem: << []>> 
1275_11-Equals Sto:<< []>> 
1275_11-NonEquals Sto: << []>> 
1275_11-Useless: []
1275_11-Constancy: [(13, 0), (8, 0), (2, 0)]
1275_11-ContextAliasing: []

.....
-----
Block: 1275_6
1275_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_6-Stack size: 17 
1275_6-Equals Mem:<< []>> 
1275_6-NonEquals Mem: << []>> 
1275_6-Equals Sto:<< []>> 
1275_6-NonEquals Sto: << []>> 
1275_6-Useless: []
1275_6-Constancy: [(11, 0), (2, 0)]
1275_6-ContextAliasing: []

.....
-----
Block: 1275_5
1275_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_5-Stack size: 21 
1275_5-Equals Mem:<< []>> 
1275_5-NonEquals Mem: << []>> 
1275_5-Equals Sto:<< []>> 
1275_5-NonEquals Sto: << []>> 
1275_5-Useless: []
1275_5-Constancy: [(15, 0), (6, 0), (1, 0)]
1275_5-ContextAliasing: []

.....
-----
Block: 1275_4
1275_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_4-Stack size: 22 
1275_4-Equals Mem:<< []>> 
1275_4-NonEquals Mem: << []>> 
1275_4-Equals Sto:<< []>> 
1275_4-NonEquals Sto: << []>> 
1275_4-Useless: []
1275_4-Constancy: [(16, 0), (6, 0), (1, 0)]
1275_4-ContextAliasing: []

.....
-----
Block: 1275_3
1275_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_3-Stack size: 17 
1275_3-Equals Mem:<< []>> 
1275_3-NonEquals Mem: << []>> 
1275_3-Equals Sto:<< []>> 
1275_3-NonEquals Sto: << []>> 
1275_3-Useless: []
1275_3-Constancy: [(11, 0), (2, 0)]
1275_3-ContextAliasing: []

.....
-----
Block: 1275_2
1275_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_2-Stack size: 24 
1275_2-Equals Mem:<< []>> 
1275_2-NonEquals Mem: << []>> 
1275_2-Equals Sto:<< []>> 
1275_2-NonEquals Sto: << []>> 
1275_2-Useless: []
1275_2-Constancy: [(18, 0), (6, 0), (1, 0)]
1275_2-ContextAliasing: []

.....
-----
Block: 1275_1
1275_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_1-Stack size: 15 
1275_1-Equals Mem:<< []>> 
1275_1-NonEquals Mem: << []>> 
1275_1-Equals Sto:<< []>> 
1275_1-NonEquals Sto: << []>> 
1275_1-Useless: []
1275_1-Constancy: [(9, 0), (1, 0)]
1275_1-ContextAliasing: []

.....
-----
Block: 1275_0
1275_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275_0-Stack size: 11 
1275_0-Equals Mem:<< []>> 
1275_0-NonEquals Mem: << []>> 
1275_0-Equals Sto:<< []>> 
1275_0-NonEquals Sto: << []>> 
1275_0-Useless: []
1275_0-Constancy: [(5, 0)]
1275_0-ContextAliasing: []

.....
-----
Block: 1452
1452Instr:<<['JUMPDEST', 'PUSH1 0x10', 'SSTORE', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH32 0x947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf', 'PUSH2 0x05e6', 'PUSH1 0x08', 'PUSH1 0x0a', 'PUSH2 0x1677', 'JUMP']>> 
1452-Stack size: 3 
1452-Equals Mem:<< []>> 
1452-NonEquals Mem: << []>> 
1452-Equals Sto:<< [<5,10>]>> 
1452-NonEquals Sto: << [<2,5>, <2,10>]>> 
1452-Useless: []
1452-Constancy: []
1452-ContextAliasing: []

.....
-----
Block: 1686
1686Instr:<<['JUMPDEST', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'SWAP1', 'DUP2', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH2 0x06df', 'SWAP1', 'ADDRESS', 'SWAP1', 'PUSH2 0x06d1', 'PUSH1 0x08', 'PUSH1 0x0a', 'PUSH2 0x1677', 'JUMP']>> 
1686-Stack size: 2 
1686-Equals Mem:<< []>> 
1686-NonEquals Mem: << []>> 
1686-Equals Sto:<< [<3,17>]>> 
1686-NonEquals Sto: << []>> 
1686-Useless: []
1686-Constancy: []
1686-ContextAliasing: []

.....
-----
Block: 2466
2466Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH3 0xff00ff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH3 0x010001', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
2466-Stack size: 3 
2466-Equals Mem:<< []>> 
2466-NonEquals Mem: << []>> 
2466-Equals Sto:<< [<4,15>]>> 
2466-NonEquals Sto: << []>> 
2466-Useless: []
2466-Constancy: []
2466-ContextAliasing: []

.....
-----
Block: 3690
3690Instr:<<['JUMPDEST', 'PUSH2 0x0e96', 'PUSH1 0x64', 'PUSH2 0x0e90', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT', 'PUSH2 0x0e85', 'JUMPI']>> 
3690-Stack size: 11 
3690-Equals Mem:<< []>> 
3690-NonEquals Mem: << []>> 
3690-Equals Sto:<< []>> 
3690-NonEquals Sto: << [<5,7>]>> 
3690-Useless: []
3690-Constancy: [(5, 0), (0, 0)]
3690-ContextAliasing: []

.....
-----
Block: 3781
3781Instr:<<['PUSH2 0x0ee9', 'PUSH1 0x64', 'PUSH2 0x0e90', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT', 'PUSH2 0x0edf', 'JUMPI']>> 
3781-Stack size: 11 
3781-Equals Mem:<< []>> 
3781-NonEquals Mem: << []>> 
3781-Equals Sto:<< []>> 
3781-NonEquals Sto: << [<4,6>]>> 
3781-Useless: []
3781-Constancy: [(5, 0)]
3781-ContextAliasing: []

.....
-----
Block: 3915
3915Instr:<<['POP', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT']>> 
3915-Stack size: 13 
3915-Equals Mem:<< []>> 
3915-NonEquals Mem: << []>> 
3915-Equals Sto:<< []>> 
3915-NonEquals Sto: << [<2,4>]>> 
3915-Useless: []
3915-Constancy: [(7, 0)]
3915-ContextAliasing: []

.....
-----
Block: 4350
4350Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'ISZERO', 'PUSH2 0x1277', 'JUMPI']>> 
4350-Stack size: 14 
4350-Equals Mem:<< []>> 
4350-NonEquals Mem: << []>> 
4350-Equals Sto:<< [<3,14>]>> 
4350-NonEquals Sto: << []>> 
4350-Useless: []
4350-Constancy: [(8, 0)]
4350-ContextAliasing: []

.....
-----
Block: 4727
4727Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
4727-Stack size: 14 
4727-Equals Mem:<< []>> 
4727-NonEquals Mem: << []>> 
4727-Equals Sto:<< [<4,11>]>> 
4727-NonEquals Sto: << []>> 
4727-Useless: []
4727-Constancy: [(8, 0)]
4727-ContextAliasing: []

.....
-----
Block: 4350_0
4350_0Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'ISZERO', 'PUSH2 0x1277', 'JUMPI']>> 
4350_0-Stack size: 5 
4350_0-Equals Mem:<< []>> 
4350_0-NonEquals Mem: << []>> 
4350_0-Equals Sto:<< [<3,14>]>> 
4350_0-NonEquals Sto: << []>> 
4350_0-Useless: []
4350_0-Constancy: []
4350_0-ContextAliasing: []

.....
-----
Block: 4727_0
4727_0Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
4727_0-Stack size: 5 
4727_0-Equals Mem:<< []>> 
4727_0-NonEquals Mem: << []>> 
4727_0-Equals Sto:<< [<4,11>]>> 
4727_0-NonEquals Sto: << []>> 
4727_0-Useless: []
4727_0-Constancy: []
4727_0-ContextAliasing: []

.....
-----
Block: 3690_0
3690_0Instr:<<['JUMPDEST', 'PUSH2 0x0e96', 'PUSH1 0x64', 'PUSH2 0x0e90', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT', 'PUSH2 0x0e85', 'JUMPI']>> 
3690_0-Stack size: 10 
3690_0-Equals Mem:<< []>> 
3690_0-NonEquals Mem: << []>> 
3690_0-Equals Sto:<< []>> 
3690_0-NonEquals Sto: << [<5,7>]>> 
3690_0-Useless: []
3690_0-Constancy: [(5, 0), (0, 0)]
3690_0-ContextAliasing: []

.....
-----
Block: 4350_1
4350_1Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'ISZERO', 'PUSH2 0x1277', 'JUMPI']>> 
4350_1-Stack size: 13 
4350_1-Equals Mem:<< []>> 
4350_1-NonEquals Mem: << []>> 
4350_1-Equals Sto:<< [<3,14>]>> 
4350_1-NonEquals Sto: << []>> 
4350_1-Useless: []
4350_1-Constancy: [(8, 0)]
4350_1-ContextAliasing: []

.....
-----
Block: 4727_1
4727_1Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
4727_1-Stack size: 13 
4727_1-Equals Mem:<< []>> 
4727_1-NonEquals Mem: << []>> 
4727_1-Equals Sto:<< [<4,11>]>> 
4727_1-NonEquals Sto: << []>> 
4727_1-Useless: []
4727_1-Constancy: [(8, 0)]
4727_1-ContextAliasing: []

.....
-----
Block: 3915_0
3915_0Instr:<<['POP', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT']>> 
3915_0-Stack size: 12 
3915_0-Equals Mem:<< []>> 
3915_0-NonEquals Mem: << []>> 
3915_0-Equals Sto:<< []>> 
3915_0-NonEquals Sto: << [<2,4>]>> 
3915_0-Useless: []
3915_0-Constancy: [(7, 0)]
3915_0-ContextAliasing: []

.....
-----
Block: 3781_0
3781_0Instr:<<['PUSH2 0x0ee9', 'PUSH1 0x64', 'PUSH2 0x0e90', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT', 'PUSH2 0x0edf', 'JUMPI']>> 
3781_0-Stack size: 10 
3781_0-Equals Mem:<< []>> 
3781_0-NonEquals Mem: << []>> 
3781_0-Equals Sto:<< []>> 
3781_0-NonEquals Sto: << [<4,6>]>> 
3781_0-Useless: []
3781_0-Constancy: [(5, 0)]
3781_0-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.35441484401235357s

*************************************************************
File: Ownable
Build CFG: 0.0033542379969730973s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 3
Memory read accesses ContractOwnable: 8
Memory write accesses ContractOwnable: 6
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 66
66Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
66-Stack size: 1 
66-Equals Mem:<< [<5,16>]>> 
66-NonEquals Mem: << [<15,5>, <15,16>]>> 
66-Equals Sto:<< []>> 
66-NonEquals Sto: << []>> 
66-Useless: []
66-Constancy: []
66-ContextAliasing: []

.....
-----
Block: 114
114Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
114-Stack size: 2 
114-Equals Mem:<< [<1,26>]>> 
114-NonEquals Mem: << [<6,1>, <6,26>, <13,1>, <13,26>, <17,1>, <17,26>, <22,1>, <22,26>]>> 
114-Equals Sto:<< []>> 
114-NonEquals Sto: << []>> 
114-Useless: []
114-Constancy: [(0, 64)]
114-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.005622374010272324s

*************************************************************
File: SafeMath
Build CFG: 0.0007423070492222905s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.0001471230061724782s

*************************************************************
FILERES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward;352;994;67;284;216;22;0.8088256979826838
FILERES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_Ownable;12;13;2;4;2;1;0.009016748983412981
FILERES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_SafeMath;1;1;0;1;0;0;0.0009026899933815002


Aux path: /tmp/0x00//ethir_68d11a8e95f34f1bb16c4c01d28609e5
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 949
949Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
949-Stack size: 4 
949-Equals Mem:<< [<12,27>, <17,31>]>> 
949-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
949-Equals Sto:<< []>> 
949-NonEquals Sto: << []>> 
949-Useless: []
949-Constancy: []
949-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(11)', 'sload0'), 1)
sload0
[(('s(11)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP1 AND DUP2 SWAP2 DUP2 DUP1 SWAP4 SWAP1 PUSH1 0x0 MSTORE SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x2 DUP3 SWAP5 MSTORE POP PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP POP POP JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_949_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_949_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2212

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_949;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;949;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST POP PUSH20 0xffffffffffffffffffffffffffffffffffffffff SWAP1 AND DUP2 SWAP2 DUP2 DUP1 SWAP4 SWAP1 PUSH1 0x0 MSTORE SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x2 DUP3 SWAP5 MSTORE POP PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP POP POP JUMP;2261;42;36;2212;55;30;49;-13;6;True;False;False;False;2.1397632810403593;4;2;2100;2100

Block: 1573
1573Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP1', 'PUSH2 0x169c', 'JUMP']>> 
1573-Stack size: 2 
1573-Equals Mem:<< []>> 
1573-NonEquals Mem: << [<6,1>]>> 
1573-Equals Sto:<< []>> 
1573-NonEquals Sto: << []>> 
1573-Useless: []
1573-Constancy: []
1573-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP1 PUSH2 0x169c JUMP

Optimized sequence (basic block per line):
PUSH2 0x4fb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x169c JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_1573_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_1573_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1573;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;1573;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP1 PUSH2 0x169c JUMP;PUSH2 0x4fb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x169c JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02922276296885684;1;0;0;0

Block: 1615
1615Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
1615-Stack size: 2 
1615-Equals Mem:<< []>> 
1615-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1615-Equals Sto:<< []>> 
1615-NonEquals Sto: << []>> 
1615-Useless: []
1615-Constancy: []
1615-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '23', 'mstore'), 2), (('s(10)', '52670383177537149983225730548340231168144935501260929414795948319927108108288', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_1615_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_1615_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1615;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;1615;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.1014627359691076;1;3;0;0

Block: 1839
1839Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0753', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
1839-Stack size: 6 
1839-Equals Mem:<< [<18,6>]>> 
1839-NonEquals Mem: << []>> 
1839-Equals Sto:<< []>> 
1839-NonEquals Sto: << []>> 
1839-Useless: []
1839-Constancy: []
1839-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1839 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1970
1970Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x07d6', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
1970-Stack size: 9 
1970-Equals Mem:<< [<18,6>]>> 
1970-NonEquals Mem: << []>> 
1970-Equals Sto:<< []>> 
1970-NonEquals Sto: << []>> 
1970-Useless: []
1970-Constancy: []
1970-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1970 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2080
2080Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0844', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
2080-Stack size: 6 
2080-Equals Mem:<< [<18,6>]>> 
2080-NonEquals Mem: << []>> 
2080-Equals Sto:<< []>> 
2080-NonEquals Sto: << []>> 
2080-Useless: []
2080-Constancy: []
2080-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2080 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2116
2116Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'SWAP1', 'SWAP2', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'AND', 'PUSH4 0xf305d719', 'SELFBALANCE', 'ADDRESS', 'PUSH2 0x088b', 'DUP2', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2116-Stack size: 3 
2116-Equals Mem:<< []>> 
2116-NonEquals Mem: << [<41,44>]>> 
2116-Equals Sto:<< [<3,23>]>> 
2116-NonEquals Sto: << [<3,25>, <3,48>, <23,25>, <23,48>, <25,48>]>> 
2116-Useless: []
2116-Constancy: []
2116-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<40,43>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<40,43>], 'storage_deps_eqs': [<2,22>], 'storage_deps_noneqs': [<2,24>, <2,47>, <22,24>, <22,47>, <24,47>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('20', 'sload0'), 1), 0), 22: ((('20', 's(14)', 'sstore'), 2), 1), 24: ((('19', 'sload1'), 1), 2), 47: ((('s(6)', 'sload2'), 1), 4)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(14)', 'sstore'), 2), (('19', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(6)', 'sload2'), 1)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: [(('0', 's(22)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
AND(ADDRESS,2^160)
[RULE]: Simplification rule type 2: {'id': 'ADDRESS_0', 'opcode': '30', 'disasm': 'ADDRESS', 'inpt_sk': [], 'outpt_sk': ['s(22)'], 'push': False, 'gas': 2, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Delete rules: [{'id': 'AND_3', 'opcode': '16', 'disasm': 'AND', 'inpt_sk': [1461501637330902918203684832716283019655932542975, 's(22)'], 'outpt_sk': ['s(22)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}]
********************IT*********************
(('20', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload2'), 1), (('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('19', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('20', 'sload0'), 1), (('s(16)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(15)', 's(19)', 'or'), 2), (('1461501637330902918203684832716283019655932542975', 's(8)', 'and'), 2)]
(('19', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload2'), 1), (('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('19', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('20', 'sload0'), 1), (('s(16)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(15)', 's(19)', 'or'), 2), (('1461501637330902918203684832716283019655932542975', 's(8)', 'and'), 2)]
(('s(6)', 'sload2'), 1)
sload2
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload2'), 1), (('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('19', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('20', 'sload0'), 1), (('s(16)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(15)', 's(19)', 'or'), 2), (('1461501637330902918203684832716283019655932542975', 's(8)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('20', 'sload0'), 1), 0), 22: ((('20', 's(14)', 'sstore'), 2), 1), 24: ((('19', 'sload1'), 1), 2), 47: ((('s(6)', 'sload2'), 1), 4)}
(('20', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload2'), 1), (('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('19', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('20', 'sload0'), 1), (('s(16)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(15)', 's(19)', 'or'), 2), (('1461501637330902918203684832716283019655932542975', 's(8)', 'and'), 2)]
(('19', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload2'), 1), (('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('19', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('20', 'sload0'), 1), (('s(16)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(15)', 's(19)', 'or'), 2), (('1461501637330902918203684832716283019655932542975', 's(8)', 'and'), 2)]
(('s(6)', 'sload2'), 1)
sload2
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload2'), 1), (('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('19', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('20', 'sload0'), 1), (('s(16)', 115792089237316195423570985007226406215939081747436879206741300988257197096960, 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(15)', 's(19)', 'or'), 2), (('1461501637330902918203684832716283019655932542975', 's(8)', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x13 SLOAD AND PUSH4 0xf305d719 SELFBALANCE ADDRESS PUSH2 0x088b DUP2 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x13 SLOAD AND PUSH4 0xf305d719 SELFBALANCE ADDRESS PUSH2 0x088b DUP2 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_2116_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_2116_statistics.csv

Estimated initial gas: 9371
Estimated gas optimized: 9371

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 71

Initial number of instructions: 51
Final number of instructions: 51

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2116;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;2116;2;True;False;False;JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x13 SLOAD AND PUSH4 0xf305d719 SELFBALANCE ADDRESS PUSH2 0x088b DUP2 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x13 SLOAD AND PUSH4 0xf305d719 SELFBALANCE ADDRESS PUSH2 0x088b DUP2 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;9371;71;51;9371;71;51;0;0;0;True;True;False;False;2.333064965030644;8;2;9200;9200

Block: 2308
2308Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0929', 'SWAP2', 'SWAP1', 'PUSH2 0x16ec', 'JUMP']>> 
2308-Stack size: 7 
2308-Equals Mem:<< [<19,7>]>> 
2308-NonEquals Mem: << []>> 
2308-Equals Sto:<< []>> 
2308-NonEquals Sto: << []>> 
2308-Useless: []
2308-Constancy: []
2308-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2308 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2430
2430Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x09a2', 'SWAP2', 'SWAP1', 'PUSH2 0x1717', 'JUMP']>> 
2430-Stack size: 6 
2430-Equals Mem:<< [<18,6>]>> 
2430-NonEquals Mem: << []>> 
2430-Equals Sto:<< []>> 
2430-NonEquals Sto: << []>> 
2430-Useless: []
2430-Constancy: []
2430-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2430 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 441
441Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
441-Stack size: 2 
441-Equals Mem:<< []>> 
441-NonEquals Mem: << [<5,2>]>> 
441-Equals Sto:<< []>> 
441-NonEquals Sto: << []>> 
441-Useless: []
441-Constancy: []
441-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_441_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_441_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_441;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;441;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.018293128989171237;0;0;0;0

Block: 404
404Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
404-Stack size: 2 
404-Equals Mem:<< []>> 
404-NonEquals Mem: << [<7,2>]>> 
404-Equals Sto:<< []>> 
404-NonEquals Sto: << []>> 
404-Useless: []
404-Constancy: []
404-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_404_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_404_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_404;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;404;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x016c JUMP;39;16;12;39;16;12;0;0;0;True;False;False;False;0.050816409988328815;0;0;0;0

Block: 793
793Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x04', 'DUP2', 'MSTORE', 'PUSH4 0x48535753', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x015f', 'JUMP']>> 
793-Stack size: 2 
793-Equals Mem:<< [<10,4>]>> 
793-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
793-Equals Sto:<< []>> 
793-NonEquals Sto: << []>> 
793-Useless: []
793-Constancy: []
793-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1213421395', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(3)', 'mstore'), 2), (('s(2)', '4', 'mstore'), 2), (('s(6)', '32713776093979530014787363007377406644389573509015650904119353888139976376320', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(2)', '+'), 2), (('s(2)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(2)', '+'), 2), (('s(2)', '32', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_793 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5223
5223Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5223-Stack size: 4 
5223-Equals Mem:<< []>> 
5223-NonEquals Mem: << [<12,7>, <5,7>]>> 
5223-Equals Sto:<< []>> 
5223-NonEquals Sto: << []>> 
5223-Useless: []
5223-Constancy: []
5223-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
{}
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/HandsomeSquidward_5223_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_5223_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_5223;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;5223;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.15019081701757386;0;1;0;0

Block: 5247
5247Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x1476', 'JUMP']>> 
5247-Stack size: 8 
5247-Equals Mem:<< []>> 
5247-NonEquals Mem: << [<11,5>]>> 
5247-Equals Sto:<< []>> 
5247-NonEquals Sto: << []>> 
5247-Useless: []
5247-Constancy: [(2, 32), (3, 0)]
5247-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
{}
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1476 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1476 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_5247_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_5247_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_5247;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;5247;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1476 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1476 JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6748891120078042;0;0;0;0

Block: 734
734Instr:<<['JUMPDEST', 'POP', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
734-Stack size: 2 
734-Equals Mem:<< []>> 
734-NonEquals Mem: << [<15,5>]>> 
734-Equals Sto:<< []>> 
734-NonEquals Sto: << []>> 
734-Useless: []
734-Constancy: []
734-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('0', 'sload0'), 1), 0)}
Storage order: [(('0', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('0', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('0', 'sload0'), 1), 0)}
(('0', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_734 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1374
1374Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP1', 'PUSH2 0x169c', 'JUMP']>> 
1374-Stack size: 2 
1374-Equals Mem:<< []>> 
1374-NonEquals Mem: << [<6,1>]>> 
1374-Equals Sto:<< []>> 
1374-NonEquals Sto: << []>> 
1374-Useless: []
1374-Constancy: []
1374-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP1 PUSH2 0x169c JUMP

Optimized sequence (basic block per line):
PUSH2 0x4fb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x169c JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_1374_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_1374_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1374;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;1374;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP1 PUSH2 0x169c JUMP;PUSH2 0x4fb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x169c JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027665788016747683;1;0;0;0

Block: 1252
1252Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP1', 'PUSH2 0x169c', 'JUMP']>> 
1252-Stack size: 2 
1252-Equals Mem:<< []>> 
1252-NonEquals Mem: << [<6,1>]>> 
1252-Equals Sto:<< []>> 
1252-NonEquals Sto: << []>> 
1252-Useless: []
1252-Constancy: []
1252-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP1 PUSH2 0x169c JUMP

Optimized sequence (basic block per line):
PUSH2 0x4fb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x169c JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_1252_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_1252_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1252;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;1252;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP1 PUSH2 0x169c JUMP;PUSH2 0x4fb PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x169c JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02757373999338597;1;0;0;0

Block: 636
636Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
636-Stack size: 3 
636-Equals Mem:<< []>> 
636-NonEquals Mem: << [<10,13>]>> 
636-Equals Sto:<< []>> 
636-NonEquals Sto: << []>> 
636-Useless: []
636-Constancy: []
636-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{16: ((('s(2)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{16: ((('s(2)', 'sload0'), 1), 1)}
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_636 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1184
1184Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP1', 'ISZERO', 'PUSH2 0x04be', 'JUMPI']>> 
1184-Stack size: 2 
1184-Equals Mem:<< []>> 
1184-NonEquals Mem: << [<5,8>]>> 
1184-Equals Sto:<< []>> 
1184-NonEquals Sto: << []>> 
1184-Useless: []
1184-Constancy: []
1184-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(3)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1), (('s(4)', 'iszero'), 1), (('address', 'address'), 0)]
{11: ((('s(3)', 'sload0'), 1), 1)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1), (('s(4)', 'iszero'), 1), (('address', 'address'), 0)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1184 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 559
559Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'SWAP1', 'JUMP']>> 
559-Stack size: 3 
559-Equals Mem:<< []>> 
559-NonEquals Mem: << [<10,13>]>> 
559-Equals Sto:<< []>> 
559-NonEquals Sto: << []>> 
559-Useless: []
559-Constancy: []
559-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{16: ((('s(3)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1), (('255', 's(4)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{16: ((('s(3)', 'sload0'), 1), 1)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1), (('255', 's(4)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_559 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 517
517Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x08', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x016c', 'JUMP']>> 
517-Stack size: 2 
517-Equals Mem:<< []>> 
517-NonEquals Mem: << [<6,3>]>> 
517-Equals Sto:<< []>> 
517-NonEquals Sto: << []>> 
517-Useless: []
517-Constancy: []
517-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '8', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_517 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2798
2798Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2798-Stack size: 9 
2798-Equals Mem:<< []>> 
2798-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2798-Equals Sto:<< []>> 
2798-NonEquals Sto: << []>> 
2798-Useless: []
2798-Constancy: [(4, 0)]
2798-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_2798_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_2798_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2798;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;2798;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.123172911000438;2;4;0;0

Block: 2898
2898Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2898-Stack size: 9 
2898-Equals Mem:<< []>> 
2898-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2898-Equals Sto:<< []>> 
2898-NonEquals Sto: << []>> 
2898-Useless: []
2898-Constancy: [(4, 0)]
2898-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_2898_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_2898_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2898;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;2898;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.123089763976168;2;4;0;0

Block: 2989
2989Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2989-Stack size: 9 
2989-Equals Mem:<< []>> 
2989-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2989-Equals Sto:<< []>> 
2989-NonEquals Sto: << []>> 
2989-Useless: []
2989-Constancy: [(4, 0)]
2989-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '41', 'mstore'), 2), (('s(10)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(12)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_2989_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_2989_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 89
Estimated size optimized in bytes: 89

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2989;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;2989;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;104;89;33;104;89;33;0;0;0;True;False;False;False;2.1236126869916916;2;4;0;0

Block: 3127
3127Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0c76', 'JUMPI']>> 
3127-Stack size: 10 
3127-Equals Mem:<< []>> 
3127-NonEquals Mem: << [<10,13>]>> 
3127-Equals Sto:<< []>> 
3127-NonEquals Sto: << []>> 
3127-Useless: []
3127-Constancy: [(5, 0), (0, 0)]
3127-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(16)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('255', 's(9)', 'and'), 2), (('s(7)', 'iszero'), 1), (('s(10)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(8)', 'sload0'), 1), 1)}
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('255', 's(9)', 'and'), 2), (('s(7)', 'iszero'), 1), (('s(10)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3127 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3161
3161Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3161-Stack size: 11 
3161-Equals Mem:<< []>> 
3161-NonEquals Mem: << [<11,14>]>> 
3161-Equals Sto:<< []>> 
3161-NonEquals Sto: << []>> 
3161-Useless: []
3161-Constancy: [(1, 0), (6, 0)]
3161-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3161 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3259
3259Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x0d23', 'JUMPI']>> 
3259-Stack size: 10 
3259-Equals Mem:<< []>> 
3259-NonEquals Mem: << [<4,7>]>> 
3259-Equals Sto:<< []>> 
3259-NonEquals Sto: << []>> 
3259-Useless: []
3259-Constancy: [(5, 0), (0, 0)]
3259-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(6)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('number', 'number'), 0), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(3)', 's(5)', 'gt'), 2), (('origin', 'origin'), 0)]
{11: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('number', 'number'), 0), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(3)', 's(5)', 'gt'), 2), (('origin', 'origin'), 0)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3259 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3280
3280Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x3bb2b217', 'PUSH1 0xe1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3280-Stack size: 10 
3280-Equals Mem:<< []>> 
3280-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3280-Equals Sto:<< []>> 
3280-NonEquals Sto: << []>> 
3280-Useless: []
3280-Constancy: [(5, 0), (0, 0)]
3280-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('225', '1001566743', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '35927816869378500546690657797891318559231300880027248862493917151435112082543', 'mstore'), 2), (('s(12)', '54004371949743542779021662140476226141715301406209153930508743925697374846976', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3bb2b217 PUSH1 0xe1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3bb2b217 PUSH1 0xe1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_3280_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_3280_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3280;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;3280;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3bb2b217 PUSH1 0xe1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4f6e6c79206f6e65207472616e736665722070657220626c6f636b20616c6c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3bb2b217 PUSH1 0xe1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.121569142967928;2;4;0;0

Block: 3363
3363Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
3363-Stack size: 10 
3363-Equals Mem:<< []>> 
3363-NonEquals Mem: << [<5,8>]>> 
3363-Equals Sto:<< []>> 
3363-NonEquals Sto: << []>> 
3363-Useless: []
3363-Constancy: [(5, 0), (0, 0)]
3363-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(1)', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(1)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(0)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(1)', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3363 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3431
3431Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x03', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3431-Stack size: 11 
3431-Equals Mem:<< []>> 
3431-NonEquals Mem: << [<11,14>]>> 
3431-Equals Sto:<< []>> 
3431-NonEquals Sto: << []>> 
3431-Useless: []
3431-Constancy: [(1, 0), (6, 0)]
3431-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '3', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3431 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3476
3476Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3476-Stack size: 10 
3476-Equals Mem:<< []>> 
3476-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
3476-Equals Sto:<< []>> 
3476-NonEquals Sto: << []>> 
3476-Useless: []
3476-Constancy: [(5, 0), (0, 0)]
3476-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '25', 'mstore'), 2), (('s(10)', '31422294206539596639392900159971917510378963875690889976315079369673265905664', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_3476_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_3476_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3476;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;3476;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.0948884440003894;1;3;0;0

Block: 3547
3547Instr:<<['JUMPDEST', 'PUSH1 0x10', 'SLOAD', 'DUP3', 'PUSH2 0x0dfd', 'DUP6', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3547-Stack size: 10 
3547-Equals Mem:<< []>> 
3547-NonEquals Mem: << [<15,18>]>> 
3547-Equals Sto:<< []>> 
3547-NonEquals Sto: << [<2,22>]>> 
3547-Useless: []
3547-Constancy: [(5, 0), (0, 0)]
3547-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<14,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<14,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,21>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('16', 'sload0'), 1), 0), 21: ((('s(7)', 'sload1'), 1), 2)}
Storage order: [(('16', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('16', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2)]
(('s(7)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('16', 'sload0'), 1), 0), 21: ((('s(7)', 'sload1'), 1), 2)}
(('16', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2)]
(('s(7)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3547 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3598
3598Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
3598-Stack size: 10 
3598-Equals Mem:<< []>> 
3598-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
3598-Equals Sto:<< []>> 
3598-NonEquals Sto: << []>> 
3598-Useless: []
3598-Constancy: [(5, 0), (0, 0)]
3598-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '26', 'mstore'), 2), (('s(10)', '31422294206539596639392900160051577764598592111541354583441290478353383424000', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_3598_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_3598_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3598;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;3598;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.096001071971841;1;3;0;0

Block: 4935
4935Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x143b', 'JUMP']>> 
4935-Stack size: 13 
4935-Equals Mem:<< [<11,6>]>> 
4935-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
4935-Equals Sto:<< []>> 
4935-NonEquals Sto: << []>> 
4935-Useless: []
4935-Constancy: [(8, 0)]
4935-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '26', 'mstore'), 2), (('s(12)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x143b JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x143b JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_4935_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_4935_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4935;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;4935;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x143b JUMP;JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x143b JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.153355994960293;0;1;0;0

Block: 5187
5187Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
5187-Stack size: 20 
5187-Equals Mem:<< []>> 
5187-NonEquals Mem: << [<6,1>]>> 
5187-Equals Sto:<< []>> 
5187-NonEquals Sto: << []>> 
5187-Useless: []
5187-Constancy: [(1, 0), (15, 0), (6, 0)]
5187-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP2 SWAP1 PUSH2 0x1467 JUMP

Optimized sequence (basic block per line):
PUSH2 0x4fb SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1467 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_5187_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_5187_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_5187;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;5187;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP2 SWAP1 PUSH2 0x1467 JUMP;PUSH2 0x4fb SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1467 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07372229301836342;1;0;0;0

Block: 6142
6142Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6142-Stack size: 22 
6142-Equals Mem:<< []>> 
6142-NonEquals Mem: << [<4,7>]>> 
6142-Equals Sto:<< []>> 
6142-NonEquals Sto: << []>> 
6142-Useless: []
6142-Constancy: [(0, 0)]
6142-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_6142 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4847
4847Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
4847-Stack size: 17 
4847-Equals Mem:<< []>> 
4847-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4847-Equals Sto:<< []>> 
4847-NonEquals Sto: << []>> 
4847-Useless: []
4847-Constancy: [(1, 0), (12, 0)]
4847-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '119', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '33', 'mstore'), 2), (('s(10)', '37714057306925736537727341711534603569002632158006504148307520321239491439727', 'mstore'), 2), (('s(12)', '53825228981408700216425575062632269666168469434418855940216611316178368856064', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_4847_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_4847_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 81

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4847;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;4847;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;104;81;33;104;81;33;0;0;0;True;False;False;False;2.1519491620128974;2;4;0;0

Block: 3820
3820Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x14', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'SWAP1', 'DIV', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0f22', 'JUMPI']>> 
3820-Stack size: 10 
3820-Equals Mem:<< []>> 
3820-NonEquals Mem: << [<5,8>]>> 
3820-Equals Sto:<< []>> 
3820-NonEquals Sto: << [<12,14>]>> 
3820-Useless: []
3820-Constancy: [(5, 0)]
3820-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<11,13>]}
[RULE]: Evaluate expression ('168', '1', 'shl')
{11: ((('s(15)', 'sload0'), 1), 1), 13: ((('20', 'sload1'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('20', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(15)', 'sload0'), 1)
sload0
[(('20', 'sload1'), 1), (('s(6)', '374144419156711147060143317175368453031918731001856', '/'), 2), (('255', 's(5)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(8)', 'iszero'), 1), (('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('address', 'address'), 0)]
(('20', 'sload1'), 1)
sload1
[(('20', 'sload1'), 1), (('s(6)', '374144419156711147060143317175368453031918731001856', '/'), 2), (('255', 's(5)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(8)', 'iszero'), 1), (('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('address', 'address'), 0)]
SFS with rule: isolated_block_0_0_input.json
{11: ((('s(15)', 'sload0'), 1), 1), 13: ((('20', 'sload1'), 1), 2)}
(('s(15)', 'sload0'), 1)
sload0
[(('20', 'sload1'), 1), (('s(6)', '374144419156711147060143317175368453031918731001856', '/'), 2), (('255', 's(5)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(8)', 'iszero'), 1), (('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('address', 'address'), 0)]
(('20', 'sload1'), 1)
sload1
[(('20', 'sload1'), 1), (('s(6)', '374144419156711147060143317175368453031918731001856', '/'), 2), (('255', 's(5)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(8)', 'iszero'), 1), (('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('address', 'address'), 0)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3820 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4531
4531Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x11d7', 'SWAP2', 'SWAP1', 'PUSH2 0x16d1', 'JUMP']>> 
4531-Stack size: 10 
4531-Equals Mem:<< [<18,6>]>> 
4531-NonEquals Mem: << []>> 
4531-Equals Sto:<< []>> 
4531-NonEquals Sto: << []>> 
4531-Useless: []
4531-Constancy: []
4531-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4531 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6004
6004Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6004-Stack size: 10 
6004-Equals Mem:<< []>> 
6004-NonEquals Mem: << [<5,8>]>> 
6004-Equals Sto:<< []>> 
6004-NonEquals Sto: << []>> 
6004-Useless: []
6004-Constancy: []
6004-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_6004 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4624
4624Instr:<<['JUMPDEST', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x1248', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x1788', 'JUMP']>> 
4624-Stack size: 6 
4624-Equals Mem:<< []>> 
4624-NonEquals Mem: << [<9,4>]>> 
4624-Equals Sto:<< []>> 
4624-NonEquals Sto: << []>> 
4624-Useless: []
4624-Constancy: []
4624-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{1: ((('19', 'sload0'), 1), 0)}
Storage order: [(('19', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(13)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('19', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('19', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('19', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('19', 'sload0'), 1), 0)}
(('19', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('19', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('19', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1248 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1788 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1248 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1788 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_4624_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_4624_statistics.csv

Estimated initial gas: 2208
Estimated gas optimized: 2208

Estimated initial size in bytes: 56
Estimated size optimized in bytes: 56

Initial number of instructions: 37
Final number of instructions: 37

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4624;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;4624;2;True;False;False;JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1248 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1788 JUMP;JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x1248 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x1788 JUMP;2208;56;37;2208;56;37;0;0;0;True;False;False;False;2.204914110014215;3;0;2100;2100

Block: 6024
6024Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6024-Stack size: 15 
6024-Equals Mem:<< []>> 
6024-NonEquals Mem: << [<13,21>, <7,21>, <24,21>, <18,21>]>> 
6024-Equals Sto:<< []>> 
6024-NonEquals Sto: << []>> 
6024-Useless: []
6024-Constancy: [(4, 0)]
6024-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('s(15)', 's(1)', 'mstore'), 2), (('s(16)', '160', 'mstore'), 2), (('s(2)', 'mload0'), 1), (('s(17)', 's(12)', 'mstore'), 2)]
Memory dep: [(2, 4), (1, 4), (0, 4), (1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(2, 4), (1, 2), (0, 1)]
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized code stored in /tmp/0x00/HandsomeSquidward_6024_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_6024_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 41
Estimated size optimized in bytes: 41

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_6024;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;6024;2;True;False;False;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;102;41;36;102;41;36;0;0;0;True;False;False;False;2.279036245017778;0;3;0;0

Block: 6074
6074Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x17b1', 'JUMP']>> 
6074-Stack size: 21 
6074-Equals Mem:<< []>> 
6074-NonEquals Mem: << [<9,1>]>> 
6074-Equals Sto:<< []>> 
6074-NonEquals Sto: << []>> 
6074-Useless: []
6074-Constancy: [(5, 0), (10, 0), (3, 32)]
6074-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(9)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x17b1 JUMP

Optimized sequence (basic block per line):
PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x17b1 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_6074_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_6074_statistics.csv

Estimated initial gas: 71
Estimated gas optimized: 53

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 39

Initial number of instructions: 22
Final number of instructions: 16

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_6074;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;6074;2;True;True;False;DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x17b1 JUMP;PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x17b1 JUMP;71;28;22;53;39;16;18;-11;6;True;False;False;False;2.1807957609998994;2;0;0;0

Block: 3984
3984Instr:<<['ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x0fa8', 'SWAP1', 'DUP3', 'PUSH2 0x139c', 'JUMP']>> 
3984-Stack size: 10 
3984-Equals Mem:<< []>> 
3984-NonEquals Mem: << [<4,7>]>> 
3984-Equals Sto:<< []>> 
3984-NonEquals Sto: << []>> 
3984-Useless: []
3984-Constancy: [(5, 0)]
3984-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('address', 'address'), 0)]
{11: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('address', 'address'), 0)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3984 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4008
4008Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'DUP2', 'SWAP1', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH2 0x0ff8', 'SWAP1', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
4008-Stack size: 11 
4008-Equals Mem:<< []>> 
4008-NonEquals Mem: << [<13,19>, <5,34>, <8,34>, <5,8>, <34,13>, <34,19>, <5,19>, <8,19>]>> 
4008-Equals Sto:<< []>> 
4008-NonEquals Sto: << []>> 
4008-Useless: []
4008-Constancy: [(6, 0)]
4008-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,18>, <4,33>, <7,33>, <4,7>, <12,33>, <18,33>, <4,18>, <7,18>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,18>, <4,33>, <7,33>, <4,7>, <12,33>, <18,33>, <4,18>, <7,18>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{16: ((('s(16)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(16)', 's(4)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(10)', 's(3)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('address', 'address'), 0), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{16: ((('s(16)', 's(4)', 'sstore'), 2), 1)}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('address', 'address'), 0), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST ADDRESS PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0ff8 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST ADDRESS PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0ff8 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_4008_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_4008_statistics.csv

Estimated initial gas: 5142
Estimated gas optimized: 5142

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 80

Initial number of instructions: 39
Final number of instructions: 39

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4008;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;4008;2;True;False;False;JUMPDEST ADDRESS PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0ff8 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST ADDRESS PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0ff8 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;5142;80;39;5142;80;39;0;0;0;True;False;False;False;2.229978750983719;2;2;5000;5000

Block: 4097
4097Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x1023', 'SWAP1', 'DUP4', 'PUSH2 0x13fa', 'JUMP']>> 
4097-Stack size: 10 
4097-Equals Mem:<< []>> 
4097-NonEquals Mem: << [<11,14>]>> 
4097-Equals Sto:<< []>> 
4097-NonEquals Sto: << []>> 
4097-Useless: []
4097-Constancy: [(5, 0)]
4097-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(8)', 'sload0'), 1), 1)}
(('s(8)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4097 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5114
5114Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1340', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x10c6', 'JUMP']>> 
5114-Stack size: 13 
5114-Equals Mem:<< [<11,6>]>> 
5114-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
5114-Equals Sto:<< []>> 
5114-NonEquals Sto: << []>> 
5114-Useless: []
5114-Constancy: []
5114-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '30', 'mstore'), 2), (('s(12)', '37714057306925736537727343956344029380455708191757305005271024775623175766016', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x10c6 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x10c6 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_5114_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_5114_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_5114;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;5114;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x10c6 JUMP;JUMPDEST PUSH0 PUSH2 0x1340 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x10c6 JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.157893020019401;0;1;0;0

Block: 4131
4131Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1066', 'PUSH2 0x1048', 'DUP4', 'DUP4', 'PUSH2 0x13fa', 'JUMP']>> 
4131-Stack size: 11 
4131-Equals Mem:<< []>> 
4131-NonEquals Mem: << [<11,14>]>> 
4131-Equals Sto:<< []>> 
4131-NonEquals Sto: << []>> 
4131-Useless: []
4131-Constancy: [(6, 0)]
4131-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(12)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(12)', 's(4)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(12)', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4131 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4168
4168Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'PUSH2 0x139c', 'JUMP']>> 
4168-Stack size: 12 
4168-Equals Mem:<< []>> 
4168-NonEquals Mem: << [<11,14>]>> 
4168-Equals Sto:<< []>> 
4168-NonEquals Sto: << []>> 
4168-Useless: []
4168-Constancy: [(7, 0)]
4168-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4168 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5043
5043Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
5043-Stack size: 15 
5043-Equals Mem:<< []>> 
5043-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
5043-Equals Sto:<< []>> 
5043-NonEquals Sto: << []>> 
5043-Useless: []
5043-Constancy: [(1, 0), (10, 0)]
5043-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_5043_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_5043_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_5043;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;5043;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x04fb JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x4fb JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.1518696490093134;1;3;0;0

Block: 4198
4198Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'DUP6', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'PUSH2 0x10af', 'DUP6', 'DUP6', 'PUSH2 0x13fa', 'JUMP']>> 
4198-Stack size: 11 
4198-Equals Mem:<< []>> 
4198-NonEquals Mem: << [<12,15>]>> 
4198-Equals Sto:<< []>> 
4198-NonEquals Sto: << []>> 
4198-Useless: []
4198-Constancy: [(6, 0)]
4198-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{21: ((('s(20)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(20)', 's(4)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{21: ((('s(20)', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4198 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4305
4305Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x04fb', 'SWAP2', 'SWAP1', 'PUSH2 0x1467', 'JUMP']>> 
4305-Stack size: 15 
4305-Equals Mem:<< []>> 
4305-NonEquals Mem: << [<6,1>]>> 
4305-Equals Sto:<< []>> 
4305-NonEquals Sto: << []>> 
4305-Useless: []
4305-Constancy: [(1, 0)]
4305-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP2 SWAP1 PUSH2 0x1467 JUMP

Optimized sequence (basic block per line):
PUSH2 0x4fb SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1467 JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_4305_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_4305_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4305;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;4305;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x04fb SWAP2 SWAP1 PUSH2 0x1467 JUMP;PUSH2 0x4fb SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1467 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07368740398669615;1;0;0;0

Block: 5507
5507Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5507-Stack size: 7 
5507-Equals Mem:<< []>> 
5507-NonEquals Mem: << [<5,8>]>> 
5507-Equals Sto:<< []>> 
5507-NonEquals Sto: << []>> 
5507-Useless: []
5507-Constancy: []
5507-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_5507 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2507
2507Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2507-Stack size: 6 
2507-Equals Mem:<< []>> 
2507-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2507-Equals Sto:<< []>> 
2507-NonEquals Sto: << []>> 
2507-Useless: []
2507-Constancy: []
2507-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_2507_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_2507_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2507;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;2507;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1316190739744343;2;4;0;0

Block: 2605
2605Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x04fb', 'JUMP']>> 
2605-Stack size: 6 
2605-Equals Mem:<< []>> 
2605-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2605-Equals Sto:<< []>> 
2605-NonEquals Sto: << []>> 
2605-Useless: []
2605-Constancy: []
2605-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP

Optimized code stored in /tmp/0x00/HandsomeSquidward_2605_optimized.txt
Optimality results stored in /tmp/0x00/HandsomeSquidward_2605_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2605;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;HandsomeSquidward;2605;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x04fb JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.131437221018132;2;4;0;0

Block: 308
308Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH18 0x12185b991cdbdb594814dc5d5a591dd85c99', 'PUSH1 0x72', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
308-Stack size: 2 
308-Equals Mem:<< [<10,4>]>> 
308-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
308-Equals Sto:<< []>> 
308-NonEquals Sto: << []>> 
308-Useless: []
308-Constancy: []
308-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('114', '1576309678332149067580227275903219298491545', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(2)', 'mstore'), 2), (('s(1)', '18', 'mstore'), 2), (('s(5)', '32738671163528249004305986110495378829236438968288530760216699259036400353280', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(1)', '+'), 2), (('s(1)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(1)', '+'), 2), (('s(1)', '32', '+'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_308 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 364
364Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
364-Stack size: 2 
364-Equals Mem:<< []>> 
364-NonEquals Mem: << []>> 
364-Equals Sto:<< []>> 
364-NonEquals Sto: << []>> 
364-Useless: []
364-Constancy: []
364-ContextAliasing: []

Block: 5886
5886Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
5886-Stack size: 8 
5886-Equals Mem:<< []>> 
5886-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
5886-Equals Sto:<< []>> 
5886-NonEquals Sto: << []>> 
5886-Useless: []
5886-Constancy: [(2, 0), (1, 0), (0, 0)]
5886-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,7>, <1,13>, <7,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,7>, <1,13>, <7,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(8)', 'mload1'), 1), (('s(6)', 'mload2'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_5886 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1275
1275Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1275-Stack size: 3 
1275-Equals Mem:<< []>> 
1275-NonEquals Mem: << []>> 
1275-Equals Sto:<< []>> 
1275-NonEquals Sto: << []>> 
1275-Useless: []
1275-Constancy: []
1275-ContextAliasing: []

Block: 1452
1452Instr:<<['JUMPDEST', 'PUSH1 0x10', 'SSTORE', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH32 0x947f344d56e1e8c70dc492fb94c4ddddd490c016aab685f5e7e47b2e85cb44cf', 'PUSH2 0x05e6', 'PUSH1 0x08', 'PUSH1 0x0a', 'PUSH2 0x1677', 'JUMP']>> 
1452-Stack size: 3 
1452-Equals Mem:<< []>> 
1452-NonEquals Mem: << []>> 
1452-Equals Sto:<< [<5,10>]>> 
1452-NonEquals Sto: << [<2,5>, <2,10>]>> 
1452-Useless: []
1452-Constancy: []
1452-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<4,9>], 'storage_deps_noneqs': [<1,4>, <1,9>]}
{1: ((('16', 's(0)', 'sstore'), 2), 0), 4: ((('6', 'sload0'), 1), 1), 9: ((('6', 's(5)', 'sstore'), 2), 2)}
Storage order: [(('16', 's(0)', 'sstore'), 2), (('6', 'sload0'), 1), (('6', 's(5)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('6', 'sload0'), 1)
sload0
[(('6', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(6)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('16', 's(0)', 'sstore'), 2), 0), 4: ((('6', 'sload0'), 1), 1), 9: ((('6', 's(5)', 'sstore'), 2), 2)}
(('6', 'sload0'), 1)
sload0
[(('6', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(6)', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1452 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1686
1686Instr:<<['JUMPDEST', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'SWAP1', 'DUP2', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH2 0x06df', 'SWAP1', 'ADDRESS', 'SWAP1', 'PUSH2 0x06d1', 'PUSH1 0x08', 'PUSH1 0x0a', 'PUSH2 0x1677', 'JUMP']>> 
1686-Stack size: 2 
1686-Equals Mem:<< []>> 
1686-NonEquals Mem: << []>> 
1686-Equals Sto:<< [<3,17>]>> 
1686-NonEquals Sto: << []>> 
1686-Useless: []
1686-Constancy: []
1686-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,16>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('19', 'sload0'), 1), 0), 16: ((('19', 's(8)', 'sstore'), 2), 1)}
Storage order: [(('19', 'sload0'), 1), (('19', 's(8)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('19', 'sload0'), 1)
sload0
[(('address', 'address'), 0), (('19', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(12)', 'and'), 2), (('697323163401596485410334513241460920685086001293', 's(9)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('19', 'sload0'), 1), 0), 16: ((('19', 's(8)', 'sstore'), 2), 1)}
(('19', 'sload0'), 1)
sload0
[(('address', 'address'), 0), (('19', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(12)', 'and'), 2), (('697323163401596485410334513241460920685086001293', 's(9)', 'or'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_1686 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2466
2466Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH3 0xff00ff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH3 0x010001', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
2466-Stack size: 3 
2466-Equals Mem:<< []>> 
2466-NonEquals Mem: << []>> 
2466-Equals Sto:<< [<4,15>]>> 
2466-NonEquals Sto: << []>> 
2466-Useless: []
2466-Constancy: []
2466-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,14>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '65537', 'shl')
[RULE]: Evaluate expression ('160', '16711935', 'shl')
{2: ((('20', 'sload0'), 1), 0), 14: ((('20', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('20', 'sload0'), 1)
sload0
[(('20', 'sload0'), 1), ((115792089237316195423546560488322440230209654367955723644191490340890530021375, 's(5)', 'and'), 2), (('95782432805755384550314892881727040259190851069018112', 's(3)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('20', 'sload0'), 1), 0), 14: ((('20', 's(1)', 'sstore'), 2), 1)}
(('20', 'sload0'), 1)
sload0
[(('20', 'sload0'), 1), ((115792089237316195423546560488322440230209654367955723644191490340890530021375, 's(5)', 'and'), 2), (('95782432805755384550314892881727040259190851069018112', 's(3)', 'or'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_2466 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3690
3690Instr:<<['JUMPDEST', 'PUSH2 0x0e96', 'PUSH1 0x64', 'PUSH2 0x0e90', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT', 'PUSH2 0x0e85', 'JUMPI']>> 
3690-Stack size: 10 
3690-Equals Mem:<< []>> 
3690-NonEquals Mem: << []>> 
3690-Equals Sto:<< []>> 
3690-NonEquals Sto: << [<5,7>]>> 
3690-Useless: []
3690-Constancy: [(5, 0), (0, 0)]
3690-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,6>]}
{4: ((('11', 'sload0'), 1), 0), 6: ((('14', 'sload1'), 1), 1)}
Storage order: [(('11', 'sload0'), 1), (('14', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('11', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('11', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('11', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
{4: ((('11', 'sload0'), 1), 0), 6: ((('14', 'sload1'), 1), 1)}
(('11', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('11', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('11', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3690 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3781
3781Instr:<<['PUSH2 0x0ee9', 'PUSH1 0x64', 'PUSH2 0x0e90', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT', 'PUSH2 0x0edf', 'JUMPI']>> 
3781-Stack size: 10 
3781-Equals Mem:<< []>> 
3781-NonEquals Mem: << []>> 
3781-Equals Sto:<< []>> 
3781-NonEquals Sto: << [<4,6>]>> 
3781-Useless: []
3781-Constancy: [(5, 0)]
3781-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,6>]}
{4: ((('12', 'sload0'), 1), 0), 6: ((('14', 'sload1'), 1), 1)}
Storage order: [(('12', 'sload0'), 1), (('14', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('12', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('12', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('12', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
{4: ((('12', 'sload0'), 1), 0), 6: ((('14', 'sload1'), 1), 1)}
(('12', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('12', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('12', 'sload0'), 1), (('s(6)', 's(7)', 'gt'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3781 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3915
3915Instr:<<['POP', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'GT']>> 
3915-Stack size: 12 
3915-Equals Mem:<< []>> 
3915-NonEquals Mem: << []>> 
3915-Equals Sto:<< []>> 
3915-NonEquals Sto: << [<2,4>]>> 
3915-Useless: []
3915-Constancy: [(7, 0)]
3915-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{1: ((('13', 'sload0'), 1), 0), 3: ((('14', 'sload1'), 1), 1)}
Storage order: [(('13', 'sload0'), 1), (('14', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('13', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('13', 'sload0'), 1), (('s(2)', 's(3)', 'gt'), 2)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('13', 'sload0'), 1), (('s(2)', 's(3)', 'gt'), 2)]
{1: ((('13', 'sload0'), 1), 0), 3: ((('14', 'sload1'), 1), 1)}
(('13', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('13', 'sload0'), 1), (('s(2)', 's(3)', 'gt'), 2)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('13', 'sload0'), 1), (('s(2)', 's(3)', 'gt'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_3915 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4350
4350Instr:<<['JUMPDEST', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'ISZERO', 'PUSH2 0x1277', 'JUMPI']>> 
4350-Stack size: 5 
4350-Equals Mem:<< []>> 
4350-NonEquals Mem: << []>> 
4350-Equals Sto:<< [<3,14>]>> 
4350-NonEquals Sto: << []>> 
4350-Useless: []
4350-Constancy: []
4350-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,13>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '1', 'shl')
[RULE]: Evaluate expression ('168', '255', 'shl')
{2: ((('20', 'sload0'), 1), 0), 13: ((('20', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('20', 'sload0'), 1)
sload0
[(('s(0)', 'iszero'), 1), (('20', 'sload0'), 1), ((115792089237316195423570889601861022891927484329094684320502060868636724166655, 's(8)', 'and'), 2), (('374144419156711147060143317175368453031918731001856', 's(6)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('20', 'sload0'), 1), 0), 13: ((('20', 's(4)', 'sstore'), 2), 1)}
(('20', 'sload0'), 1)
sload0
[(('s(0)', 'iszero'), 1), (('20', 'sload0'), 1), ((115792089237316195423570889601861022891927484329094684320502060868636724166655, 's(8)', 'and'), 2), (('374144419156711147060143317175368453031918731001856', 's(6)', 'or'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4350 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4727
4727Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
4727-Stack size: 5 
4727-Equals Mem:<< []>> 
4727-NonEquals Mem: << []>> 
4727-Equals Sto:<< [<4,11>]>> 
4727-NonEquals Sto: << []>> 
4727-Useless: []
4727-Constancy: []
4727-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,10>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '255', 'shl')
{2: ((('20', 'sload0'), 1), 0), 10: ((('20', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('20', 'sload0'), 1)
sload0
[(('20', 'sload0'), 1), ((115792089237316195423570889601861022891927484329094684320502060868636724166655, 's(3)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('20', 'sload0'), 1), 0), 10: ((('20', 's(1)', 'sstore'), 2), 1)}
(('20', 'sload0'), 1)
sload0
[(('20', 'sload0'), 1), ((115792089237316195423570889601861022891927484329094684320502060868636724166655, 's(3)', 'and'), 2)]
BLOCK 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_HandsomeSquidward_4727 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 66
66Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
66-Stack size: 1 
66-Equals Mem:<< [<5,16>]>> 
66-NonEquals Mem: << [<15,5>, <15,16>]>> 
66-Equals Sto:<< []>> 
66-NonEquals Sto: << []>> 
66-Useless: []
66-Constancy: []
66-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>]}
{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('0', 'sload0'), 1), 0)}
Storage order: [(('0', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', 's(8)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
[RULE]: Simplification rule type 1: {'id': 'SUB_0', 'opcode': '03', 'disasm': 'SUB', 'inpt_sk': ['s(5)', 's(5)'], 'outpt_sk': ['s(4)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Simplification rule type 1: {'id': 'ADD_0', 'opcode': '01', 'disasm': 'ADD', 'inpt_sk': [32, 0], 'outpt_sk': ['s(3)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}
********************IT*********************
(('0', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('s(5)', 's(5)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('s(5)', 's(5)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_5d4b82e18b704b0baeb3f72f7955e18b/jsons/isolated_block_0_0_input.json --- (6, 5)
{1: ((('0', 'sload0'), 1), 0)}
(('0', 'sload0'), 1)
sload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload1'), 1)
mload1
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_66_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_66_statistics.csv

Estimated initial gas: 2166
Estimated gas optimized: 2125

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 34

Initial number of instructions: 25
Final number of instructions: 11

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_Ownable_66;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;Ownable;66;2;False;True;True;JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN;JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2166;30;25;2125;34;11;41;-4;14;True;False;False;False;0.1388209470314905;4;0;2100;2100

Block: 114
114Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
114-Stack size: 2 
114-Equals Mem:<< [<1,26>]>> 
114-NonEquals Mem: << [<6,1>, <6,26>, <13,1>, <13,26>, <17,1>, <17,26>, <22,1>, <22,26>]>> 
114-Equals Sto:<< []>> 
114-NonEquals Sto: << []>> 
114-Useless: []
114-Constancy: [(0, 64)]
114-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<1,26>], 'memory_deps_noneqs': [<1,6>, <6,26>, <1,13>, <13,26>, <1,17>, <17,26>, <1,22>, <22,26>]}
{'memory_deps_eqs': [<1,26>], 'memory_deps_noneqs': [<1,6>, <6,26>, <1,13>, <13,26>, <1,17>, <17,26>, <1,22>, <22,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(9)', '32', 'mstore'), 2), (('s(11)', '32', 'mstore'), 2), (('s(13)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(5)', '+'), 2), (('s(4)', 's(5)', '-'), 2), (('s(5)', '4', '+'), 2), (('s(5)', '36', '+'), 2), (('s(5)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('100', 's(5)', '+'), 2), (('s(4)', 's(2)', '-'), 2), (('s(5)', '4', '+'), 2), (('s(5)', '36', '+'), 2), (('s(5)', '68', '+'), 2)]
(('64', 'mload1'), 1)
mload1
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('100', 's(5)', '+'), 2), (('s(4)', 's(2)', '-'), 2), (('s(5)', '4', '+'), 2), (('s(5)', '36', '+'), 2), (('s(5)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized code stored in /tmp/0x00/Ownable_114_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_114_statistics.csv

Estimated initial gas: 93
Estimated gas optimized: 93

Estimated initial size in bytes: 75
Estimated size optimized in bytes: 75

Initial number of instructions: 32
Final number of instructions: 32

GREENRES: 0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol_Ownable_114;0x00E9C1f8399FD0276B5C026c8986feF8c4e627F2.sol;Ownable;114;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;93;75;32;93;75;32;0;0;0;True;False;False;False;2.1303964360267855;1;3;0;0

