incomplete push instruction at 4881
Green Main
*************************************************************
Compilation time: 0.28284700599033386s
*************************************************************
File: SafeMath
Build CFG: 0.0021636339952237904s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.00011746399104595184s

*************************************************************
File: degods
Build CFG: 0.3354887680034153s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis degods
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract degods: 68
Memory read accesses Contractdegods: 247
Memory write accesses Contractdegods: 494
********************************** INIT
CONTEXT: Detected context equality 18 <slot13,0> 20 <slot13,0>
CONTEXT: Detected context equality 18 <slot13,0> 21 <slot13,0>
CONTEXT: Detected context equality 18 <slot13,0> 21 <slot13,0>
CONTEXT: Detected context equality 15 <slot17,0> 17 <slot17,0>
CONTEXT: Detected context equality 15 <slot17,0> 18 <slot17,0>
CONTEXT: Detected context equality 15 <slot17,0> 18 <slot17,0>
CONTEXT: Detected context equality 11 <slot20,0> 13 <slot20,0>
CONTEXT: Detected context equality 11 <slot20,0> 14 <slot20,0>
CONTEXT: Detected context equality 11 <slot20,0> 14 <slot20,0>
CONTEXT: Detected context equality 16 <slot37,0> 18 <slot37,0>
CONTEXT: Detected context equality 16 <slot37,0> 19 <slot37,0>
CONTEXT: Detected context equality 16 <slot37,0> 19 <slot37,0>
CONTEXT: Detected context equality 13 <slot41,0> 15 <slot41,0>
CONTEXT: Detected context equality 13 <slot41,0> 16 <slot41,0>
CONTEXT: Detected context equality 13 <slot41,0> 16 <slot41,0>
CONTEXT: Detected context equality 9 <slot46,0> 11 <slot46,0>
CONTEXT: Detected context equality 9 <slot46,0> 12 <slot46,0>
CONTEXT: Detected context equality 9 <slot46,0> 12 <slot46,0>
CONTEXT: Detected context equality 19 <slot56,0> 21 <slot56,0>
CONTEXT: Detected context equality 19 <slot56,0> 22 <slot56,0>
CONTEXT: Detected context equality 19 <slot56,0> 22 <slot56,0>
CONTEXT: Detected context equality 16 <slot60,0> 18 <slot60,0>
CONTEXT: Detected context equality 16 <slot60,0> 19 <slot60,0>
CONTEXT: Detected context equality 16 <slot60,0> 19 <slot60,0>
CONTEXT: Detected context equality 12 <slot62,0> 14 <slot62,0>
CONTEXT: Detected context equality 12 <slot62,0> 15 <slot62,0>
CONTEXT: Detected context equality 12 <slot62,0> 15 <slot62,0>
COMPACT CLONES: True
CONTRACT: degods
-----
Block: 3549_2
3549_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3549_2-Stack size: 4 
3549_2-Equals Mem:<< []>> 
3549_2-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
3549_2-Equals Sto:<< []>> 
3549_2-NonEquals Sto: << []>> 
3549_2-Useless: []
3549_2-Constancy: []
3549_2-ContextAliasing: []

.....
-----
Block: 1628
1628Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
1628-Stack size: 3 
1628-Equals Mem:<< []>> 
1628-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1628-Equals Sto:<< []>> 
1628-NonEquals Sto: << []>> 
1628-Useless: []
1628-Constancy: []
1628-ContextAliasing: []

.....
-----
Block: 1054
1054Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1054-Stack size: 4 
1054-Equals Mem:<< [<12,27>, <17,31>]>> 
1054-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
1054-Equals Sto:<< []>> 
1054-NonEquals Sto: << []>> 
1054-Useless: []
1054-Constancy: []
1054-ContextAliasing: []

.....
-----
Block: 486
486Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
486-Stack size: 2 
486-Equals Mem:<< []>> 
486-NonEquals Mem: << [<5,2>]>> 
486-Equals Sto:<< []>> 
486-NonEquals Sto: << []>> 
486-Useless: []
486-Constancy: []
486-ContextAliasing: []

.....
-----
Block: 809
809Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
809-Stack size: 2 
809-Equals Mem:<< []>> 
809-NonEquals Mem: << [<12,2>]>> 
809-Equals Sto:<< []>> 
809-NonEquals Sto: << []>> 
809-Useless: []
809-Constancy: []
809-ContextAliasing: []

.....
-----
Block: 454
454Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
454-Stack size: 2 
454-Equals Mem:<< []>> 
454-NonEquals Mem: << [<7,2>]>> 
454-Equals Sto:<< []>> 
454-NonEquals Sto: << []>> 
454-Useless: []
454-Constancy: []
454-ContextAliasing: []

.....
-----
Block: 3945_1
3945_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3945_1-Stack size: 13 
3945_1-Equals Mem:<< []>> 
3945_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3945_1-Equals Sto:<< []>> 
3945_1-NonEquals Sto: << []>> 
3945_1-Useless: []
3945_1-Constancy: [(8, 0)]
3945_1-ContextAliasing: []

.....
-----
Block: 4045_1
4045_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4045_1-Stack size: 13 
4045_1-Equals Mem:<< []>> 
4045_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4045_1-Equals Sto:<< []>> 
4045_1-NonEquals Sto: << []>> 
4045_1-Useless: []
4045_1-Constancy: [(8, 0)]
4045_1-ContextAliasing: []

.....
-----
Block: 4136_1
4136_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4136_1-Stack size: 13 
4136_1-Equals Mem:<< []>> 
4136_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4136_1-Equals Sto:<< []>> 
4136_1-NonEquals Sto: << []>> 
4136_1-Useless: []
4136_1-Constancy: [(8, 0)]
4136_1-ContextAliasing: []

.....
-----
Block: 2101_1
2101_1Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0874', 'JUMPI']>> 
2101_1-Stack size: 11 
2101_1-Equals Mem:<< []>> 
2101_1-NonEquals Mem: << [<10,13>]>> 
2101_1-Equals Sto:<< []>> 
2101_1-NonEquals Sto: << []>> 
2101_1-Useless: []
2101_1-Constancy: [(6, 0), (1, 0), (0, 0)]
2101_1-ContextAliasing: []

.....
-----
Block: 2135_1
2135_1Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2135_1-Stack size: 12 
2135_1-Equals Mem:<< []>> 
2135_1-NonEquals Mem: << [<11,14>]>> 
2135_1-Equals Sto:<< []>> 
2135_1-NonEquals Sto: << []>> 
2135_1-Useless: []
2135_1-Constancy: [(7, 0), (2, 0), (1, 0)]
2135_1-ContextAliasing: []

.....
-----
Block: 2219_1
2219_1Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2219_1-Stack size: 12 
2219_1-Equals Mem:<< []>> 
2219_1-NonEquals Mem: << [<11,14>]>> 
2219_1-Equals Sto:<< []>> 
2219_1-NonEquals Sto: << []>> 
2219_1-Useless: []
2219_1-Constancy: [(7, 0), (2, 0), (1, 0)]
2219_1-ContextAliasing: []

.....
-----
Block: 2255_1
2255_1Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2255_1-Stack size: 12 
2255_1-Equals Mem:<< []>> 
2255_1-NonEquals Mem: << [<11,14>]>> 
2255_1-Equals Sto:<< []>> 
2255_1-NonEquals Sto: << []>> 
2255_1-Useless: []
2255_1-Constancy: [(7, 0), (2, 0), (1, 0)]
2255_1-ContextAliasing: []

.....
-----
Block: 4537_37
4537_37Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_37-Stack size: 22 
4537_37-Equals Mem:<< []>> 
4537_37-NonEquals Mem: << [<5,8>]>> 
4537_37-Equals Sto:<< []>> 
4537_37-NonEquals Sto: << []>> 
4537_37-Useless: []
4537_37-Constancy: [(17, 0), (12, 0), (11, 0), (5, 0)]
4537_37-ContextAliasing: []

.....
-----
Block: 4649_17
4649_17Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_17-Stack size: 19 
4649_17-Equals Mem:<< []>> 
4649_17-NonEquals Mem: << [<4,7>]>> 
4649_17-Equals Sto:<< []>> 
4649_17-NonEquals Sto: << []>> 
4649_17-Useless: []
4649_17-Constancy: [(14, 0), (9, 0), (8, 0), (4, 0), (0, 0)]
4649_17-ContextAliasing: []

.....
-----
Block: 2326_1
2326_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x28', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH8 0x3c20b6b7bab73a17', 'PUSH1 0xc1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2326_1-Stack size: 11 
2326_1-Equals Mem:<< []>> 
2326_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2326_1-Equals Sto:<< []>> 
2326_1-NonEquals Sto: << []>> 
2326_1-Useless: []
2326_1-Constancy: [(6, 0), (1, 0), (0, 0)]
2326_1-ContextAliasing: []

.....
-----
Block: 4537_36
4537_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_36-Stack size: 22 
4537_36-Equals Mem:<< []>> 
4537_36-NonEquals Mem: << [<5,8>]>> 
4537_36-Equals Sto:<< []>> 
4537_36-NonEquals Sto: << []>> 
4537_36-Useless: []
4537_36-Constancy: [(17, 0), (12, 0), (11, 0), (5, 0)]
4537_36-ContextAliasing: []

.....
-----
Block: 4649_16
4649_16Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_16-Stack size: 19 
4649_16-Equals Mem:<< []>> 
4649_16-NonEquals Mem: << [<4,7>]>> 
4649_16-Equals Sto:<< []>> 
4649_16-NonEquals Sto: << []>> 
4649_16-Useless: []
4649_16-Constancy: [(14, 0), (9, 0), (8, 0), (4, 0), (0, 0)]
4649_16-ContextAliasing: []

.....
-----
Block: 2443_1
2443_1Instr:<<['JUMPDEST', 'PUSH2 0x09b3', 'DUP5', 'PUSH2 0x09ad', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2443_1-Stack size: 12 
2443_1-Equals Mem:<< []>> 
2443_1-NonEquals Mem: << [<14,17>]>> 
2443_1-Equals Sto:<< []>> 
2443_1-NonEquals Sto: << []>> 
2443_1-Useless: []
2443_1-Constancy: [(7, 0), (2, 0), (1, 0)]
2443_1-ContextAliasing: []

.....
-----
Block: 4537_35
4537_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_35-Stack size: 21 
4537_35-Equals Mem:<< []>> 
4537_35-NonEquals Mem: << [<5,8>]>> 
4537_35-Equals Sto:<< []>> 
4537_35-NonEquals Sto: << []>> 
4537_35-Useless: []
4537_35-Constancy: [(16, 0), (11, 0), (10, 0), (5, 0)]
4537_35-ContextAliasing: []

.....
-----
Block: 2490_1
2490_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x1d5b9d', 'PUSH1 0xea', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2490_1-Stack size: 11 
2490_1-Equals Mem:<< []>> 
2490_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2490_1-Equals Sto:<< []>> 
2490_1-NonEquals Sto: << []>> 
2490_1-Useless: []
2490_1-Constancy: [(6, 0), (1, 0), (0, 0)]
2490_1-ContextAliasing: []

.....
-----
Block: 4537_34
4537_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_34-Stack size: 22 
4537_34-Equals Mem:<< []>> 
4537_34-NonEquals Mem: << [<5,8>]>> 
4537_34-Equals Sto:<< []>> 
4537_34-NonEquals Sto: << []>> 
4537_34-Useless: []
4537_34-Constancy: [(17, 0), (12, 0), (11, 0), (5, 0)]
4537_34-ContextAliasing: []

.....
-----
Block: 4649_15
4649_15Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_15-Stack size: 19 
4649_15-Equals Mem:<< []>> 
4649_15-NonEquals Mem: << [<4,7>]>> 
4649_15-Equals Sto:<< []>> 
4649_15-NonEquals Sto: << []>> 
4649_15-Useless: []
4649_15-Constancy: [(14, 0), (9, 0), (8, 0), (4, 0), (0, 0)]
4649_15-ContextAliasing: []

.....
-----
Block: 4537_33
4537_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_33-Stack size: 22 
4537_33-Equals Mem:<< []>> 
4537_33-NonEquals Mem: << [<5,8>]>> 
4537_33-Equals Sto:<< []>> 
4537_33-NonEquals Sto: << []>> 
4537_33-Useless: []
4537_33-Constancy: [(17, 0), (11, 0), (5, 0)]
4537_33-ContextAliasing: []

.....
-----
Block: 4649_14
4649_14Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_14-Stack size: 19 
4649_14-Equals Mem:<< []>> 
4649_14-NonEquals Mem: << [<4,7>]>> 
4649_14-Equals Sto:<< []>> 
4649_14-NonEquals Sto: << []>> 
4649_14-Useless: []
4649_14-Constancy: [(14, 0), (8, 0), (4, 0), (0, 0)]
4649_14-ContextAliasing: []

.....
-----
Block: 2672_1
2672_1Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2672_1-Stack size: 12 
2672_1-Equals Mem:<< []>> 
2672_1-NonEquals Mem: << [<5,8>]>> 
2672_1-Equals Sto:<< []>> 
2672_1-NonEquals Sto: << []>> 
2672_1-Useless: []
2672_1-Constancy: [(7, 0), (1, 0)]
2672_1-ContextAliasing: []

.....
-----
Block: 4537_32
4537_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_32-Stack size: 22 
4537_32-Equals Mem:<< []>> 
4537_32-NonEquals Mem: << [<5,8>]>> 
4537_32-Equals Sto:<< []>> 
4537_32-NonEquals Sto: << []>> 
4537_32-Useless: []
4537_32-Constancy: [(17, 0), (5, 0)]
4537_32-ContextAliasing: []

.....
-----
Block: 4649_13
4649_13Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_13-Stack size: 19 
4649_13-Equals Mem:<< []>> 
4649_13-NonEquals Mem: << [<4,7>]>> 
4649_13-Equals Sto:<< []>> 
4649_13-NonEquals Sto: << []>> 
4649_13-Useless: []
4649_13-Constancy: [(14, 0), (4, 0), (0, 0)]
4649_13-ContextAliasing: []

.....
-----
Block: 4537_31
4537_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_31-Stack size: 22 
4537_31-Equals Mem:<< []>> 
4537_31-NonEquals Mem: << [<5,8>]>> 
4537_31-Equals Sto:<< []>> 
4537_31-NonEquals Sto: << []>> 
4537_31-Useless: []
4537_31-Constancy: [(17, 0), (5, 0)]
4537_31-ContextAliasing: []

.....
-----
Block: 4649_12
4649_12Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_12-Stack size: 19 
4649_12-Equals Mem:<< []>> 
4649_12-NonEquals Mem: << [<4,7>]>> 
4649_12-Equals Sto:<< []>> 
4649_12-NonEquals Sto: << []>> 
4649_12-Useless: []
4649_12-Constancy: [(14, 0), (4, 0), (0, 0)]
4649_12-ContextAliasing: []

.....
-----
Block: 2796_1
2796_1Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2796_1-Stack size: 12 
2796_1-Equals Mem:<< []>> 
2796_1-NonEquals Mem: << [<5,8>]>> 
2796_1-Equals Sto:<< []>> 
2796_1-NonEquals Sto: << []>> 
2796_1-Useless: []
2796_1-Constancy: [(7, 0)]
2796_1-ContextAliasing: []

.....
-----
Block: 4537_30
4537_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_30-Stack size: 21 
4537_30-Equals Mem:<< []>> 
4537_30-NonEquals Mem: << [<5,8>]>> 
4537_30-Equals Sto:<< []>> 
4537_30-NonEquals Sto: << []>> 
4537_30-Useless: []
4537_30-Constancy: [(16, 0), (9, 0), (5, 0)]
4537_30-ContextAliasing: []

.....
-----
Block: 3282_2
3282_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x73', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3282_2-Stack size: 15 
3282_2-Equals Mem:<< []>> 
3282_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3282_2-Equals Sto:<< []>> 
3282_2-NonEquals Sto: << []>> 
3282_2-Useless: []
3282_2-Constancy: [(10, 0)]
3282_2-ContextAliasing: []

.....
-----
Block: 3217_7
3217_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_7-Stack size: 21 
3217_7-Equals Mem:<< []>> 
3217_7-NonEquals Mem: << [<6,1>]>> 
3217_7-Equals Sto:<< []>> 
3217_7-NonEquals Sto: << []>> 
3217_7-Useless: []
3217_7-Constancy: [(16, 0), (1, 0)]
3217_7-ContextAliasing: [(2, 20)]

.....
-----
Block: 4241_8
4241_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_8-Stack size: 23 
4241_8-Equals Mem:<< []>> 
4241_8-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_8-Equals Sto:<< []>> 
4241_8-NonEquals Sto: << []>> 
4241_8-Useless: []
4241_8-Constancy: [(18, 0), (3, 0)]
4241_8-ContextAliasing: [(4, 21)]

.....
-----
Block: 4265_8
4265_8Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_8-Stack size: 27 
4265_8-Equals Mem:<< []>> 
4265_8-NonEquals Mem: << [<11,5>]>> 
4265_8-Equals Sto:<< []>> 
4265_8-NonEquals Sto: << []>> 
4265_8-Useless: []
4265_8-Constancy: [(22, 0), (7, 0), (3, 0), (2, 32)]
4265_8-ContextAliasing: [(8, 21)]

.....
-----
Block: 3423_2
3423_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0d84', 'SWAP1', 'DUP3', 'PUSH2 0x1086', 'JUMP']>> 
3423_2-Stack size: 16 
3423_2-Equals Mem:<< []>> 
3423_2-NonEquals Mem: << [<11,14>]>> 
3423_2-Equals Sto:<< []>> 
3423_2-NonEquals Sto: << [<18,20>]>> 
3423_2-Useless: []
3423_2-Constancy: [(11, 0)]
3423_2-ContextAliasing: []

.....
-----
Block: 4537_29
4537_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_29-Stack size: 24 
4537_29-Equals Mem:<< []>> 
4537_29-NonEquals Mem: << [<5,8>]>> 
4537_29-Equals Sto:<< []>> 
4537_29-NonEquals Sto: << []>> 
4537_29-Useless: []
4537_29-Constancy: [(19, 0), (5, 0)]
4537_29-ContextAliasing: []

.....
-----
Block: 2858_1
2858_1Instr:<<['PUSH1 0x10', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x0b4d', 'SWAP1', 'DUP4', 'PUSH2 0x0cb1', 'JUMP']>> 
2858_1-Stack size: 12 
2858_1-Equals Mem:<< []>> 
2858_1-NonEquals Mem: << [<11,14>]>> 
2858_1-Equals Sto:<< []>> 
2858_1-NonEquals Sto: << [<1,18>]>> 
2858_1-Useless: []
2858_1-Constancy: [(7, 0)]
2858_1-ContextAliasing: []

.....
-----
Block: 4537_28
4537_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_28-Stack size: 21 
4537_28-Equals Mem:<< []>> 
4537_28-NonEquals Mem: << [<5,8>]>> 
4537_28-Equals Sto:<< []>> 
4537_28-NonEquals Sto: << []>> 
4537_28-Useless: []
4537_28-Constancy: [(16, 0), (5, 0)]
4537_28-ContextAliasing: []

.....
-----
Block: 4537_27
4537_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_27-Stack size: 21 
4537_27-Equals Mem:<< []>> 
4537_27-NonEquals Mem: << [<5,8>]>> 
4537_27-Equals Sto:<< []>> 
4537_27-NonEquals Sto: << []>> 
4537_27-Useless: []
4537_27-Constancy: [(16, 0), (5, 0)]
4537_27-ContextAliasing: []

.....
-----
Block: 3217_6
3217_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_6-Stack size: 18 
3217_6-Equals Mem:<< []>> 
3217_6-NonEquals Mem: << [<6,1>]>> 
3217_6-Equals Sto:<< []>> 
3217_6-NonEquals Sto: << []>> 
3217_6-Useless: []
3217_6-Constancy: [(13, 0), (1, 0)]
3217_6-ContextAliasing: [(2, 17)]

.....
-----
Block: 4241_7
4241_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_7-Stack size: 20 
4241_7-Equals Mem:<< []>> 
4241_7-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_7-Equals Sto:<< []>> 
4241_7-NonEquals Sto: << []>> 
4241_7-Useless: []
4241_7-Constancy: [(15, 0), (3, 0)]
4241_7-ContextAliasing: [(4, 18)]

.....
-----
Block: 4265_7
4265_7Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_7-Stack size: 24 
4265_7-Equals Mem:<< []>> 
4265_7-NonEquals Mem: << [<11,5>]>> 
4265_7-Equals Sto:<< []>> 
4265_7-NonEquals Sto: << []>> 
4265_7-Useless: []
4265_7-Constancy: [(19, 0), (7, 0), (3, 0), (2, 32)]
4265_7-ContextAliasing: [(8, 18)]

.....
-----
Block: 3061_1
3061_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP8', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0c23', 'SWAP1', 'DUP6', 'PUSH2 0x0cb1', 'JUMP']>> 
3061_1-Stack size: 13 
3061_1-Equals Mem:<< [<12,28>]>> 
3061_1-NonEquals Mem: << [<12,15>, <15,28>]>> 
3061_1-Equals Sto:<< [<23,30>]>> 
3061_1-NonEquals Sto: << []>> 
3061_1-Useless: []
3061_1-Constancy: [(8, 0)]
3061_1-ContextAliasing: []

.....
-----
Block: 4537_26
4537_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_26-Stack size: 21 
4537_26-Equals Mem:<< []>> 
4537_26-NonEquals Mem: << [<5,8>]>> 
4537_26-Equals Sto:<< []>> 
4537_26-NonEquals Sto: << []>> 
4537_26-Useless: []
4537_26-Constancy: [(16, 0), (5, 0)]
4537_26-ContextAliasing: []

.....
-----
Block: 3107_1
3107_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP8', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'DUP2', 'SWAP1', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP2', 'MLOAD', 'SWAP1', 'DUP9', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH2 0x0c76', 'SWAP1', 'DUP9', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
3107_1-Stack size: 13 
3107_1-Equals Mem:<< []>> 
3107_1-NonEquals Mem: << [<12,26>, <12,15>, <12,37>, <15,26>, <15,37>, <37,20>, <37,26>, <20,26>]>> 
3107_1-Equals Sto:<< []>> 
3107_1-NonEquals Sto: << []>> 
3107_1-Useless: []
3107_1-Constancy: [(8, 0)]
3107_1-ContextAliasing: []

.....
-----
Block: 3217_5
3217_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_5-Stack size: 14 
3217_5-Equals Mem:<< []>> 
3217_5-NonEquals Mem: << [<6,1>]>> 
3217_5-Equals Sto:<< []>> 
3217_5-NonEquals Sto: << []>> 
3217_5-Useless: []
3217_5-Constancy: [(9, 0), (1, 0)]
3217_5-ContextAliasing: [(2, 13)]

.....
-----
Block: 4241_6
4241_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_6-Stack size: 16 
4241_6-Equals Mem:<< []>> 
4241_6-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_6-Equals Sto:<< []>> 
4241_6-NonEquals Sto: << []>> 
4241_6-Useless: []
4241_6-Constancy: [(11, 0), (3, 0)]
4241_6-ContextAliasing: [(4, 14)]

.....
-----
Block: 4265_6
4265_6Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_6-Stack size: 20 
4265_6-Equals Mem:<< []>> 
4265_6-NonEquals Mem: << [<11,5>]>> 
4265_6-Equals Sto:<< []>> 
4265_6-NonEquals Sto: << []>> 
4265_6-Useless: []
4265_6-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
4265_6-ContextAliasing: [(8, 14)]

.....
-----
Block: 1743
1743Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1743-Stack size: 9 
1743-Equals Mem:<< []>> 
1743-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1743-Equals Sto:<< []>> 
1743-NonEquals Sto: << []>> 
1743-Useless: []
1743-Constancy: [(4, 0)]
1743-ContextAliasing: []

.....
-----
Block: 1841
1841Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1841-Stack size: 9 
1841-Equals Mem:<< []>> 
1841-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1841-Equals Sto:<< []>> 
1841-NonEquals Sto: << []>> 
1841-Useless: []
1841-Constancy: [(4, 0)]
1841-ContextAliasing: []

.....
-----
Block: 872
872Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x06', 'DUP2', 'MSTORE', 'PUSH6 0x4445474f4453', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x0191', 'JUMP']>> 
872-Stack size: 2 
872-Equals Mem:<< [<10,4>]>> 
872-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
872-Equals Sto:<< []>> 
872-NonEquals Sto: << []>> 
872-Useless: []
872-Constancy: []
872-ContextAliasing: []

.....
-----
Block: 4241
4241Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241-Stack size: 4 
4241-Equals Mem:<< []>> 
4241-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
4241-Equals Sto:<< []>> 
4241-NonEquals Sto: << []>> 
4241-Useless: []
4241-Constancy: []
4241-ContextAliasing: []

.....
-----
Block: 4265
4265Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265-Stack size: 8 
4265-Equals Mem:<< []>> 
4265-NonEquals Mem: << [<11,5>]>> 
4265-Equals Sto:<< []>> 
4265-NonEquals Sto: << []>> 
4265-Useless: []
4265-Constancy: [(3, 0), (2, 32)]
4265-ContextAliasing: []

.....
-----
Block: 4537_25
4537_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_25-Stack size: 14 
4537_25-Equals Mem:<< []>> 
4537_25-NonEquals Mem: << [<5,8>]>> 
4537_25-Equals Sto:<< []>> 
4537_25-NonEquals Sto: << []>> 
4537_25-Useless: []
4537_25-Constancy: [(11, 0), (5, 0)]
4537_25-ContextAliasing: []

.....
-----
Block: 4649_11
4649_11Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_11-Stack size: 11 
4649_11-Equals Mem:<< []>> 
4649_11-NonEquals Mem: << [<4,7>]>> 
4649_11-Equals Sto:<< []>> 
4649_11-NonEquals Sto: << []>> 
4649_11-Useless: []
4649_11-Constancy: [(8, 0), (4, 0), (0, 0)]
4649_11-ContextAliasing: []

.....
-----
Block: 3549_1
3549_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3549_1-Stack size: 3 
3549_1-Equals Mem:<< []>> 
3549_1-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
3549_1-Equals Sto:<< []>> 
3549_1-NonEquals Sto: << []>> 
3549_1-Useless: []
3549_1-Constancy: []
3549_1-ContextAliasing: []

.....
-----
Block: 3549_0
3549_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3549_0-Stack size: 3 
3549_0-Equals Mem:<< []>> 
3549_0-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
3549_0-Equals Sto:<< []>> 
3549_0-NonEquals Sto: << []>> 
3549_0-Useless: []
3549_0-Constancy: []
3549_0-ContextAliasing: []

.....
-----
Block: 698
698Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
698-Stack size: 3 
698-Equals Mem:<< []>> 
698-NonEquals Mem: << [<10,13>]>> 
698-Equals Sto:<< []>> 
698-NonEquals Sto: << []>> 
698-Useless: []
698-Constancy: []
698-ContextAliasing: []

.....
-----
Block: 3549
3549Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3549-Stack size: 4 
3549-Equals Mem:<< []>> 
3549-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
3549-Equals Sto:<< []>> 
3549-NonEquals Sto: << []>> 
3549-Useless: []
3549-Constancy: []
3549-ContextAliasing: []

.....
-----
Block: 3945_0
3945_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3945_0-Stack size: 11 
3945_0-Equals Mem:<< []>> 
3945_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3945_0-Equals Sto:<< []>> 
3945_0-NonEquals Sto: << []>> 
3945_0-Useless: []
3945_0-Constancy: []
3945_0-ContextAliasing: []

.....
-----
Block: 4045_0
4045_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4045_0-Stack size: 11 
4045_0-Equals Mem:<< []>> 
4045_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4045_0-Equals Sto:<< []>> 
4045_0-NonEquals Sto: << []>> 
4045_0-Useless: []
4045_0-Constancy: []
4045_0-ContextAliasing: []

.....
-----
Block: 4136_0
4136_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4136_0-Stack size: 11 
4136_0-Equals Mem:<< []>> 
4136_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4136_0-Equals Sto:<< []>> 
4136_0-NonEquals Sto: << []>> 
4136_0-Useless: []
4136_0-Constancy: []
4136_0-ContextAliasing: []

.....
-----
Block: 2101_0
2101_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0874', 'JUMPI']>> 
2101_0-Stack size: 9 
2101_0-Equals Mem:<< []>> 
2101_0-NonEquals Mem: << [<10,13>]>> 
2101_0-Equals Sto:<< []>> 
2101_0-NonEquals Sto: << []>> 
2101_0-Useless: []
2101_0-Constancy: [(1, 0), (0, 0)]
2101_0-ContextAliasing: []

.....
-----
Block: 2135_0
2135_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2135_0-Stack size: 10 
2135_0-Equals Mem:<< []>> 
2135_0-NonEquals Mem: << [<11,14>]>> 
2135_0-Equals Sto:<< []>> 
2135_0-NonEquals Sto: << []>> 
2135_0-Useless: []
2135_0-Constancy: [(2, 0), (1, 0)]
2135_0-ContextAliasing: []

.....
-----
Block: 2219_0
2219_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2219_0-Stack size: 10 
2219_0-Equals Mem:<< []>> 
2219_0-NonEquals Mem: << [<11,14>]>> 
2219_0-Equals Sto:<< []>> 
2219_0-NonEquals Sto: << []>> 
2219_0-Useless: []
2219_0-Constancy: [(2, 0), (1, 0)]
2219_0-ContextAliasing: []

.....
-----
Block: 2255_0
2255_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2255_0-Stack size: 10 
2255_0-Equals Mem:<< []>> 
2255_0-NonEquals Mem: << [<11,14>]>> 
2255_0-Equals Sto:<< []>> 
2255_0-NonEquals Sto: << []>> 
2255_0-Useless: []
2255_0-Constancy: [(2, 0), (1, 0)]
2255_0-ContextAliasing: []

.....
-----
Block: 4537_24
4537_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_24-Stack size: 20 
4537_24-Equals Mem:<< []>> 
4537_24-NonEquals Mem: << [<5,8>]>> 
4537_24-Equals Sto:<< []>> 
4537_24-NonEquals Sto: << []>> 
4537_24-Useless: []
4537_24-Constancy: [(12, 0), (11, 0), (5, 0)]
4537_24-ContextAliasing: []

.....
-----
Block: 4649_10
4649_10Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_10-Stack size: 17 
4649_10-Equals Mem:<< []>> 
4649_10-NonEquals Mem: << [<4,7>]>> 
4649_10-Equals Sto:<< []>> 
4649_10-NonEquals Sto: << []>> 
4649_10-Useless: []
4649_10-Constancy: [(9, 0), (8, 0), (4, 0), (0, 0)]
4649_10-ContextAliasing: []

.....
-----
Block: 2326_0
2326_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x28', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH8 0x3c20b6b7bab73a17', 'PUSH1 0xc1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2326_0-Stack size: 9 
2326_0-Equals Mem:<< []>> 
2326_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2326_0-Equals Sto:<< []>> 
2326_0-NonEquals Sto: << []>> 
2326_0-Useless: []
2326_0-Constancy: [(1, 0), (0, 0)]
2326_0-ContextAliasing: []

.....
-----
Block: 4537_23
4537_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_23-Stack size: 20 
4537_23-Equals Mem:<< []>> 
4537_23-NonEquals Mem: << [<5,8>]>> 
4537_23-Equals Sto:<< []>> 
4537_23-NonEquals Sto: << []>> 
4537_23-Useless: []
4537_23-Constancy: [(12, 0), (11, 0), (5, 0)]
4537_23-ContextAliasing: []

.....
-----
Block: 4649_9
4649_9Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_9-Stack size: 17 
4649_9-Equals Mem:<< []>> 
4649_9-NonEquals Mem: << [<4,7>]>> 
4649_9-Equals Sto:<< []>> 
4649_9-NonEquals Sto: << []>> 
4649_9-Useless: []
4649_9-Constancy: [(9, 0), (8, 0), (4, 0), (0, 0)]
4649_9-ContextAliasing: []

.....
-----
Block: 2443_0
2443_0Instr:<<['JUMPDEST', 'PUSH2 0x09b3', 'DUP5', 'PUSH2 0x09ad', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2443_0-Stack size: 10 
2443_0-Equals Mem:<< []>> 
2443_0-NonEquals Mem: << [<14,17>]>> 
2443_0-Equals Sto:<< []>> 
2443_0-NonEquals Sto: << []>> 
2443_0-Useless: []
2443_0-Constancy: [(2, 0), (1, 0)]
2443_0-ContextAliasing: []

.....
-----
Block: 4537_22
4537_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_22-Stack size: 19 
4537_22-Equals Mem:<< []>> 
4537_22-NonEquals Mem: << [<5,8>]>> 
4537_22-Equals Sto:<< []>> 
4537_22-NonEquals Sto: << []>> 
4537_22-Useless: []
4537_22-Constancy: [(11, 0), (10, 0), (5, 0)]
4537_22-ContextAliasing: []

.....
-----
Block: 2490_0
2490_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x1d5b9d', 'PUSH1 0xea', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2490_0-Stack size: 9 
2490_0-Equals Mem:<< []>> 
2490_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2490_0-Equals Sto:<< []>> 
2490_0-NonEquals Sto: << []>> 
2490_0-Useless: []
2490_0-Constancy: [(1, 0), (0, 0)]
2490_0-ContextAliasing: []

.....
-----
Block: 4537_21
4537_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_21-Stack size: 20 
4537_21-Equals Mem:<< []>> 
4537_21-NonEquals Mem: << [<5,8>]>> 
4537_21-Equals Sto:<< []>> 
4537_21-NonEquals Sto: << []>> 
4537_21-Useless: []
4537_21-Constancy: [(12, 0), (11, 0), (5, 0)]
4537_21-ContextAliasing: []

.....
-----
Block: 4649_8
4649_8Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_8-Stack size: 17 
4649_8-Equals Mem:<< []>> 
4649_8-NonEquals Mem: << [<4,7>]>> 
4649_8-Equals Sto:<< []>> 
4649_8-NonEquals Sto: << []>> 
4649_8-Useless: []
4649_8-Constancy: [(9, 0), (8, 0), (4, 0), (0, 0)]
4649_8-ContextAliasing: []

.....
-----
Block: 4537_20
4537_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_20-Stack size: 20 
4537_20-Equals Mem:<< []>> 
4537_20-NonEquals Mem: << [<5,8>]>> 
4537_20-Equals Sto:<< []>> 
4537_20-NonEquals Sto: << []>> 
4537_20-Useless: []
4537_20-Constancy: [(11, 0), (5, 0)]
4537_20-ContextAliasing: []

.....
-----
Block: 4649_7
4649_7Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_7-Stack size: 17 
4649_7-Equals Mem:<< []>> 
4649_7-NonEquals Mem: << [<4,7>]>> 
4649_7-Equals Sto:<< []>> 
4649_7-NonEquals Sto: << []>> 
4649_7-Useless: []
4649_7-Constancy: [(8, 0), (4, 0), (0, 0)]
4649_7-ContextAliasing: []

.....
-----
Block: 2672_0
2672_0Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2672_0-Stack size: 10 
2672_0-Equals Mem:<< []>> 
2672_0-NonEquals Mem: << [<5,8>]>> 
2672_0-Equals Sto:<< []>> 
2672_0-NonEquals Sto: << []>> 
2672_0-Useless: []
2672_0-Constancy: [(1, 0)]
2672_0-ContextAliasing: []

.....
-----
Block: 4537_19
4537_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_19-Stack size: 20 
4537_19-Equals Mem:<< []>> 
4537_19-NonEquals Mem: << [<5,8>]>> 
4537_19-Equals Sto:<< []>> 
4537_19-NonEquals Sto: << []>> 
4537_19-Useless: []
4537_19-Constancy: [(5, 0)]
4537_19-ContextAliasing: []

.....
-----
Block: 4649_6
4649_6Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_6-Stack size: 17 
4649_6-Equals Mem:<< []>> 
4649_6-NonEquals Mem: << [<4,7>]>> 
4649_6-Equals Sto:<< []>> 
4649_6-NonEquals Sto: << []>> 
4649_6-Useless: []
4649_6-Constancy: [(4, 0), (0, 0)]
4649_6-ContextAliasing: []

.....
-----
Block: 4537_18
4537_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_18-Stack size: 20 
4537_18-Equals Mem:<< []>> 
4537_18-NonEquals Mem: << [<5,8>]>> 
4537_18-Equals Sto:<< []>> 
4537_18-NonEquals Sto: << []>> 
4537_18-Useless: []
4537_18-Constancy: [(5, 0)]
4537_18-ContextAliasing: []

.....
-----
Block: 4649_5
4649_5Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_5-Stack size: 17 
4649_5-Equals Mem:<< []>> 
4649_5-NonEquals Mem: << [<4,7>]>> 
4649_5-Equals Sto:<< []>> 
4649_5-NonEquals Sto: << []>> 
4649_5-Useless: []
4649_5-Constancy: [(4, 0), (0, 0)]
4649_5-ContextAliasing: []

.....
-----
Block: 2796_0
2796_0Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2796_0-Stack size: 10 
2796_0-Equals Mem:<< []>> 
2796_0-NonEquals Mem: << [<5,8>]>> 
2796_0-Equals Sto:<< []>> 
2796_0-NonEquals Sto: << []>> 
2796_0-Useless: []
2796_0-Constancy: []
2796_0-ContextAliasing: []

.....
-----
Block: 4537_17
4537_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_17-Stack size: 19 
4537_17-Equals Mem:<< []>> 
4537_17-NonEquals Mem: << [<5,8>]>> 
4537_17-Equals Sto:<< []>> 
4537_17-NonEquals Sto: << []>> 
4537_17-Useless: []
4537_17-Constancy: [(9, 0), (5, 0)]
4537_17-ContextAliasing: []

.....
-----
Block: 3282_1
3282_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x73', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3282_1-Stack size: 13 
3282_1-Equals Mem:<< []>> 
3282_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3282_1-Equals Sto:<< []>> 
3282_1-NonEquals Sto: << []>> 
3282_1-Useless: []
3282_1-Constancy: []
3282_1-ContextAliasing: []

.....
-----
Block: 3217_4
3217_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_4-Stack size: 19 
3217_4-Equals Mem:<< []>> 
3217_4-NonEquals Mem: << [<6,1>]>> 
3217_4-Equals Sto:<< []>> 
3217_4-NonEquals Sto: << []>> 
3217_4-Useless: []
3217_4-Constancy: [(1, 0)]
3217_4-ContextAliasing: [(2, 18)]

.....
-----
Block: 4241_5
4241_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_5-Stack size: 21 
4241_5-Equals Mem:<< []>> 
4241_5-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_5-Equals Sto:<< []>> 
4241_5-NonEquals Sto: << []>> 
4241_5-Useless: []
4241_5-Constancy: [(3, 0)]
4241_5-ContextAliasing: [(4, 19)]

.....
-----
Block: 4265_5
4265_5Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_5-Stack size: 25 
4265_5-Equals Mem:<< []>> 
4265_5-NonEquals Mem: << [<11,5>]>> 
4265_5-Equals Sto:<< []>> 
4265_5-NonEquals Sto: << []>> 
4265_5-Useless: []
4265_5-Constancy: [(7, 0), (3, 0), (2, 32)]
4265_5-ContextAliasing: [(8, 19)]

.....
-----
Block: 3423_1
3423_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0d84', 'SWAP1', 'DUP3', 'PUSH2 0x1086', 'JUMP']>> 
3423_1-Stack size: 14 
3423_1-Equals Mem:<< []>> 
3423_1-NonEquals Mem: << [<11,14>]>> 
3423_1-Equals Sto:<< []>> 
3423_1-NonEquals Sto: << [<18,20>]>> 
3423_1-Useless: []
3423_1-Constancy: []
3423_1-ContextAliasing: []

.....
-----
Block: 4537_16
4537_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_16-Stack size: 22 
4537_16-Equals Mem:<< []>> 
4537_16-NonEquals Mem: << [<5,8>]>> 
4537_16-Equals Sto:<< []>> 
4537_16-NonEquals Sto: << []>> 
4537_16-Useless: []
4537_16-Constancy: [(5, 0)]
4537_16-ContextAliasing: []

.....
-----
Block: 2858_0
2858_0Instr:<<['PUSH1 0x10', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x0b4d', 'SWAP1', 'DUP4', 'PUSH2 0x0cb1', 'JUMP']>> 
2858_0-Stack size: 10 
2858_0-Equals Mem:<< []>> 
2858_0-NonEquals Mem: << [<11,14>]>> 
2858_0-Equals Sto:<< []>> 
2858_0-NonEquals Sto: << [<1,18>]>> 
2858_0-Useless: []
2858_0-Constancy: []
2858_0-ContextAliasing: []

.....
-----
Block: 4537_15
4537_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_15-Stack size: 19 
4537_15-Equals Mem:<< []>> 
4537_15-NonEquals Mem: << [<5,8>]>> 
4537_15-Equals Sto:<< []>> 
4537_15-NonEquals Sto: << []>> 
4537_15-Useless: []
4537_15-Constancy: [(5, 0)]
4537_15-ContextAliasing: []

.....
-----
Block: 4537_14
4537_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_14-Stack size: 19 
4537_14-Equals Mem:<< []>> 
4537_14-NonEquals Mem: << [<5,8>]>> 
4537_14-Equals Sto:<< []>> 
4537_14-NonEquals Sto: << []>> 
4537_14-Useless: []
4537_14-Constancy: [(5, 0)]
4537_14-ContextAliasing: []

.....
-----
Block: 3217_3
3217_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_3-Stack size: 16 
3217_3-Equals Mem:<< []>> 
3217_3-NonEquals Mem: << [<6,1>]>> 
3217_3-Equals Sto:<< []>> 
3217_3-NonEquals Sto: << []>> 
3217_3-Useless: []
3217_3-Constancy: [(1, 0)]
3217_3-ContextAliasing: [(2, 15)]

.....
-----
Block: 4241_4
4241_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_4-Stack size: 18 
4241_4-Equals Mem:<< []>> 
4241_4-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_4-Equals Sto:<< []>> 
4241_4-NonEquals Sto: << []>> 
4241_4-Useless: []
4241_4-Constancy: [(3, 0)]
4241_4-ContextAliasing: [(4, 16)]

.....
-----
Block: 4265_4
4265_4Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_4-Stack size: 22 
4265_4-Equals Mem:<< []>> 
4265_4-NonEquals Mem: << [<11,5>]>> 
4265_4-Equals Sto:<< []>> 
4265_4-NonEquals Sto: << []>> 
4265_4-Useless: []
4265_4-Constancy: [(7, 0), (3, 0), (2, 32)]
4265_4-ContextAliasing: [(8, 16)]

.....
-----
Block: 3061_0
3061_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP8', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0c23', 'SWAP1', 'DUP6', 'PUSH2 0x0cb1', 'JUMP']>> 
3061_0-Stack size: 11 
3061_0-Equals Mem:<< [<12,28>]>> 
3061_0-NonEquals Mem: << [<12,15>, <15,28>]>> 
3061_0-Equals Sto:<< [<23,30>]>> 
3061_0-NonEquals Sto: << []>> 
3061_0-Useless: []
3061_0-Constancy: []
3061_0-ContextAliasing: []

.....
-----
Block: 4537_13
4537_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_13-Stack size: 19 
4537_13-Equals Mem:<< []>> 
4537_13-NonEquals Mem: << [<5,8>]>> 
4537_13-Equals Sto:<< []>> 
4537_13-NonEquals Sto: << []>> 
4537_13-Useless: []
4537_13-Constancy: [(5, 0)]
4537_13-ContextAliasing: []

.....
-----
Block: 3107_0
3107_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP8', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'DUP2', 'SWAP1', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP2', 'MLOAD', 'SWAP1', 'DUP9', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH2 0x0c76', 'SWAP1', 'DUP9', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
3107_0-Stack size: 11 
3107_0-Equals Mem:<< []>> 
3107_0-NonEquals Mem: << [<12,26>, <12,15>, <12,37>, <15,26>, <15,37>, <37,20>, <37,26>, <20,26>]>> 
3107_0-Equals Sto:<< []>> 
3107_0-NonEquals Sto: << []>> 
3107_0-Useless: []
3107_0-Constancy: []
3107_0-ContextAliasing: []

.....
-----
Block: 1743_1
1743_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1743_1-Stack size: 10 
1743_1-Equals Mem:<< []>> 
1743_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1743_1-Equals Sto:<< []>> 
1743_1-NonEquals Sto: << []>> 
1743_1-Useless: []
1743_1-Constancy: []
1743_1-ContextAliasing: []

.....
-----
Block: 1841_1
1841_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1841_1-Stack size: 10 
1841_1-Equals Mem:<< []>> 
1841_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1841_1-Equals Sto:<< []>> 
1841_1-NonEquals Sto: << []>> 
1841_1-Useless: []
1841_1-Constancy: []
1841_1-ContextAliasing: []

.....
-----
Block: 3785
3785Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0eee', 'SWAP2', 'SWAP1', 'PUSH2 0x11e0', 'JUMP']>> 
3785-Stack size: 11 
3785-Equals Mem:<< [<19,7>]>> 
3785-NonEquals Mem: << []>> 
3785-Equals Sto:<< []>> 
3785-NonEquals Sto: << []>> 
3785-Useless: []
3785-Constancy: []
3785-ContextAliasing: []

.....
-----
Block: 1331
1331Instr:<<['JUMPDEST', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'CALLER', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'KECCAK256', 'SSTORE', 'PUSH2 0x2710', 'PUSH1 0x0c', 'SSTORE', 'JUMP']>> 
1331-Stack size: 3 
1331-Equals Mem:<< []>> 
1331-NonEquals Mem: << [<6,3>, <6,11>, <11,3>, <3,12>]>> 
1331-Equals Sto:<< []>> 
1331-NonEquals Sto: << [<13,16>]>> 
1331-Useless: []
1331-Constancy: []
1331-ContextAliasing: []

.....
-----
Block: 3282_0
3282_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x73', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3282_0-Stack size: 6 
3282_0-Equals Mem:<< []>> 
3282_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3282_0-Equals Sto:<< []>> 
3282_0-NonEquals Sto: << []>> 
3282_0-Useless: []
3282_0-Constancy: []
3282_0-ContextAliasing: []

.....
-----
Block: 3217_2
3217_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_2-Stack size: 12 
3217_2-Equals Mem:<< []>> 
3217_2-NonEquals Mem: << [<6,1>]>> 
3217_2-Equals Sto:<< []>> 
3217_2-NonEquals Sto: << []>> 
3217_2-Useless: []
3217_2-Constancy: [(1, 0)]
3217_2-ContextAliasing: [(2, 11)]

.....
-----
Block: 4241_3
4241_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_3-Stack size: 14 
4241_3-Equals Mem:<< []>> 
4241_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_3-Equals Sto:<< []>> 
4241_3-NonEquals Sto: << []>> 
4241_3-Useless: []
4241_3-Constancy: [(3, 0)]
4241_3-ContextAliasing: [(4, 12)]

.....
-----
Block: 4265_3
4265_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_3-Stack size: 18 
4265_3-Equals Mem:<< []>> 
4265_3-NonEquals Mem: << [<11,5>]>> 
4265_3-Equals Sto:<< []>> 
4265_3-NonEquals Sto: << []>> 
4265_3-Useless: []
4265_3-Constancy: [(7, 0), (3, 0), (2, 32)]
4265_3-ContextAliasing: [(8, 12)]

.....
-----
Block: 3423_0
3423_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0d84', 'SWAP1', 'DUP3', 'PUSH2 0x1086', 'JUMP']>> 
3423_0-Stack size: 7 
3423_0-Equals Mem:<< []>> 
3423_0-NonEquals Mem: << [<11,14>]>> 
3423_0-Equals Sto:<< []>> 
3423_0-NonEquals Sto: << [<18,20>]>> 
3423_0-Useless: []
3423_0-Constancy: []
3423_0-ContextAliasing: []

.....
-----
Block: 4537_12
4537_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_12-Stack size: 15 
4537_12-Equals Mem:<< []>> 
4537_12-NonEquals Mem: << [<5,8>]>> 
4537_12-Equals Sto:<< []>> 
4537_12-NonEquals Sto: << []>> 
4537_12-Useless: []
4537_12-Constancy: [(5, 0)]
4537_12-ContextAliasing: []

.....
-----
Block: 1252
1252Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0473', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x04d5', 'SWAP1', 'DUP7', 'PUSH2 0x0cb1', 'JUMP']>> 
1252-Stack size: 4 
1252-Equals Mem:<< [<5,23>, <10,26>]>> 
1252-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
1252-Equals Sto:<< []>> 
1252-NonEquals Sto: << []>> 
1252-Useless: []
1252-Constancy: []
1252-ContextAliasing: []

.....
-----
Block: 4537_11
4537_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_11-Stack size: 17 
4537_11-Equals Mem:<< []>> 
4537_11-NonEquals Mem: << [<5,8>]>> 
4537_11-Equals Sto:<< []>> 
4537_11-NonEquals Sto: << []>> 
4537_11-Useless: []
4537_11-Constancy: [(12, 0), (5, 0)]
4537_11-ContextAliasing: []

.....
-----
Block: 542
542Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
542-Stack size: 2 
542-Equals Mem:<< []>> 
542-NonEquals Mem: << [<6,3>]>> 
542-Equals Sto:<< []>> 
542-NonEquals Sto: << []>> 
542-Useless: []
542-Constancy: []
542-ContextAliasing: []

.....
-----
Block: 3945
3945Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3945-Stack size: 14 
3945-Equals Mem:<< []>> 
3945-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3945-Equals Sto:<< []>> 
3945-NonEquals Sto: << []>> 
3945-Useless: []
3945-Constancy: [(8, 0)]
3945-ContextAliasing: []

.....
-----
Block: 4045
4045Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4045-Stack size: 14 
4045-Equals Mem:<< []>> 
4045-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4045-Equals Sto:<< []>> 
4045-NonEquals Sto: << []>> 
4045-Useless: []
4045-Constancy: [(8, 0)]
4045-ContextAliasing: []

.....
-----
Block: 4136
4136Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4136-Stack size: 14 
4136-Equals Mem:<< []>> 
4136-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4136-Equals Sto:<< []>> 
4136-NonEquals Sto: << []>> 
4136-Useless: []
4136-Constancy: [(8, 0)]
4136-ContextAliasing: []

.....
-----
Block: 2101
2101Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0874', 'JUMPI']>> 
2101-Stack size: 12 
2101-Equals Mem:<< []>> 
2101-NonEquals Mem: << [<10,13>]>> 
2101-Equals Sto:<< []>> 
2101-NonEquals Sto: << []>> 
2101-Useless: []
2101-Constancy: [(6, 0), (1, 0), (0, 0)]
2101-ContextAliasing: []

.....
-----
Block: 2135
2135Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2135-Stack size: 13 
2135-Equals Mem:<< []>> 
2135-NonEquals Mem: << [<11,14>]>> 
2135-Equals Sto:<< []>> 
2135-NonEquals Sto: << []>> 
2135-Useless: []
2135-Constancy: [(7, 0), (2, 0), (1, 0)]
2135-ContextAliasing: []

.....
-----
Block: 2219
2219Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2219-Stack size: 13 
2219-Equals Mem:<< []>> 
2219-NonEquals Mem: << [<11,14>]>> 
2219-Equals Sto:<< []>> 
2219-NonEquals Sto: << []>> 
2219-Useless: []
2219-Constancy: [(7, 0), (2, 0), (1, 0)]
2219-ContextAliasing: []

.....
-----
Block: 2255
2255Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2255-Stack size: 13 
2255-Equals Mem:<< []>> 
2255-NonEquals Mem: << [<11,14>]>> 
2255-Equals Sto:<< []>> 
2255-NonEquals Sto: << []>> 
2255-Useless: []
2255-Constancy: [(7, 0), (2, 0), (1, 0)]
2255-ContextAliasing: []

.....
-----
Block: 4537_10
4537_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_10-Stack size: 23 
4537_10-Equals Mem:<< []>> 
4537_10-NonEquals Mem: << [<5,8>]>> 
4537_10-Equals Sto:<< []>> 
4537_10-NonEquals Sto: << []>> 
4537_10-Useless: []
4537_10-Constancy: [(17, 0), (12, 0), (11, 0), (5, 0)]
4537_10-ContextAliasing: []

.....
-----
Block: 4649_4
4649_4Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_4-Stack size: 20 
4649_4-Equals Mem:<< []>> 
4649_4-NonEquals Mem: << [<4,7>]>> 
4649_4-Equals Sto:<< []>> 
4649_4-NonEquals Sto: << []>> 
4649_4-Useless: []
4649_4-Constancy: [(14, 0), (9, 0), (8, 0), (4, 0), (0, 0)]
4649_4-ContextAliasing: []

.....
-----
Block: 2326
2326Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x28', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH8 0x3c20b6b7bab73a17', 'PUSH1 0xc1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2326-Stack size: 12 
2326-Equals Mem:<< []>> 
2326-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2326-Equals Sto:<< []>> 
2326-NonEquals Sto: << []>> 
2326-Useless: []
2326-Constancy: [(6, 0), (1, 0), (0, 0)]
2326-ContextAliasing: []

.....
-----
Block: 4537_9
4537_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_9-Stack size: 23 
4537_9-Equals Mem:<< []>> 
4537_9-NonEquals Mem: << [<5,8>]>> 
4537_9-Equals Sto:<< []>> 
4537_9-NonEquals Sto: << []>> 
4537_9-Useless: []
4537_9-Constancy: [(17, 0), (12, 0), (11, 0), (5, 0)]
4537_9-ContextAliasing: []

.....
-----
Block: 4649_3
4649_3Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_3-Stack size: 20 
4649_3-Equals Mem:<< []>> 
4649_3-NonEquals Mem: << [<4,7>]>> 
4649_3-Equals Sto:<< []>> 
4649_3-NonEquals Sto: << []>> 
4649_3-Useless: []
4649_3-Constancy: [(14, 0), (9, 0), (8, 0), (4, 0), (0, 0)]
4649_3-ContextAliasing: []

.....
-----
Block: 2443
2443Instr:<<['JUMPDEST', 'PUSH2 0x09b3', 'DUP5', 'PUSH2 0x09ad', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2443-Stack size: 13 
2443-Equals Mem:<< []>> 
2443-NonEquals Mem: << [<14,17>]>> 
2443-Equals Sto:<< []>> 
2443-NonEquals Sto: << []>> 
2443-Useless: []
2443-Constancy: [(7, 0), (2, 0), (1, 0)]
2443-ContextAliasing: []

.....
-----
Block: 4537_8
4537_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_8-Stack size: 22 
4537_8-Equals Mem:<< []>> 
4537_8-NonEquals Mem: << [<5,8>]>> 
4537_8-Equals Sto:<< []>> 
4537_8-NonEquals Sto: << []>> 
4537_8-Useless: []
4537_8-Constancy: [(16, 0), (11, 0), (10, 0), (5, 0)]
4537_8-ContextAliasing: []

.....
-----
Block: 2490
2490Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x1d5b9d', 'PUSH1 0xea', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2490-Stack size: 12 
2490-Equals Mem:<< []>> 
2490-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2490-Equals Sto:<< []>> 
2490-NonEquals Sto: << []>> 
2490-Useless: []
2490-Constancy: [(6, 0), (1, 0), (0, 0)]
2490-ContextAliasing: []

.....
-----
Block: 4537_7
4537_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_7-Stack size: 23 
4537_7-Equals Mem:<< []>> 
4537_7-NonEquals Mem: << [<5,8>]>> 
4537_7-Equals Sto:<< []>> 
4537_7-NonEquals Sto: << []>> 
4537_7-Useless: []
4537_7-Constancy: [(17, 0), (12, 0), (11, 0), (5, 0)]
4537_7-ContextAliasing: []

.....
-----
Block: 4649_2
4649_2Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_2-Stack size: 20 
4649_2-Equals Mem:<< []>> 
4649_2-NonEquals Mem: << [<4,7>]>> 
4649_2-Equals Sto:<< []>> 
4649_2-NonEquals Sto: << []>> 
4649_2-Useless: []
4649_2-Constancy: [(14, 0), (9, 0), (8, 0), (4, 0), (0, 0)]
4649_2-ContextAliasing: []

.....
-----
Block: 4537_6
4537_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_6-Stack size: 23 
4537_6-Equals Mem:<< []>> 
4537_6-NonEquals Mem: << [<5,8>]>> 
4537_6-Equals Sto:<< []>> 
4537_6-NonEquals Sto: << []>> 
4537_6-Useless: []
4537_6-Constancy: [(17, 0), (11, 0), (5, 0)]
4537_6-ContextAliasing: []

.....
-----
Block: 4649_1
4649_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_1-Stack size: 20 
4649_1-Equals Mem:<< []>> 
4649_1-NonEquals Mem: << [<4,7>]>> 
4649_1-Equals Sto:<< []>> 
4649_1-NonEquals Sto: << []>> 
4649_1-Useless: []
4649_1-Constancy: [(14, 0), (8, 0), (4, 0), (0, 0)]
4649_1-ContextAliasing: []

.....
-----
Block: 2672
2672Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2672-Stack size: 13 
2672-Equals Mem:<< []>> 
2672-NonEquals Mem: << [<5,8>]>> 
2672-Equals Sto:<< []>> 
2672-NonEquals Sto: << []>> 
2672-Useless: []
2672-Constancy: [(7, 0), (1, 0)]
2672-ContextAliasing: []

.....
-----
Block: 4537_5
4537_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_5-Stack size: 23 
4537_5-Equals Mem:<< []>> 
4537_5-NonEquals Mem: << [<5,8>]>> 
4537_5-Equals Sto:<< []>> 
4537_5-NonEquals Sto: << []>> 
4537_5-Useless: []
4537_5-Constancy: [(17, 0), (5, 0)]
4537_5-ContextAliasing: []

.....
-----
Block: 4649_0
4649_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649_0-Stack size: 20 
4649_0-Equals Mem:<< []>> 
4649_0-NonEquals Mem: << [<4,7>]>> 
4649_0-Equals Sto:<< []>> 
4649_0-NonEquals Sto: << []>> 
4649_0-Useless: []
4649_0-Constancy: [(14, 0), (4, 0), (0, 0)]
4649_0-ContextAliasing: []

.....
-----
Block: 4537_4
4537_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_4-Stack size: 23 
4537_4-Equals Mem:<< []>> 
4537_4-NonEquals Mem: << [<5,8>]>> 
4537_4-Equals Sto:<< []>> 
4537_4-NonEquals Sto: << []>> 
4537_4-Useless: []
4537_4-Constancy: [(17, 0), (5, 0)]
4537_4-ContextAliasing: []

.....
-----
Block: 4649
4649Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649-Stack size: 20 
4649-Equals Mem:<< []>> 
4649-NonEquals Mem: << [<4,7>]>> 
4649-Equals Sto:<< []>> 
4649-NonEquals Sto: << []>> 
4649-Useless: []
4649-Constancy: [(14, 0), (4, 0), (0, 0)]
4649-ContextAliasing: []

.....
-----
Block: 2796
2796Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2796-Stack size: 13 
2796-Equals Mem:<< []>> 
2796-NonEquals Mem: << [<5,8>]>> 
2796-Equals Sto:<< []>> 
2796-NonEquals Sto: << []>> 
2796-Useless: []
2796-Constancy: [(7, 0)]
2796-ContextAliasing: []

.....
-----
Block: 4537_3
4537_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_3-Stack size: 22 
4537_3-Equals Mem:<< []>> 
4537_3-NonEquals Mem: << [<5,8>]>> 
4537_3-Equals Sto:<< []>> 
4537_3-NonEquals Sto: << []>> 
4537_3-Useless: []
4537_3-Constancy: [(16, 0), (9, 0), (5, 0)]
4537_3-ContextAliasing: []

.....
-----
Block: 3282
3282Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x73', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3282-Stack size: 16 
3282-Equals Mem:<< []>> 
3282-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3282-Equals Sto:<< []>> 
3282-NonEquals Sto: << []>> 
3282-Useless: []
3282-Constancy: [(10, 0)]
3282-ContextAliasing: []

.....
-----
Block: 3217_1
3217_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_1-Stack size: 22 
3217_1-Equals Mem:<< []>> 
3217_1-NonEquals Mem: << [<6,1>]>> 
3217_1-Equals Sto:<< []>> 
3217_1-NonEquals Sto: << []>> 
3217_1-Useless: []
3217_1-Constancy: [(16, 0), (1, 0)]
3217_1-ContextAliasing: [(2, 21)]

.....
-----
Block: 4241_2
4241_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_2-Stack size: 24 
4241_2-Equals Mem:<< []>> 
4241_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_2-Equals Sto:<< []>> 
4241_2-NonEquals Sto: << []>> 
4241_2-Useless: []
4241_2-Constancy: [(18, 0), (3, 0)]
4241_2-ContextAliasing: [(4, 22)]

.....
-----
Block: 4265_2
4265_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_2-Stack size: 28 
4265_2-Equals Mem:<< []>> 
4265_2-NonEquals Mem: << [<11,5>]>> 
4265_2-Equals Sto:<< []>> 
4265_2-NonEquals Sto: << []>> 
4265_2-Useless: []
4265_2-Constancy: [(22, 0), (7, 0), (3, 0), (2, 32)]
4265_2-ContextAliasing: [(8, 22)]

.....
-----
Block: 3423
3423Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0d84', 'SWAP1', 'DUP3', 'PUSH2 0x1086', 'JUMP']>> 
3423-Stack size: 17 
3423-Equals Mem:<< []>> 
3423-NonEquals Mem: << [<11,14>]>> 
3423-Equals Sto:<< []>> 
3423-NonEquals Sto: << [<18,20>]>> 
3423-Useless: []
3423-Constancy: [(11, 0)]
3423-ContextAliasing: []

.....
-----
Block: 4537_2
4537_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_2-Stack size: 25 
4537_2-Equals Mem:<< []>> 
4537_2-NonEquals Mem: << [<5,8>]>> 
4537_2-Equals Sto:<< []>> 
4537_2-NonEquals Sto: << []>> 
4537_2-Useless: []
4537_2-Constancy: [(19, 0), (5, 0)]
4537_2-ContextAliasing: []

.....
-----
Block: 2858
2858Instr:<<['PUSH1 0x10', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x0b4d', 'SWAP1', 'DUP4', 'PUSH2 0x0cb1', 'JUMP']>> 
2858-Stack size: 13 
2858-Equals Mem:<< []>> 
2858-NonEquals Mem: << [<11,14>]>> 
2858-Equals Sto:<< []>> 
2858-NonEquals Sto: << [<1,18>]>> 
2858-Useless: []
2858-Constancy: [(7, 0)]
2858-ContextAliasing: []

.....
-----
Block: 4537_1
4537_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_1-Stack size: 22 
4537_1-Equals Mem:<< []>> 
4537_1-NonEquals Mem: << [<5,8>]>> 
4537_1-Equals Sto:<< []>> 
4537_1-NonEquals Sto: << []>> 
4537_1-Useless: []
4537_1-Constancy: [(16, 0), (5, 0)]
4537_1-ContextAliasing: []

.....
-----
Block: 4537_0
4537_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537_0-Stack size: 22 
4537_0-Equals Mem:<< []>> 
4537_0-NonEquals Mem: << [<5,8>]>> 
4537_0-Equals Sto:<< []>> 
4537_0-NonEquals Sto: << []>> 
4537_0-Useless: []
4537_0-Constancy: [(16, 0), (5, 0)]
4537_0-ContextAliasing: []

.....
-----
Block: 3217_0
3217_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217_0-Stack size: 19 
3217_0-Equals Mem:<< []>> 
3217_0-NonEquals Mem: << [<6,1>]>> 
3217_0-Equals Sto:<< []>> 
3217_0-NonEquals Sto: << []>> 
3217_0-Useless: []
3217_0-Constancy: [(13, 0), (1, 0)]
3217_0-ContextAliasing: [(2, 18)]

.....
-----
Block: 4241_1
4241_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_1-Stack size: 21 
4241_1-Equals Mem:<< []>> 
4241_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_1-Equals Sto:<< []>> 
4241_1-NonEquals Sto: << []>> 
4241_1-Useless: []
4241_1-Constancy: [(15, 0), (3, 0)]
4241_1-ContextAliasing: [(4, 19)]

.....
-----
Block: 4265_1
4265_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_1-Stack size: 25 
4265_1-Equals Mem:<< []>> 
4265_1-NonEquals Mem: << [<11,5>]>> 
4265_1-Equals Sto:<< []>> 
4265_1-NonEquals Sto: << []>> 
4265_1-Useless: []
4265_1-Constancy: [(19, 0), (7, 0), (3, 0), (2, 32)]
4265_1-ContextAliasing: [(8, 19)]

.....
-----
Block: 3061
3061Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP8', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0c23', 'SWAP1', 'DUP6', 'PUSH2 0x0cb1', 'JUMP']>> 
3061-Stack size: 14 
3061-Equals Mem:<< [<12,28>]>> 
3061-NonEquals Mem: << [<12,15>, <15,28>]>> 
3061-Equals Sto:<< [<23,30>]>> 
3061-NonEquals Sto: << []>> 
3061-Useless: []
3061-Constancy: [(8, 0)]
3061-ContextAliasing: []

.....
-----
Block: 4537
4537Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537-Stack size: 22 
4537-Equals Mem:<< []>> 
4537-NonEquals Mem: << [<5,8>]>> 
4537-Equals Sto:<< []>> 
4537-NonEquals Sto: << []>> 
4537-Useless: []
4537-Constancy: [(16, 0), (5, 0)]
4537-ContextAliasing: []

.....
-----
Block: 3107
3107Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP8', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'DUP2', 'SWAP1', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP2', 'MLOAD', 'SWAP1', 'DUP9', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH2 0x0c76', 'SWAP1', 'DUP9', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
3107-Stack size: 14 
3107-Equals Mem:<< []>> 
3107-NonEquals Mem: << [<12,26>, <12,15>, <12,37>, <15,26>, <15,37>, <37,20>, <37,26>, <20,26>]>> 
3107-Equals Sto:<< []>> 
3107-NonEquals Sto: << []>> 
3107-Useless: []
3107-Constancy: [(8, 0)]
3107-ContextAliasing: []

.....
-----
Block: 3217
3217Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217-Stack size: 15 
3217-Equals Mem:<< []>> 
3217-NonEquals Mem: << [<6,1>]>> 
3217-Equals Sto:<< []>> 
3217-NonEquals Sto: << []>> 
3217-Useless: []
3217-Constancy: [(9, 0), (1, 0)]
3217-ContextAliasing: [(2, 14)]

.....
-----
Block: 4241_0
4241_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241_0-Stack size: 17 
4241_0-Equals Mem:<< []>> 
4241_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
4241_0-Equals Sto:<< []>> 
4241_0-NonEquals Sto: << []>> 
4241_0-Useless: []
4241_0-Constancy: [(11, 0), (3, 0)]
4241_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 4265_0
4265_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265_0-Stack size: 21 
4265_0-Equals Mem:<< []>> 
4265_0-NonEquals Mem: << [<11,5>]>> 
4265_0-Equals Sto:<< []>> 
4265_0-NonEquals Sto: << []>> 
4265_0-Useless: []
4265_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
4265_0-ContextAliasing: [(8, 15)]

.....
-----
Block: 1743_0
1743_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1743_0-Stack size: 10 
1743_0-Equals Mem:<< []>> 
1743_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1743_0-Equals Sto:<< []>> 
1743_0-NonEquals Sto: << []>> 
1743_0-Useless: []
1743_0-Constancy: [(4, 0)]
1743_0-ContextAliasing: []

.....
-----
Block: 1841_0
1841_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1841_0-Stack size: 10 
1841_0-Equals Mem:<< []>> 
1841_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1841_0-Equals Sto:<< []>> 
1841_0-NonEquals Sto: << []>> 
1841_0-Useless: []
1841_0-Constancy: [(4, 0)]
1841_0-ContextAliasing: []

.....
-----
Block: 370
370Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x06', 'DUP2', 'MSTORE', 'PUSH6 0x4465476f6473', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
370-Stack size: 2 
370-Equals Mem:<< [<10,4>]>> 
370-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
370-Equals Sto:<< []>> 
370-NonEquals Sto: << []>> 
370-Useless: []
370-Constancy: []
370-ContextAliasing: []

.....
-----
Block: 1710_25
1710_25Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_25-Stack size: 5 
1710_25-Equals Mem:<< []>> 
1710_25-NonEquals Mem: << []>> 
1710_25-Equals Sto:<< []>> 
1710_25-NonEquals Sto: << []>> 
1710_25-Useless: []
1710_25-Constancy: []
1710_25-ContextAliasing: []

.....
-----
Block: 1710_24
1710_24Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_24-Stack size: 4 
1710_24-Equals Mem:<< []>> 
1710_24-NonEquals Mem: << []>> 
1710_24-Equals Sto:<< []>> 
1710_24-NonEquals Sto: << []>> 
1710_24-Useless: []
1710_24-Constancy: []
1710_24-ContextAliasing: []

.....
-----
Block: 414
414Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
414-Stack size: 2 
414-Equals Mem:<< []>> 
414-NonEquals Mem: << []>> 
414-Equals Sto:<< []>> 
414-NonEquals Sto: << []>> 
414-Useless: []
414-Constancy: []
414-ContextAliasing: []

.....
-----
Block: 1710_23
1710_23Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_23-Stack size: 14 
1710_23-Equals Mem:<< []>> 
1710_23-NonEquals Mem: << []>> 
1710_23-Equals Sto:<< []>> 
1710_23-NonEquals Sto: << []>> 
1710_23-Useless: []
1710_23-Constancy: [(9, 0)]
1710_23-ContextAliasing: []

.....
-----
Block: 1710_22
1710_22Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_22-Stack size: 12 
1710_22-Equals Mem:<< []>> 
1710_22-NonEquals Mem: << []>> 
1710_22-Equals Sto:<< []>> 
1710_22-NonEquals Sto: << []>> 
1710_22-Useless: []
1710_22-Constancy: [(7, 0), (2, 0), (1, 0)]
1710_22-ContextAliasing: []

.....
-----
Block: 1710_21
1710_21Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_21-Stack size: 16 
1710_21-Equals Mem:<< []>> 
1710_21-NonEquals Mem: << []>> 
1710_21-Equals Sto:<< []>> 
1710_21-NonEquals Sto: << []>> 
1710_21-Useless: []
1710_21-Constancy: [(11, 0)]
1710_21-ContextAliasing: []

.....
-----
Block: 1710_20
1710_20Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_20-Stack size: 21 
1710_20-Equals Mem:<< []>> 
1710_20-NonEquals Mem: << []>> 
1710_20-Equals Sto:<< []>> 
1710_20-NonEquals Sto: << []>> 
1710_20-Useless: []
1710_20-Constancy: [(16, 0), (1, 0)]
1710_20-ContextAliasing: []

.....
-----
Block: 1710_19
1710_19Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_19-Stack size: 18 
1710_19-Equals Mem:<< []>> 
1710_19-NonEquals Mem: << []>> 
1710_19-Equals Sto:<< []>> 
1710_19-NonEquals Sto: << []>> 
1710_19-Useless: []
1710_19-Constancy: [(13, 0), (1, 0)]
1710_19-ContextAliasing: []

.....
-----
Block: 1710_18
1710_18Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_18-Stack size: 14 
1710_18-Equals Mem:<< []>> 
1710_18-NonEquals Mem: << []>> 
1710_18-Equals Sto:<< []>> 
1710_18-NonEquals Sto: << []>> 
1710_18-Useless: []
1710_18-Constancy: [(9, 0), (1, 0)]
1710_18-ContextAliasing: []

.....
-----
Block: 1710
1710Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710-Stack size: 10 
1710-Equals Mem:<< []>> 
1710-NonEquals Mem: << []>> 
1710-Equals Sto:<< []>> 
1710-NonEquals Sto: << []>> 
1710-Useless: []
1710-Constancy: [(5, 0)]
1710-ContextAliasing: []

.....
-----
Block: 1710_17
1710_17Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_17-Stack size: 4 
1710_17-Equals Mem:<< []>> 
1710_17-NonEquals Mem: << []>> 
1710_17-Equals Sto:<< []>> 
1710_17-NonEquals Sto: << []>> 
1710_17-Useless: []
1710_17-Constancy: []
1710_17-ContextAliasing: []

.....
-----
Block: 1710_16
1710_16Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_16-Stack size: 4 
1710_16-Equals Mem:<< []>> 
1710_16-NonEquals Mem: << []>> 
1710_16-Equals Sto:<< []>> 
1710_16-NonEquals Sto: << []>> 
1710_16-Useless: []
1710_16-Constancy: []
1710_16-ContextAliasing: []

.....
-----
Block: 1710_15
1710_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_15-Stack size: 5 
1710_15-Equals Mem:<< []>> 
1710_15-NonEquals Mem: << []>> 
1710_15-Equals Sto:<< []>> 
1710_15-NonEquals Sto: << []>> 
1710_15-Useless: []
1710_15-Constancy: []
1710_15-ContextAliasing: []

.....
-----
Block: 1710_14
1710_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_14-Stack size: 12 
1710_14-Equals Mem:<< []>> 
1710_14-NonEquals Mem: << []>> 
1710_14-Equals Sto:<< []>> 
1710_14-NonEquals Sto: << []>> 
1710_14-Useless: []
1710_14-Constancy: []
1710_14-ContextAliasing: []

.....
-----
Block: 1710_13
1710_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_13-Stack size: 10 
1710_13-Equals Mem:<< []>> 
1710_13-NonEquals Mem: << []>> 
1710_13-Equals Sto:<< []>> 
1710_13-NonEquals Sto: << []>> 
1710_13-Useless: []
1710_13-Constancy: [(2, 0), (1, 0)]
1710_13-ContextAliasing: []

.....
-----
Block: 1710_12
1710_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_12-Stack size: 14 
1710_12-Equals Mem:<< []>> 
1710_12-NonEquals Mem: << []>> 
1710_12-Equals Sto:<< []>> 
1710_12-NonEquals Sto: << []>> 
1710_12-Useless: []
1710_12-Constancy: []
1710_12-ContextAliasing: []

.....
-----
Block: 1710_11
1710_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_11-Stack size: 19 
1710_11-Equals Mem:<< []>> 
1710_11-NonEquals Mem: << []>> 
1710_11-Equals Sto:<< []>> 
1710_11-NonEquals Sto: << []>> 
1710_11-Useless: []
1710_11-Constancy: [(1, 0)]
1710_11-ContextAliasing: []

.....
-----
Block: 1710_10
1710_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_10-Stack size: 16 
1710_10-Equals Mem:<< []>> 
1710_10-NonEquals Mem: << []>> 
1710_10-Equals Sto:<< []>> 
1710_10-NonEquals Sto: << []>> 
1710_10-Useless: []
1710_10-Constancy: [(1, 0)]
1710_10-ContextAliasing: []

.....
-----
Block: 1710_9
1710_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_9-Stack size: 11 
1710_9-Equals Mem:<< []>> 
1710_9-NonEquals Mem: << []>> 
1710_9-Equals Sto:<< []>> 
1710_9-NonEquals Sto: << []>> 
1710_9-Useless: []
1710_9-Constancy: []
1710_9-ContextAliasing: []

.....
-----
Block: 4594
4594Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
4594-Stack size: 12 
4594-Equals Mem:<< []>> 
4594-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
4594-Equals Sto:<< []>> 
4594-NonEquals Sto: << []>> 
4594-Useless: []
4594-Constancy: [(2, 0), (1, 0), (0, 0)]
4594-ContextAliasing: []

.....
-----
Block: 1710_8
1710_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_8-Stack size: 7 
1710_8-Equals Mem:<< []>> 
1710_8-NonEquals Mem: << []>> 
1710_8-Equals Sto:<< []>> 
1710_8-NonEquals Sto: << []>> 
1710_8-Useless: []
1710_8-Constancy: []
1710_8-ContextAliasing: []

.....
-----
Block: 1710_7
1710_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_7-Stack size: 12 
1710_7-Equals Mem:<< []>> 
1710_7-NonEquals Mem: << []>> 
1710_7-Equals Sto:<< []>> 
1710_7-NonEquals Sto: << []>> 
1710_7-Useless: []
1710_7-Constancy: [(1, 0)]
1710_7-ContextAliasing: []

.....
-----
Block: 1710_6
1710_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_6-Stack size: 15 
1710_6-Equals Mem:<< []>> 
1710_6-NonEquals Mem: << []>> 
1710_6-Equals Sto:<< []>> 
1710_6-NonEquals Sto: << []>> 
1710_6-Useless: []
1710_6-Constancy: [(9, 0)]
1710_6-ContextAliasing: []

.....
-----
Block: 1710_5
1710_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_5-Stack size: 13 
1710_5-Equals Mem:<< []>> 
1710_5-NonEquals Mem: << []>> 
1710_5-Equals Sto:<< []>> 
1710_5-NonEquals Sto: << []>> 
1710_5-Useless: []
1710_5-Constancy: [(7, 0), (2, 0), (1, 0)]
1710_5-ContextAliasing: []

.....
-----
Block: 1710_4
1710_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_4-Stack size: 17 
1710_4-Equals Mem:<< []>> 
1710_4-NonEquals Mem: << []>> 
1710_4-Equals Sto:<< []>> 
1710_4-NonEquals Sto: << []>> 
1710_4-Useless: []
1710_4-Constancy: [(11, 0)]
1710_4-ContextAliasing: []

.....
-----
Block: 1710_3
1710_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_3-Stack size: 22 
1710_3-Equals Mem:<< []>> 
1710_3-NonEquals Mem: << []>> 
1710_3-Equals Sto:<< []>> 
1710_3-NonEquals Sto: << []>> 
1710_3-Useless: []
1710_3-Constancy: [(16, 0), (1, 0)]
1710_3-ContextAliasing: []

.....
-----
Block: 1710_2
1710_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_2-Stack size: 19 
1710_2-Equals Mem:<< []>> 
1710_2-NonEquals Mem: << []>> 
1710_2-Equals Sto:<< []>> 
1710_2-NonEquals Sto: << []>> 
1710_2-Useless: []
1710_2-Constancy: [(13, 0), (1, 0)]
1710_2-ContextAliasing: []

.....
-----
Block: 1710_1
1710_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_1-Stack size: 15 
1710_1-Equals Mem:<< []>> 
1710_1-NonEquals Mem: << []>> 
1710_1-Equals Sto:<< []>> 
1710_1-NonEquals Sto: << []>> 
1710_1-Useless: []
1710_1-Constancy: [(9, 0), (1, 0)]
1710_1-ContextAliasing: []

.....
-----
Block: 1710_0
1710_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710_0-Stack size: 11 
1710_0-Equals Mem:<< []>> 
1710_0-NonEquals Mem: << []>> 
1710_0-Equals Sto:<< []>> 
1710_0-NonEquals Sto: << []>> 
1710_0-Useless: []
1710_0-Constancy: [(5, 0)]
1710_0-ContextAliasing: []

.....
-----
Block: 1363
1363Instr:<<['JUMPDEST', 'PUSH1 0x08', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x0581', 'PUSH2 0x057a', 'PUSH0', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'SWAP1', 'JUMP']>> 
1363-Stack size: 3 
1363-Equals Mem:<< []>> 
1363-NonEquals Mem: << []>> 
1363-Equals Sto:<< [<3,14>]>> 
1363-NonEquals Sto: << [<3,18>, <14,18>]>> 
1363-Useless: []
1363-Constancy: []
1363-ContextAliasing: []

.....
-----
Block: 1419
1419Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x08', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
1419-Stack size: 3 
1419-Equals Mem:<< []>> 
1419-NonEquals Mem: << []>> 
1419-Equals Sto:<< [<4,11>]>> 
1419-NonEquals Sto: << []>> 
1419-Useless: []
1419-Constancy: []
1419-ContextAliasing: []

.....
-----
Block: 1462
1462Instr:<<['JUMPDEST', 'PUSH2 0x2710', 'PUSH1 0x02', 'DUP2', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SSTORE', 'JUMP']>> 
1462-Stack size: 2 
1462-Equals Mem:<< []>> 
1462-NonEquals Mem: << []>> 
1462-Equals Sto:<< []>> 
1462-NonEquals Sto: << [<5,7>]>> 
1462-Useless: []
1462-Constancy: []
1462-ContextAliasing: []

.....
-----
Block: 1475
1475Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x05e7', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x02', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
1475-Stack size: 2 
1475-Equals Mem:<< []>> 
1475-NonEquals Mem: << []>> 
1475-Equals Sto:<< []>> 
1475-NonEquals Sto: << [<6,8>]>> 
1475-Useless: []
1475-Constancy: []
1475-ContextAliasing: []

.....
-----
Block: 2290
2290Instr:<<['PUSH2 0x090e', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x02', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2290-Stack size: 12 
2290-Equals Mem:<< []>> 
2290-NonEquals Mem: << []>> 
2290-Equals Sto:<< []>> 
2290-NonEquals Sto: << [<4,6>]>> 
2290-Useless: []
2290-Constancy: [(6, 0), (1, 0), (0, 0)]
2290-ContextAliasing: []

.....
-----
Block: 2414
2414Instr:<<['JUMPDEST', 'PUSH2 0x098b', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x01', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2414-Stack size: 12 
2414-Equals Mem:<< []>> 
2414-NonEquals Mem: << []>> 
2414-Equals Sto:<< []>> 
2414-NonEquals Sto: << [<5,7>]>> 
2414-Useless: []
2414-Constancy: [(6, 0), (1, 0), (0, 0)]
2414-ContextAliasing: []

.....
-----
Block: 3644
3644Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xf305d719', 'DUP3', 'ADDRESS', 'DUP6', 'PUSH0', 'DUP1', 'PUSH2 0x0e63', 'PUSH0', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'SWAP1', 'JUMP']>> 
3644-Stack size: 6 
3644-Equals Mem:<< []>> 
3644-NonEquals Mem: << []>> 
3644-Equals Sto:<< []>> 
3644-NonEquals Sto: << [<2,17>]>> 
3644-Useless: []
3644-Constancy: []
3644-ContextAliasing: []

.....
-----
Block: 2290_0
2290_0Instr:<<['PUSH2 0x090e', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x02', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2290_0-Stack size: 9 
2290_0-Equals Mem:<< []>> 
2290_0-NonEquals Mem: << []>> 
2290_0-Equals Sto:<< []>> 
2290_0-NonEquals Sto: << [<4,6>]>> 
2290_0-Useless: []
2290_0-Constancy: [(1, 0), (0, 0)]
2290_0-ContextAliasing: []

.....
-----
Block: 2414_0
2414_0Instr:<<['JUMPDEST', 'PUSH2 0x098b', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x01', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2414_0-Stack size: 9 
2414_0-Equals Mem:<< []>> 
2414_0-NonEquals Mem: << []>> 
2414_0-Equals Sto:<< []>> 
2414_0-NonEquals Sto: << [<5,7>]>> 
2414_0-Useless: []
2414_0-Constancy: [(1, 0), (0, 0)]
2414_0-ContextAliasing: []

.....
-----
Block: 2290_1
2290_1Instr:<<['PUSH2 0x090e', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x02', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2290_1-Stack size: 11 
2290_1-Equals Mem:<< []>> 
2290_1-NonEquals Mem: << []>> 
2290_1-Equals Sto:<< []>> 
2290_1-NonEquals Sto: << [<4,6>]>> 
2290_1-Useless: []
2290_1-Constancy: [(6, 0), (1, 0), (0, 0)]
2290_1-ContextAliasing: []

.....
-----
Block: 2414_1
2414_1Instr:<<['JUMPDEST', 'PUSH2 0x098b', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x01', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2414_1-Stack size: 11 
2414_1-Equals Mem:<< []>> 
2414_1-NonEquals Mem: << []>> 
2414_1-Equals Sto:<< []>> 
2414_1-NonEquals Sto: << [<5,7>]>> 
2414_1-Useless: []
2414_1-Constancy: [(6, 0), (1, 0), (0, 0)]
2414_1-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.20943138701841235s

*************************************************************
FILERES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_SafeMath;1;1;0;1;0;0;0.0022957039764150977
FILERES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods;269;884;47;229;183;27;0.5760755140217952


Aux path: /tmp/0x00//ethir_83aca61c6c9b4abd94447d0cd39920f5
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 1628
1628Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
1628-Stack size: 3 
1628-Equals Mem:<< []>> 
1628-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1628-Equals Sto:<< []>> 
1628-NonEquals Sto: << []>> 
1628-Useless: []
1628-Constancy: []
1628-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '38', 'mstore'), 2), (('s(9)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(11)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(2)', '+'), 2), (('s(2)', '4', '+'), 2), (('s(2)', '36', '+'), 2), (('s(2)', '68', '+'), 2), (('s(2)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(2)', '+'), 2), (('s(2)', '4', '+'), 2), (('s(2)', '36', '+'), 2), (('s(2)', '68', '+'), 2), (('s(2)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x26 PUSH1 0x24 PUSH1 0x20 DUP4 PUSH1 0x4 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x84 PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x64 ADD MSTORE ADD

Optimized code stored in /tmp/0x00/degods_1628_optimized.txt
Optimality results stored in /tmp/0x00/degods_1628_statistics.csv

Estimated initial gas: 93
Estimated gas optimized: 81

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 131

Initial number of instructions: 31
Final number of instructions: 27

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1628;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;1628;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x26 PUSH1 0x24 PUSH1 0x20 DUP4 PUSH1 0x4 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x84 PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x64 ADD MSTORE ADD;93;82;31;81;131;27;12;-49;4;True;False;False;False;2.132863142993301;2;4;0;0

Block: 1054
1054Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1054-Stack size: 4 
1054-Equals Mem:<< [<12,27>, <17,31>]>> 
1054-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
1054-Equals Sto:<< []>> 
1054-NonEquals Sto: << []>> 
1054-Useless: []
1054-Constancy: []
1054-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(11)', 'sload0'), 1)
sload0
[(('s(11)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x05 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x5 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/degods_1054_optimized.txt
Optimality results stored in /tmp/0x00/degods_1054_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2211

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1054;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;1054;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x05 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x5 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP;2261;42;36;2211;55;30;50;-13;6;True;False;False;False;2.123406859987881;4;2;2100;2100

Block: 486
486Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
486-Stack size: 2 
486-Equals Mem:<< []>> 
486-NonEquals Mem: << [<5,2>]>> 
486-Equals Sto:<< []>> 
486-NonEquals Sto: << []>> 
486-Useless: []
486-Constancy: []
486-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP

Optimized code stored in /tmp/0x00/degods_486_optimized.txt
Optimality results stored in /tmp/0x00/degods_486_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_486;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;486;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.02101638203021139;0;0;0;0

Block: 809
809Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
809-Stack size: 2 
809-Equals Mem:<< []>> 
809-NonEquals Mem: << [<12,2>]>> 
809-Equals Sto:<< []>> 
809-NonEquals Sto: << []>> 
809-Useless: []
809-Constancy: []
809-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19e JUMP

Optimized code stored in /tmp/0x00/degods_809_optimized.txt
Optimality results stored in /tmp/0x00/degods_809_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 39

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 36

Initial number of instructions: 17
Final number of instructions: 12

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_809;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;809;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19e JUMP;54;24;17;39;36;12;15;-12;5;True;False;False;False;0.09270324296085164;2;0;0;0

Block: 454
454Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
454-Stack size: 2 
454-Equals Mem:<< []>> 
454-NonEquals Mem: << [<7,2>]>> 
454-Equals Sto:<< []>> 
454-NonEquals Sto: << []>> 
454-Useless: []
454-Constancy: []
454-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP

Optimized code stored in /tmp/0x00/degods_454_optimized.txt
Optimality results stored in /tmp/0x00/degods_454_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_454;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;454;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x019e JUMP;39;16;12;39;16;12;0;0;0;True;False;False;False;0.05071438499726355;0;0;0;0

Block: 1743
1743Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1743-Stack size: 9 
1743-Equals Mem:<< []>> 
1743-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1743-Equals Sto:<< []>> 
1743-NonEquals Sto: << []>> 
1743-Useless: []
1743-Constancy: []
1743-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_1743_optimized.txt
Optimality results stored in /tmp/0x00/degods_1743_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1743;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;1743;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1177534270100296;2;4;0;0

Block: 1841
1841Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
1841-Stack size: 9 
1841-Equals Mem:<< []>> 
1841-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1841-Equals Sto:<< []>> 
1841-NonEquals Sto: << []>> 
1841-Useless: []
1841-Constancy: []
1841-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_1841_optimized.txt
Optimality results stored in /tmp/0x00/degods_1841_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1841;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;1841;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.148083209991455;2;4;0;0

Block: 872
872Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x06', 'DUP2', 'MSTORE', 'PUSH6 0x4445474f4453', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x0191', 'JUMP']>> 
872-Stack size: 2 
872-Equals Mem:<< [<10,4>]>> 
872-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
872-Equals Sto:<< []>> 
872-NonEquals Sto: << []>> 
872-Useless: []
872-Constancy: []
872-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('208', '75064339809363', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(3)', 'mstore'), 2), (('s(2)', '6', 'mstore'), 2), (('s(6)', '30879678312153611816083045787677541937502537732429884265691190473853845372928', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(2)', '+'), 2), (('s(2)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(2)', '+'), 2), (('s(2)', '32', '+'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_872 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4241
4241Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
4241-Stack size: 4 
4241-Equals Mem:<< []>> 
4241-NonEquals Mem: << [<12,7>, <5,7>]>> 
4241-Equals Sto:<< []>> 
4241-NonEquals Sto: << []>> 
4241-Useless: []
4241-Constancy: []
4241-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
{}
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/degods_4241_optimized.txt
Optimality results stored in /tmp/0x00/degods_4241_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_4241;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;4241;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.1480479320161976;0;1;0;0

Block: 4265
4265Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x10a0', 'JUMP']>> 
4265-Stack size: 8 
4265-Equals Mem:<< []>> 
4265-NonEquals Mem: << [<11,5>]>> 
4265-Equals Sto:<< []>> 
4265-NonEquals Sto: << []>> 
4265-Useless: []
4265-Constancy: [(2, 32), (3, 0)]
4265-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
{}
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10a0 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10a0 JUMP

Optimized code stored in /tmp/0x00/degods_4265_optimized.txt
Optimality results stored in /tmp/0x00/degods_4265_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_4265;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;4265;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10a0 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10a0 JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6734711030148901;0;0;0;0

Block: 698
698Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
698-Stack size: 3 
698-Equals Mem:<< []>> 
698-NonEquals Mem: << [<10,13>]>> 
698-Equals Sto:<< []>> 
698-NonEquals Sto: << []>> 
698-Useless: []
698-Constancy: []
698-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{16: ((('s(2)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{16: ((('s(2)', 'sload0'), 1), 1)}
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_698 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3549
3549Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3549-Stack size: 3 
3549-Equals Mem:<< []>> 
3549-NonEquals Mem: << [<17,1>, <6,1>, <13,1>, <22,1>]>> 
3549-Equals Sto:<< []>> 
3549-NonEquals Sto: << []>> 
3549-Useless: []
3549-Constancy: []
3549-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,17>, <1,6>, <1,13>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,17>, <1,6>, <1,13>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x6ae JUMP

Optimized code stored in /tmp/0x00/degods_3549_optimized.txt
Optimality results stored in /tmp/0x00/degods_3549_statistics.csv

Estimated initial gas: 86
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 27
Final number of instructions: 24

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3549;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;3549;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x06ae JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x6ae JUMP;86;71;27;77;97;24;9;-26;3;True;False;False;False;2.201567044015974;1;3;0;0

Block: 3785
3785Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0eee', 'SWAP2', 'SWAP1', 'PUSH2 0x11e0', 'JUMP']>> 
3785-Stack size: 11 
3785-Equals Mem:<< [<19,7>]>> 
3785-NonEquals Mem: << []>> 
3785-Equals Sto:<< []>> 
3785-NonEquals Sto: << []>> 
3785-Useless: []
3785-Constancy: []
3785-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3785 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1331
1331Instr:<<['JUMPDEST', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'CALLER', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'KECCAK256', 'SSTORE', 'PUSH2 0x2710', 'PUSH1 0x0c', 'SSTORE', 'JUMP']>> 
1331-Stack size: 3 
1331-Equals Mem:<< []>> 
1331-NonEquals Mem: << [<6,3>, <6,11>, <11,3>, <3,12>]>> 
1331-Equals Sto:<< []>> 
1331-NonEquals Sto: << [<13,16>]>> 
1331-Useless: []
1331-Constancy: []
1331-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>, <5,10>, <2,10>, <2,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>, <5,10>, <2,10>, <2,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<12,15>]}
{12: ((('s(6)', 's(0)', 'sstore'), 2), 1), 15: ((('12', '10000', 'sstore'), 2), 2)}
Storage order: [(('s(1)', '64', 'keccak2560'), 2), (('s(6)', 's(0)', 'sstore'), 2), (('12', '10000', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(1)', 's(2)', 'mstore'), 2), (('s(3)', '4', 'mstore'), 2), (('s(1)', '64', 'keccak2560'), 2)]
Memory dep: [(2, 3), (1, 3)]
Memory dep simplified: [(2, 3), (1, 3)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('caller', 'caller'), 0), (('s(1)', '32', '+'), 2), (('s(1)', '64', 'keccak2560'), 2)]
{12: ((('s(6)', 's(0)', 'sstore'), 2), 1), 15: ((('12', '10000', 'sstore'), 2), 2)}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('caller', 'caller'), 0), (('s(1)', '32', '+'), 2), (('s(1)', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 DUP3 ADD MSTORE KECCAK256 SSTORE PUSH2 0x2710 PUSH1 0x0c SSTORE JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 DUP3 ADD MSTORE KECCAK256 SSTORE PUSH2 0x2710 PUSH1 0x0c SSTORE JUMP

Optimized code stored in /tmp/0x00/degods_1331_optimized.txt
Optimality results stored in /tmp/0x00/degods_1331_statistics.csv

Estimated initial gas: 10077
Estimated gas optimized: 10077

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 24

Initial number of instructions: 18
Final number of instructions: 18

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1331;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;1331;2;False;True;True;JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 DUP3 ADD MSTORE KECCAK256 SSTORE PUSH2 0x2710 PUSH1 0x0c SSTORE JUMP;JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 DUP3 ADD MSTORE KECCAK256 SSTORE PUSH2 0x2710 PUSH1 0x0c SSTORE JUMP;10077;24;18;10077;24;18;0;0;0;True;True;False;False;0.44899800600251183;0;2;10000;10000

Block: 1252
1252Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0473', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x04d5', 'SWAP1', 'DUP7', 'PUSH2 0x0cb1', 'JUMP']>> 
1252-Stack size: 4 
1252-Equals Mem:<< [<5,23>, <10,26>]>> 
1252-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
1252-Equals Sto:<< []>> 
1252-NonEquals Sto: << []>> 
1252-Useless: []
1252-Constancy: []
1252-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>]}
{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{28: ((('s(10)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(17)', 'sload0'), 1)
sload0
[(('s(17)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{28: ((('s(10)', 'sload0'), 1), 2)}
(('s(10)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x05 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0473 SWAP2 DUP6 SWAP1 PUSH2 0x04d5 SWAP1 DUP7 PUSH2 0x0cb1 JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x05 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0473 SWAP2 DUP6 SWAP1 PUSH2 0x04d5 SWAP1 DUP7 PUSH2 0x0cb1 JUMP

Optimized code stored in /tmp/0x00/degods_1252_optimized.txt
Optimality results stored in /tmp/0x00/degods_1252_statistics.csv

Estimated initial gas: 2275
Estimated gas optimized: 2275

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1252;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;1252;2;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x05 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0473 SWAP2 DUP6 SWAP1 PUSH2 0x04d5 SWAP1 DUP7 PUSH2 0x0cb1 JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x05 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0473 SWAP2 DUP6 SWAP1 PUSH2 0x04d5 SWAP1 DUP7 PUSH2 0x0cb1 JUMP;2275;53;41;2275;53;41;0;0;0;True;False;False;False;2.1724102230509743;4;2;2100;2100

Block: 542
542Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x019e', 'JUMP']>> 
542-Stack size: 2 
542-Equals Mem:<< []>> 
542-NonEquals Mem: << [<6,3>]>> 
542-Equals Sto:<< []>> 
542-NonEquals Sto: << []>> 
542-Useless: []
542-Constancy: []
542-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '18', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_542 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3945
3945Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3945-Stack size: 11 
3945-Equals Mem:<< []>> 
3945-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3945-Equals Sto:<< []>> 
3945-NonEquals Sto: << []>> 
3945-Useless: []
3945-Constancy: []
3945-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_3945_optimized.txt
Optimality results stored in /tmp/0x00/degods_3945_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3945;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;3945;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.120817493996583;2;4;0;0

Block: 4045
4045Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4045-Stack size: 11 
4045-Equals Mem:<< []>> 
4045-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4045-Equals Sto:<< []>> 
4045-NonEquals Sto: << []>> 
4045-Useless: []
4045-Constancy: []
4045-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_4045_optimized.txt
Optimality results stored in /tmp/0x00/degods_4045_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_4045;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;4045;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.120907033968251;2;4;0;0

Block: 4136
4136Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
4136-Stack size: 11 
4136-Equals Mem:<< []>> 
4136-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4136-Equals Sto:<< []>> 
4136-NonEquals Sto: << []>> 
4136-Useless: []
4136-Constancy: []
4136-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '41', 'mstore'), 2), (('s(10)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(12)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_4136_optimized.txt
Optimality results stored in /tmp/0x00/degods_4136_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 89
Estimated size optimized in bytes: 89

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_4136;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;4136;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;89;33;104;89;33;0;0;0;True;False;False;False;2.129570616001729;2;4;0;0

Block: 2101
2101Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0874', 'JUMPI']>> 
2101-Stack size: 9 
2101-Equals Mem:<< []>> 
2101-NonEquals Mem: << [<10,13>]>> 
2101-Equals Sto:<< []>> 
2101-NonEquals Sto: << []>> 
2101-Useless: []
2101-Constancy: [(1, 0), (0, 0)]
2101-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(9)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '15', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(9)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('255', 's(10)', 'and'), 2), (('s(8)', 'iszero'), 1), (('s(11)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(9)', 'sload0'), 1), 1)}
(('s(9)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('255', 's(10)', 'and'), 2), (('s(8)', 'iszero'), 1), (('s(11)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2101 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2135
2135Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0f', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2135-Stack size: 10 
2135-Equals Mem:<< []>> 
2135-NonEquals Mem: << [<11,14>]>> 
2135-Equals Sto:<< []>> 
2135-NonEquals Sto: << []>> 
2135-Useless: []
2135-Constancy: [(1, 0), (2, 0)]
2135-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '15', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2135 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2219
2219Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2219-Stack size: 10 
2219-Equals Mem:<< []>> 
2219-NonEquals Mem: << [<11,14>]>> 
2219-Equals Sto:<< []>> 
2219-NonEquals Sto: << []>> 
2219-Useless: []
2219-Constancy: [(1, 0), (2, 0)]
2219-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '11', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2219 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2255
2255Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
2255-Stack size: 10 
2255-Equals Mem:<< []>> 
2255-NonEquals Mem: << [<11,14>]>> 
2255-Equals Sto:<< []>> 
2255-NonEquals Sto: << []>> 
2255-Useless: []
2255-Constancy: [(1, 0), (2, 0)]
2255-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '11', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2255 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2326
2326Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x28', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH8 0x3c20b6b7bab73a17', 'PUSH1 0xc1', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2326-Stack size: 9 
2326-Equals Mem:<< []>> 
2326-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2326-Equals Sto:<< []>> 
2326-NonEquals Sto: << []>> 
2326-Useless: []
2326-Constancy: [(1, 0), (0, 0)]
2326-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('193', '4332663741758257687', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '40', 'mstore'), 2), (('s(10)', '38196372293521921433411288587964294122151274768672549037638891791258891679828', 'mstore'), 2), (('s(12)', '54393142184475418005502999037273358260261206472529226214336503736745385263104', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3c20b6b7bab73a17 PUSH1 0xc1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3c20b6b7bab73a17 PUSH1 0xc1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_2326_optimized.txt
Optimality results stored in /tmp/0x00/degods_2326_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 88
Estimated size optimized in bytes: 88

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2326;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;2326;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3c20b6b7bab73a17 PUSH1 0xc1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206578636565647320746865206d617854 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3c20b6b7bab73a17 PUSH1 0xc1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;88;33;104;88;33;0;0;0;True;False;False;False;2.129518485045992;2;4;0;0

Block: 2443
2443Instr:<<['JUMPDEST', 'PUSH2 0x09b3', 'DUP5', 'PUSH2 0x09ad', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2443-Stack size: 10 
2443-Equals Mem:<< []>> 
2443-NonEquals Mem: << [<14,17>]>> 
2443-Equals Sto:<< []>> 
2443-NonEquals Sto: << []>> 
2443-Useless: []
2443-Constancy: [(1, 0), (2, 0)]
2443-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<13,16>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<13,16>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(9)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(11)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(9)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(9)', 'sload0'), 1), 1)}
(('s(9)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(9)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2443 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2490
2490Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x1d5b9d', 'PUSH1 0xea', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
2490-Stack size: 9 
2490-Equals Mem:<< []>> 
2490-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2490-Equals Sto:<< []>> 
2490-NonEquals Sto: << []>> 
2490-Useless: []
2490-Constancy: [(1, 0), (0, 0)]
2490-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('234', '1923997', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31422294206539596639220597408109497926737113722908481604176233103529926028655', 'mstore'), 2), (('s(12)', '53115757063944017421332431899013640557758305236515628883892124476068696424448', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1d5b9d PUSH1 0xea SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1d5b9d PUSH1 0xea SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_2490_optimized.txt
Optimality results stored in /tmp/0x00/degods_2490_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2490;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;2490;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1d5b9d PUSH1 0xea SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206d6178696d756d2077616c6c657420746f6b656e20616d6f PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1d5b9d PUSH1 0xea SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1226785049657337;2;4;0;0

Block: 2672
2672Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2672-Stack size: 10 
2672-Equals Mem:<< []>> 
2672-NonEquals Mem: << [<5,8>]>> 
2672-Equals Sto:<< []>> 
2672-NonEquals Sto: << []>> 
2672-Useless: []
2672-Constancy: [(1, 0)]
2672-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(3)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(3)', 's(4)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '9', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(3)', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2672 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4649
4649Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4649-Stack size: 11 
4649-Equals Mem:<< []>> 
4649-NonEquals Mem: << [<4,7>]>> 
4649-Equals Sto:<< []>> 
4649-NonEquals Sto: << []>> 
4649-Useless: []
4649-Constancy: [(4, 0), (0, 0)]
4649-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_4649 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2796
2796Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x09', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE', 'SWAP1', 'POP']>> 
2796-Stack size: 10 
2796-Equals Mem:<< []>> 
2796-NonEquals Mem: << [<5,8>]>> 
2796-Equals Sto:<< []>> 
2796-NonEquals Sto: << []>> 
2796-Useless: []
2796-Constancy: []
2796-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(3)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(3)', 's(4)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '9', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(3)', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2796 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3282
3282Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x73', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x06ae', 'JUMP']>> 
3282-Stack size: 6 
3282-Equals Mem:<< []>> 
3282-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3282-Equals Sto:<< []>> 
3282-NonEquals Sto: << []>> 
3282-Useless: []
3282-Constancy: []
3282-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '115', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '33', 'mstore'), 2), (('s(10)', '31354931781638678494316026001340845558170976982936511063842609339963588896115', 'mstore'), 2), (('s(12)', '52015977587075634662932278421871521105961125924018222127100086566054726205440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP

Optimized code stored in /tmp/0x00/degods_3282_optimized.txt
Optimality results stored in /tmp/0x00/degods_3282_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 81

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3282;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;3282;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x06ae JUMP;104;81;33;104;81;33;0;0;0;True;False;False;False;2.1240929850027896;2;4;0;0

Block: 3423
3423Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0d84', 'SWAP1', 'DUP3', 'PUSH2 0x1086', 'JUMP']>> 
3423-Stack size: 7 
3423-Equals Mem:<< []>> 
3423-NonEquals Mem: << [<11,14>]>> 
3423-Equals Sto:<< []>> 
3423-NonEquals Sto: << [<18,20>]>> 
3423-Useless: []
3423-Constancy: []
3423-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<17,19>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(10)', 's(2)', 'sstore'), 2), 1), 19: ((('6', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(10)', 's(2)', 'sstore'), 2), (('6', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('6', 'sload0'), 1)
sload0
[(('6', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(10)', 's(2)', 'sstore'), 2), 1), 19: ((('6', 'sload0'), 1), 2)}
(('6', 'sload0'), 1)
sload0
[(('6', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x06 SLOAD PUSH2 0x0d84 SWAP1 DUP3 PUSH2 0x1086 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x4 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xd84 PUSH1 0x6 SLOAD DUP3 PUSH2 0x1086 JUMP

Optimized code stored in /tmp/0x00/degods_3423_optimized.txt
Optimality results stored in /tmp/0x00/degods_3423_statistics.csv

Estimated initial gas: 7201
Estimated gas optimized: 7181

Estimated initial size in bytes: 37
Estimated size optimized in bytes: 49

Initial number of instructions: 26
Final number of instructions: 19

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3423;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;3423;2;False;True;True;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x06 SLOAD PUSH2 0x0d84 SWAP1 DUP3 PUSH2 0x1086 JUMP;JUMPDEST PUSH1 0x4 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xd84 PUSH1 0x6 SLOAD DUP3 PUSH2 0x1086 JUMP;7201;37;26;7181;49;19;20;-12;7;True;True;False;False;1.1713339289999567;2;2;7100;7100

Block: 2858
2858Instr:<<['PUSH1 0x10', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x0b4d', 'SWAP1', 'DUP4', 'PUSH2 0x0cb1', 'JUMP']>> 
2858-Stack size: 10 
2858-Equals Mem:<< []>> 
2858-NonEquals Mem: << [<11,14>]>> 
2858-Equals Sto:<< []>> 
2858-NonEquals Sto: << [<1,18>]>> 
2858-Useless: []
2858-Constancy: []
2858-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,18>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('16', 'sload0'), 1), 0), 18: ((('s(6)', 'sload1'), 1), 2)}
Storage order: [(('16', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(6)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('16', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(11)', 'and'), 2)]
(('s(6)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(11)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('16', 'sload0'), 1), 0), 18: ((('s(6)', 'sload1'), 1), 2)}
(('16', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(11)', 'and'), 2)]
(('s(6)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload1'), 1), (('16', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(11)', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2858 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3061
3061Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP9', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP8', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x0c23', 'SWAP1', 'DUP6', 'PUSH2 0x0cb1', 'JUMP']>> 
3061-Stack size: 11 
3061-Equals Mem:<< [<12,28>]>> 
3061-NonEquals Mem: << [<12,15>, <15,28>]>> 
3061-Equals Sto:<< [<23,30>]>> 
3061-NonEquals Sto: << []>> 
3061-Useless: []
3061-Constancy: []
3061-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>]}
{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>], 'storage_deps_eqs': [<22,29>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{22: ((('s(15)', 's(6)', 'sstore'), 2), 1), 29: ((('s(10)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(15)', 's(6)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{22: ((('s(15)', 's(6)', 'sstore'), 2), 1), 29: ((('s(10)', 'sload0'), 1), 3)}
(('s(10)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x0c23 SWAP1 DUP6 PUSH2 0x0cb1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x0c23 SWAP1 DUP6 PUSH2 0x0cb1 JUMP

Optimized code stored in /tmp/0x00/degods_3061_optimized.txt
Optimality results stored in /tmp/0x00/degods_3061_statistics.csv

Estimated initial gas: 5258
Estimated gas optimized: 5258

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 46

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3061;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;3061;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x0c23 SWAP1 DUP6 PUSH2 0x0cb1 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x0c23 SWAP1 DUP6 PUSH2 0x0cb1 JUMP;5258;46;36;5258;46;36;0;0;0;True;True;False;False;2.221978935995139;4;2;5100;5100

Block: 4537
4537Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
4537-Stack size: 14 
4537-Equals Mem:<< []>> 
4537-NonEquals Mem: << [<5,8>]>> 
4537-Equals Sto:<< []>> 
4537-NonEquals Sto: << []>> 
4537-Useless: []
4537-Constancy: [(5, 0)]
4537-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_4537 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3107
3107Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP8', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'DUP2', 'SWAP1', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP2', 'MLOAD', 'SWAP1', 'DUP9', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH2 0x0c76', 'SWAP1', 'DUP9', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
3107-Stack size: 11 
3107-Equals Mem:<< []>> 
3107-NonEquals Mem: << [<12,26>, <15,26>, <20,26>, <12,37>, <15,37>, <37,20>, <12,15>, <37,26>]>> 
3107-Equals Sto:<< []>> 
3107-NonEquals Sto: << []>> 
3107-Useless: []
3107-Constancy: []
3107-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <14,25>, <19,25>, <11,36>, <14,36>, <19,36>, <11,14>, <25,36>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <14,25>, <19,25>, <11,36>, <14,36>, <19,36>, <11,14>, <25,36>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{23: ((('s(22)', 's(6)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(22)', 's(6)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(16)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(12)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(12)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{23: ((('s(22)', 's(6)', 'sstore'), 2), 1)}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(12)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP9 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0c76 SWAP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP9 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0c76 SWAP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized code stored in /tmp/0x00/degods_3107_optimized.txt
Optimality results stored in /tmp/0x00/degods_3107_statistics.csv

Estimated initial gas: 5152
Estimated gas optimized: 5152

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 42
Final number of instructions: 42

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3107;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;3107;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP9 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0c76 SWAP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP9 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH2 0x0c76 SWAP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;5152;83;42;5152;83;42;0;0;0;True;False;False;False;2.3084331629797816;2;2;5000;5000

Block: 3217
3217Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x06ae', 'SWAP2', 'SWAP1', 'PUSH2 0x1091', 'JUMP']>> 
3217-Stack size: 12 
3217-Equals Mem:<< []>> 
3217-NonEquals Mem: << [<6,1>]>> 
3217-Equals Sto:<< []>> 
3217-NonEquals Sto: << []>> 
3217-Useless: []
3217-Constancy: [(1, 0)]
3217-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x06ae SWAP2 SWAP1 PUSH2 0x1091 JUMP

Optimized sequence (basic block per line):
PUSH2 0x6ae SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1091 JUMP

Optimized code stored in /tmp/0x00/degods_3217_optimized.txt
Optimality results stored in /tmp/0x00/degods_3217_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3217;0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol;degods;3217;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x06ae SWAP2 SWAP1 PUSH2 0x1091 JUMP;PUSH2 0x6ae SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x1091 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07154815399553627;1;0;0;0

Block: 370
370Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x06', 'DUP2', 'MSTORE', 'PUSH6 0x4465476f6473', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
370-Stack size: 2 
370-Equals Mem:<< [<10,4>]>> 
370-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
370-Equals Sto:<< []>> 
370-NonEquals Sto: << []>> 
370-Useless: []
370-Constancy: []
370-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('208', '75201780868211', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(2)', 'mstore'), 2), (('s(1)', '6', 'mstore'), 2), (('s(5)', '30936218284327970833302584359716414753975111411763030533392041466655477334016', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(1)', '+'), 2), (('s(1)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(1)', '+'), 2), (('s(1)', '32', '+'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_370 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 414
414Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
414-Stack size: 2 
414-Equals Mem:<< []>> 
414-NonEquals Mem: << []>> 
414-Equals Sto:<< []>> 
414-NonEquals Sto: << []>> 
414-Useless: []
414-Constancy: []
414-ContextAliasing: []

Block: 1710
1710Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1710-Stack size: 4 
1710-Equals Mem:<< []>> 
1710-NonEquals Mem: << []>> 
1710-Equals Sto:<< []>> 
1710-NonEquals Sto: << []>> 
1710-Useless: []
1710-Constancy: []
1710-ContextAliasing: []

Block: 4594
4594Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
4594-Stack size: 12 
4594-Equals Mem:<< []>> 
4594-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
4594-Equals Sto:<< []>> 
4594-NonEquals Sto: << []>> 
4594-Useless: []
4594-Constancy: [(2, 0), (1, 0), (0, 0)]
4594-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,7>, <1,13>, <7,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,7>, <1,13>, <7,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(8)', 'mload1'), 1), (('s(6)', 'mload2'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_4594 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1363
1363Instr:<<['JUMPDEST', 'PUSH1 0x08', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x0581', 'PUSH2 0x057a', 'PUSH0', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'SWAP1', 'JUMP']>> 
1363-Stack size: 3 
1363-Equals Mem:<< []>> 
1363-NonEquals Mem: << []>> 
1363-Equals Sto:<< [<3,14>]>> 
1363-NonEquals Sto: << [<3,18>, <14,18>]>> 
1363-Useless: []
1363-Constancy: []
1363-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,13>], 'storage_deps_noneqs': [<2,17>, <13,17>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('8', 'sload0'), 1), 0), 13: ((('8', 's(7)', 'sstore'), 2), 1), 17: ((('0', 'sload1'), 1), 2)}
Storage order: [(('8', 'sload0'), 1), (('8', 's(7)', 'sstore'), 2), (('0', 'sload1'), 1)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('8', 'sload0'), 1)
sload0
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(6)', 'and'), 2), (('8', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(11)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(9)', 'or'), 2)]
(('0', 'sload1'), 1)
sload1
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(6)', 'and'), 2), (('8', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(11)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(9)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('8', 'sload0'), 1), 0), 13: ((('8', 's(7)', 'sstore'), 2), 1), 17: ((('0', 'sload1'), 1), 2)}
(('8', 'sload0'), 1)
sload0
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(6)', 'and'), 2), (('8', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(11)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(9)', 'or'), 2)]
(('0', 'sload1'), 1)
sload1
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(6)', 'and'), 2), (('8', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(11)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(9)', 'or'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1363 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1419
1419Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x08', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
1419-Stack size: 3 
1419-Equals Mem:<< []>> 
1419-NonEquals Mem: << []>> 
1419-Equals Sto:<< [<4,11>]>> 
1419-NonEquals Sto: << []>> 
1419-Useless: []
1419-Constancy: []
1419-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,10>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('8', 'sload0'), 1), 0), 10: ((('8', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('8', 'sload0'), 1), (('8', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('8', 'sload0'), 1)
sload0
[(('8', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(3)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('8', 'sload0'), 1), 0), 10: ((('8', 's(1)', 'sstore'), 2), 1)}
(('8', 'sload0'), 1)
sload0
[(('8', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(3)', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1419 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1462
1462Instr:<<['JUMPDEST', 'PUSH2 0x2710', 'PUSH1 0x02', 'DUP2', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SSTORE', 'JUMP']>> 
1462-Stack size: 2 
1462-Equals Mem:<< []>> 
1462-NonEquals Mem: << []>> 
1462-Equals Sto:<< []>> 
1462-NonEquals Sto: << [<5,7>]>> 
1462-Useless: []
1462-Constancy: []
1462-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,6>]}
{4: ((('2', '10000', 'sstore'), 2), 0), 6: ((('1', '10000', 'sstore'), 2), 1)}
Storage order: [(('2', '10000', 'sstore'), 2), (('1', '10000', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{4: ((('2', '10000', 'sstore'), 2), 0), 6: ((('1', '10000', 'sstore'), 2), 1)}
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1462 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1475
1475Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x05e7', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x02', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
1475-Stack size: 2 
1475-Equals Mem:<< []>> 
1475-NonEquals Mem: << []>> 
1475-Equals Sto:<< []>> 
1475-NonEquals Sto: << [<6,8>]>> 
1475-Useless: []
1475-Constancy: []
1475-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<5,7>]}
[RULE]: Evaluate expression ('4294967295', '3908', 'and')
{5: ((('2', 'sload0'), 1), 0), 7: ((('6', 'sload1'), 1), 1)}
Storage order: [(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('2', 'sload0'), 1)
sload0
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
(('6', 'sload1'), 1)
sload1
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_aced4bc6369e4b77a188bd2415d26784/jsons/isolated_block_0_0_input.json --- (8, 7)
{5: ((('2', 'sload0'), 1), 0), 7: ((('6', 'sload1'), 1), 1)}
(('2', 'sload0'), 1)
sload0
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
(('6', 'sload1'), 1)
sload1
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_1475 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2290
2290Instr:<<['PUSH2 0x090e', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x02', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2290-Stack size: 9 
2290-Equals Mem:<< []>> 
2290-NonEquals Mem: << []>> 
2290-Equals Sto:<< []>> 
2290-NonEquals Sto: << [<4,6>]>> 
2290-Useless: []
2290-Constancy: [(1, 0), (0, 0)]
2290-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,6>]}
[RULE]: Evaluate expression ('4294967295', '3908', 'and')
{4: ((('2', 'sload0'), 1), 0), 6: ((('6', 'sload1'), 1), 1)}
Storage order: [(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('2', 'sload0'), 1)
sload0
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
(('6', 'sload1'), 1)
sload1
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_aced4bc6369e4b77a188bd2415d26784/jsons/isolated_block_0_0_input.json --- (7, 6)
{4: ((('2', 'sload0'), 1), 0), 6: ((('6', 'sload1'), 1), 1)}
(('2', 'sload0'), 1)
sload0
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
(('6', 'sload1'), 1)
sload1
[(('2', 'sload0'), 1), (('6', 'sload1'), 1)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2290 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2414
2414Instr:<<['JUMPDEST', 'PUSH2 0x098b', 'PUSH2 0x2710', 'PUSH2 0x05e1', 'PUSH1 0x01', 'SLOAD', 'PUSH1 0x06', 'SLOAD', 'PUSH2 0x0f44', 'SWAP1', 'SWAP2', 'SWAP1', 'PUSH4 0xffffffff', 'AND', 'JUMP']>> 
2414-Stack size: 9 
2414-Equals Mem:<< []>> 
2414-NonEquals Mem: << []>> 
2414-Equals Sto:<< []>> 
2414-NonEquals Sto: << [<5,7>]>> 
2414-Useless: []
2414-Constancy: [(1, 0), (0, 0)]
2414-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,6>]}
[RULE]: Evaluate expression ('4294967295', '3908', 'and')
{4: ((('1', 'sload0'), 1), 0), 6: ((('6', 'sload1'), 1), 1)}
Storage order: [(('1', 'sload0'), 1), (('6', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('1', 'sload0'), 1)
sload0
[(('1', 'sload0'), 1), (('6', 'sload1'), 1)]
(('6', 'sload1'), 1)
sload1
[(('1', 'sload0'), 1), (('6', 'sload1'), 1)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_aced4bc6369e4b77a188bd2415d26784/jsons/isolated_block_0_0_input.json --- (7, 6)
{4: ((('1', 'sload0'), 1), 0), 6: ((('6', 'sload1'), 1), 1)}
(('1', 'sload0'), 1)
sload0
[(('1', 'sload0'), 1), (('6', 'sload1'), 1)]
(('6', 'sload1'), 1)
sload1
[(('1', 'sload0'), 1), (('6', 'sload1'), 1)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_2414 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3644
3644Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xf305d719', 'DUP3', 'ADDRESS', 'DUP6', 'PUSH0', 'DUP1', 'PUSH2 0x0e63', 'PUSH0', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'SWAP1', 'JUMP']>> 
3644-Stack size: 6 
3644-Equals Mem:<< []>> 
3644-NonEquals Mem: << []>> 
3644-Equals Sto:<< []>> 
3644-NonEquals Sto: << [<2,17>]>> 
3644-Useless: []
3644-Constancy: []
3644-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,16>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('8', 'sload0'), 1), 0), 16: ((('0', 'sload1'), 1), 1)}
Storage order: [(('8', 'sload0'), 1), (('0', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('8', 'sload0'), 1)
sload0
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(14)', 'and'), 2), (('address', 'address'), 0), (('8', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(19)', 'and'), 2)]
(('0', 'sload1'), 1)
sload1
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(14)', 'and'), 2), (('address', 'address'), 0), (('8', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(19)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_aced4bc6369e4b77a188bd2415d26784/jsons/isolated_block_0_0_input.json --- (14, 12)
{1: ((('8', 'sload0'), 1), 0), 16: ((('0', 'sload1'), 1), 1)}
(('8', 'sload0'), 1)
sload0
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(14)', 'and'), 2), (('address', 'address'), 0), (('8', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(19)', 'and'), 2)]
(('0', 'sload1'), 1)
sload1
[(('0', 'sload1'), 1), (('1461501637330902918203684832716283019655932542975', 's(14)', 'and'), 2), (('address', 'address'), 0), (('8', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(19)', 'and'), 2)]
BLOCK 0x0028050854b72fbf22a066bf6bb3eb2f48e44532.sol_degods_3644 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
