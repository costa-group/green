incomplete push instruction at 5713
incomplete push instruction at 285
incomplete push instruction at 43
Green Main
*************************************************************
Compilation time: 1.0111119549837895s
*************************************************************
File: IFYKYK
Build CFG: 0.26411384402308613s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis IFYKYK
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> mem40 3110_6:1 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--openTrading()
MEMRES: NOT Found read (potential optimization) -> <slot19,0> 3870_0:3 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot19,32> 3870_0:9 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot22,0> 4565_0:3 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot22,32> 4565_0:5 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot57,0> 3870:3 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot57,32> 3870:9 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot60,0> 4565:3 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot60,32> 4565:5 --> 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol IFYKYK--transferFrom(address,address,uint256)
GASOL: Useless accesses found: {'3110_6': [1], '3870_0': [3, 9], '4565_0': [3, 5], '3870': [3, 9], '4565': [3, 5]}
Free memory analyss finished


SLOTS Contract IFYKYK: 75
Memory read accesses ContractIFYKYK: 280
Memory write accesses ContractIFYKYK: 553
********************************** INIT
GASOL: Adding block useless 3110_6
GASOL: Adding block useless 3870_0
GASOL: Adding block useless 4565_0
GASOL: Adding block useless 3870
GASOL: Adding block useless 4565
CONTEXT: Detected context equality 2 <slot2,0> 4 <slot2,0>
CONTEXT: Detected context equality 15 <slot13,0> 16 <slot13,0>
CONTEXT: Detected context equality 15 <slot13,0> 16 <slot13,0>
CONTEXT: Detected context equality 23 <slot15,0> 24 <slot15,0>
CONTEXT: Detected context equality 23 <slot15,0> 24 <slot15,0>
CONTEXT: Detected context equality 20 <slot16,0> 21 <slot16,0>
CONTEXT: Detected context equality 20 <slot16,0> 21 <slot16,0>
CONTEXT: Detected context equality 13 <slot21,0> 16 <slot21,0>
CONTEXT: Detected context equality 15 <slot20,0> 28 <slot20,0>
CONTEXT: Detected context equality 15 <slot20,0> 24 <slot20,0>
CONTEXT: Detected context equality 3 <slot40,0> 6 <slot40,0>
CONTEXT: Detected context equality 5 <slot39,0> 17 <slot39,0>
CONTEXT: Detected context equality 5 <slot39,0> 13 <slot39,0>
CONTEXT: Detected context equality 10 <slot50,0> 11 <slot50,0>
CONTEXT: Detected context equality 10 <slot50,0> 11 <slot50,0>
CONTEXT: Detected context equality 20 <slot51,0> 21 <slot51,0>
CONTEXT: Detected context equality 20 <slot51,0> 21 <slot51,0>
CONTEXT: Detected context equality 28 <slot53,0> 29 <slot53,0>
CONTEXT: Detected context equality 28 <slot53,0> 29 <slot53,0>
CONTEXT: Detected context equality 25 <slot54,0> 26 <slot54,0>
CONTEXT: Detected context equality 25 <slot54,0> 26 <slot54,0>
CONTEXT: Detected context equality 18 <slot59,0> 21 <slot59,0>
CONTEXT: Detected context equality 20 <slot58,0> 33 <slot58,0>
CONTEXT: Detected context equality 20 <slot58,0> 29 <slot58,0>
CONTEXT: Detected context equality 5 <slot75,0> 4 <slot75,0>
CONTEXT: Detected context equality 5 <slot75,0> 8 <slot75,0>
CONTEXT: Detected context equality 4 <slot75,0> 8 <slot75,0>
CONTEXT: Detected context equality 5 <slot75,0> 4 <slot75,0>
CONTEXT: Detected context equality 5 <slot75,0> 8 <slot75,0>
CONTEXT: Detected context equality 4 <slot75,0> 8 <slot75,0>
CONTEXT: Detected context equality 2 <slot2,0> 4 <slot2,0>
COMPACT CLONES: True
CONTRACT: IFYKYK
-----
Block: 391
391Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'DUP5', 'MSTORE', 'PUSH1 0x02', 'DUP7', 'MSTORE', 'SWAP3', 'KECCAK256', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'SWAP1', 'DUP4', 'MSTORE', 'DUP2', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
391-Stack size: 9 
391-Equals Mem:<< [<10,21>, <13,24>]>> 
391-NonEquals Mem: << [<10,30>, <10,13>, <10,24>, <10,33>, <13,30>, <13,21>, <13,33>, <21,30>, <21,24>, <21,33>, <24,30>, <24,33>, <33,15>, <33,27>, <33,30>, <15,30>, <27,30>]>> 
391-Equals Sto:<< []>> 
391-NonEquals Sto: << []>> 
391-Useless: []
391-Constancy: [(8, 0), (5, 32), (4, 64), (3, 0), (1, 64)]
391-ContextAliasing: []

.....
-----
Block: 3004_24
3004_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_24-Stack size: 8 
3004_24-Equals Mem:<< []>> 
3004_24-NonEquals Mem: << [<5,8>]>> 
3004_24-Equals Sto:<< []>> 
3004_24-NonEquals Sto: << []>> 
3004_24-Useless: []
3004_24-Constancy: [(7, 0), (4, 32)]
3004_24-ContextAliasing: [(5, 4)]

.....
-----
Block: 3004_23
3004_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_23-Stack size: 11 
3004_23-Equals Mem:<< []>> 
3004_23-NonEquals Mem: << [<5,8>]>> 
3004_23-Equals Sto:<< []>> 
3004_23-NonEquals Sto: << []>> 
3004_23-Useless: []
3004_23-Constancy: [(10, 0), (7, 32), (6, 64), (4, 96)]
3004_23-ContextAliasing: []

.....
-----
Block: 3004_22
3004_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_22-Stack size: 13 
3004_22-Equals Mem:<< []>> 
3004_22-NonEquals Mem: << [<5,8>]>> 
3004_22-Equals Sto:<< []>> 
3004_22-NonEquals Sto: << []>> 
3004_22-Useless: []
3004_22-Constancy: [(12, 0), (9, 32), (8, 64)]
3004_22-ContextAliasing: []

.....
-----
Block: 3004_21
3004_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_21-Stack size: 16 
3004_21-Equals Mem:<< []>> 
3004_21-NonEquals Mem: << [<5,8>]>> 
3004_21-Equals Sto:<< []>> 
3004_21-NonEquals Sto: << []>> 
3004_21-Useless: []
3004_21-Constancy: [(15, 0), (12, 32), (11, 64), (7, 32)]
3004_21-ContextAliasing: []

.....
-----
Block: 3004_20
3004_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_20-Stack size: 15 
3004_20-Equals Mem:<< []>> 
3004_20-NonEquals Mem: << [<5,8>]>> 
3004_20-Equals Sto:<< []>> 
3004_20-NonEquals Sto: << []>> 
3004_20-Useless: []
3004_20-Constancy: [(14, 0), (11, 32), (10, 64), (5, 32)]
3004_20-ContextAliasing: []

.....
-----
Block: 1199
1199Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1199-Stack size: 7 
1199-Equals Mem:<< []>> 
1199-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
1199-Equals Sto:<< []>> 
1199-NonEquals Sto: << []>> 
1199-Useless: []
1199-Constancy: [(6, 0), (2, 64)]
1199-ContextAliasing: []

.....
-----
Block: 1277
1277Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
1277-Stack size: 8 
1277-Equals Mem:<< []>> 
1277-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
1277-Equals Sto:<< []>> 
1277-NonEquals Sto: << []>> 
1277-Useless: []
1277-Constancy: [(7, 0), (3, 64)]
1277-ContextAliasing: []

.....
-----
Block: 1356
1356Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x64', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1356-Stack size: 5 
1356-Equals Mem:<< []>> 
1356-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>]>> 
1356-Equals Sto:<< []>> 
1356-NonEquals Sto: << []>> 
1356-Useless: []
1356-Constancy: [(4, 0), (0, 64)]
1356-ContextAliasing: []

.....
-----
Block: 2916_1
2916_1Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
2916_1-Stack size: 5 
2916_1-Equals Mem:<< []>> 
2916_1-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
2916_1-Equals Sto:<< []>> 
2916_1-NonEquals Sto: << []>> 
2916_1-Useless: []
2916_1-Constancy: [(4, 0), (3, 64)]
2916_1-ContextAliasing: []

.....
-----
Block: 1442
1442Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0xff', 'PUSH1 0x06', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1442-Stack size: 5 
1442-Equals Mem:<< []>> 
1442-NonEquals Mem: << [<12,7>]>> 
1442-Equals Sto:<< []>> 
1442-NonEquals Sto: << []>> 
1442-Useless: []
1442-Constancy: [(4, 0), (1, 0), (0, 64)]
1442-ContextAliasing: []

.....
-----
Block: 1478
1478Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x11', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1478-Stack size: 5 
1478-Equals Mem:<< []>> 
1478-NonEquals Mem: << [<8,5>]>> 
1478-Equals Sto:<< []>> 
1478-NonEquals Sto: << []>> 
1478-Useless: []
1478-Constancy: [(4, 0), (1, 0), (0, 64)]
1478-ContextAliasing: []

.....
-----
Block: 3558_0
3558_0Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP4', 'PUSH1 0x01', 'DUP6', 'MSTORE', 'PUSH1 0x40', 'SWAP4', 'DUP5', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP3', 'PUSH2 0x0e37', 'DUP7', 'MLOAD', 'PUSH2 0x0e06', 'DUP2', 'PUSH2 0x0bec', 'JUMP']>> 
3558_0-Stack size: 14 
3558_0-Equals Mem:<< []>> 
3558_0-NonEquals Mem: << [<3,18>, <3,8>, <8,18>, <13,18>]>> 
3558_0-Equals Sto:<< []>> 
3558_0-NonEquals Sto: << []>> 
3558_0-Useless: []
3558_0-Constancy: [(13, 0), (10, 0), (9, 32), (8, 64), (0, 0)]
3558_0-ContextAliasing: []

.....
-----
Block: 3590_0
3590_0Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP4', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP7', 'DUP8', 'DUP12', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
3590_0-Stack size: 19 
3590_0-Equals Mem:<< []>> 
3590_0-NonEquals Mem: << [<3,11>]>> 
3590_0-Equals Sto:<< []>> 
3590_0-NonEquals Sto: << []>> 
3590_0-Useless: []
3590_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64), (2, 0)]
3590_0-ContextAliasing: []

.....
-----
Block: 3639_0
3639_0Instr:<<['JUMPDEST', 'DUP10', 'DUP3', 'MSTORE', 'PUSH1 0x01', 'DUP9', 'MSTORE', 'DUP7', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP10', 'DUP2', 'MSTORE', 'DUP6', 'PUSH2 0x0e71', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x0e6b', 'DUP4', 'MLOAD', 'PUSH2 0x0e5b', 'DUP2', 'PUSH2 0x0bec', 'JUMP']>> 
3639_0-Stack size: 18 
3639_0-Equals Mem:<< [<3,13>]>> 
3639_0-NonEquals Mem: << [<3,22>, <3,6>, <6,22>, <6,13>, <13,22>, <9,22>, <18,22>]>> 
3639_0-Equals Sto:<< [<10,19>]>> 
3639_0-NonEquals Sto: << []>> 
3639_0-Useless: []
3639_0-Constancy: [(17, 0), (14, 0), (13, 32), (12, 64), (7, 32), (6, 64), (1, 0)]
3639_0-ContextAliasing: []

.....
-----
Block: 3675_0
3675_0Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'DUP8', 'DUP8', 'PUSH2 0x0c2a', 'JUMP']>> 
3675_0-Stack size: 22 
3675_0-Equals Mem:<< []>> 
3675_0-NonEquals Mem: << [<3,8>]>> 
3675_0-Equals Sto:<< []>> 
3675_0-NonEquals Sto: << []>> 
3675_0-Useless: []
3675_0-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3675_0-ContextAliasing: []

.....
-----
Block: 3697_0
3697_0Instr:<<['JUMPDEST', 'SWAP2', 'DUP12', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP3', 'PUSH2 0x0e87', 'DUP5', 'PUSH2 0x0bec', 'JUMP']>> 
3697_0-Stack size: 19 
3697_0-Equals Mem:<< []>> 
3697_0-NonEquals Mem: << [<4,11>, <4,7>, <7,11>, <8,11>]>> 
3697_0-Equals Sto:<< []>> 
3697_0-NonEquals Sto: << []>> 
3697_0-Useless: []
3697_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64), (2, 0), (1, 64)]
3697_0-ContextAliasing: []

.....
-----
Block: 3719_0
3719_0Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP5', 'MSTORE', 'DUP7', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
3719_0-Stack size: 17 
3719_0-Equals Mem:<< []>> 
3719_0-NonEquals Mem: << [<3,7>]>> 
3719_0-Equals Sto:<< []>> 
3719_0-NonEquals Sto: << []>> 
3719_0-Useless: []
3719_0-Constancy: [(16, 0), (13, 0), (12, 32), (11, 64), (6, 32), (5, 64)]
3719_0-ContextAliasing: []

.....
-----
Block: 1532
1532Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1532-Stack size: 6 
1532-Equals Mem:<< []>> 
1532-NonEquals Mem: << [<4,1>]>> 
1532-Equals Sto:<< []>> 
1532-NonEquals Sto: << []>> 
1532-Useless: []
1532-Constancy: [(5, 0), (2, 0), (1, 32), (0, 64)]
1532-ContextAliasing: []

.....
-----
Block: 3135_13
3135_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_13-Stack size: 14 
3135_13-Equals Mem:<< []>> 
3135_13-NonEquals Mem: << [<5,8>]>> 
3135_13-Equals Sto:<< []>> 
3135_13-NonEquals Sto: << []>> 
3135_13-Useless: []
3135_13-Constancy: [(13, 0), (10, 0), (9, 32), (8, 64), (3, 32), (2, 64)]
3135_13-ContextAliasing: []

.....
-----
Block: 3155_5
3155_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155_5-Stack size: 16 
3155_5-Equals Mem:<< []>> 
3155_5-NonEquals Mem: << [<7,2>]>> 
3155_5-Equals Sto:<< []>> 
3155_5-NonEquals Sto: << []>> 
3155_5-Useless: []
3155_5-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (5, 32), (4, 64)]
3155_5-ContextAliasing: []

.....
-----
Block: 2724_6
2724_6Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724_6-Stack size: 20 
2724_6-Equals Mem:<< []>> 
2724_6-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724_6-Equals Sto:<< []>> 
2724_6-NonEquals Sto: << []>> 
2724_6-Useless: []
2724_6-Constancy: [(19, 0), (16, 0), (15, 32), (14, 64), (9, 32), (8, 64)]
2724_6-ContextAliasing: [(4, 16)]

.....
-----
Block: 2775_6
2775_6Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775_6-Stack size: 23 
2775_6-Equals Mem:<< []>> 
2775_6-NonEquals Mem: << [<12,6>]>> 
2775_6-Equals Sto:<< []>> 
2775_6-NonEquals Sto: << []>> 
2775_6-Useless: []
2775_6-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (12, 32), (11, 64), (5, 32)]
2775_6-ContextAliasing: [(7, 16)]

.....
-----
Block: 3004_19
3004_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_19-Stack size: 19 
3004_19-Equals Mem:<< []>> 
3004_19-NonEquals Mem: << [<5,8>]>> 
3004_19-Equals Sto:<< []>> 
3004_19-NonEquals Sto: << []>> 
3004_19-Useless: []
3004_19-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64)]
3004_19-ContextAliasing: []

.....
-----
Block: 5348_2
5348_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5348_2-Stack size: 20 
5348_2-Equals Mem:<< []>> 
5348_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5348_2-Equals Sto:<< []>> 
5348_2-NonEquals Sto: << []>> 
5348_2-Useless: []
5348_2-Constancy: [(19, 0), (16, 0), (15, 32), (14, 64), (9, 32), (8, 64), (3, 0), (2, 64)]
5348_2-ContextAliasing: []

.....
-----
Block: 3135_12
3135_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_12-Stack size: 22 
3135_12-Equals Mem:<< []>> 
3135_12-NonEquals Mem: << [<5,8>]>> 
3135_12-Equals Sto:<< []>> 
3135_12-NonEquals Sto: << []>> 
3135_12-Useless: []
3135_12-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3135_12-ContextAliasing: []

.....
-----
Block: 3135_11
3135_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_11-Stack size: 22 
3135_11-Equals Mem:<< []>> 
3135_11-NonEquals Mem: << [<5,8>]>> 
3135_11-Equals Sto:<< []>> 
3135_11-NonEquals Sto: << []>> 
3135_11-Useless: []
3135_11-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (11, 32), (10, 64), (5, 0), (4, 64)]
3135_11-ContextAliasing: []

.....
-----
Block: 3155_4
3155_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155_4-Stack size: 24 
3155_4-Equals Mem:<< []>> 
3155_4-NonEquals Mem: << [<7,2>]>> 
3155_4-Equals Sto:<< []>> 
3155_4-NonEquals Sto: << []>> 
3155_4-Useless: []
3155_4-Constancy: [(23, 0), (20, 0), (19, 32), (18, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3155_4-ContextAliasing: []

.....
-----
Block: 2724_5
2724_5Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724_5-Stack size: 28 
2724_5-Equals Mem:<< []>> 
2724_5-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724_5-Equals Sto:<< []>> 
2724_5-NonEquals Sto: << []>> 
2724_5-Useless: []
2724_5-Constancy: [(27, 0), (24, 0), (23, 32), (22, 64), (17, 32), (16, 64), (11, 0), (10, 64)]
2724_5-ContextAliasing: [(4, 24)]

.....
-----
Block: 2775_5
2775_5Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775_5-Stack size: 31 
2775_5-Equals Mem:<< []>> 
2775_5-NonEquals Mem: << [<12,6>]>> 
2775_5-Equals Sto:<< []>> 
2775_5-NonEquals Sto: << []>> 
2775_5-Useless: []
2775_5-Constancy: [(30, 0), (27, 0), (26, 32), (25, 64), (20, 32), (19, 64), (14, 0), (13, 64), (5, 32)]
2775_5-ContextAliasing: [(7, 24)]

.....
-----
Block: 3004_18
3004_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_18-Stack size: 24 
3004_18-Equals Mem:<< []>> 
3004_18-NonEquals Mem: << [<5,8>]>> 
3004_18-Equals Sto:<< []>> 
3004_18-NonEquals Sto: << []>> 
3004_18-Useless: []
3004_18-Constancy: [(23, 0), (20, 0), (19, 32), (18, 64), (13, 32), (12, 64), (7, 0), (6, 64)]
3004_18-ContextAliasing: []

.....
-----
Block: 3135_10
3135_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_10-Stack size: 19 
3135_10-Equals Mem:<< []>> 
3135_10-NonEquals Mem: << [<5,8>]>> 
3135_10-Equals Sto:<< []>> 
3135_10-NonEquals Sto: << []>> 
3135_10-Useless: []
3135_10-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (8, 32), (7, 64), (2, 0)]
3135_10-ContextAliasing: []

.....
-----
Block: 3155_3
3155_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155_3-Stack size: 21 
3155_3-Equals Mem:<< []>> 
3155_3-NonEquals Mem: << [<7,2>]>> 
3155_3-Equals Sto:<< []>> 
3155_3-NonEquals Sto: << []>> 
3155_3-Useless: []
3155_3-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (10, 32), (9, 64), (4, 0)]
3155_3-ContextAliasing: []

.....
-----
Block: 2724_4
2724_4Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724_4-Stack size: 25 
2724_4-Equals Mem:<< []>> 
2724_4-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724_4-Equals Sto:<< []>> 
2724_4-NonEquals Sto: << []>> 
2724_4-Useless: []
2724_4-Constancy: [(24, 0), (21, 0), (20, 32), (19, 64), (14, 32), (13, 64), (8, 0)]
2724_4-ContextAliasing: [(4, 21)]

.....
-----
Block: 2775_4
2775_4Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775_4-Stack size: 28 
2775_4-Equals Mem:<< []>> 
2775_4-NonEquals Mem: << [<12,6>]>> 
2775_4-Equals Sto:<< []>> 
2775_4-NonEquals Sto: << []>> 
2775_4-Useless: []
2775_4-Constancy: [(27, 0), (24, 0), (23, 32), (22, 64), (17, 32), (16, 64), (11, 0), (5, 32)]
2775_4-ContextAliasing: [(7, 21)]

.....
-----
Block: 3004_17
3004_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_17-Stack size: 21 
3004_17-Equals Mem:<< []>> 
3004_17-NonEquals Mem: << [<5,8>]>> 
3004_17-Equals Sto:<< []>> 
3004_17-NonEquals Sto: << []>> 
3004_17-Useless: []
3004_17-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (10, 32), (9, 64), (4, 0)]
3004_17-ContextAliasing: []

.....
-----
Block: 3740_0
3740_0Instr:<<['JUMPDEST', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH2 0x0eb2', 'DUP5', 'PUSH1 0x40', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x14cf', 'JUMP']>> 
3740_0-Stack size: 14 
3740_0-Equals Mem:<< []>> 
3740_0-NonEquals Mem: << [<3,6>]>> 
3740_0-Equals Sto:<< []>> 
3740_0-NonEquals Sto: << []>> 
3740_0-Useless: []
3740_0-Constancy: [(13, 0), (10, 0), (9, 32), (8, 64), (0, 0)]
3740_0-ContextAliasing: []

.....
-----
Block: 5348_1
5348_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5348_1-Stack size: 16 
5348_1-Equals Mem:<< []>> 
5348_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5348_1-Equals Sto:<< []>> 
5348_1-NonEquals Sto: << []>> 
5348_1-Useless: []
5348_1-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (2, 0)]
5348_1-ContextAliasing: []

.....
-----
Block: 3135_9
3135_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_9-Stack size: 18 
3135_9-Equals Mem:<< []>> 
3135_9-NonEquals Mem: << [<5,8>]>> 
3135_9-Equals Sto:<< []>> 
3135_9-NonEquals Sto: << []>> 
3135_9-Useless: []
3135_9-Constancy: [(17, 0), (14, 0), (13, 32), (12, 64), (4, 0)]
3135_9-ContextAliasing: []

.....
-----
Block: 3793_0
3793_0Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'SWAP3', 'PUSH1 0x20', 'SWAP4', 'DUP1', 'DUP6', 'MSTORE', 'PUSH1 0xff', 'SWAP2', 'PUSH1 0x40', 'SWAP1', 'DUP4', 'DUP3', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x13b9', 'JUMPI']>> 
3793_0-Stack size: 13 
3793_0-Equals Mem:<< []>> 
3793_0-NonEquals Mem: << [<5,12>]>> 
3793_0-Equals Sto:<< []>> 
3793_0-NonEquals Sto: << []>> 
3793_0-Useless: []
3793_0-Constancy: [(12, 0), (9, 0), (8, 32), (7, 64), (3, 0), (1, 0)]
3793_0-ContextAliasing: []

.....
-----
Block: 3870_0
3870_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'SWAP10', 'DUP11', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'DUP1', 'SWAP2', 'DIV', 'SWAP9', 'DUP7', 'PUSH1 0x06', 'SLOAD', 'AND', 'PUSH2 0x12ec', 'JUMPI']>> 
3870_0-Stack size: 19 
3870_0-Equals Mem:<< []>> 
3870_0-NonEquals Mem: << [<3,9>]>> 
3870_0-Equals Sto:<< []>> 
3870_0-NonEquals Sto: << []>> 
3870_0-Useless: [3, 9]
3870_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (9, 32), (7, 0), (4, 64), (3, 32)]
3870_0-ContextAliasing: []

.....
-----
Block: 3970_0
3970_0Instr:<<['JUMPDEST', 'POP', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'DUP3', 'DUP7', 'MSTORE', 'DUP7', 'DUP11', 'KECCAK256', 'SLOAD', 'SWAP2', 'DUP1', 'DUP11', 'PUSH1 0xa8', 'SHR', 'AND', 'ISZERO', 'SWAP2', 'DUP3', 'PUSH2 0x11a2', 'JUMPI']>> 
3970_0-Stack size: 21 
3970_0-Equals Mem:<< []>> 
3970_0-NonEquals Mem: << [<4,9>]>> 
3970_0-Equals Sto:<< []>> 
3970_0-NonEquals Sto: << []>> 
3970_0-Useless: []
3970_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
3970_0-ContextAliasing: []

.....
-----
Block: 4186_0
4186_0Instr:<<['SWAP9', 'SWAP6', 'SWAP4', 'SWAP1', 'SWAP2', 'SWAP3', 'DUP11', 'SWAP8', 'SWAP6', 'SWAP4', 'DUP10', 'MLOAD', 'SWAP11', 'DUP12', 'SWAP9', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP11', 'MSTORE', 'PUSH1 0xa4', 'DUP11', 'ADD', 'SWAP4', 'DUP11', 'ADD', 'MSTORE', 'DUP10', 'PUSH1 0x24', 'DUP11', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP11', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP9', 'ADD', 'SWAP6', 'SWAP4', 'DUP10', 'SWAP1']>> 
4186_0-Stack size: 23 
4186_0-Equals Mem:<< []>> 
4186_0-NonEquals Mem: << [<19,11>, <19,37>, <26,11>, <26,37>, <31,11>, <31,37>, <36,11>, <36,37>, <40,11>, <40,37>, <11,37>]>> 
4186_0-Equals Sto:<< []>> 
4186_0-NonEquals Sto: << []>> 
4186_0-Useless: []
4186_0-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (10, 0), (8, 64), (2, 32)]
4186_0-ContextAliasing: []

.....
-----
Block: 3004_16
3004_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_16-Stack size: 17 
3004_16-Equals Mem:<< []>> 
3004_16-NonEquals Mem: << [<5,8>]>> 
3004_16-Equals Sto:<< []>> 
3004_16-NonEquals Sto: << []>> 
3004_16-Useless: []
3004_16-Constancy: [(16, 0), (13, 0), (12, 32), (11, 64), (2, 0)]
3004_16-ContextAliasing: []

.....
-----
Block: 4390_0
4390_0Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP9', 'MSTORE', 'DUP14', 'SWAP11', 'POP', 'DUP13', 'SWAP10', 'POP', 'SWAP7', 'DUP3', 'ADD', 'SWAP7', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x1094', 'JUMP']>> 
4390_0-Stack size: 26 
4390_0-Equals Mem:<< []>> 
4390_0-NonEquals Mem: << [<6,2>]>> 
4390_0-Equals Sto:<< []>> 
4390_0-NonEquals Sto: << []>> 
4390_0-Useless: []
4390_0-Constancy: [(25, 0), (22, 0), (21, 32), (20, 64), (13, 0), (11, 64), (10, 0), (2, 32)]
4390_0-ContextAliasing: [(12, 16)]

.....
-----
Block: 3280_3
3280_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3280_3-Stack size: 26 
3280_3-Equals Mem:<< []>> 
3280_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3280_3-Equals Sto:<< []>> 
3280_3-NonEquals Sto: << []>> 
3280_3-Useless: []
3280_3-Constancy: [(25, 0), (22, 0), (21, 32), (20, 64), (13, 0), (11, 64), (5, 32)]
3280_3-ContextAliasing: []

.....
-----
Block: 3360_3
3360_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3360_3-Stack size: 27 
3360_3-Equals Mem:<< []>> 
3360_3-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3360_3-Equals Sto:<< []>> 
3360_3-NonEquals Sto: << []>> 
3360_3-Useless: []
3360_3-Constancy: [(26, 0), (23, 0), (22, 32), (21, 64), (14, 0), (12, 64), (6, 32)]
3360_3-ContextAliasing: []

.....
-----
Block: 5543_4
5543_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5543_4-Stack size: 29 
5543_4-Equals Mem:<< []>> 
5543_4-NonEquals Mem: << [<5,8>]>> 
5543_4-Equals Sto:<< []>> 
5543_4-NonEquals Sto: << []>> 
5543_4-Useless: []
5543_4-Constancy: [(28, 0), (25, 0), (24, 32), (23, 64), (16, 0), (14, 64), (8, 32)]
5543_4-ContextAliasing: [(13, 28)]

.....
-----
Block: 3004_15
3004_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_15-Stack size: 30 
3004_15-Equals Mem:<< []>> 
3004_15-NonEquals Mem: << [<5,8>]>> 
3004_15-Equals Sto:<< []>> 
3004_15-NonEquals Sto: << []>> 
3004_15-Useless: []
3004_15-Constancy: [(29, 0), (26, 0), (25, 32), (24, 64), (17, 0), (15, 64), (9, 32)]
3004_15-ContextAliasing: []

.....
-----
Block: 5543_3
5543_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5543_3-Stack size: 25 
5543_3-Equals Mem:<< []>> 
5543_3-NonEquals Mem: << [<5,8>]>> 
5543_3-Equals Sto:<< []>> 
5543_3-NonEquals Sto: << []>> 
5543_3-Useless: []
5543_3-Constancy: [(24, 0), (21, 0), (20, 32), (19, 64), (12, 0), (10, 64), (4, 32)]
5543_3-ContextAliasing: [(9, 24)]

.....
-----
Block: 3004_14
3004_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_14-Stack size: 23 
3004_14-Equals Mem:<< []>> 
3004_14-NonEquals Mem: << [<5,8>]>> 
3004_14-Equals Sto:<< []>> 
3004_14-NonEquals Sto: << []>> 
3004_14-Useless: []
3004_14-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (10, 0), (8, 64), (2, 32)]
3004_14-ContextAliasing: []

.....
-----
Block: 4565_0
4565_0Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'DIV', 'SWAP10', 'PUSH0', 'PUSH2 0x0f82', 'JUMP']>> 
4565_0-Stack size: 24 
4565_0-Equals Mem:<< []>> 
4565_0-NonEquals Mem: << [<3,5>]>> 
4565_0-Equals Sto:<< []>> 
4565_0-NonEquals Sto: << []>> 
4565_0-Useless: [3, 5]
4565_0-Constancy: [(23, 0), (20, 0), (19, 32), (18, 64), (12, 0), (9, 64), (8, 32), (1, 32)]
4565_0-ContextAliasing: []

.....
-----
Block: 3004_13
3004_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_13-Stack size: 26 
3004_13-Equals Mem:<< []>> 
3004_13-NonEquals Mem: << [<5,8>]>> 
3004_13-Equals Sto:<< []>> 
3004_13-NonEquals Sto: << []>> 
3004_13-Useless: []
3004_13-Constancy: [(25, 0), (22, 0), (21, 32), (20, 64), (14, 0), (11, 64), (10, 32), (3, 32)]
3004_13-ContextAliasing: []

.....
-----
Block: 5445_1
5445_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5445_1-Stack size: 23 
5445_1-Equals Mem:<< []>> 
5445_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5445_1-Equals Sto:<< []>> 
5445_1-NonEquals Sto: << []>> 
5445_1-Useless: []
5445_1-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (11, 0), (8, 64), (7, 32)]
5445_1-ContextAliasing: []

.....
-----
Block: 3135_14
3135_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_14-Stack size: 25 
3135_14-Equals Mem:<< []>> 
3135_14-NonEquals Mem: << [<5,8>]>> 
3135_14-Equals Sto:<< []>> 
3135_14-NonEquals Sto: << []>> 
3135_14-Useless: []
3135_14-Constancy: [(24, 0), (21, 0), (20, 32), (19, 64), (13, 0), (10, 64), (9, 32)]
3135_14-ContextAliasing: []

.....
-----
Block: 4610_0
4610_0Instr:<<['DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x01', 'DUP7', 'MSTORE', 'PUSH2 0x1215', 'DUP12', 'DUP9', 'DUP13', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d71', 'JUMP']>> 
4610_0-Stack size: 21 
4610_0-Equals Mem:<< []>> 
4610_0-NonEquals Mem: << [<2,5>]>> 
4610_0-Equals Sto:<< []>> 
4610_0-NonEquals Sto: << []>> 
4610_0-Useless: []
4610_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4610_0-ContextAliasing: []

.....
-----
Block: 4659_0
4659_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP12', 'MSTORE', 'PUSH1 0x11', 'DUP10', 'MSTORE', 'PUSH1 0x24', 'DUP12', 'REVERT']>> 
4659_0-Stack size: 22 
4659_0-Equals Mem:<< []>> 
4659_0-NonEquals Mem: << [<5,8>]>> 
4659_0-Equals Sto:<< []>> 
4659_0-NonEquals Sto: << []>> 
4659_0-Useless: []
4659_0-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (10, 0), (7, 64), (6, 32)]
4659_0-ContextAliasing: []

.....
-----
Block: 4678_0
4678_0Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
4678_0-Stack size: 21 
4678_0-Equals Mem:<< []>> 
4678_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
4678_0-Equals Sto:<< []>> 
4678_0-NonEquals Sto: << []>> 
4678_0-Useless: []
4678_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4678_0-ContextAliasing: []

.....
-----
Block: 3135_8
3135_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_8-Stack size: 23 
3135_8-Equals Mem:<< []>> 
3135_8-NonEquals Mem: << [<5,8>]>> 
3135_8-Equals Sto:<< []>> 
3135_8-NonEquals Sto: << []>> 
3135_8-Useless: []
3135_8-Constancy: [(22, 0), (19, 0), (18, 32), (17, 64), (11, 0), (8, 64), (7, 32)]
3135_8-ContextAliasing: []

.....
-----
Block: 4744_0
4744_0Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
4744_0-Stack size: 21 
4744_0-Equals Mem:<< []>> 
4744_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
4744_0-Equals Sto:<< []>> 
4744_0-NonEquals Sto: << []>> 
4744_0-Useless: []
4744_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4744_0-ContextAliasing: []

.....
-----
Block: 4810_0
4810_0Instr:<<['JUMPDEST', 'POP', 'DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x03', 'DUP7', 'MSTORE', 'DUP2', 'DUP8', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x0f6e', 'JUMP']>> 
4810_0-Stack size: 22 
4810_0-Equals Mem:<< []>> 
4810_0-NonEquals Mem: << [<4,7>]>> 
4810_0-Equals Sto:<< []>> 
4810_0-NonEquals Sto: << []>> 
4810_0-Useless: []
4810_0-Constancy: [(21, 0), (18, 0), (17, 32), (16, 64), (10, 0), (7, 64), (6, 32)]
4810_0-ContextAliasing: []

.....
-----
Block: 4864_0
4864_0Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'DUP5', 'DUP9', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'ISZERO', 'PUSH2 0x1322', 'JUMPI']>> 
4864_0-Stack size: 19 
4864_0-Equals Mem:<< []>> 
4864_0-NonEquals Mem: << [<2,5>]>> 
4864_0-Equals Sto:<< []>> 
4864_0-NonEquals Sto: << []>> 
4864_0-Useless: []
4864_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (7, 0), (4, 64), (3, 32)]
4864_0-ContextAliasing: []

.....
-----
Block: 4882_0
4882_0Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'NUMBER', 'DUP6', 'DUP10', 'KECCAK256', 'SSTORE', 'PUSH2 0x0f58', 'JUMP']>> 
4882_0-Stack size: 19 
4882_0-Equals Mem:<< []>> 
4882_0-NonEquals Mem: << [<2,5>]>> 
4882_0-Equals Sto:<< []>> 
4882_0-NonEquals Sto: << []>> 
4882_0-Useless: []
4882_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (7, 0), (4, 64), (3, 32)]
4882_0-ContextAliasing: []

.....
-----
Block: 4898_0
4898_0Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP8', 'ADD', 'DUP6', 'SWAP1', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'DUP2', 'DUP5', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'SWAP1', 'REVERT']>> 
4898_0-Stack size: 19 
4898_0-Equals Mem:<< []>> 
4898_0-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>, <35,2>]>> 
4898_0-Equals Sto:<< []>> 
4898_0-NonEquals Sto: << []>> 
4898_0-Useless: []
4898_0-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (7, 0), (4, 64), (3, 32)]
4898_0-ContextAliasing: []

.....
-----
Block: 3004_12
3004_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_12-Stack size: 21 
3004_12-Equals Mem:<< []>> 
3004_12-NonEquals Mem: << [<5,8>]>> 
3004_12-Equals Sto:<< []>> 
3004_12-NonEquals Sto: << []>> 
3004_12-Useless: []
3004_12-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (11, 32), (9, 0), (6, 64), (5, 32)]
3004_12-ContextAliasing: []

.....
-----
Block: 5445_2
5445_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5445_2-Stack size: 19 
5445_2-Equals Mem:<< []>> 
5445_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5445_2-Equals Sto:<< []>> 
5445_2-NonEquals Sto: << []>> 
5445_2-Useless: []
5445_2-Constancy: [(18, 0), (15, 0), (14, 32), (13, 64), (9, 32), (7, 0), (4, 64), (3, 32)]
5445_2-ContextAliasing: []

.....
-----
Block: 3135_15
3135_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_15-Stack size: 21 
3135_15-Equals Mem:<< []>> 
3135_15-NonEquals Mem: << [<5,8>]>> 
3135_15-Equals Sto:<< []>> 
3135_15-NonEquals Sto: << []>> 
3135_15-Useless: []
3135_15-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (11, 32), (9, 0), (6, 64), (5, 32)]
3135_15-ContextAliasing: []

.....
-----
Block: 5076_0
5076_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5076_0-Stack size: 12 
5076_0-Equals Mem:<< []>> 
5076_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5076_0-Equals Sto:<< []>> 
5076_0-NonEquals Sto: << []>> 
5076_0-Useless: []
5076_0-Constancy: [(11, 0), (8, 0), (7, 32), (6, 64), (0, 0)]
5076_0-ContextAliasing: []

.....
-----
Block: 5163_0
5163_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5163_0-Stack size: 12 
5163_0-Equals Mem:<< []>> 
5163_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5163_0-Equals Sto:<< []>> 
5163_0-NonEquals Sto: << []>> 
5163_0-Useless: []
5163_0-Constancy: [(11, 0), (8, 0), (7, 32), (6, 64), (0, 0)]
5163_0-ContextAliasing: []

.....
-----
Block: 5244_0
5244_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5244_0-Stack size: 12 
5244_0-Equals Mem:<< []>> 
5244_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5244_0-Equals Sto:<< []>> 
5244_0-NonEquals Sto: << []>> 
5244_0-Useless: []
5244_0-Constancy: [(11, 0), (8, 0), (7, 32), (6, 64), (4, 0)]
5244_0-ContextAliasing: []

.....
-----
Block: 1563
1563Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x10', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1563-Stack size: 5 
1563-Equals Mem:<< []>> 
1563-NonEquals Mem: << [<8,5>]>> 
1563-Equals Sto:<< []>> 
1563-NonEquals Sto: << []>> 
1563-Useless: []
1563-Constancy: [(4, 0), (1, 0), (0, 64)]
1563-ContextAliasing: []

.....
-----
Block: 1594
1594Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1594-Stack size: 5 
1594-Equals Mem:<< []>> 
1594-NonEquals Mem: << [<13,3>]>> 
1594-Equals Sto:<< []>> 
1594-NonEquals Sto: << []>> 
1594-Useless: []
1594-Constancy: [(4, 0), (1, 0), (0, 64)]
1594-ContextAliasing: []

.....
-----
Block: 1634
1634Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0f', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1634-Stack size: 5 
1634-Equals Mem:<< []>> 
1634-NonEquals Mem: << [<8,5>]>> 
1634-Equals Sto:<< []>> 
1634-NonEquals Sto: << []>> 
1634-Useless: []
1634-Constancy: [(4, 0), (1, 0), (0, 64)]
1634-ContextAliasing: []

.....
-----
Block: 2916_0
2916_0Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
2916_0-Stack size: 8 
2916_0-Equals Mem:<< []>> 
2916_0-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
2916_0-Equals Sto:<< []>> 
2916_0-NonEquals Sto: << []>> 
2916_0-Useless: []
2916_0-Constancy: [(7, 0), (4, 0), (2, 32), (1, 64)]
2916_0-ContextAliasing: []

.....
-----
Block: 2916
2916Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
2916-Stack size: 9 
2916-Equals Mem:<< []>> 
2916-NonEquals Mem: << [<8,3>, <13,3>, <18,3>, <23,3>]>> 
2916-Equals Sto:<< []>> 
2916-NonEquals Sto: << []>> 
2916-Useless: []
2916-Constancy: [(8, 0), (5, 64), (4, 0), (2, 0)]
2916-ContextAliasing: []

.....
-----
Block: 1891
1891Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1891-Stack size: 9 
1891-Equals Mem:<< []>> 
1891-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
1891-Equals Sto:<< []>> 
1891-NonEquals Sto: << []>> 
1891-Useless: []
1891-Constancy: [(8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
1891-ContextAliasing: []

.....
-----
Block: 1951
1951Instr:<<['ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'PUSH1 0x20', 'SWAP1', 'DUP4', 'DUP3', 'MSTORE', 'DUP3', 'DUP6', 'KECCAK256', 'SLOAD', 'SWAP4', 'DUP5', 'PUSH2 0x07d2', 'JUMPI']>> 
1951-Stack size: 5 
1951-Equals Mem:<< []>> 
1951-NonEquals Mem: << [<2,9>]>> 
1951-Equals Sto:<< []>> 
1951-NonEquals Sto: << []>> 
1951-Useless: []
1951-Constancy: [(4, 0), (2, 0), (0, 64)]
1951-ContextAliasing: []

.....
-----
Block: 2138
2138Instr:<<['SWAP8', 'SWAP5', 'SWAP3', 'DUP10', 'SWAP7', 'SWAP5', 'SWAP2', 'SWAP3', 'DUP9', 'MLOAD', 'SWAP10', 'DUP11', 'SWAP8', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP10', 'MSTORE', 'PUSH1 0xa4', 'DUP10', 'ADD', 'SWAP4', 'DUP10', 'ADD', 'MSTORE', 'DUP9', 'PUSH1 0x24', 'DUP10', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP10', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP8', 'ADD', 'SWAP5', 'SWAP4', 'DUP9', 'SWAP1']>> 
2138-Stack size: 12 
2138-Equals Mem:<< []>> 
2138-NonEquals Mem: << [<17,9>, <17,35>, <24,9>, <24,35>, <29,9>, <29,35>, <34,9>, <34,35>, <38,9>, <38,35>, <9,35>]>> 
2138-Equals Sto:<< []>> 
2138-NonEquals Sto: << []>> 
2138-Useless: []
2138-Constancy: [(11, 0), (9, 0), (7, 64), (2, 32)]
2138-ContextAliasing: []

.....
-----
Block: 3004_11
3004_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_11-Stack size: 5 
3004_11-Equals Mem:<< []>> 
3004_11-NonEquals Mem: << [<5,8>]>> 
3004_11-Equals Sto:<< []>> 
3004_11-NonEquals Sto: << []>> 
3004_11-Useless: []
3004_11-Constancy: [(4, 0), (2, 0)]
3004_11-ContextAliasing: []

.....
-----
Block: 2284
2284Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP13', 'SWAP10', 'POP', 'DUP12', 'SWAP9', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x0892', 'JUMP']>> 
2284-Stack size: 15 
2284-Equals Mem:<< []>> 
2284-NonEquals Mem: << [<6,2>]>> 
2284-Equals Sto:<< []>> 
2284-NonEquals Sto: << []>> 
2284-Useless: []
2284-Constancy: [(14, 0), (12, 0), (10, 64), (9, 0), (2, 32)]
2284-ContextAliasing: [(11, 6)]

.....
-----
Block: 3280_2
3280_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3280_2-Stack size: 15 
3280_2-Equals Mem:<< []>> 
3280_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3280_2-Equals Sto:<< []>> 
3280_2-NonEquals Sto: << []>> 
3280_2-Useless: []
3280_2-Constancy: [(14, 0), (12, 0), (10, 64), (5, 32)]
3280_2-ContextAliasing: []

.....
-----
Block: 3360_2
3360_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3360_2-Stack size: 16 
3360_2-Equals Mem:<< []>> 
3360_2-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3360_2-Equals Sto:<< []>> 
3360_2-NonEquals Sto: << []>> 
3360_2-Useless: []
3360_2-Constancy: [(15, 0), (13, 0), (11, 64), (6, 32)]
3360_2-ContextAliasing: []

.....
-----
Block: 5543_2
5543_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5543_2-Stack size: 18 
5543_2-Equals Mem:<< []>> 
5543_2-NonEquals Mem: << [<5,8>]>> 
5543_2-Equals Sto:<< []>> 
5543_2-NonEquals Sto: << []>> 
5543_2-Useless: []
5543_2-Constancy: [(17, 0), (15, 0), (13, 64), (8, 32)]
5543_2-ContextAliasing: [(12, 17)]

.....
-----
Block: 3004_10
3004_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_10-Stack size: 19 
3004_10-Equals Mem:<< []>> 
3004_10-NonEquals Mem: << [<5,8>]>> 
3004_10-Equals Sto:<< []>> 
3004_10-NonEquals Sto: << []>> 
3004_10-Useless: []
3004_10-Constancy: [(18, 0), (16, 0), (14, 64), (9, 32)]
3004_10-ContextAliasing: []

.....
-----
Block: 5543_1
5543_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5543_1-Stack size: 14 
5543_1-Equals Mem:<< []>> 
5543_1-NonEquals Mem: << [<5,8>]>> 
5543_1-Equals Sto:<< []>> 
5543_1-NonEquals Sto: << []>> 
5543_1-Useless: []
5543_1-Constancy: [(13, 0), (11, 0), (9, 64), (4, 32)]
5543_1-ContextAliasing: [(8, 13)]

.....
-----
Block: 3004_9
3004_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_9-Stack size: 12 
3004_9-Equals Mem:<< []>> 
3004_9-NonEquals Mem: << [<5,8>]>> 
3004_9-Equals Sto:<< []>> 
3004_9-NonEquals Sto: << []>> 
3004_9-Useless: []
3004_9-Constancy: [(11, 0), (9, 0), (7, 64), (2, 32)]
3004_9-ContextAliasing: []

.....
-----
Block: 2401
2401Instr:<<['JUMPDEST', 'AND', 'DUP3', 'MSTORE', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
2401-Stack size: 8 
2401-Equals Mem:<< []>> 
2401-NonEquals Mem: << [<3,10>, <3,5>, <3,15>, <5,10>, <5,15>, <15,6>, <15,10>, <6,10>]>> 
2401-Equals Sto:<< []>> 
2401-NonEquals Sto: << []>> 
2401-Useless: []
2401-Constancy: [(7, 32), (6, 64), (4, 64), (3, 0)]
2401-ContextAliasing: []

.....
-----
Block: 2437
2437Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2437-Stack size: 5 
2437-Equals Mem:<< []>> 
2437-NonEquals Mem: << [<5,2>]>> 
2437-Equals Sto:<< []>> 
2437-NonEquals Sto: << []>> 
2437-Useless: []
2437-Constancy: [(4, 0), (1, 0), (0, 64)]
2437-ContextAliasing: []

.....
-----
Block: 3558
3558Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP4', 'PUSH1 0x01', 'DUP6', 'MSTORE', 'PUSH1 0x40', 'SWAP4', 'DUP5', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP3', 'PUSH2 0x0e37', 'DUP7', 'MLOAD', 'PUSH2 0x0e06', 'DUP2', 'PUSH2 0x0bec', 'JUMP']>> 
3558-Stack size: 19 
3558-Equals Mem:<< []>> 
3558-NonEquals Mem: << [<3,18>, <3,8>, <8,18>, <13,18>]>> 
3558-Equals Sto:<< []>> 
3558-NonEquals Sto: << []>> 
3558-Useless: []
3558-Constancy: [(18, 0), (15, 32), (14, 64), (9, 64), (8, 0), (0, 0)]
3558-ContextAliasing: []

.....
-----
Block: 3590
3590Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP4', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP7', 'DUP8', 'DUP12', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
3590-Stack size: 24 
3590-Equals Mem:<< []>> 
3590-NonEquals Mem: << [<3,11>]>> 
3590-Equals Sto:<< []>> 
3590-NonEquals Sto: << []>> 
3590-Useless: []
3590-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64), (2, 0)]
3590-ContextAliasing: []

.....
-----
Block: 3639
3639Instr:<<['JUMPDEST', 'DUP10', 'DUP3', 'MSTORE', 'PUSH1 0x01', 'DUP9', 'MSTORE', 'DUP7', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP10', 'DUP2', 'MSTORE', 'DUP6', 'PUSH2 0x0e71', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x0e6b', 'DUP4', 'MLOAD', 'PUSH2 0x0e5b', 'DUP2', 'PUSH2 0x0bec', 'JUMP']>> 
3639-Stack size: 23 
3639-Equals Mem:<< [<3,13>]>> 
3639-NonEquals Mem: << [<3,22>, <3,6>, <6,22>, <6,13>, <13,22>, <9,22>, <18,22>]>> 
3639-Equals Sto:<< [<10,19>]>> 
3639-NonEquals Sto: << []>> 
3639-Useless: []
3639-Constancy: [(22, 0), (19, 32), (18, 64), (13, 64), (12, 0), (7, 32), (6, 64), (1, 0)]
3639-ContextAliasing: []

.....
-----
Block: 3675
3675Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'DUP8', 'DUP8', 'PUSH2 0x0c2a', 'JUMP']>> 
3675-Stack size: 27 
3675-Equals Mem:<< []>> 
3675-NonEquals Mem: << [<3,8>]>> 
3675-Equals Sto:<< []>> 
3675-NonEquals Sto: << []>> 
3675-Useless: []
3675-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3675-ContextAliasing: []

.....
-----
Block: 3697
3697Instr:<<['JUMPDEST', 'SWAP2', 'DUP12', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP3', 'PUSH2 0x0e87', 'DUP5', 'PUSH2 0x0bec', 'JUMP']>> 
3697-Stack size: 24 
3697-Equals Mem:<< []>> 
3697-NonEquals Mem: << [<4,11>, <4,7>, <7,11>, <8,11>]>> 
3697-Equals Sto:<< []>> 
3697-NonEquals Sto: << []>> 
3697-Useless: []
3697-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64), (2, 0), (1, 64)]
3697-ContextAliasing: []

.....
-----
Block: 3719
3719Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP5', 'MSTORE', 'DUP7', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
3719-Stack size: 22 
3719-Equals Mem:<< []>> 
3719-NonEquals Mem: << [<3,7>]>> 
3719-Equals Sto:<< []>> 
3719-NonEquals Sto: << []>> 
3719-Useless: []
3719-Constancy: [(21, 0), (18, 32), (17, 64), (12, 64), (11, 0), (6, 32), (5, 64)]
3719-ContextAliasing: []

.....
-----
Block: 2507
2507Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'DUP6', 'MLOAD', 'SWAP2', 'SWAP1', 'PUSH2 0x09f2', 'DUP4', 'PUSH2 0x0bd0', 'JUMP']>> 
2507-Stack size: 11 
2507-Equals Mem:<< [<9,18>, <12,20>]>> 
2507-NonEquals Mem: << [<9,24>, <9,12>, <9,20>, <12,24>, <12,18>, <18,24>, <18,20>, <20,24>, <15,24>, <21,24>]>> 
2507-Equals Sto:<< []>> 
2507-NonEquals Sto: << []>> 
2507-Useless: []
2507-Constancy: [(10, 0), (7, 32), (6, 64), (1, 64), (0, 0)]
2507-ContextAliasing: []

.....
-----
Block: 2546
2546Instr:<<['JUMPDEST', 'PUSH1 0x28', 'DUP4', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'DUP9', 'DUP5', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'DUP8', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
2546-Stack size: 11 
2546-Equals Mem:<< []>> 
2546-NonEquals Mem: << [<3,8>, <3,15>, <8,15>]>> 
2546-Equals Sto:<< []>> 
2546-NonEquals Sto: << []>> 
2546-Useless: []
2546-Constancy: [(10, 0), (7, 32), (6, 64)]
2546-ContextAliasing: []

.....
-----
Block: 1532_0
1532_0Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1532_0-Stack size: 5 
1532_0-Equals Mem:<< []>> 
1532_0-NonEquals Mem: << [<4,1>]>> 
1532_0-Equals Sto:<< []>> 
1532_0-NonEquals Sto: << []>> 
1532_0-Useless: []
1532_0-Constancy: [(4, 0), (1, 32), (0, 64)]
1532_0-ContextAliasing: []

.....
-----
Block: 3280_1
3280_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3280_1-Stack size: 9 
3280_1-Equals Mem:<< []>> 
3280_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3280_1-Equals Sto:<< []>> 
3280_1-NonEquals Sto: << []>> 
3280_1-Useless: []
3280_1-Constancy: [(8, 0), (5, 32), (4, 64)]
3280_1-ContextAliasing: []

.....
-----
Block: 3360_1
3360_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3360_1-Stack size: 10 
3360_1-Equals Mem:<< []>> 
3360_1-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3360_1-Equals Sto:<< []>> 
3360_1-NonEquals Sto: << []>> 
3360_1-Useless: []
3360_1-Constancy: [(9, 0), (6, 32), (5, 64)]
3360_1-ContextAliasing: []

.....
-----
Block: 3135_5
3135_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_5-Stack size: 9 
3135_5-Equals Mem:<< []>> 
3135_5-NonEquals Mem: << [<5,8>]>> 
3135_5-Equals Sto:<< []>> 
3135_5-NonEquals Sto: << []>> 
3135_5-Useless: []
3135_5-Constancy: [(8, 0), (5, 32), (4, 64)]
3135_5-ContextAliasing: []

.....
-----
Block: 3155_2
3155_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155_2-Stack size: 11 
3155_2-Equals Mem:<< []>> 
3155_2-NonEquals Mem: << [<7,2>]>> 
3155_2-Equals Sto:<< []>> 
3155_2-NonEquals Sto: << []>> 
3155_2-Useless: []
3155_2-Constancy: [(10, 0), (7, 32), (6, 64)]
3155_2-ContextAliasing: []

.....
-----
Block: 2724_3
2724_3Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724_3-Stack size: 15 
2724_3-Equals Mem:<< []>> 
2724_3-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724_3-Equals Sto:<< []>> 
2724_3-NonEquals Sto: << []>> 
2724_3-Useless: []
2724_3-Constancy: [(14, 0), (11, 32), (10, 64)]
2724_3-ContextAliasing: [(4, 11)]

.....
-----
Block: 2775_3
2775_3Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775_3-Stack size: 18 
2775_3-Equals Mem:<< []>> 
2775_3-NonEquals Mem: << [<12,6>]>> 
2775_3-Equals Sto:<< []>> 
2775_3-NonEquals Sto: << []>> 
2775_3-Useless: []
2775_3-Constancy: [(17, 0), (14, 32), (13, 64), (5, 32)]
2775_3-ContextAliasing: [(7, 11)]

.....
-----
Block: 3004_8
3004_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_8-Stack size: 13 
3004_8-Equals Mem:<< []>> 
3004_8-NonEquals Mem: << [<5,8>]>> 
3004_8-Equals Sto:<< []>> 
3004_8-NonEquals Sto: << []>> 
3004_8-Useless: []
3004_8-Constancy: [(12, 0), (9, 32), (8, 64)]
3004_8-ContextAliasing: []

.....
-----
Block: 3135_4
3135_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_4-Stack size: 19 
3135_4-Equals Mem:<< []>> 
3135_4-NonEquals Mem: << [<5,8>]>> 
3135_4-Equals Sto:<< []>> 
3135_4-NonEquals Sto: << []>> 
3135_4-Useless: []
3135_4-Constancy: [(18, 0), (15, 32), (14, 64), (9, 64), (8, 0), (3, 32), (2, 64)]
3135_4-ContextAliasing: []

.....
-----
Block: 3155_1
3155_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155_1-Stack size: 21 
3155_1-Equals Mem:<< []>> 
3155_1-NonEquals Mem: << [<7,2>]>> 
3155_1-Equals Sto:<< []>> 
3155_1-NonEquals Sto: << []>> 
3155_1-Useless: []
3155_1-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (5, 32), (4, 64)]
3155_1-ContextAliasing: []

.....
-----
Block: 2724_2
2724_2Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724_2-Stack size: 25 
2724_2-Equals Mem:<< []>> 
2724_2-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724_2-Equals Sto:<< []>> 
2724_2-NonEquals Sto: << []>> 
2724_2-Useless: []
2724_2-Constancy: [(24, 0), (21, 32), (20, 64), (15, 64), (14, 0), (9, 32), (8, 64)]
2724_2-ContextAliasing: [(4, 21)]

.....
-----
Block: 2775_2
2775_2Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775_2-Stack size: 28 
2775_2-Equals Mem:<< []>> 
2775_2-NonEquals Mem: << [<12,6>]>> 
2775_2-Equals Sto:<< []>> 
2775_2-NonEquals Sto: << []>> 
2775_2-Useless: []
2775_2-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (12, 32), (11, 64), (5, 32)]
2775_2-ContextAliasing: [(7, 21)]

.....
-----
Block: 3004_7
3004_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_7-Stack size: 24 
3004_7-Equals Mem:<< []>> 
3004_7-NonEquals Mem: << [<5,8>]>> 
3004_7-Equals Sto:<< []>> 
3004_7-NonEquals Sto: << []>> 
3004_7-Useless: []
3004_7-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64)]
3004_7-ContextAliasing: []

.....
-----
Block: 5348_0
5348_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5348_0-Stack size: 25 
5348_0-Equals Mem:<< []>> 
5348_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5348_0-Equals Sto:<< []>> 
5348_0-NonEquals Sto: << []>> 
5348_0-Useless: []
5348_0-Constancy: [(24, 0), (21, 32), (20, 64), (15, 64), (14, 0), (9, 32), (8, 64), (3, 0), (2, 64)]
5348_0-ContextAliasing: []

.....
-----
Block: 3135_3
3135_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_3-Stack size: 27 
3135_3-Equals Mem:<< []>> 
3135_3-NonEquals Mem: << [<5,8>]>> 
3135_3-Equals Sto:<< []>> 
3135_3-NonEquals Sto: << []>> 
3135_3-Useless: []
3135_3-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3135_3-ContextAliasing: []

.....
-----
Block: 3135_2
3135_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_2-Stack size: 27 
3135_2-Equals Mem:<< []>> 
3135_2-NonEquals Mem: << [<5,8>]>> 
3135_2-Equals Sto:<< []>> 
3135_2-NonEquals Sto: << []>> 
3135_2-Useless: []
3135_2-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (11, 32), (10, 64), (5, 0), (4, 64)]
3135_2-ContextAliasing: []

.....
-----
Block: 3155_0
3155_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155_0-Stack size: 29 
3155_0-Equals Mem:<< []>> 
3155_0-NonEquals Mem: << [<7,2>]>> 
3155_0-Equals Sto:<< []>> 
3155_0-NonEquals Sto: << []>> 
3155_0-Useless: []
3155_0-Constancy: [(28, 0), (25, 32), (24, 64), (19, 64), (18, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3155_0-ContextAliasing: []

.....
-----
Block: 2724_1
2724_1Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724_1-Stack size: 33 
2724_1-Equals Mem:<< []>> 
2724_1-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724_1-Equals Sto:<< []>> 
2724_1-NonEquals Sto: << []>> 
2724_1-Useless: []
2724_1-Constancy: [(32, 0), (29, 32), (28, 64), (23, 64), (22, 0), (17, 32), (16, 64), (11, 0), (10, 64)]
2724_1-ContextAliasing: [(4, 29)]

.....
-----
Block: 2775_1
2775_1Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775_1-Stack size: 36 
2775_1-Equals Mem:<< []>> 
2775_1-NonEquals Mem: << [<12,6>]>> 
2775_1-Equals Sto:<< []>> 
2775_1-NonEquals Sto: << []>> 
2775_1-Useless: []
2775_1-Constancy: [(35, 0), (32, 32), (31, 64), (26, 64), (25, 0), (20, 32), (19, 64), (14, 0), (13, 64), (5, 32)]
2775_1-ContextAliasing: [(7, 29)]

.....
-----
Block: 3004_6
3004_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_6-Stack size: 29 
3004_6-Equals Mem:<< []>> 
3004_6-NonEquals Mem: << [<5,8>]>> 
3004_6-Equals Sto:<< []>> 
3004_6-NonEquals Sto: << []>> 
3004_6-Useless: []
3004_6-Constancy: [(28, 0), (25, 32), (24, 64), (19, 64), (18, 0), (13, 32), (12, 64), (7, 0), (6, 64)]
3004_6-ContextAliasing: []

.....
-----
Block: 3135_1
3135_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_1-Stack size: 24 
3135_1-Equals Mem:<< []>> 
3135_1-NonEquals Mem: << [<5,8>]>> 
3135_1-Equals Sto:<< []>> 
3135_1-NonEquals Sto: << []>> 
3135_1-Useless: []
3135_1-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (8, 32), (7, 64), (2, 0)]
3135_1-ContextAliasing: []

.....
-----
Block: 3155
3155Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155-Stack size: 26 
3155-Equals Mem:<< []>> 
3155-NonEquals Mem: << [<7,2>]>> 
3155-Equals Sto:<< []>> 
3155-NonEquals Sto: << []>> 
3155-Useless: []
3155-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (10, 32), (9, 64), (4, 0)]
3155-ContextAliasing: []

.....
-----
Block: 2724_0
2724_0Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724_0-Stack size: 30 
2724_0-Equals Mem:<< []>> 
2724_0-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724_0-Equals Sto:<< []>> 
2724_0-NonEquals Sto: << []>> 
2724_0-Useless: []
2724_0-Constancy: [(29, 0), (26, 32), (25, 64), (20, 64), (19, 0), (14, 32), (13, 64), (8, 0)]
2724_0-ContextAliasing: [(4, 26)]

.....
-----
Block: 2775_0
2775_0Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775_0-Stack size: 33 
2775_0-Equals Mem:<< []>> 
2775_0-NonEquals Mem: << [<12,6>]>> 
2775_0-Equals Sto:<< []>> 
2775_0-NonEquals Sto: << []>> 
2775_0-Useless: []
2775_0-Constancy: [(32, 0), (29, 32), (28, 64), (23, 64), (22, 0), (17, 32), (16, 64), (11, 0), (5, 32)]
2775_0-ContextAliasing: [(7, 26)]

.....
-----
Block: 3004_5
3004_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_5-Stack size: 26 
3004_5-Equals Mem:<< []>> 
3004_5-NonEquals Mem: << [<5,8>]>> 
3004_5-Equals Sto:<< []>> 
3004_5-NonEquals Sto: << []>> 
3004_5-Useless: []
3004_5-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (10, 32), (9, 64), (4, 0)]
3004_5-ContextAliasing: []

.....
-----
Block: 3740
3740Instr:<<['JUMPDEST', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH2 0x0eb2', 'DUP5', 'PUSH1 0x40', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x14cf', 'JUMP']>> 
3740-Stack size: 19 
3740-Equals Mem:<< []>> 
3740-NonEquals Mem: << [<3,6>]>> 
3740-Equals Sto:<< []>> 
3740-NonEquals Sto: << []>> 
3740-Useless: []
3740-Constancy: [(18, 0), (15, 32), (14, 64), (9, 64), (8, 0), (0, 0)]
3740-ContextAliasing: []

.....
-----
Block: 5348
5348Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5348-Stack size: 21 
5348-Equals Mem:<< []>> 
5348-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>]>> 
5348-Equals Sto:<< []>> 
5348-NonEquals Sto: << []>> 
5348-Useless: []
5348-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (2, 0)]
5348-ContextAliasing: []

.....
-----
Block: 3135_0
3135_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_0-Stack size: 23 
3135_0-Equals Mem:<< []>> 
3135_0-NonEquals Mem: << [<5,8>]>> 
3135_0-Equals Sto:<< []>> 
3135_0-NonEquals Sto: << []>> 
3135_0-Useless: []
3135_0-Constancy: [(22, 0), (19, 32), (18, 64), (13, 64), (12, 0), (4, 0)]
3135_0-ContextAliasing: []

.....
-----
Block: 3793
3793Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'SWAP3', 'PUSH1 0x20', 'SWAP4', 'DUP1', 'DUP6', 'MSTORE', 'PUSH1 0xff', 'SWAP2', 'PUSH1 0x40', 'SWAP1', 'DUP4', 'DUP3', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x13b9', 'JUMPI']>> 
3793-Stack size: 18 
3793-Equals Mem:<< []>> 
3793-NonEquals Mem: << [<5,12>]>> 
3793-Equals Sto:<< []>> 
3793-NonEquals Sto: << []>> 
3793-Useless: []
3793-Constancy: [(17, 0), (14, 32), (13, 64), (8, 64), (7, 0), (3, 0), (1, 0)]
3793-ContextAliasing: []

.....
-----
Block: 3870
3870Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'SWAP10', 'DUP11', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'DUP1', 'SWAP2', 'DIV', 'SWAP9', 'DUP7', 'PUSH1 0x06', 'SLOAD', 'AND', 'PUSH2 0x12ec', 'JUMPI']>> 
3870-Stack size: 24 
3870-Equals Mem:<< []>> 
3870-NonEquals Mem: << [<3,9>]>> 
3870-Equals Sto:<< []>> 
3870-NonEquals Sto: << []>> 
3870-Useless: [3, 9]
3870-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (9, 32), (7, 0), (4, 64), (3, 32)]
3870-ContextAliasing: []

.....
-----
Block: 3970
3970Instr:<<['JUMPDEST', 'POP', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'DUP3', 'DUP7', 'MSTORE', 'DUP7', 'DUP11', 'KECCAK256', 'SLOAD', 'SWAP2', 'DUP1', 'DUP11', 'PUSH1 0xa8', 'SHR', 'AND', 'ISZERO', 'SWAP2', 'DUP3', 'PUSH2 0x11a2', 'JUMPI']>> 
3970-Stack size: 26 
3970-Equals Mem:<< []>> 
3970-NonEquals Mem: << [<4,9>]>> 
3970-Equals Sto:<< []>> 
3970-NonEquals Sto: << []>> 
3970-Useless: []
3970-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
3970-ContextAliasing: []

.....
-----
Block: 4186
4186Instr:<<['SWAP9', 'SWAP6', 'SWAP4', 'SWAP1', 'SWAP2', 'SWAP3', 'DUP11', 'SWAP8', 'SWAP6', 'SWAP4', 'DUP10', 'MLOAD', 'SWAP11', 'DUP12', 'SWAP9', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP11', 'MSTORE', 'PUSH1 0xa4', 'DUP11', 'ADD', 'SWAP4', 'DUP11', 'ADD', 'MSTORE', 'DUP10', 'PUSH1 0x24', 'DUP11', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP11', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP9', 'ADD', 'SWAP6', 'SWAP4', 'DUP10', 'SWAP1']>> 
4186-Stack size: 28 
4186-Equals Mem:<< []>> 
4186-NonEquals Mem: << [<19,11>, <19,37>, <26,11>, <26,37>, <31,11>, <31,37>, <36,11>, <36,37>, <40,11>, <40,37>, <11,37>]>> 
4186-Equals Sto:<< []>> 
4186-NonEquals Sto: << []>> 
4186-Useless: []
4186-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (10, 0), (8, 64), (2, 32)]
4186-ContextAliasing: []

.....
-----
Block: 3004_4
3004_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_4-Stack size: 22 
3004_4-Equals Mem:<< []>> 
3004_4-NonEquals Mem: << [<5,8>]>> 
3004_4-Equals Sto:<< []>> 
3004_4-NonEquals Sto: << []>> 
3004_4-Useless: []
3004_4-Constancy: [(21, 0), (18, 32), (17, 64), (12, 64), (11, 0), (2, 0)]
3004_4-ContextAliasing: []

.....
-----
Block: 4390
4390Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP9', 'MSTORE', 'DUP14', 'SWAP11', 'POP', 'DUP13', 'SWAP10', 'POP', 'SWAP7', 'DUP3', 'ADD', 'SWAP7', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x1094', 'JUMP']>> 
4390-Stack size: 31 
4390-Equals Mem:<< []>> 
4390-NonEquals Mem: << [<6,2>]>> 
4390-Equals Sto:<< []>> 
4390-NonEquals Sto: << []>> 
4390-Useless: []
4390-Constancy: [(30, 0), (27, 32), (26, 64), (21, 64), (20, 0), (13, 0), (11, 64), (10, 0), (2, 32)]
4390-ContextAliasing: [(12, 21)]

.....
-----
Block: 3280_0
3280_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3280_0-Stack size: 31 
3280_0-Equals Mem:<< []>> 
3280_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3280_0-Equals Sto:<< []>> 
3280_0-NonEquals Sto: << []>> 
3280_0-Useless: []
3280_0-Constancy: [(30, 0), (27, 32), (26, 64), (21, 64), (20, 0), (13, 0), (11, 64), (5, 32)]
3280_0-ContextAliasing: []

.....
-----
Block: 3360_0
3360_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3360_0-Stack size: 32 
3360_0-Equals Mem:<< []>> 
3360_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3360_0-Equals Sto:<< []>> 
3360_0-NonEquals Sto: << []>> 
3360_0-Useless: []
3360_0-Constancy: [(31, 0), (28, 32), (27, 64), (22, 64), (21, 0), (14, 0), (12, 64), (6, 32)]
3360_0-ContextAliasing: []

.....
-----
Block: 5543_0
5543_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5543_0-Stack size: 34 
5543_0-Equals Mem:<< []>> 
5543_0-NonEquals Mem: << [<5,8>]>> 
5543_0-Equals Sto:<< []>> 
5543_0-NonEquals Sto: << []>> 
5543_0-Useless: []
5543_0-Constancy: [(33, 0), (30, 32), (29, 64), (24, 64), (23, 0), (16, 0), (14, 64), (8, 32)]
5543_0-ContextAliasing: [(13, 33)]

.....
-----
Block: 3004_3
3004_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_3-Stack size: 35 
3004_3-Equals Mem:<< []>> 
3004_3-NonEquals Mem: << [<5,8>]>> 
3004_3-Equals Sto:<< []>> 
3004_3-NonEquals Sto: << []>> 
3004_3-Useless: []
3004_3-Constancy: [(34, 0), (31, 32), (30, 64), (25, 64), (24, 0), (17, 0), (15, 64), (9, 32)]
3004_3-ContextAliasing: []

.....
-----
Block: 5543
5543Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5543-Stack size: 30 
5543-Equals Mem:<< []>> 
5543-NonEquals Mem: << [<5,8>]>> 
5543-Equals Sto:<< []>> 
5543-NonEquals Sto: << []>> 
5543-Useless: []
5543-Constancy: [(29, 0), (26, 32), (25, 64), (20, 64), (19, 0), (12, 0), (10, 64), (4, 32)]
5543-ContextAliasing: [(9, 29)]

.....
-----
Block: 3004_2
3004_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_2-Stack size: 28 
3004_2-Equals Mem:<< []>> 
3004_2-NonEquals Mem: << [<5,8>]>> 
3004_2-Equals Sto:<< []>> 
3004_2-NonEquals Sto: << []>> 
3004_2-Useless: []
3004_2-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (10, 0), (8, 64), (2, 32)]
3004_2-ContextAliasing: []

.....
-----
Block: 4565
4565Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'DIV', 'SWAP10', 'PUSH0', 'PUSH2 0x0f82', 'JUMP']>> 
4565-Stack size: 29 
4565-Equals Mem:<< []>> 
4565-NonEquals Mem: << [<3,5>]>> 
4565-Equals Sto:<< []>> 
4565-NonEquals Sto: << []>> 
4565-Useless: [3, 5]
4565-Constancy: [(28, 0), (25, 32), (24, 64), (19, 64), (18, 0), (12, 0), (9, 64), (8, 32), (1, 32)]
4565-ContextAliasing: []

.....
-----
Block: 3004_1
3004_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_1-Stack size: 31 
3004_1-Equals Mem:<< []>> 
3004_1-NonEquals Mem: << [<5,8>]>> 
3004_1-Equals Sto:<< []>> 
3004_1-NonEquals Sto: << []>> 
3004_1-Useless: []
3004_1-Constancy: [(30, 0), (27, 32), (26, 64), (21, 64), (20, 0), (14, 0), (11, 64), (10, 32), (3, 32)]
3004_1-ContextAliasing: []

.....
-----
Block: 5445
5445Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5445-Stack size: 28 
5445-Equals Mem:<< []>> 
5445-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5445-Equals Sto:<< []>> 
5445-NonEquals Sto: << []>> 
5445-Useless: []
5445-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (8, 64), (7, 32)]
5445-ContextAliasing: []

.....
-----
Block: 3135_6
3135_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_6-Stack size: 30 
3135_6-Equals Mem:<< []>> 
3135_6-NonEquals Mem: << [<5,8>]>> 
3135_6-Equals Sto:<< []>> 
3135_6-NonEquals Sto: << []>> 
3135_6-Useless: []
3135_6-Constancy: [(29, 0), (26, 32), (25, 64), (20, 64), (19, 0), (13, 0), (10, 64), (9, 32)]
3135_6-ContextAliasing: []

.....
-----
Block: 4610
4610Instr:<<['DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x01', 'DUP7', 'MSTORE', 'PUSH2 0x1215', 'DUP12', 'DUP9', 'DUP13', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d71', 'JUMP']>> 
4610-Stack size: 26 
4610-Equals Mem:<< []>> 
4610-NonEquals Mem: << [<2,5>]>> 
4610-Equals Sto:<< []>> 
4610-NonEquals Sto: << []>> 
4610-Useless: []
4610-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4610-ContextAliasing: []

.....
-----
Block: 4659
4659Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP12', 'MSTORE', 'PUSH1 0x11', 'DUP10', 'MSTORE', 'PUSH1 0x24', 'DUP12', 'REVERT']>> 
4659-Stack size: 27 
4659-Equals Mem:<< []>> 
4659-NonEquals Mem: << [<5,8>]>> 
4659-Equals Sto:<< []>> 
4659-NonEquals Sto: << []>> 
4659-Useless: []
4659-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (10, 0), (7, 64), (6, 32)]
4659-ContextAliasing: []

.....
-----
Block: 4678
4678Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
4678-Stack size: 26 
4678-Equals Mem:<< []>> 
4678-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
4678-Equals Sto:<< []>> 
4678-NonEquals Sto: << []>> 
4678-Useless: []
4678-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4678-ContextAliasing: []

.....
-----
Block: 3135
3135Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135-Stack size: 28 
3135-Equals Mem:<< []>> 
3135-NonEquals Mem: << [<5,8>]>> 
3135-Equals Sto:<< []>> 
3135-NonEquals Sto: << []>> 
3135-Useless: []
3135-Constancy: [(27, 0), (24, 32), (23, 64), (18, 64), (17, 0), (11, 0), (8, 64), (7, 32)]
3135-ContextAliasing: []

.....
-----
Block: 4744
4744Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
4744-Stack size: 26 
4744-Equals Mem:<< []>> 
4744-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>]>> 
4744-Equals Sto:<< []>> 
4744-NonEquals Sto: << []>> 
4744-Useless: []
4744-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4744-ContextAliasing: []

.....
-----
Block: 4810
4810Instr:<<['JUMPDEST', 'POP', 'DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x03', 'DUP7', 'MSTORE', 'DUP2', 'DUP8', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x0f6e', 'JUMP']>> 
4810-Stack size: 27 
4810-Equals Mem:<< []>> 
4810-NonEquals Mem: << [<4,7>]>> 
4810-Equals Sto:<< []>> 
4810-NonEquals Sto: << []>> 
4810-Useless: []
4810-Constancy: [(26, 0), (23, 32), (22, 64), (17, 64), (16, 0), (10, 0), (7, 64), (6, 32)]
4810-ContextAliasing: []

.....
-----
Block: 4864
4864Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'DUP5', 'DUP9', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'ISZERO', 'PUSH2 0x1322', 'JUMPI']>> 
4864-Stack size: 24 
4864-Equals Mem:<< []>> 
4864-NonEquals Mem: << [<2,5>]>> 
4864-Equals Sto:<< []>> 
4864-NonEquals Sto: << []>> 
4864-Useless: []
4864-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (4, 64), (3, 32)]
4864-ContextAliasing: []

.....
-----
Block: 4882
4882Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'NUMBER', 'DUP6', 'DUP10', 'KECCAK256', 'SSTORE', 'PUSH2 0x0f58', 'JUMP']>> 
4882-Stack size: 24 
4882-Equals Mem:<< []>> 
4882-NonEquals Mem: << [<2,5>]>> 
4882-Equals Sto:<< []>> 
4882-NonEquals Sto: << []>> 
4882-Useless: []
4882-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (4, 64), (3, 32)]
4882-ContextAliasing: []

.....
-----
Block: 4898
4898Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP8', 'ADD', 'DUP6', 'SWAP1', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'DUP2', 'DUP5', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'SWAP1', 'REVERT']>> 
4898-Stack size: 24 
4898-Equals Mem:<< []>> 
4898-NonEquals Mem: << [<7,2>, <13,2>, <18,2>, <23,2>, <28,2>, <35,2>]>> 
4898-Equals Sto:<< []>> 
4898-NonEquals Sto: << []>> 
4898-Useless: []
4898-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (7, 0), (4, 64), (3, 32)]
4898-ContextAliasing: []

.....
-----
Block: 3004_0
3004_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004_0-Stack size: 26 
3004_0-Equals Mem:<< []>> 
3004_0-NonEquals Mem: << [<5,8>]>> 
3004_0-Equals Sto:<< []>> 
3004_0-NonEquals Sto: << []>> 
3004_0-Useless: []
3004_0-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (11, 32), (9, 0), (6, 64), (5, 32)]
3004_0-ContextAliasing: []

.....
-----
Block: 5445_0
5445_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5445_0-Stack size: 24 
5445_0-Equals Mem:<< []>> 
5445_0-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5445_0-Equals Sto:<< []>> 
5445_0-NonEquals Sto: << []>> 
5445_0-Useless: []
5445_0-Constancy: [(23, 0), (20, 32), (19, 64), (14, 64), (13, 0), (9, 32), (7, 0), (4, 64), (3, 32)]
5445_0-ContextAliasing: []

.....
-----
Block: 3135_7
3135_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135_7-Stack size: 26 
3135_7-Equals Mem:<< []>> 
3135_7-NonEquals Mem: << [<5,8>]>> 
3135_7-Equals Sto:<< []>> 
3135_7-NonEquals Sto: << []>> 
3135_7-Useless: []
3135_7-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (11, 32), (9, 0), (6, 64), (5, 32)]
3135_7-ContextAliasing: []

.....
-----
Block: 5076
5076Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5076-Stack size: 17 
5076-Equals Mem:<< []>> 
5076-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5076-Equals Sto:<< []>> 
5076-NonEquals Sto: << []>> 
5076-Useless: []
5076-Constancy: [(16, 0), (13, 32), (12, 64), (7, 64), (6, 0), (0, 0)]
5076-ContextAliasing: []

.....
-----
Block: 5163
5163Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5163-Stack size: 17 
5163-Equals Mem:<< []>> 
5163-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5163-Equals Sto:<< []>> 
5163-NonEquals Sto: << []>> 
5163-Useless: []
5163-Constancy: [(16, 0), (13, 32), (12, 64), (7, 64), (6, 0), (0, 0)]
5163-ContextAliasing: []

.....
-----
Block: 5244
5244Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5244-Stack size: 17 
5244-Equals Mem:<< []>> 
5244-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5244-Equals Sto:<< []>> 
5244-NonEquals Sto: << []>> 
5244-Useless: []
5244-Constancy: [(16, 0), (13, 32), (12, 64), (7, 64), (6, 0), (4, 0)]
5244-ContextAliasing: []

.....
-----
Block: 2635
2635Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH8 0x8ac7230489e80000', 'DUP2', 'MSTORE', 'RETURN']>> 
2635-Stack size: 5 
2635-Equals Mem:<< []>> 
2635-NonEquals Mem: << [<5,2>]>> 
2635-Equals Sto:<< []>> 
2635-NonEquals Sto: << []>> 
2635-Useless: []
2635-Constancy: [(4, 0), (1, 0), (0, 64)]
2635-ContextAliasing: []

.....
-----
Block: 2670
2670Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x12', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2670-Stack size: 5 
2670-Equals Mem:<< []>> 
2670-NonEquals Mem: << [<8,5>]>> 
2670-Equals Sto:<< []>> 
2670-NonEquals Sto: << []>> 
2670-Useless: []
2670-Constancy: [(4, 0), (1, 0), (0, 64)]
2670-ContextAliasing: []

.....
-----
Block: 3280
3280Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3280-Stack size: 10 
3280-Equals Mem:<< []>> 
3280-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3280-Equals Sto:<< []>> 
3280-NonEquals Sto: << []>> 
3280-Useless: []
3280-Constancy: [(9, 0), (6, 0), (5, 32), (4, 64)]
3280-ContextAliasing: []

.....
-----
Block: 3360
3360Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3360-Stack size: 11 
3360-Equals Mem:<< []>> 
3360-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3360-Equals Sto:<< []>> 
3360-NonEquals Sto: << []>> 
3360-Useless: []
3360-Constancy: [(10, 0), (7, 0), (6, 32), (5, 64)]
3360-ContextAliasing: []

.....
-----
Block: 2826
2826Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP2', 'MSTORE', 'PUSH6 0x4946594b594b', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x40', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0aa4', 'JUMP']>> 
2826-Stack size: 6 
2826-Equals Mem:<< []>> 
2826-NonEquals Mem: << [<3,12>, <3,10>, <10,12>]>> 
2826-Equals Sto:<< []>> 
2826-NonEquals Sto: << []>> 
2826-Useless: []
2826-Constancy: [(5, 0), (2, 64)]
2826-ContextAliasing: []

.....
-----
Block: 2724
2724Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724-Stack size: 9 
2724-Equals Mem:<< []>> 
2724-NonEquals Mem: << [<4,6>, <4,12>, <12,6>]>> 
2724-Equals Sto:<< []>> 
2724-NonEquals Sto: << []>> 
2724-Useless: []
2724-Constancy: [(8, 0), (5, 64)]
2724-ContextAliasing: [(3, 4), (3, 8), (4, 8)]

.....
-----
Block: 2775
2775Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775-Stack size: 12 
2775-Equals Mem:<< []>> 
2775-NonEquals Mem: << [<12,6>]>> 
2775-Equals Sto:<< []>> 
2775-NonEquals Sto: << []>> 
2775-Useless: []
2775-Constancy: [(11, 0), (8, 64), (5, 32)]
2775-ContextAliasing: [(6, 4), (6, 8), (7, 8)]

.....
-----
Block: 3004
3004Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004-Stack size: 8 
3004-Equals Mem:<< []>> 
3004-NonEquals Mem: << [<5,8>]>> 
3004-Equals Sto:<< []>> 
3004-NonEquals Sto: << []>> 
3004-Useless: []
3004-Constancy: [(7, 0), (4, 64)]
3004-ContextAliasing: []

.....
-----
Block: 328
328Instr:<<['DUP1', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x0a', 'SSTORE', 'DUP1', 'RETURN']>> 
328-Stack size: 2 
328-Equals Mem:<< []>> 
328-NonEquals Mem: << []>> 
328-Equals Sto:<< []>> 
328-NonEquals Sto: << [<2,4>]>> 
328-Useless: []
328-Constancy: [(1, 0)]
328-ContextAliasing: []

.....
-----
Block: 490
490Instr:<<['PUSH1 0x13', 'SLOAD', 'SWAP2', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'PUSH12 0xffffffffffffffffffffffff', 'PUSH1 0xa0', 'SHL', 'SWAP4', 'DUP2', 'DUP6', 'DUP3', 'AND', 'OR', 'PUSH1 0x13', 'SSTORE', 'ADDRESS', 'ISZERO', 'PUSH2 0x04fd', 'JUMPI']>> 
490-Stack size: 5 
490-Equals Mem:<< []>> 
490-NonEquals Mem: << []>> 
490-Equals Sto:<< [<1,14>]>> 
490-NonEquals Sto: << []>> 
490-Useless: []
490-Constancy: [(4, 0), (0, 64)]
490-ContextAliasing: []

.....
-----
Block: 923
923Instr:<<['JUMPDEST', 'POP', 'POP', 'DUP1', 'SLOAD', 'PUSH3 0xff00ff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH3 0x010001', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
923-Stack size: 4 
923-Equals Mem:<< []>> 
923-NonEquals Mem: << []>> 
923-Equals Sto:<< [<4,15>]>> 
923-NonEquals Sto: << []>> 
923-Useless: []
923-Constancy: [(3, 0)]
923-ContextAliasing: []

.....
-----
Block: 2002
2002Instr:<<['JUMPDEST', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP7', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'DUP9', 'PUSH1 0x14', 'SLOAD', 'AND', 'OR', 'PUSH1 0x14', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP4', 'PUSH2 0x07f3', 'DUP6', 'PUSH2 0x0bd0', 'JUMP']>> 
2002-Stack size: 8 
2002-Equals Mem:<< []>> 
2002-NonEquals Mem: << []>> 
2002-Equals Sto:<< [<11,15>]>> 
2002-NonEquals Sto: << []>> 
2002-Useless: []
2002-Constancy: [(7, 0), (5, 0), (3, 64), (2, 32)]
2002-ContextAliasing: []

.....
-----
Block: 2240
2240Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'DUP1', 'DUP3', 'DUP1', 'DUP1', 'DUP1', 'DUP1', 'PUSH2 0x07b5', 'JUMP']>> 
2240-Stack size: 4 
2240-Equals Mem:<< []>> 
2240-NonEquals Mem: << []>> 
2240-Equals Sto:<< [<4,7>]>> 
2240-NonEquals Sto: << []>> 
2240-Useless: []
2240-Constancy: [(3, 0), (1, 0)]
2240-ContextAliasing: []

.....
-----
Block: 3832
3832Instr:<<['DUP7', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0b', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x13aa', 'JUMPI']>> 
3832-Stack size: 21 
3832-Equals Mem:<< []>> 
3832-NonEquals Mem: << []>> 
3832-Equals Sto:<< []>> 
3832-NonEquals Sto: << [<3,5>]>> 
3832-Useless: []
3832-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (6, 32), (4, 0), (1, 64)]
3832-ContextAliasing: []

.....
-----
Block: 4332
4332Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x1109', 'JUMPI']>> 
4332-Stack size: 21 
4332-Equals Mem:<< []>> 
4332-NonEquals Mem: << []>> 
4332-Equals Sto:<< [<4,7>]>> 
4332-NonEquals Sto: << []>> 
4332-Useless: []
4332-Constancy: [(20, 0), (17, 32), (16, 64), (11, 64), (10, 0), (1, 0)]
4332-ContextAliasing: []

.....
-----
Block: 4477
4477Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'LT', 'PUSH2 0x0fb3', 'JUMP']>> 
4477-Stack size: 26 
4477-Equals Mem:<< []>> 
4477-NonEquals Mem: << []>> 
4477-Equals Sto:<< []>> 
4477-NonEquals Sto: << [<3,5>]>> 
4477-Useless: []
4477-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4477-ContextAliasing: []

.....
-----
Block: 4522
4522Instr:<<['JUMPDEST', 'DUP4', 'SWAP2', 'SWAP12', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x11e3', 'JUMPI']>> 
4522-Stack size: 26 
4522-Equals Mem:<< []>> 
4522-NonEquals Mem: << []>> 
4522-Equals Sto:<< []>> 
4522-NonEquals Sto: << [<6,8>]>> 
4522-Useless: []
4522-Constancy: [(25, 0), (22, 32), (21, 64), (16, 64), (15, 0), (9, 0), (6, 64), (5, 32)]
4522-ContextAliasing: []

.....
-----
Block: 3832_0
3832_0Instr:<<['DUP7', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0b', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x13aa', 'JUMPI']>> 
3832_0-Stack size: 16 
3832_0-Equals Mem:<< []>> 
3832_0-NonEquals Mem: << []>> 
3832_0-Equals Sto:<< []>> 
3832_0-NonEquals Sto: << [<3,5>]>> 
3832_0-Useless: []
3832_0-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (6, 32), (4, 0), (1, 64)]
3832_0-ContextAliasing: []

.....
-----
Block: 4522_0
4522_0Instr:<<['JUMPDEST', 'DUP4', 'SWAP2', 'SWAP12', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x11e3', 'JUMPI']>> 
4522_0-Stack size: 21 
4522_0-Equals Mem:<< []>> 
4522_0-NonEquals Mem: << []>> 
4522_0-Equals Sto:<< []>> 
4522_0-NonEquals Sto: << [<6,8>]>> 
4522_0-Useless: []
4522_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4522_0-ContextAliasing: []

.....
-----
Block: 4477_0
4477_0Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'LT', 'PUSH2 0x0fb3', 'JUMP']>> 
4477_0-Stack size: 21 
4477_0-Equals Mem:<< []>> 
4477_0-NonEquals Mem: << []>> 
4477_0-Equals Sto:<< []>> 
4477_0-NonEquals Sto: << [<3,5>]>> 
4477_0-Useless: []
4477_0-Constancy: [(20, 0), (17, 0), (16, 32), (15, 64), (9, 0), (6, 64), (5, 32)]
4477_0-ContextAliasing: []

.....
-----
Block: 4332_0
4332_0Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x1109', 'JUMPI']>> 
4332_0-Stack size: 16 
4332_0-Equals Mem:<< []>> 
4332_0-NonEquals Mem: << []>> 
4332_0-Equals Sto:<< [<4,7>]>> 
4332_0-NonEquals Sto: << []>> 
4332_0-Useless: []
4332_0-Constancy: [(15, 0), (12, 0), (11, 32), (10, 64), (1, 0)]
4332_0-ContextAliasing: []

.....
-----
Block: 3110_6
3110_6Instr:<<['PUSH1 0x40', 'MSTORE', 'JUMP']>> 
3110_6-Stack size: 8 
3110_6-Equals Mem:<< []>> 
3110_6-NonEquals Mem: << []>> 
3110_6-Equals Sto:<< []>> 
3110_6-NonEquals Sto: << []>> 
3110_6-Useless: [1]
3110_6-Constancy: [(7, 0), (4, 32)]
3110_6-ContextAliasing: [(5, 4)]

.....
********************************** END
Memory Analysis: 0.2558639930211939s

*************************************************************
File: Ownable
Build CFG: 0.0033863980206660926s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 1
Memory read accesses ContractOwnable: 2
Memory write accesses ContractOwnable: 2
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 64
64Instr:<<['SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
64-Stack size: 1 
64-Equals Mem:<< []>> 
64-NonEquals Mem: << [<12,2>]>> 
64-Equals Sto:<< []>> 
64-NonEquals Sto: << []>> 
64-Useless: []
64-Constancy: [(0, 0)]
64-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.004101609985809773s

*************************************************************
File: SafeMath
Build CFG: 0.00036036601522937417s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 0
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 9.14839911274612e-05s

*************************************************************
FILERES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK;332;728;65;261;184;19;0.5499324909760617
FILERES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_Ownable;15;15;1;3;2;0;0.007530068978667259
FILERES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_SafeMath;1;1;0;0;0;0;0.0004639779799617827


Aux path: /tmp/0x00//ethir_4e0c0385ac7342abaf1b0d443664c32d
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 391
391Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'DUP5', 'MSTORE', 'PUSH1 0x02', 'DUP7', 'MSTORE', 'SWAP3', 'KECCAK256', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'SWAP1', 'DUP4', 'MSTORE', 'DUP2', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
391-Stack size: 9 
391-Equals Mem:<< [<10,21>, <13,24>]>> 
391-NonEquals Mem: << [<10,30>, <10,13>, <10,24>, <10,33>, <13,30>, <13,21>, <13,33>, <21,30>, <21,24>, <21,33>, <24,30>, <24,33>, <33,15>, <33,27>, <33,30>, <15,30>, <27,30>]>> 
391-Equals Sto:<< []>> 
391-NonEquals Sto: << []>> 
391-Useless: []
391-Constancy: [(8, 0), (5, 32), (4, 64), (3, 0), (1, 64)]
391-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<9,20>, <12,23>], 'memory_deps_noneqs': [<9,29>, <9,12>, <9,23>, <9,32>, <12,29>, <12,20>, <12,32>, <20,29>, <20,23>, <20,32>, <23,29>, <23,32>, <14,32>, <26,32>, <29,32>, <14,29>, <26,29>]}
{'memory_deps_eqs': [<9,20>, <12,23>], 'memory_deps_noneqs': [<9,29>, <9,12>, <9,23>, <9,32>, <12,29>, <12,20>, <12,32>, <20,29>, <20,23>, <20,32>, <23,29>, <23,32>, <14,32>, <26,32>, <29,32>, <14,29>, <26,29>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{27: ((('s(15)', 'sload0'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'keccak2560'), 2), (('0', 's(1)', 'keccak2561'), 2), (('s(15)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(2)', 's(7)', 'mstore'), 2), (('s(0)', '2', 'mstore'), 2), (('s(2)', 's(4)', 'keccak2560'), 2), (('0', 's(1)', 'keccak2561'), 2), (('s(1)', 'mload0'), 1), (('s(6)', 's(16)', 'mstore'), 2)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{27: ((('s(15)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_391_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_391_statistics.csv

Estimated initial gas: 2250
Estimated gas optimized: 2250

Estimated initial size in bytes: 39
Estimated size optimized in bytes: 39

Initial number of instructions: 35
Final number of instructions: 35

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_391;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;391;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x02 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;2250;39;35;2250;39;35;0;0;0;True;False;False;False;2.134553504001815;4;4;2100;2100

Block: 1199
1199Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x20', 'PUSH1 0x84', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1199-Stack size: 7 
1199-Equals Mem:<< []>> 
1199-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>, <31,5>]>> 
1199-Equals Sto:<< []>> 
1199-NonEquals Sto: << []>> 
1199-Useless: []
1199-Constancy: [(6, 0), (2, 64)]
1199-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>, <4,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1199 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1277
1277Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
1277-Stack size: 8 
1277-Equals Mem:<< []>> 
1277-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
1277-Equals Sto:<< []>> 
1277-NonEquals Sto: << []>> 
1277-Useless: []
1277-Constancy: [(7, 0), (3, 64)]
1277-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(6)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(9)', '32', 'mstore'), 2), (('s(11)', '36', 'mstore'), 2), (('s(13)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(15)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized code stored in /tmp/0x00/IFYKYK_1277_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1277_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 94

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 79

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1277;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1277;2;True;False;False;JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST DUP4 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;94;79;33;94;79;33;0;0;0;True;False;False;False;2.1384886060259305;2;4;0;0

Block: 1356
1356Instr:<<['JUMPDEST', 'SWAP1', 'PUSH1 0x20', 'PUSH1 0x64', 'SWAP3', 'MLOAD', 'SWAP2', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP4', 'MSTORE', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
1356-Stack size: 5 
1356-Equals Mem:<< []>> 
1356-NonEquals Mem: << [<11,5>, <14,5>, <19,5>, <24,5>]>> 
1356-Equals Sto:<< []>> 
1356-NonEquals Sto: << []>> 
1356-Useless: []
1356-Constancy: [(4, 0), (0, 64)]
1356-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,10>, <4,13>, <4,18>, <4,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '23', 'mstore'), 2), (('s(9)', '52670383177537149983225730548340231168144935501260929414795948319927108108288', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 DUP3 PUSH1 0x64 SWAP5 SWAP1 ADD MSTORE DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_1356_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1356_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 64

Estimated initial size in bytes: 67
Estimated size optimized in bytes: 92

Initial number of instructions: 26
Final number of instructions: 23

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1356;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1356;2;True;True;False;JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461bcd PUSH1 0xe5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 DUP3 PUSH1 0x64 SWAP5 SWAP1 ADD MSTORE DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 DUP2 PUSH1 0x44 ADD MSTORE REVERT;73;67;26;64;92;23;9;-25;3;True;False;False;False;2.101610097975936;1;3;0;0

Block: 1442
1442Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0xff', 'PUSH1 0x06', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
1442-Stack size: 5 
1442-Equals Mem:<< []>> 
1442-NonEquals Mem: << [<12,7>]>> 
1442-Equals Sto:<< []>> 
1442-NonEquals Sto: << []>> 
1442-Useless: []
1442-Constancy: [(4, 0), (1, 0), (0, 64)]
1442-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{4: ((('6', 'sload0'), 1), 0)}
Storage order: [(('6', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(7)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
MEJORADO: /tmp/gasol_a24e7d7005164bf5aaf0bbcfaa779fa0/jsons/isolated_block_0_0_input.json --- (6, 5)
{4: ((('6', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0xff PUSH1 0x06 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
MLOAD PUSH1 0x6 SLOAD PUSH1 0xff AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized code stored in /tmp/0x00/IFYKYK_1442_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1442_statistics.csv

Estimated initial gas: 2136
Estimated gas optimized: 2130

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1442;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1442;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0xff PUSH1 0x06 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;MLOAD PUSH1 0x6 SLOAD PUSH1 0xff AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;2136;17;14;2130;15;12;6;2;2;True;False;False;False;0.0891447490430437;0;0;2100;2100

Block: 1478
1478Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x11', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1478-Stack size: 5 
1478-Equals Mem:<< []>> 
1478-NonEquals Mem: << [<8,5>]>> 
1478-Equals Sto:<< []>> 
1478-NonEquals Sto: << []>> 
1478-Useless: []
1478-Constancy: [(4, 0), (1, 0), (0, 64)]
1478-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('17', 'sload0'), 1), 0)}
Storage order: [(('17', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('17', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x11 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_1478_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1478_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1478;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1478;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x11 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.0354052500333637;0;0;2100;2100

Block: 1532
1532Instr:<<['JUMPDEST', 'MLOAD', 'PUSH1 0x01', 'DUP2', 'MSTORE', 'RETURN']>> 
1532-Stack size: 5 
1532-Equals Mem:<< []>> 
1532-NonEquals Mem: << [<4,1>]>> 
1532-Equals Sto:<< []>> 
1532-NonEquals Sto: << []>> 
1532-Useless: []
1532-Constancy: [(0, 64), (1, 32)]
1532-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<0,3>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(1)', '1', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_1532_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1532_statistics.csv

Estimated initial gas: 13
Estimated gas optimized: 13

Estimated initial size in bytes: 7
Estimated size optimized in bytes: 7

Initial number of instructions: 6
Final number of instructions: 6

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1532;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1532;2;False;True;True;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;JUMPDEST MLOAD PUSH1 0x01 DUP2 MSTORE RETURN;13;7;6;13;7;6;0;0;0;True;False;False;False;0.00870069197844714;0;0;0;0

Block: 1563
1563Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x10', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1563-Stack size: 5 
1563-Equals Mem:<< []>> 
1563-NonEquals Mem: << [<8,5>]>> 
1563-Equals Sto:<< []>> 
1563-NonEquals Sto: << []>> 
1563-Useless: []
1563-Constancy: [(4, 0), (1, 0), (0, 64)]
1563-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('16', 'sload0'), 1), 0)}
Storage order: [(('16', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('16', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x10 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_1563_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1563_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1563;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1563;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x10 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.035295862006023526;0;0;2100;2100

Block: 1594
1594Instr:<<['SWAP1', 'SLOAD', 'SWAP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
1594-Stack size: 5 
1594-Equals Mem:<< []>> 
1594-NonEquals Mem: << [<13,3>]>> 
1594-Equals Sto:<< []>> 
1594-NonEquals Sto: << []>> 
1594-Useless: []
1594-Constancy: [(4, 0), (1, 0), (0, 64)]
1594-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_1594_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1594_statistics.csv

Estimated initial gas: 2145
Estimated gas optimized: 2121

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 30

Initial number of instructions: 17
Final number of instructions: 9

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1594;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1594;2;False;True;True;SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;MLOAD PUSH1 0x20 SWAP2 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2145;21;17;2121;30;9;24;-9;8;True;False;False;False;0.08456787397153676;2;0;2100;2100

Block: 1634
1634Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x0f', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1634-Stack size: 5 
1634-Equals Mem:<< []>> 
1634-NonEquals Mem: << [<8,5>]>> 
1634-Equals Sto:<< []>> 
1634-NonEquals Sto: << []>> 
1634-Useless: []
1634-Constancy: [(4, 0), (1, 0), (0, 64)]
1634-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('15', 'sload0'), 1), 0)}
Storage order: [(('15', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('15', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x0f SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0xf SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_1634_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1634_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1634;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1634;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x0f SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0xf SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.034687177976593375;0;0;2100;2100

Block: 2916
2916Instr:<<['JUMPDEST', 'PUSH1 0x64', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'REVERT']>> 
2916-Stack size: 5 
2916-Equals Mem:<< []>> 
2916-NonEquals Mem: << [<13,3>, <23,3>, <8,3>, <18,3>]>> 
2916-Equals Sto:<< []>> 
2916-NonEquals Sto: << []>> 
2916-Useless: []
2916-Constancy: [(4, 0)]
2916-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>, <2,22>, <2,7>, <2,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_2916_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2916_statistics.csv

Estimated initial gas: 70
Estimated gas optimized: 64

Estimated initial size in bytes: 68
Estimated size optimized in bytes: 94

Initial number of instructions: 25
Final number of instructions: 23

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2916;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2916;2;False;True;True;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT;JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP2 PUSH1 0x44 ADD MSTORE REVERT;70;68;25;64;94;23;6;-26;2;True;False;False;False;0.6251946420525201;1;3;0;0

Block: 1891
1891Instr:<<['JUMPDEST', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP5', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
1891-Stack size: 9 
1891-Equals Mem:<< []>> 
1891-NonEquals Mem: << [<3,10>, <3,6>, <3,13>, <6,10>, <6,13>, <13,7>, <13,10>, <7,10>]>> 
1891-Equals Sto:<< []>> 
1891-NonEquals Sto: << []>> 
1891-Useless: []
1891-Constancy: [(8, 0), (5, 32), (4, 64), (3, 64), (2, 0)]
1891-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,5>, <2,12>, <5,9>, <5,12>, <6,12>, <9,12>, <6,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{7: ((('s(9)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', 's(2)', 'keccak2560'), 2), (('s(9)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(7)', 'mstore'), 2), (('s(0)', '1', 'mstore'), 2), (('s(3)', 's(2)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(6)', 's(10)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{7: ((('s(9)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP2 MSTORE PUSH1 0x01 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND DUP2 PUSH1 0x1 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/IFYKYK_1891_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1891_statistics.csv

Estimated initial gas: 2164
Estimated gas optimized: 2161

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 15

Initial number of instructions: 15
Final number of instructions: 14

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1891;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1891;2;False;True;True;JUMPDEST AND DUP2 MSTORE PUSH1 0x01 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;JUMPDEST AND DUP2 PUSH1 0x1 DUP7 MSTORE MSTORE KECCAK256 SLOAD DUP2 MLOAD MSTORE MLOAD RETURN;2164;16;15;2161;15;14;3;1;1;True;False;False;False;0.3089012639829889;0;2;2100;2100

Block: 1951
1951Instr:<<['ADDRESS', 'DUP4', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'PUSH1 0x20', 'SWAP1', 'DUP4', 'DUP3', 'MSTORE', 'DUP3', 'DUP6', 'KECCAK256', 'SLOAD', 'SWAP4', 'DUP5', 'PUSH2 0x07d2', 'JUMPI']>> 
1951-Stack size: 5 
1951-Equals Mem:<< []>> 
1951-NonEquals Mem: << [<2,9>]>> 
1951-Equals Sto:<< []>> 
1951-NonEquals Sto: << []>> 
1951-Useless: []
1951-Constancy: [(4, 0), (2, 0), (0, 64)]
1951-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(2)', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('s(0)', 's(2)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(8)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
ADDRESS DUP4 MSTORE PUSH1 0x01 SWAP2 PUSH1 0x20 SWAP1 DUP4 DUP3 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP4 DUP5 PUSH2 0x07d2 JUMPI

Optimized sequence (basic block per line):
PUSH1 0x1 PUSH1 0x20 ADDRESS DUP6 MSTORE MSTORE PUSH1 0x20 DUP2 DUP5 KECCAK256 SLOAD SWAP3 PUSH1 0x1 DUP5 PUSH2 0x7d2 JUMPI

Optimized code stored in /tmp/0x00/IFYKYK_1951_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_1951_statistics.csv

Estimated initial gas: 2184
Estimated gas optimized: 2178

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_1951;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;1951;2;False;True;True;ADDRESS DUP4 MSTORE PUSH1 0x01 SWAP2 PUSH1 0x20 SWAP1 DUP4 DUP3 MSTORE DUP3 DUP6 KECCAK256 SLOAD SWAP4 DUP5 PUSH2 0x07d2 JUMPI;PUSH1 0x1 PUSH1 0x20 ADDRESS DUP6 MSTORE MSTORE PUSH1 0x20 DUP2 DUP5 KECCAK256 SLOAD SWAP3 PUSH1 0x1 DUP5 PUSH2 0x7d2 JUMPI;2184;22;18;2178;22;16;6;0;2;True;False;False;False;1.2099484110367484;0;2;2100;2100

Block: 2138
2138Instr:<<['SWAP8', 'SWAP5', 'SWAP3', 'DUP10', 'SWAP7', 'SWAP5', 'SWAP2', 'SWAP3', 'DUP9', 'MLOAD', 'SWAP10', 'DUP11', 'SWAP8', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP10', 'MSTORE', 'PUSH1 0xa4', 'DUP10', 'ADD', 'SWAP4', 'DUP10', 'ADD', 'MSTORE', 'DUP9', 'PUSH1 0x24', 'DUP10', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP10', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP8', 'ADD', 'SWAP5', 'SWAP4', 'DUP9', 'SWAP1']>> 
2138-Stack size: 12 
2138-Equals Mem:<< []>> 
2138-NonEquals Mem: << [<17,9>, <17,35>, <24,9>, <24,35>, <29,9>, <29,35>, <34,9>, <34,35>, <38,9>, <38,35>, <9,35>]>> 
2138-Equals Sto:<< []>> 
2138-NonEquals Sto: << []>> 
2138-Useless: []
2138-Constancy: [(11, 0), (9, 0), (7, 64), (2, 32)]
2138-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,17>, <17,35>, <9,24>, <24,35>, <9,29>, <29,35>, <9,34>, <34,35>, <9,38>, <35,38>, <9,35>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,17>, <17,35>, <9,24>, <24,35>, <9,29>, <29,35>, <9,34>, <34,35>, <9,38>, <35,38>, <9,35>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(15)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2), (('s(20)', 's(1)', 'mstore'), 2), (('s(22)', 's(0)', 'mstore'), 2), (('s(24)', '160', 'mstore'), 2), (('s(9)', 'mload1'), 1), (('s(26)', 's(13)', 'mstore'), 2)]
Memory dep: [(4, 6), (3, 6), (2, 6), (1, 6), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 6), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1

Optimized sequence (basic block per line):
SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1

Optimized code stored in /tmp/0x00/IFYKYK_2138_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2138_statistics.csv

Estimated initial gas: 138
Estimated gas optimized: 138

Estimated initial size in bytes: 56
Estimated size optimized in bytes: 56

Initial number of instructions: 46
Final number of instructions: 46

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2138;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2138;2;True;False;False;SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1;SWAP8 SWAP5 SWAP3 DUP10 SWAP7 SWAP5 SWAP2 SWAP3 DUP9 MLOAD SWAP10 DUP11 SWAP8 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP10 MSTORE PUSH1 0xa4 DUP10 ADD SWAP4 DUP10 ADD MSTORE DUP9 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP10 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP8 ADD SWAP5 SWAP4 DUP9 SWAP1;138;56;46;138;56;46;0;0;0;True;False;False;False;2.5204728899989277;1;4;0;0

Block: 2284
2284Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP8', 'MSTORE', 'DUP13', 'SWAP10', 'POP', 'DUP12', 'SWAP9', 'POP', 'SWAP6', 'DUP3', 'ADD', 'SWAP6', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x0892', 'JUMP']>> 
2284-Stack size: 15 
2284-Equals Mem:<< []>> 
2284-NonEquals Mem: << [<6,2>]>> 
2284-Equals Sto:<< []>> 
2284-NonEquals Sto: << []>> 
2284-Useless: []
2284-Constancy: [(14, 0), (12, 0), (10, 64), (9, 0), (2, 32)]
2284-ContextAliasing: [(11, 6)]


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(7)', 'mload0'), 1), (('s(6)', 's(17)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0892 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0892 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_2284_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2284_statistics.csv

Estimated initial gas: 82
Estimated gas optimized: 82

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 29

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2284;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2284;2;True;False;False;JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0892 JUMP;JUMPDEST DUP6 MLOAD DUP2 AND DUP8 MSTORE DUP13 SWAP10 POP DUP12 SWAP9 POP SWAP6 DUP3 ADD SWAP6 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x0892 JUMP;82;29;27;82;29;27;0;0;0;True;False;False;False;2.224997451994568;0;0;0;0

Block: 2401
2401Instr:<<['JUMPDEST', 'AND', 'DUP3', 'MSTORE', 'DUP6', 'MSTORE', 'KECCAK256', 'SLOAD', 'AND', 'SWAP1', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'RETURN']>> 
2401-Stack size: 8 
2401-Equals Mem:<< []>> 
2401-NonEquals Mem: << [<3,10>, <3,5>, <3,15>, <5,10>, <5,15>, <15,6>, <15,10>, <6,10>]>> 
2401-Equals Sto:<< []>> 
2401-NonEquals Sto: << []>> 
2401-Useless: []
2401-Constancy: [(7, 32), (6, 64), (4, 64), (3, 0)]
2401-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,4>, <2,14>, <4,9>, <4,14>, <5,14>, <9,14>, <5,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,9>, <2,4>, <2,14>, <4,9>, <4,14>, <5,14>, <9,14>, <5,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{6: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(3)', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(9)', 'mstore'), 2), (('s(0)', 's(5)', 'mstore'), 2), (('s(4)', 's(3)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1), (('s(8)', 's(15)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{6: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN

Optimized code stored in /tmp/0x00/IFYKYK_2401_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2401_statistics.csv

Estimated initial gas: 2170
Estimated gas optimized: 2167

Estimated initial size in bytes: 17
Estimated size optimized in bytes: 16

Initial number of instructions: 17
Final number of instructions: 16

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2401;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2401;2;False;True;True;JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN;JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND ISZERO ISZERO DUP2 MLOAD MSTORE MLOAD RETURN;2170;17;17;2167;16;16;3;1;1;True;False;False;False;0.44669316796353087;0;2;2100;2100

Block: 2437
2437Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'RETURN']>> 
2437-Stack size: 5 
2437-Equals Mem:<< []>> 
2437-NonEquals Mem: << [<5,2>]>> 
2437-Equals Sto:<< []>> 
2437-NonEquals Sto: << []>> 
2437-Useless: []
2437-Constancy: [(4, 0), (1, 0), (0, 64)]
2437-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', '9', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_2437_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2437_statistics.csv

Estimated initial gas: 18
Estimated gas optimized: 18

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 7
Final number of instructions: 7

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2437;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2437;2;False;True;True;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x09 DUP2 MSTORE RETURN;18;9;7;18;9;7;0;0;0;True;False;False;False;0.017424367018975317;0;0;0;0

Block: 3558
3558Instr:<<['JUMPDEST', 'DUP6', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP4', 'PUSH1 0x01', 'DUP6', 'MSTORE', 'PUSH1 0x40', 'SWAP4', 'DUP5', 'DUP4', 'KECCAK256', 'SLOAD', 'SWAP3', 'PUSH2 0x0e37', 'DUP7', 'MLOAD', 'PUSH2 0x0e06', 'DUP2', 'PUSH2 0x0bec', 'JUMP']>> 
3558-Stack size: 14 
3558-Equals Mem:<< []>> 
3558-NonEquals Mem: << [<8,18>, <3,8>, <3,18>, <13,18>]>> 
3558-Equals Sto:<< []>> 
3558-NonEquals Sto: << []>> 
3558-Useless: []
3558-Constancy: [(0, 0)]
3558-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,17>, <2,7>, <2,17>, <12,17>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<7,17>, <2,7>, <2,17>, <12,17>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(16)', 'sload0'), 1), 1)}
Storage order: [(('s(5)', '64', 'keccak2560'), 2), (('s(16)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('s(5)', '64', 'keccak2560'), 2), (('64', 'mload0'), 1)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(16)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0e37 DUP7 MLOAD PUSH2 0x0e06 DUP2 PUSH2 0x0bec JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0e37 DUP7 MLOAD PUSH2 0x0e06 DUP2 PUSH2 0x0bec JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3558_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3558_statistics.csv

Estimated initial gas: 2196
Estimated gas optimized: 2196

Estimated initial size in bytes: 32
Estimated size optimized in bytes: 32

Initial number of instructions: 23
Final number of instructions: 23

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3558;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3558;2;True;False;False;JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0e37 DUP7 MLOAD PUSH2 0x0e06 DUP2 PUSH2 0x0bec JUMP;JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x01 DUP6 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP4 KECCAK256 SLOAD SWAP3 PUSH2 0x0e37 DUP7 MLOAD PUSH2 0x0e06 DUP2 PUSH2 0x0bec JUMP;2196;32;23;2196;32;23;0;0;0;True;False;False;False;2.1706658359616995;0;2;2100;2100

Block: 3590
3590Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP4', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'SWAP7', 'DUP8', 'DUP12', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
3590-Stack size: 19 
3590-Equals Mem:<< []>> 
3590-NonEquals Mem: << [<3,11>]>> 
3590-Equals Sto:<< []>> 
3590-NonEquals Sto: << []>> 
3590-Useless: []
3590-Constancy: [(8, 32), (2, 0), (7, 64)]
3590-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(8)', '30', 'mstore'), 2), (('s(12)', '37714057306925736537727343956344029380455708191757305005271024775623175766016', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3590_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3590_statistics.csv

Estimated initial gas: 45
Estimated gas optimized: 45

Estimated initial size in bytes: 49
Estimated size optimized in bytes: 49

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3590;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3590;2;False;True;True;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP4 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 SWAP7 DUP8 DUP12 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP;45;49;14;45;49;14;0;0;0;True;False;False;False;0.3161731349537149;0;0;0;0

Block: 3639
3639Instr:<<['JUMPDEST', 'DUP10', 'DUP3', 'MSTORE', 'PUSH1 0x01', 'DUP9', 'MSTORE', 'DUP7', 'DUP3', 'KECCAK256', 'SSTORE', 'DUP10', 'DUP2', 'MSTORE', 'DUP6', 'PUSH2 0x0e71', 'DUP2', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x0e6b', 'DUP4', 'MLOAD', 'PUSH2 0x0e5b', 'DUP2', 'PUSH2 0x0bec', 'JUMP']>> 
3639-Stack size: 18 
3639-Equals Mem:<< [<3,13>]>> 
3639-NonEquals Mem: << [<13,22>, <18,22>, <3,6>, <6,13>, <3,22>, <6,22>, <9,22>]>> 
3639-Equals Sto:<< [<10,19>]>> 
3639-NonEquals Sto: << []>> 
3639-Useless: []
3639-Constancy: [(7, 32), (1, 0), (6, 64)]
3639-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<2,12>], 'memory_deps_noneqs': [<12,21>, <17,21>, <2,5>, <5,12>, <2,21>, <5,21>, <8,21>]}
{'memory_deps_eqs': [<2,12>], 'memory_deps_noneqs': [<12,21>, <17,21>, <2,5>, <5,12>, <2,21>, <5,21>, <8,21>], 'storage_deps_eqs': [<9,18>], 'storage_deps_noneqs': []}
{9: ((('s(22)', 's(10)', 'sstore'), 2), 1), 18: ((('s(20)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('s(9)', 's(4)', 'keccak2560'), 2), (('s(22)', 's(10)', 'sstore'), 2), (('s(9)', 's(4)', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(9)', 's(1)', 'mstore'), 2), (('s(3)', '1', 'mstore'), 2), (('s(9)', 's(4)', 'keccak2560'), 2), (('s(4)', 'mload0'), 1)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{9: ((('s(22)', 's(10)', 'sstore'), 2), 1), 18: ((('s(20)', 'sload0'), 1), 3)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x0e71 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x0e6b DUP4 MLOAD PUSH2 0x0e5b DUP2 PUSH2 0x0bec JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x0e71 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x0e6b DUP4 MLOAD PUSH2 0x0e5b DUP2 PUSH2 0x0bec JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3639_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3639_statistics.csv

Estimated initial gas: 5232
Estimated gas optimized: 5232

Estimated initial size in bytes: 36
Estimated size optimized in bytes: 36

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3639;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3639;2;True;False;False;JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x0e71 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x0e6b DUP4 MLOAD PUSH2 0x0e5b DUP2 PUSH2 0x0bec JUMP;JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x01 DUP9 MSTORE DUP7 DUP3 KECCAK256 SSTORE DUP10 DUP2 MSTORE DUP6 PUSH2 0x0e71 DUP2 DUP4 KECCAK256 SLOAD PUSH2 0x0e6b DUP4 MLOAD PUSH2 0x0e5b DUP2 PUSH2 0x0bec JUMP;5232;36;27;5232;36;27;0;0;0;True;True;False;False;2.220896081009414;2;4;5100;5100

Block: 3675
3675Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'DUP9', 'DUP13', 'DUP3', 'ADD', 'MSTORE', 'DUP8', 'DUP8', 'PUSH2 0x0c2a', 'JUMP']>> 
3675-Stack size: 22 
3675-Equals Mem:<< []>> 
3675-NonEquals Mem: << [<3,8>]>> 
3675-Equals Sto:<< []>> 
3675-NonEquals Sto: << []>> 
3675-Useless: []
3675-Constancy: [(5, 0), (10, 64), (11, 32), (4, 64)]
3675-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(11)', '30', 'mstore'), 2), (('s(15)', 's(3)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0c2a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0c2a JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3675_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3675_statistics.csv

Estimated initial gas: 42
Estimated gas optimized: 42

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3675;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3675;2;False;True;True;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0c2a JUMP;JUMPDEST PUSH1 0x1e DUP2 MSTORE DUP9 DUP13 DUP3 ADD MSTORE DUP8 DUP8 PUSH2 0x0c2a JUMP;42;16;13;42;16;13;0;0;0;True;False;False;False;0.16255745699163526;0;0;0;0

Block: 3697
3697Instr:<<['JUMPDEST', 'SWAP2', 'DUP12', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'DUP10', 'MSTORE', 'KECCAK256', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP3', 'PUSH2 0x0e87', 'DUP5', 'PUSH2 0x0bec', 'JUMP']>> 
3697-Stack size: 19 
3697-Equals Mem:<< []>> 
3697-NonEquals Mem: << [<4,7>, <7,11>, <8,11>, <4,11>]>> 
3697-Equals Sto:<< []>> 
3697-NonEquals Sto: << []>> 
3697-Useless: []
3697-Constancy: [(1, 64), (8, 32), (2, 0), (7, 64)]
3697-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>, <6,10>, <7,10>, <3,10>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>, <6,10>, <7,10>, <3,10>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{8: ((('s(15)', 's(11)', 'sstore'), 2), 1)}
Storage order: [(('s(9)', 's(10)', 'keccak2560'), 2), (('s(15)', 's(11)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(9)', 's(0)', 'mstore'), 2), (('s(3)', '1', 'mstore'), 2), (('s(9)', 's(10)', 'keccak2560'), 2), (('s(4)', 'mload0'), 1)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{8: ((('s(15)', 's(11)', 'sstore'), 2), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x0e87 DUP5 PUSH2 0x0bec JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x0e87 DUP5 PUSH2 0x0bec JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3697_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3697_statistics.csv

Estimated initial gas: 5078
Estimated gas optimized: 5078

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3697;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3697;2;False;True;True;JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x0e87 DUP5 PUSH2 0x0bec JUMP;JUMPDEST SWAP2 DUP12 DUP2 MSTORE PUSH1 0x01 DUP10 MSTORE KECCAK256 SSTORE DUP5 MLOAD SWAP3 PUSH2 0x0e87 DUP5 PUSH2 0x0bec JUMP;5078;22;17;5078;22;17;0;0;0;True;False;False;False;0.6622120630345307;0;2;5000;5000

Block: 3719
3719Instr:<<['JUMPDEST', 'PUSH1 0x1e', 'DUP5', 'MSTORE', 'DUP7', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
3719-Stack size: 17 
3719-Equals Mem:<< []>> 
3719-NonEquals Mem: << [<3,7>]>> 
3719-Equals Sto:<< []>> 
3719-NonEquals Sto: << []>> 
3719-Useless: []
3719-Constancy: [(6, 32), (5, 64)]
3719-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', '30', 'mstore'), 2), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3719_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3719_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 13
Estimated size optimized in bytes: 13

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3719;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3719;2;False;True;True;JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP;JUMPDEST PUSH1 0x1e DUP5 MSTORE DUP7 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP;33;13;10;33;13;10;0;0;0;True;False;False;False;0.04879747499944642;0;0;0;0

Block: 2507
2507Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'DUP9', 'MSTORE', 'DUP2', 'DUP2', 'KECCAK256', 'CALLER', 'DUP3', 'MSTORE', 'DUP9', 'MSTORE', 'KECCAK256', 'SLOAD', 'DUP6', 'MLOAD', 'SWAP2', 'SWAP1', 'PUSH2 0x09f2', 'DUP4', 'PUSH2 0x0bd0', 'JUMP']>> 
2507-Stack size: 11 
2507-Equals Mem:<< [<9,18>, <12,20>]>> 
2507-NonEquals Mem: << [<9,24>, <9,12>, <9,20>, <12,24>, <12,18>, <18,24>, <18,20>, <20,24>, <15,24>, <21,24>]>> 
2507-Equals Sto:<< []>> 
2507-NonEquals Sto: << []>> 
2507-Useless: []
2507-Constancy: [(10, 0), (7, 32), (6, 64), (1, 64), (0, 0)]
2507-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<8,17>, <11,19>], 'memory_deps_noneqs': [<8,23>, <8,11>, <8,19>, <11,23>, <11,17>, <17,23>, <17,19>, <19,23>, <14,23>, <20,23>]}
{'memory_deps_eqs': [<8,17>, <11,19>], 'memory_deps_noneqs': [<8,23>, <8,11>, <8,19>, <11,23>, <11,17>, <17,23>, <17,19>, <19,23>, <14,23>, <20,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{21: ((('s(12)', 'sload0'), 1), 2)}
Storage order: [(('s(7)', 's(6)', 'keccak2560'), 2), (('s(7)', 's(6)', 'keccak2561'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('s(7)', 's(15)', 'mstore'), 2), (('s(0)', '2', 'mstore'), 2), (('s(7)', 's(6)', 'keccak2560'), 2), (('s(1)', 'mload0'), 1)]
Memory dep: [(1, 3), (0, 3), (1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (1, 3), (0, 2), (0, 3)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{21: ((('s(12)', 'sload0'), 1), 2)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x02 DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 PUSH2 0x09f2 DUP4 PUSH2 0x0bd0 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 PUSH1 0x2 DUP11 MSTORE PUSH2 0x9f2 SWAP4 SWAP3 SWAP5 SWAP4 SWAP5 SWAP2 SWAP1 MSTORE KECCAK256 SLOAD DUP7 MLOAD SWAP3 DUP4 PUSH2 0xbd0 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_2507_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2507_statistics.csv

Estimated initial gas: 2246
Estimated gas optimized: 2202

Estimated initial size in bytes: 39
Estimated size optimized in bytes: 50

Initial number of instructions: 31
Final number of instructions: 25

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2507;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2507;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x02 DUP9 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP9 MSTORE KECCAK256 SLOAD DUP6 MLOAD SWAP2 SWAP1 PUSH2 0x09f2 DUP4 PUSH2 0x0bd0 JUMP;JUMPDEST DUP5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 PUSH1 0x2 DUP11 MSTORE PUSH2 0x9f2 SWAP4 SWAP3 SWAP5 SWAP4 SWAP5 SWAP2 SWAP1 MSTORE KECCAK256 SLOAD DUP7 MLOAD SWAP3 DUP4 PUSH2 0xbd0 JUMP;2246;39;31;2202;50;25;44;-11;6;True;False;False;False;2.151766683033202;4;4;2100;2100

Block: 2546
2546Instr:<<['JUMPDEST', 'PUSH1 0x28', 'DUP4', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'DUP9', 'DUP5', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'DUP8', 'DUP5', 'ADD', 'MSTORE', 'PUSH2 0x0c2a', 'JUMP']>> 
2546-Stack size: 11 
2546-Equals Mem:<< []>> 
2546-NonEquals Mem: << [<3,8>, <3,15>, <8,15>]>> 
2546-Equals Sto:<< []>> 
2546-NonEquals Sto: << []>> 
2546-Useless: []
2546-Constancy: [(10, 0), (7, 32), (6, 64)]
2546-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>, <2,14>, <7,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,7>, <2,14>, <7,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('192', '7812742012107383653', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', '40', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859100820671745083778533502622993977909345', 'mstore'), 2), (('s(10)', '49041376442327685983450583443845300569967147870487584211451521639864848089088', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x28 DUP4 MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP9 DUP5 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL DUP8 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x6c6c6f77616e6365000000000000000000000000000000000000000000000000 DUP4 DUP9 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP4 DUP10 ADD MSTORE PUSH1 0x28 DUP4 MSTORE PUSH2 0xc2a JUMP

Optimized code stored in /tmp/0x00/IFYKYK_2546_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2546_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 51

Estimated initial size in bytes: 62
Estimated size optimized in bytes: 83

Initial number of instructions: 18
Final number of instructions: 16

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2546;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2546;2;False;True;True;JUMPDEST PUSH1 0x28 DUP4 MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP9 DUP5 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL DUP8 DUP5 ADD MSTORE PUSH2 0x0c2a JUMP;JUMPDEST PUSH32 0x6c6c6f77616e6365000000000000000000000000000000000000000000000000 DUP4 DUP9 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 DUP4 DUP10 ADD MSTORE PUSH1 0x28 DUP4 MSTORE PUSH2 0xc2a JUMP;57;62;18;51;83;16;6;-21;2;True;False;False;False;0.3167408359586261;1;0;0;0

Block: 3155
3155Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x0c6f', 'SWAP1', 'PUSH1 0x04', 'DUP4', 'ADD', 'PUSH2 0x0aa4', 'JUMP']>> 
3155-Stack size: 11 
3155-Equals Mem:<< []>> 
3155-NonEquals Mem: << [<7,2>]>> 
3155-Equals Sto:<< []>> 
3155-NonEquals Sto: << []>> 
3155-Useless: []
3155-Constancy: []
3155-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(7)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x0c6f SWAP1 PUSH1 0x04 DUP4 ADD PUSH2 0x0aa4 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xc6f DUP2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 PUSH1 0x4 DUP4 ADD PUSH2 0xaa4 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3155_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3155_statistics.csv

Estimated initial gas: 57
Estimated gas optimized: 45

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 52

Initial number of instructions: 18
Final number of instructions: 14

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3155;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3155;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x0c6f SWAP1 PUSH1 0x04 DUP4 ADD PUSH2 0x0aa4 JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xc6f DUP2 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP3 PUSH1 0x4 DUP4 ADD PUSH2 0xaa4 JUMP;57;28;18;45;52;14;12;-24;4;True;False;False;False;0.1781635980005376;1;0;0;0

Block: 3740
3740Instr:<<['JUMPDEST', 'ADDRESS', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH2 0x0eb2', 'DUP5', 'PUSH1 0x40', 'DUP4', 'KECCAK256', 'SLOAD', 'PUSH2 0x14cf', 'JUMP']>> 
3740-Stack size: 14 
3740-Equals Mem:<< []>> 
3740-NonEquals Mem: << [<3,6>]>> 
3740-Equals Sto:<< []>> 
3740-NonEquals Sto: << []>> 
3740-Useless: []
3740-Constancy: [(0, 0)]
3740-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(8)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', '64', 'keccak2560'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(10)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('s(3)', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(8)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x0eb2 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x14cf JUMP

Optimized sequence (basic block per line):
JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x0eb2 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x14cf JUMP

Optimized code stored in /tmp/0x00/IFYKYK_3740_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3740_statistics.csv

Estimated initial gas: 2171
Estimated gas optimized: 2171

Estimated initial size in bytes: 22
Estimated size optimized in bytes: 22

Initial number of instructions: 15
Final number of instructions: 15

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3740;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3740;2;False;True;True;JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x0eb2 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x14cf JUMP;JUMPDEST ADDRESS DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH2 0x0eb2 DUP5 PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH2 0x14cf JUMP;2171;22;15;2171;22;15;0;0;0;True;False;False;False;0.22032050404231995;0;2;2100;2100

Block: 5348
5348Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'SWAP1', 'REVERT']>> 
5348-Stack size: 16 
5348-Equals Mem:<< []>> 
5348-NonEquals Mem: << [<22,2>, <7,2>, <17,2>, <12,2>]>> 
5348-Equals Sto:<< []>> 
5348-NonEquals Sto: << []>> 
5348-Useless: []
5348-Constancy: []
5348-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,21>, <1,6>, <1,16>, <1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '27', 'mstore'), 2), (('s(9)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1b DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT

Optimized code stored in /tmp/0x00/IFYKYK_5348_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_5348_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 67

Estimated initial size in bytes: 69
Estimated size optimized in bytes: 95

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_5348;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;5348;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1b DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 DUP2 PUSH1 0x44 ADD MSTORE PUSH1 0x64 SWAP1 REVERT;73;69;26;67;95;24;6;-26;2;True;False;False;False;0.4469545630272478;1;3;0;0

Block: 3793
3793Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'DUP4', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'SWAP3', 'PUSH1 0x20', 'SWAP4', 'DUP1', 'DUP6', 'MSTORE', 'PUSH1 0xff', 'SWAP2', 'PUSH1 0x40', 'SWAP1', 'DUP4', 'DUP3', 'DUP7', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'DUP1', 'PUSH2 0x13b9', 'JUMPI']>> 
3793-Stack size: 13 
3793-Equals Mem:<< []>> 
3793-NonEquals Mem: << [<5,12>]>> 
3793-Equals Sto:<< []>> 
3793-NonEquals Sto: << []>> 
3793-Useless: []
3793-Constancy: [(1, 0), (3, 0)]
3793-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{20: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(3)', '64', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(3)', 's(0)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('s(3)', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{20: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x13b9 JUMPI

Optimized sequence (basic block per line):
JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x13b9 JUMPI

Optimized code stored in /tmp/0x00/IFYKYK_3793_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3793_statistics.csv

Estimated initial gas: 2209
Estimated gas optimized: 2209

Estimated initial size in bytes: 33
Estimated size optimized in bytes: 33

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3793;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3793;2;True;False;False;JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x13b9 JUMPI;JUMPDEST SWAP3 POP DUP4 DUP2 MSTORE PUSH1 0x04 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH1 0xff SWAP2 PUSH1 0x40 SWAP1 DUP4 DUP3 DUP7 KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0x13b9 JUMPI;2209;33;27;2209;33;27;0;0;0;True;False;False;False;2.1315161600359716;0;2;2100;2100

Block: 3870
3870Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'SWAP10', 'DUP11', 'SWAP2', 'ADD', 'MSTORE', 'PUSH1 0x64', 'DUP1', 'SWAP2', 'DIV', 'SWAP9', 'DUP7', 'PUSH1 0x06', 'SLOAD', 'AND', 'PUSH2 0x12ec', 'JUMPI']>> 
3870-Stack size: 19 
3870-Equals Mem:<< []>> 
3870-NonEquals Mem: << [<3,9>]>> 
3870-Equals Sto:<< []>> 
3870-NonEquals Sto: << []>> 
3870-Useless: [9, 3]
3870-Constancy: [(7, 0), (3, 32), (4, 64), (9, 32)]
3870-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{16: ((('6', 'sload0'), 1), 0)}
Storage order: [(('6', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(9)', '26', 'mstore'), 2), (('s(15)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{16: ((('6', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x12ec JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x12ec JUMPI

Optimized code stored in /tmp/0x00/IFYKYK_3870_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3870_statistics.csv

Estimated initial gas: 2167
Estimated gas optimized: 2167

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 21
Final number of instructions: 21

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3870;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3870;2;True;False;False;JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x12ec JUMPI;JUMPDEST PUSH1 0x1a DUP2 MSTORE PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 SWAP10 DUP11 SWAP2 ADD MSTORE PUSH1 0x64 DUP1 SWAP2 DIV SWAP9 DUP7 PUSH1 0x06 SLOAD AND PUSH2 0x12ec JUMPI;2167;58;21;2167;58;21;0;0;0;True;False;False;False;2.143093753955327;0;0;2100;2100

Block: 3970
3970Instr:<<['JUMPDEST', 'POP', 'ADDRESS', 'DUP10', 'MSTORE', 'PUSH1 0x01', 'SWAP2', 'DUP3', 'DUP7', 'MSTORE', 'DUP7', 'DUP11', 'KECCAK256', 'SLOAD', 'SWAP2', 'DUP1', 'DUP11', 'PUSH1 0xa8', 'SHR', 'AND', 'ISZERO', 'SWAP2', 'DUP3', 'PUSH2 0x11a2', 'JUMPI']>> 
3970-Stack size: 21 
3970-Equals Mem:<< []>> 
3970-NonEquals Mem: << [<4,9>]>> 
3970-Equals Sto:<< []>> 
3970-NonEquals Sto: << []>> 
3970-Useless: []
3970-Constancy: [(9, 0), (6, 64), (5, 32)]
3970-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(20)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(20)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(22)', 'mstore'), 2), (('s(4)', '1', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
********************IT*********************
{11: ((('s(20)', 'sload0'), 1), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3970 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4186
4186Instr:<<['SWAP9', 'SWAP6', 'SWAP4', 'SWAP1', 'SWAP2', 'SWAP3', 'DUP11', 'SWAP8', 'SWAP6', 'SWAP4', 'DUP10', 'MLOAD', 'SWAP11', 'DUP12', 'SWAP9', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP11', 'MSTORE', 'PUSH1 0xa4', 'DUP11', 'ADD', 'SWAP4', 'DUP11', 'ADD', 'MSTORE', 'DUP10', 'PUSH1 0x24', 'DUP11', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x44', 'DUP11', 'ADD', 'MSTORE', 'MLOAD', 'DUP1', 'SWAP3', 'MSTORE', 'PUSH1 0xc4', 'DUP9', 'ADD', 'SWAP6', 'SWAP4', 'DUP10', 'SWAP1']>> 
4186-Stack size: 23 
4186-Equals Mem:<< []>> 
4186-NonEquals Mem: << [<31,37>, <26,11>, <36,37>, <31,11>, <40,37>, <36,11>, <11,37>, <40,11>, <19,37>, <19,11>, <26,37>]>> 
4186-Equals Sto:<< []>> 
4186-NonEquals Sto: << []>> 
4186-Useless: []
4186-Constancy: [(8, 64), (10, 0), (2, 32)]
4186-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<31,37>, <11,26>, <36,37>, <11,31>, <37,40>, <11,36>, <11,37>, <11,40>, <19,37>, <11,19>, <26,37>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<31,37>, <11,26>, <36,37>, <11,31>, <37,40>, <11,36>, <11,37>, <11,40>, <19,37>, <11,19>, <26,37>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(16)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2), (('s(21)', 's(1)', 'mstore'), 2), (('s(23)', 's(0)', 'mstore'), 2), (('s(25)', '160', 'mstore'), 2), (('s(10)', 'mload1'), 1), (('s(27)', 's(14)', 'mstore'), 2)]
Memory dep: [(4, 6), (3, 6), (2, 6), (1, 6), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 6), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1

Optimized sequence (basic block per line):
SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1

Optimized code stored in /tmp/0x00/IFYKYK_4186_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4186_statistics.csv

Estimated initial gas: 144
Estimated gas optimized: 144

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 48
Final number of instructions: 48

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4186;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4186;2;True;False;False;SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1;SWAP9 SWAP6 SWAP4 SWAP1 SWAP2 SWAP3 DUP11 SWAP8 SWAP6 SWAP4 DUP10 MLOAD SWAP11 DUP12 SWAP9 PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP11 MSTORE PUSH1 0xa4 DUP11 ADD SWAP4 DUP11 ADD MSTORE DUP10 PUSH1 0x24 DUP11 ADD MSTORE PUSH1 0xa0 PUSH1 0x44 DUP11 ADD MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0xc4 DUP9 ADD SWAP6 SWAP4 DUP10 SWAP1;144;58;48;144;58;48;0;0;0;True;False;False;False;2.5756489040213637;1;4;0;0

Block: 4390
4390Instr:<<['JUMPDEST', 'DUP6', 'MLOAD', 'DUP2', 'AND', 'DUP9', 'MSTORE', 'DUP14', 'SWAP11', 'POP', 'DUP13', 'SWAP10', 'POP', 'SWAP7', 'DUP3', 'ADD', 'SWAP7', 'SWAP5', 'DUP3', 'ADD', 'SWAP5', 'SWAP1', 'DUP5', 'ADD', 'SWAP1', 'PUSH2 0x1094', 'JUMP']>> 
4390-Stack size: 26 
4390-Equals Mem:<< []>> 
4390-NonEquals Mem: << [<6,2>]>> 
4390-Equals Sto:<< []>> 
4390-NonEquals Sto: << []>> 
4390-Useless: []
4390-Constancy: [(2, 32), (11, 64), (10, 0), (13, 0)]
4390-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(8)', 'mload0'), 1), (('s(6)', 's(18)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1094 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1094 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_4390_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4390_statistics.csv

Estimated initial gas: 82
Estimated gas optimized: 82

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 29

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4390;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4390;2;True;False;False;JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1094 JUMP;JUMPDEST DUP6 MLOAD DUP2 AND DUP9 MSTORE DUP14 SWAP11 POP DUP13 SWAP10 POP SWAP7 DUP3 ADD SWAP7 SWAP5 DUP3 ADD SWAP5 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1094 JUMP;82;29;27;82;29;27;0;0;0;True;False;False;False;2.229974769987166;0;0;0;0

Block: 5543
5543Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
5543-Stack size: 14 
5543-Equals Mem:<< []>> 
5543-NonEquals Mem: << [<5,8>]>> 
5543-Equals Sto:<< []>> 
5543-NonEquals Sto: << []>> 
5543-Useless: []
5543-Constancy: []
5543-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_5543 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4565
4565Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'ADD', 'MSTORE', 'DIV', 'SWAP10', 'PUSH0', 'PUSH2 0x0f82', 'JUMP']>> 
4565-Stack size: 24 
4565-Equals Mem:<< []>> 
4565-NonEquals Mem: << [<3,5>]>> 
4565-Equals Sto:<< []>> 
4565-NonEquals Sto: << []>> 
4565-Useless: [3, 5]
4565-Constancy: [(12, 0), (8, 32), (9, 64), (1, 32)]
4565-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(14)', '26', 'mstore'), 2), (('s(16)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x0f82 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x0f82 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_4565_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4565_statistics.csv

Estimated initial gas: 37
Estimated gas optimized: 37

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 11
Final number of instructions: 11

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4565;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4565;2;False;True;True;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x0f82 JUMP;JUMPDEST PUSH1 0x1a DUP2 MSTORE ADD MSTORE DIV SWAP10 PUSH0 PUSH2 0x0f82 JUMP;37;14;11;37;14;11;0;0;0;True;False;False;False;0.1770118519780226;0;0;0;0

Block: 5445
5445Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5445-Stack size: 19 
5445-Equals Mem:<< []>> 
5445-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5445-Equals Sto:<< []>> 
5445-NonEquals Sto: << []>> 
5445-Useless: []
5445-Constancy: []
5445-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '119', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '33', 'mstore'), 2), (('s(9)', '37714057306925736537727341711534603569002632158006504148307520321239491439727', 'mstore'), 2), (('s(11)', '53825228981408700216425575062632269666168469434418855940216611316178368856064', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_5445_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_5445_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_5445;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;5445;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;79;33;79;132;28;15;-53;5;True;False;False;False;2.1448756370227784;2;4;0;0

Block: 4610
4610Instr:<<['DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x01', 'DUP7', 'MSTORE', 'PUSH2 0x1215', 'DUP12', 'DUP9', 'DUP13', 'KECCAK256', 'SLOAD', 'PUSH2 0x0d71', 'JUMP']>> 
4610-Stack size: 21 
4610-Equals Mem:<< []>> 
4610-NonEquals Mem: << [<2,5>]>> 
4610-Equals Sto:<< []>> 
4610-NonEquals Sto: << []>> 
4610-Useless: []
4610-Constancy: [(9, 0), (6, 64), (5, 32)]
4610-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(18)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(7)', 'keccak2560'), 2), (('s(18)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(0)', 'mstore'), 2), (('s(8)', '1', 'mstore'), 2), (('s(4)', 's(7)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(18)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x1215 DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0d71 JUMP

Optimized sequence (basic block per line):
DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x1215 DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0d71 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_4610_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4610_statistics.csv

Estimated initial gas: 2171
Estimated gas optimized: 2171

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4610;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4610;2;False;True;True;DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x1215 DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0d71 JUMP;DUP14 DUP11 MSTORE PUSH1 0x01 DUP7 MSTORE PUSH2 0x1215 DUP12 DUP9 DUP13 KECCAK256 SLOAD PUSH2 0x0d71 JUMP;2171;19;14;2171;19;14;0;0;0;True;False;False;False;0.33099727996159345;0;2;2100;2100

Block: 4659
4659Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'DUP12', 'MSTORE', 'PUSH1 0x11', 'DUP10', 'MSTORE', 'PUSH1 0x24', 'DUP12', 'REVERT']>> 
4659-Stack size: 22 
4659-Equals Mem:<< []>> 
4659-NonEquals Mem: << [<5,8>]>> 
4659-Equals Sto:<< []>> 
4659-NonEquals Sto: << []>> 
4659-Useless: []
4659-Constancy: [(10, 0), (6, 32), (7, 64)]
4659-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('s(2)', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP12 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP12 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP12 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP12 REVERT

Optimized code stored in /tmp/0x00/IFYKYK_4659_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4659_statistics.csv

Estimated initial gas: 31
Estimated gas optimized: 25

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 44

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4659;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4659;2;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL DUP12 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP12 REVERT;JUMPDEST PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 DUP12 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP12 REVERT;31;19;12;25;44;10;6;-25;2;True;False;False;False;0.06675103795714676;1;0;0;0

Block: 4678
4678Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
4678-Stack size: 21 
4678-Equals Mem:<< []>> 
4678-NonEquals Mem: << [<7,2>, <18,2>, <23,2>, <13,2>]>> 
4678-Equals Sto:<< []>> 
4678-NonEquals Sto: << []>> 
4678-Useless: []
4678-Constancy: [(9, 0), (6, 64), (5, 32)]
4678-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(10)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(13)', 's(2)', 'mstore'), 2), (('s(15)', '26', 'mstore'), 2), (('s(17)', '31422294206539596639392900160051577764598592111541354583441290478353383424000', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized code stored in /tmp/0x00/IFYKYK_4678_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4678_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 76

Estimated initial size in bytes: 66
Estimated size optimized in bytes: 66

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4678;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4678;2;True;False;False;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;76;66;27;76;66;27;0;0;0;True;False;False;False;2.1400413539959118;1;3;0;0

Block: 3135
3135Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3135-Stack size: 9 
3135-Equals Mem:<< []>> 
3135-NonEquals Mem: << [<5,8>]>> 
3135-Equals Sto:<< []>> 
3135-NonEquals Sto: << []>> 
3135-Useless: []
3135-Constancy: []
3135-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3135 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4744
4744Instr:<<['JUMPDEST', 'DUP7', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP10', 'ADD', 'DUP8', 'SWAP1', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'DUP5', 'SWAP1', 'REVERT']>> 
4744-Stack size: 21 
4744-Equals Mem:<< []>> 
4744-NonEquals Mem: << [<7,2>, <18,2>, <23,2>, <13,2>]>> 
4744-Equals Sto:<< []>> 
4744-NonEquals Sto: << []>> 
4744-Useless: []
4744-Constancy: [(9, 0), (6, 64), (5, 32)]
4744-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,17>, <1,22>, <1,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(10)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(13)', 's(2)', 'mstore'), 2), (('s(15)', '25', 'mstore'), 2), (('s(17)', '31422294206539596639392900159971917510378963875690889976315079369673265905664', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT

Optimized code stored in /tmp/0x00/IFYKYK_4744_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4744_statistics.csv

Estimated initial gas: 76
Estimated gas optimized: 76

Estimated initial size in bytes: 66
Estimated size optimized in bytes: 66

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4744;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4744;2;True;False;False;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;JUMPDEST DUP7 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE DUP5 SWAP1 REVERT;76;66;27;76;66;27;0;0;0;True;False;False;False;2.139614474028349;1;3;0;0

Block: 4810
4810Instr:<<['JUMPDEST', 'POP', 'DUP14', 'DUP11', 'MSTORE', 'PUSH1 0x03', 'DUP7', 'MSTORE', 'DUP2', 'DUP8', 'DUP12', 'KECCAK256', 'SLOAD', 'AND', 'ISZERO', 'PUSH2 0x0f6e', 'JUMP']>> 
4810-Stack size: 22 
4810-Equals Mem:<< []>> 
4810-NonEquals Mem: << [<4,7>]>> 
4810-Equals Sto:<< []>> 
4810-NonEquals Sto: << []>> 
4810-Useless: []
4810-Constancy: [(10, 0), (6, 32), (7, 64)]
4810-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(17)', 'sload0'), 1), 1)}
Storage order: [(('s(4)', 's(7)', 'keccak2560'), 2), (('s(17)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(4)', 's(0)', 'mstore'), 2), (('s(8)', '3', 'mstore'), 2), (('s(4)', 's(7)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(1, 2), (0, 1)]
********************IT*********************
{10: ((('s(17)', 'sload0'), 1), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4810 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4864
4864Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'DUP5', 'DUP9', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'ISZERO', 'PUSH2 0x1322', 'JUMPI']>> 
4864-Stack size: 19 
4864-Equals Mem:<< []>> 
4864-NonEquals Mem: << [<2,5>]>> 
4864-Equals Sto:<< []>> 
4864-NonEquals Sto: << []>> 
4864-Useless: []
4864-Constancy: [(7, 0), (3, 32), (4, 64)]
4864-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{9: ((('s(12)', 'sload0'), 1), 1)}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(12)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(15)', 'mstore'), 2), (('s(4)', '5', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{9: ((('s(12)', 'sload0'), 1), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x1322 JUMPI

Optimized sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x1322 JUMPI

Optimized code stored in /tmp/0x00/IFYKYK_4864_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4864_statistics.csv

Estimated initial gas: 2174
Estimated gas optimized: 2174

Estimated initial size in bytes: 18
Estimated size optimized in bytes: 18

Initial number of instructions: 15
Final number of instructions: 15

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4864;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4864;2;False;True;True;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x1322 JUMPI;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE DUP5 DUP9 KECCAK256 SLOAD NUMBER GT ISZERO PUSH2 0x1322 JUMPI;2174;18;15;2174;18;15;0;0;0;True;False;False;False;0.3187162650283426;0;2;2100;2100

Block: 4882
4882Instr:<<['ORIGIN', 'DUP9', 'MSTORE', 'PUSH1 0x05', 'DUP5', 'MSTORE', 'NUMBER', 'DUP6', 'DUP10', 'KECCAK256', 'SSTORE', 'PUSH2 0x0f58', 'JUMP']>> 
4882-Stack size: 19 
4882-Equals Mem:<< []>> 
4882-NonEquals Mem: << [<2,5>]>> 
4882-Equals Sto:<< []>> 
4882-NonEquals Sto: << []>> 
4882-Useless: []
4882-Constancy: [(7, 0), (3, 32), (4, 64)]
4882-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(10)', 's(11)', 'sstore'), 2), 1)}
Storage order: [(('s(0)', 's(3)', 'keccak2560'), 2), (('s(10)', 's(11)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 's(9)', 'mstore'), 2), (('s(4)', '5', 'mstore'), 2), (('s(0)', 's(3)', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{10: ((('s(10)', 's(11)', 'sstore'), 2), 1)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x0f58 JUMP

Optimized sequence (basic block per line):
ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x0f58 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_4882_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4882_statistics.csv

Estimated initial gas: 5066
Estimated gas optimized: 5066

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 13
Final number of instructions: 13

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4882;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4882;2;False;True;True;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x0f58 JUMP;ORIGIN DUP9 MSTORE PUSH1 0x05 DUP5 MSTORE NUMBER DUP6 DUP10 KECCAK256 SSTORE PUSH2 0x0f58 JUMP;5066;16;13;5066;16;13;0;0;0;True;False;False;False;0.17336703999899328;0;2;5000;5000

Block: 4898
4898Instr:<<['JUMPDEST', 'DUP5', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'DUP1', 'DUP8', 'ADD', 'DUP6', 'SWAP1', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'DUP2', 'DUP5', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'SWAP1', 'REVERT']>> 
4898-Stack size: 19 
4898-Equals Mem:<< []>> 
4898-NonEquals Mem: << [<35,2>, <7,2>, <13,2>, <18,2>, <23,2>, <28,2>]>> 
4898-Equals Sto:<< []>> 
4898-NonEquals Sto: << []>> 
4898-Useless: []
4898-Constancy: [(7, 0), (3, 32), (4, 64)]
4898-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,34>, <1,6>, <1,12>, <1,17>, <1,22>, <1,27>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,34>, <1,6>, <1,12>, <1,17>, <1,22>, <1,27>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('185', '298657957751934857751', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', 'mload0'), 1), (('s(8)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(11)', 's(2)', 'mstore'), 2), (('s(13)', '73', 'mstore'), 2), (('s(15)', '43175464300754785199614199185070010317087193698741912792988322009422349034092', 'mstore'), 2), (('s(17)', '45860600759840658865901563111326240759021334497413467019838167414095995691883', 'mstore'), 2), (('s(19)', '14646143631966502206444807779315018622133502848875313473344638166890690117632', 'mstore'), 2)]
Memory dep: [(5, 6), (4, 6), (3, 6), (2, 6), (1, 6), (4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(5, 6), (4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT

Optimized code stored in /tmp/0x00/IFYKYK_4898_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_4898_statistics.csv

Estimated initial gas: 112
Estimated gas optimized: 112

Estimated initial size in bytes: 122
Estimated size optimized in bytes: 122

Initial number of instructions: 39
Final number of instructions: 39

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4898;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;4898;2;True;False;False;JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT;JUMPDEST DUP5 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b DUP2 DUP5 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 SWAP1 REVERT;112;122;39;112;122;39;0;0;0;True;False;False;False;2.253545204002876;2;5;0;0

Block: 5076
5076Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5076-Stack size: 12 
5076-Equals Mem:<< []>> 
5076-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5076-Equals Sto:<< []>> 
5076-NonEquals Sto: << []>> 
5076-Useless: []
5076-Constancy: [(0, 0)]
5076-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '41', 'mstore'), 2), (('s(9)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(11)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_5076_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_5076_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 87
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_5076;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;5076;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616e207a65726f0000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;87;33;79;132;28;15;-45;5;True;False;False;False;2.13750023097964;2;4;0;0

Block: 5163
5163Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5163-Stack size: 12 
5163-Equals Mem:<< []>> 
5163-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5163-Equals Sto:<< []>> 
5163-NonEquals Sto: << []>> 
5163-Useless: []
5163-Constancy: [(0, 0)]
5163-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '35', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(11)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_5163_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_5163_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_5163;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;5163;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;79;132;28;15;-51;5;True;False;False;False;2.142197681008838;2;4;0;0

Block: 5244
5244Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
5244-Stack size: 12 
5244-Equals Mem:<< []>> 
5244-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
5244-Equals Sto:<< []>> 
5244-NonEquals Sto: << []>> 
5244-Useless: []
5244-Constancy: [(4, 0)]
5244-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '37', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(11)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_5244_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_5244_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_5244;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;5244;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;83;33;79;132;28;15;-49;5;True;False;False;False;2.1454994049854577;2;4;0;0

Block: 2635
2635Instr:<<['PUSH1 0x20', 'SWAP1', 'MLOAD', 'PUSH8 0x8ac7230489e80000', 'DUP2', 'MSTORE', 'RETURN']>> 
2635-Stack size: 5 
2635-Equals Mem:<< []>> 
2635-NonEquals Mem: << [<5,2>]>> 
2635-Equals Sto:<< []>> 
2635-NonEquals Sto: << []>> 
2635-Useless: []
2635-Constancy: [(4, 0), (1, 0), (0, 64)]
2635-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', '10000000000000000000', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH8 0x8ac7230489e80000 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH8 0x8ac7230489e80000 DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_2635_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2635_statistics.csv

Estimated initial gas: 18
Estimated gas optimized: 18

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 7
Final number of instructions: 7

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2635;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2635;2;False;True;True;PUSH1 0x20 SWAP1 MLOAD PUSH8 0x8ac7230489e80000 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH8 0x8ac7230489e80000 DUP2 MSTORE RETURN;18;16;7;18;16;7;0;0;0;True;False;False;False;0.017387570987921208;0;0;0;0

Block: 2670
2670Instr:<<['PUSH1 0x20', 'SWAP1', 'PUSH1 0x12', 'SLOAD', 'SWAP1', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'RETURN']>> 
2670-Stack size: 5 
2670-Equals Mem:<< []>> 
2670-NonEquals Mem: << [<8,5>]>> 
2670-Equals Sto:<< []>> 
2670-NonEquals Sto: << []>> 
2670-Useless: []
2670-Constancy: [(4, 0), (1, 0), (0, 64)]
2670-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{3: ((('18', 'sload0'), 1), 0)}
Storage order: [(('18', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('18', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN

Optimized sequence (basic block per line):
PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 SLOAD DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/IFYKYK_2670_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2670_statistics.csv

Estimated initial gas: 2124
Estimated gas optimized: 2118

Estimated initial size in bytes: 12
Estimated size optimized in bytes: 10

Initial number of instructions: 10
Final number of instructions: 8

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2670;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2670;2;False;True;True;PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN;PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 SLOAD DUP2 MSTORE RETURN;2124;12;10;2118;10;8;6;2;2;True;False;False;False;0.03519579395651817;0;0;2100;2100

Block: 3280
3280Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3280-Stack size: 9 
3280-Equals Mem:<< []>> 
3280-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3280-Equals Sto:<< []>> 
3280-NonEquals Sto: << []>> 
3280-Useless: []
3280-Constancy: [(5, 32)]
3280-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '34', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(11)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_3280_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3280_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 79

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 132

Initial number of instructions: 33
Final number of instructions: 28

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3280;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3280;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;80;33;79;132;28;15;-52;5;True;False;False;False;2.140151555999182;2;4;0;0

Block: 3360
3360Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'SWAP1', 'REVERT']>> 
3360-Stack size: 10 
3360-Equals Mem:<< []>> 
3360-NonEquals Mem: << [<7,2>, <12,2>, <17,2>, <22,2>, <29,2>]>> 
3360-Equals Sto:<< []>> 
3360-NonEquals Sto: << []>> 
3360-Useless: []
3360-Constancy: [(6, 32)]
3360-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '36', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(11)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT

Optimized code stored in /tmp/0x00/IFYKYK_3360_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_3360_statistics.csv

Estimated initial gas: 94
Estimated gas optimized: 82

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 133

Initial number of instructions: 33
Final number of instructions: 29

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3360;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;3360;2;True;True;False;JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT;JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 SWAP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 PUSH1 0x24 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 DUP2 PUSH1 0x44 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x64 ADD MSTORE REVERT;94;81;33;82;133;29;12;-52;4;True;False;False;False;2.1083840010105632;2;4;0;0

Block: 2826
2826Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP2', 'MSTORE', 'PUSH6 0x4946594b594b', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x40', 'MLOAD', 'SWAP2', 'DUP3', 'SWAP2', 'DUP3', 'PUSH2 0x0aa4', 'JUMP']>> 
2826-Stack size: 6 
2826-Equals Mem:<< []>> 
2826-NonEquals Mem: << [<3,12>, <3,10>, <10,12>]>> 
2826-Equals Sto:<< []>> 
2826-NonEquals Sto: << []>> 
2826-Useless: []
2826-Constancy: [(5, 0), (2, 64)]
2826-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,11>, <2,9>, <9,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,11>, <2,9>, <9,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('208', '80566494648651', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '6', 'mstore'), 2), (('s(9)', '33143133527937444819749923041638649837649130407427305059520935195345112006656', 'mstore'), 2), (('64', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x06 DUP2 MSTORE PUSH6 0x4946594b594b PUSH1 0xd0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0aa4 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH32 0x4946594b594b0000000000000000000000000000000000000000000000000000 PUSH1 0x6 DUP3 MSTORE DUP2 PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xaa4 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_2826_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2826_statistics.csv

Estimated initial gas: 60
Estimated gas optimized: 54

Estimated initial size in bytes: 31
Estimated size optimized in bytes: 54

Initial number of instructions: 19
Final number of instructions: 17

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2826;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2826;2;False;True;True;JUMPDEST PUSH1 0x06 DUP2 MSTORE PUSH6 0x4946594b594b PUSH1 0xd0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x0aa4 JUMP;JUMPDEST PUSH32 0x4946594b594b0000000000000000000000000000000000000000000000000000 PUSH1 0x6 DUP3 MSTORE DUP2 PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xaa4 JUMP;60;31;19;54;54;17;6;-23;2;True;False;False;False;0.5571987679577433;1;0;0;0

Block: 2724
2724Instr:<<['JUMPDEST', 'PUSH1 0x20', 'DUP1', 'DUP3', 'MSTORE', 'DUP3', 'MLOAD', 'DUP2', 'DUP4', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'SWAP1', 'SWAP4', 'SWAP3', 'PUSH0']>> 
2724-Stack size: 9 
2724-Equals Mem:<< []>> 
2724-NonEquals Mem: << [<4,6>, <12,6>]>> 
2724-Equals Sto:<< []>> 
2724-NonEquals Sto: << []>> 
2724-Useless: []
2724-Constancy: []
2724-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,5>, <5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,5>, <5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', '32', 'mstore'), 2), (('s(1)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0

Optimized sequence (basic block per line):
JUMPDEST DUP2 MLOAD DUP1 PUSH1 0x20 DUP4 MSTORE DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x20 SWAP4 SWAP3 PUSH1 0x0

Optimized code stored in /tmp/0x00/IFYKYK_2724_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2724_statistics.csv

Estimated initial gas: 48
Estimated gas optimized: 43

Estimated initial size in bytes: 18
Estimated size optimized in bytes: 19

Initial number of instructions: 17
Final number of instructions: 15

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2724;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2724;2;False;True;True;JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH0;JUMPDEST DUP2 MLOAD DUP1 PUSH1 0x20 DUP4 MSTORE DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x20 SWAP4 SWAP3 PUSH1 0x0;48;18;17;43;19;15;5;-1;2;True;False;False;False;1.722367838025093;0;1;0;0

Block: 2775
2775Instr:<<['JUMPDEST', 'DUP2', 'DUP2', 'ADD', 'DUP7', 'ADD', 'MLOAD', 'DUP5', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP6', 'ADD', 'PUSH2 0x0ab6', 'JUMP']>> 
2775-Stack size: 12 
2775-Equals Mem:<< []>> 
2775-NonEquals Mem: << [<12,6>]>> 
2775-Equals Sto:<< []>> 
2775-NonEquals Sto: << []>> 
2775-Useless: []
2775-Constancy: [(5, 32)]
2775-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
{}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0ab6 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0ab6 JUMP

Optimized code stored in /tmp/0x00/IFYKYK_2775_optimized.txt
Optimality results stored in /tmp/0x00/IFYKYK_2775_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 54

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 20

Initial number of instructions: 17
Final number of instructions: 17

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2775;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;IFYKYK;2775;2;False;True;True;JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0ab6 JUMP;JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x0ab6 JUMP;54;20;17;54;20;17;0;0;0;True;False;False;False;0.948288754967507;0;0;0;0

Block: 3004
3004Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x41', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3004-Stack size: 5 
3004-Equals Mem:<< []>> 
3004-NonEquals Mem: << [<5,8>]>> 
3004-Equals Sto:<< []>> 
3004-NonEquals Sto: << []>> 
3004-Useless: []
3004-Constancy: []
3004-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '65', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3004 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 328
328Instr:<<['DUP1', 'PUSH1 0x09', 'SSTORE', 'PUSH1 0x0a', 'SSTORE', 'DUP1', 'RETURN']>> 
328-Stack size: 2 
328-Equals Mem:<< []>> 
328-NonEquals Mem: << []>> 
328-Equals Sto:<< []>> 
328-NonEquals Sto: << [<2,4>]>> 
328-Useless: []
328-Constancy: [(1, 0)]
328-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{2: ((('9', 's(1)', 'sstore'), 2), 0), 4: ((('10', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('9', 's(1)', 'sstore'), 2), (('10', 's(1)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('9', 's(1)', 'sstore'), 2), 0), 4: ((('10', 's(1)', 'sstore'), 2), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_328 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 490
490Instr:<<['PUSH1 0x13', 'SLOAD', 'SWAP2', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'PUSH12 0xffffffffffffffffffffffff', 'PUSH1 0xa0', 'SHL', 'SWAP4', 'DUP2', 'DUP6', 'DUP3', 'AND', 'OR', 'PUSH1 0x13', 'SSTORE', 'ADDRESS', 'ISZERO', 'PUSH2 0x04fd', 'JUMPI']>> 
490-Stack size: 5 
490-Equals Mem:<< []>> 
490-NonEquals Mem: << []>> 
490-Equals Sto:<< [<1,14>]>> 
490-NonEquals Sto: << []>> 
490-Useless: []
490-Constancy: [(4, 0), (0, 64)]
490-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<1,14>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '79228162514264337593543950335', 'shl')
{1: ((('19', 'sload0'), 1), 0), 14: ((('19', 's(11)', 'sstore'), 2), 1)}
Storage order: [(('19', 'sload0'), 1), (('19', 's(11)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{1: ((('19', 'sload0'), 1), 0), 14: ((('19', 's(11)', 'sstore'), 2), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_490 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 923
923Instr:<<['JUMPDEST', 'POP', 'POP', 'DUP1', 'SLOAD', 'PUSH3 0xff00ff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH3 0x010001', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'DUP1', 'RETURN']>> 
923-Stack size: 4 
923-Equals Mem:<< []>> 
923-NonEquals Mem: << []>> 
923-Equals Sto:<< [<4,15>]>> 
923-NonEquals Sto: << []>> 
923-Useless: []
923-Constancy: [(3, 0)]
923-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,14>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '65537', 'shl')
[RULE]: Evaluate expression ('160', '16711935', 'shl')
{2: ((('s(1)', 'sload0'), 1), 0), 14: ((('s(1)', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('s(1)', 'sload0'), 1), (('s(1)', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{2: ((('s(1)', 'sload0'), 1), 0), 14: ((('s(1)', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_923 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2002
2002Instr:<<['JUMPDEST', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'SWAP7', 'PUSH1 0x01', 'PUSH1 0xa8', 'SHL', 'DUP9', 'PUSH1 0x14', 'SLOAD', 'AND', 'OR', 'PUSH1 0x14', 'SSTORE', 'DUP5', 'MLOAD', 'SWAP4', 'PUSH2 0x07f3', 'DUP6', 'PUSH2 0x0bd0', 'JUMP']>> 
2002-Stack size: 8 
2002-Equals Mem:<< []>> 
2002-NonEquals Mem: << []>> 
2002-Equals Sto:<< [<11,15>]>> 
2002-NonEquals Sto: << []>> 
2002-Useless: []
2002-Constancy: [(7, 0), (5, 0), (3, 64), (2, 32)]
2002-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<10,14>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '255', 'shl')
[RULE]: Evaluate expression ('168', '1', 'shl')
{10: ((('20', 'sload0'), 1), 0), 14: ((('20', 's(15)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(15)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: [(('s(3)', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{10: ((('20', 'sload0'), 1), 0), 14: ((('20', 's(15)', 'sstore'), 2), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2002 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2240
2240Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'DUP1', 'DUP3', 'DUP1', 'DUP1', 'DUP1', 'DUP1', 'PUSH2 0x07b5', 'JUMP']>> 
2240-Stack size: 4 
2240-Equals Mem:<< []>> 
2240-NonEquals Mem: << []>> 
2240-Equals Sto:<< [<4,7>]>> 
2240-NonEquals Sto: << []>> 
2240-Useless: []
2240-Constancy: [(3, 0), (1, 0)]
2240-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,6>], 'storage_deps_noneqs': []}
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(9)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(9)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(9)', 'sstore'), 2), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_2240 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3832
3832Instr:<<['DUP7', 'SWAP1', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0b', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x13aa', 'JUMPI']>> 
3832-Stack size: 16 
3832-Equals Mem:<< []>> 
3832-NonEquals Mem: << []>> 
3832-Equals Sto:<< []>> 
3832-NonEquals Sto: << [<3,5>]>> 
3832-Useless: []
3832-Constancy: [(1, 64), (4, 0), (6, 32)]
3832-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,5>]}
{3: ((('14', 'sload0'), 1), 0), 5: ((('11', 'sload1'), 1), 1)}
Storage order: [(('14', 'sload0'), 1), (('11', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
EQ(0,X)
[RULE]: Simplification rule type 2: {'id': 'ISZERO_0', 'opcode': '15', 'disasm': 'ISZERO', 'inpt_sk': ['s(11)'], 'outpt_sk': ['s(10)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Delete rules: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{3: ((('14', 'sload0'), 1), 0), 5: ((('11', 'sload1'), 1), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_3832 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4332
4332Instr:<<['JUMPDEST', 'POP', 'SWAP1', 'PUSH1 0x14', 'SLOAD', 'AND', 'PUSH1 0x14', 'SSTORE', 'SELFBALANCE', 'PUSH2 0x1109', 'JUMPI']>> 
4332-Stack size: 16 
4332-Equals Mem:<< []>> 
4332-NonEquals Mem: << []>> 
4332-Equals Sto:<< [<4,7>]>> 
4332-NonEquals Sto: << []>> 
4332-Useless: []
4332-Constancy: [(1, 0)]
4332-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,6>], 'storage_deps_noneqs': []}
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(4)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(4)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{2: ((('20', 'sload0'), 1), 0), 5: ((('20', 's(4)', 'sstore'), 2), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4332 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4477
4477Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'LT', 'PUSH2 0x0fb3', 'JUMP']>> 
4477-Stack size: 21 
4477-Equals Mem:<< []>> 
4477-NonEquals Mem: << []>> 
4477-Equals Sto:<< []>> 
4477-NonEquals Sto: << [<3,5>]>> 
4477-Useless: []
4477-Constancy: [(9, 0), (6, 64), (5, 32)]
4477-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{1: ((('14', 'sload0'), 1), 0), 3: ((('13', 'sload1'), 1), 1)}
Storage order: [(('14', 'sload0'), 1), (('13', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{1: ((('14', 'sload0'), 1), 0), 3: ((('13', 'sload1'), 1), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4477 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4522
4522Instr:<<['JUMPDEST', 'DUP4', 'SWAP2', 'SWAP12', 'POP', 'PUSH1 0x0e', 'SLOAD', 'PUSH1 0x0c', 'SLOAD', 'LT', 'PUSH0', 'EQ', 'PUSH2 0x11e3', 'JUMPI']>> 
4522-Stack size: 21 
4522-Equals Mem:<< []>> 
4522-NonEquals Mem: << []>> 
4522-Equals Sto:<< []>> 
4522-NonEquals Sto: << [<6,8>]>> 
4522-Useless: []
4522-Constancy: [(9, 0), (6, 64), (5, 32)]
4522-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<5,7>]}
{5: ((('14', 'sload0'), 1), 0), 7: ((('12', 'sload1'), 1), 1)}
Storage order: [(('14', 'sload0'), 1), (('12', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
EQ(0,X)
[RULE]: Simplification rule type 2: {'id': 'ISZERO_0', 'opcode': '15', 'disasm': 'ISZERO', 'inpt_sk': ['s(15)'], 'outpt_sk': ['s(14)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Delete rules: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{5: ((('14', 'sload0'), 1), 0), 7: ((('12', 'sload1'), 1), 1)}
BLOCK 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_IFYKYK_4522 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 64
64Instr:<<['SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'SWAP1', 'RETURN']>> 
64-Stack size: 1 
64-Equals Mem:<< []>> 
64-NonEquals Mem: << [<12,2>]>> 
64-Equals Sto:<< []>> 
64-NonEquals Sto: << []>> 
64-Useless: []
64-Constancy: [(0, 0)]
64-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{0: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', 's(4)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{0: ((('s(0)', 'sload0'), 1), 0)}
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
SLOAD PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN

Optimized sequence (basic block per line):
SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_64_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_64_statistics.csv

Estimated initial gas: 2142
Estimated gas optimized: 2124

Estimated initial size in bytes: 21
Estimated size optimized in bytes: 32

Initial number of instructions: 16
Final number of instructions: 10

GREENRES: 0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol_Ownable_64;0x00bc6e9fa7cadbd10fdf87799bb00153f167f047.sol;Ownable;64;2;False;True;True;SLOAD PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN;SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2142;21;16;2124;32;10;18;-11;6;True;False;False;False;0.1192562590003945;2;0;2100;2100

