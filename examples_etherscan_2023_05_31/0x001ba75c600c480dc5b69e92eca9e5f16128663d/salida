incomplete push instruction at 4036
Green Main
*************************************************************
Compilation time: 0.323897092952393s
*************************************************************
File: ERC20
Build CFG: 0.04450111300684512s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis ERC20
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract ERC20: 19
Memory read accesses ContractERC20: 76
Memory write accesses ContractERC20: 138
********************************** INIT
COMPACT CLONES: True
CONTRACT: ERC20
-----
Block: 406
406Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
406-Stack size: 4 
406-Equals Mem:<< [<12,27>, <17,31>]>> 
406-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
406-Equals Sto:<< []>> 
406-NonEquals Sto: << []>> 
406-Useless: []
406-Constancy: []
406-ContextAliasing: []

.....
-----
Block: 239
239Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
239-Stack size: 2 
239-Equals Mem:<< []>> 
239-NonEquals Mem: << [<5,2>]>> 
239-Equals Sto:<< []>> 
239-NonEquals Sto: << []>> 
239-Useless: []
239-Constancy: []
239-ContextAliasing: []

.....
-----
Block: 1331_0
1331_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1331_0-Stack size: 9 
1331_0-Equals Mem:<< []>> 
1331_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1331_0-Equals Sto:<< []>> 
1331_0-NonEquals Sto: << []>> 
1331_0-Useless: []
1331_0-Constancy: [(4, 0)]
1331_0-ContextAliasing: []

.....
-----
Block: 1431_0
1431_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1431_0-Stack size: 9 
1431_0-Equals Mem:<< []>> 
1431_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1431_0-Equals Sto:<< []>> 
1431_0-NonEquals Sto: << []>> 
1431_0-Useless: []
1431_0-Constancy: [(4, 0)]
1431_0-ContextAliasing: []

.....
-----
Block: 1514_0
1514_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP2', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x0661', 'JUMPI']>> 
1514_0-Stack size: 9 
1514_0-Equals Mem:<< []>> 
1514_0-NonEquals Mem: << [<11,15>]>> 
1514_0-Equals Sto:<< []>> 
1514_0-NonEquals Sto: << []>> 
1514_0-Useless: []
1514_0-Constancy: [(4, 0)]
1514_0-ContextAliasing: []

.....
-----
Block: 1547_0
1547_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x616c616e6365', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1547_0-Stack size: 10 
1547_0-Equals Mem:<< []>> 
1547_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1547_0-Equals Sto:<< []>> 
1547_0-NonEquals Sto: << []>> 
1547_0-Useless: []
1547_0-Constancy: [(5, 0)]
1547_0-ContextAliasing: []

.....
-----
Block: 1633_0
1633_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'DUP6', 'DUP6', 'SUB', 'SWAP1', 'SSTORE', 'SWAP2', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP5', 'SWAP3', 'SWAP1', 'PUSH2 0x0697', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0841', 'JUMP']>> 
1633_0-Stack size: 10 
1633_0-Equals Mem:<< [<12,30>]>> 
1633_0-NonEquals Mem: << [<12,16>, <16,30>]>> 
1633_0-Equals Sto:<< [<25,35>]>> 
1633_0-NonEquals Sto: << []>> 
1633_0-Useless: []
1633_0-Constancy: [(5, 0)]
1633_0-ContextAliasing: []

.....
-----
Block: 2125_1
2125_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2125_1-Stack size: 17 
2125_1-Equals Mem:<< []>> 
2125_1-NonEquals Mem: << [<4,7>]>> 
2125_1-Equals Sto:<< []>> 
2125_1-NonEquals Sto: << []>> 
2125_1-Useless: []
2125_1-Constancy: [(12, 0), (4, 0)]
2125_1-ContextAliasing: []

.....
-----
Block: 1687_0
1687_0Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'POP', 'DUP2', 'SWAP1', 'SSTORE', 'POP', 'DUP3', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP5', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x06e3', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
1687_0-Stack size: 14 
1687_0-Equals Mem:<< []>> 
1687_0-NonEquals Mem: << [<29,25>]>> 
1687_0-Equals Sto:<< []>> 
1687_0-NonEquals Sto: << []>> 
1687_0-Useless: []
1687_0-Constancy: [(9, 0), (1, 0)]
1687_0-ContextAliasing: []

.....
-----
Block: 219
219Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
219-Stack size: 2 
219-Equals Mem:<< []>> 
219-NonEquals Mem: << [<7,2>]>> 
219-Equals Sto:<< []>> 
219-NonEquals Sto: << []>> 
219-Useless: []
219-Constancy: []
219-ContextAliasing: []

.....
-----
Block: 861
861Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'DUP3', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x03de', 'JUMPI']>> 
861-Stack size: 4 
861-Equals Mem:<< [<5,23>, <10,26>]>> 
861-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
861-Equals Sto:<< []>> 
861-NonEquals Sto: << []>> 
861-Useless: []
861-Constancy: []
861-ContextAliasing: []

.....
-----
Block: 905
905Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x207a65726f', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
905-Stack size: 6 
905-Equals Mem:<< []>> 
905-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
905-Equals Sto:<< []>> 
905-NonEquals Sto: << []>> 
905-Useless: []
905-Constancy: [(1, 0)]
905-ContextAliasing: []

.....
-----
Block: 1040_1
1040_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1040_1-Stack size: 10 
1040_1-Equals Mem:<< []>> 
1040_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1040_1-Equals Sto:<< []>> 
1040_1-NonEquals Sto: << []>> 
1040_1-Useless: []
1040_1-Constancy: [(5, 0)]
1040_1-ContextAliasing: []

.....
-----
Block: 1138_1
1138_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1138_1-Stack size: 10 
1138_1-Equals Mem:<< []>> 
1138_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1138_1-Equals Sto:<< []>> 
1138_1-NonEquals Sto: << []>> 
1138_1-Useless: []
1138_1-Constancy: [(5, 0)]
1138_1-ContextAliasing: []

.....
-----
Block: 2088_0
2088_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2088_0-Stack size: 8 
2088_0-Equals Mem:<< []>> 
2088_0-NonEquals Mem: << [<4,7>]>> 
2088_0-Equals Sto:<< []>> 
2088_0-NonEquals Sto: << []>> 
2088_0-Useless: []
2088_0-Constancy: [(5, 96)]
2088_0-ContextAliasing: []

.....
-----
Block: 463
463Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x01fb', 'SWAP1', 'PUSH2 0x0809', 'JUMP']>> 
463-Stack size: 5 
463-Equals Mem:<< [<17,12>]>> 
463-NonEquals Mem: << [<17,24>, <24,12>]>> 
463-Equals Sto:<< []>> 
463-NonEquals Sto: << []>> 
463-Useless: []
463-Constancy: [(2, 96)]
463-ContextAliasing: []

.....
-----
Block: 2088
2088Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2088-Stack size: 12 
2088-Equals Mem:<< []>> 
2088-NonEquals Mem: << [<4,7>]>> 
2088-Equals Sto:<< []>> 
2088-NonEquals Sto: << []>> 
2088-Useless: []
2088-Constancy: [(9, 96)]
2088-ContextAliasing: []

.....
-----
Block: 1777
1777Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1777-Stack size: 4 
1777-Equals Mem:<< []>> 
1777-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
1777-Equals Sto:<< []>> 
1777-NonEquals Sto: << []>> 
1777-Useless: []
1777-Constancy: []
1777-ContextAliasing: []

.....
-----
Block: 1801
1801Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x0700', 'JUMP']>> 
1801-Stack size: 8 
1801-Equals Mem:<< []>> 
1801-NonEquals Mem: << [<11,5>]>> 
1801-Equals Sto:<< []>> 
1801-NonEquals Sto: << []>> 
1801-Useless: []
1801-Constancy: [(3, 0), (2, 32)]
1801-ContextAliasing: []

.....
-----
Block: 320
320Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
320-Stack size: 3 
320-Equals Mem:<< []>> 
320-NonEquals Mem: << [<10,14>]>> 
320-Equals Sto:<< []>> 
320-NonEquals Sto: << []>> 
320-Useless: []
320-Constancy: []
320-ContextAliasing: []

.....
-----
Block: 787
787Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x025c', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x0349', 'SWAP1', 'DUP7', 'SWAP1', 'PUSH2 0x0841', 'JUMP']>> 
787-Stack size: 4 
787-Equals Mem:<< [<5,23>, <10,26>]>> 
787-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
787-Equals Sto:<< []>> 
787-NonEquals Sto: << []>> 
787-Useless: []
787-Constancy: []
787-ContextAliasing: []

.....
-----
Block: 2125_0
2125_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2125_0-Stack size: 12 
2125_0-Equals Mem:<< []>> 
2125_0-NonEquals Mem: << [<4,7>]>> 
2125_0-Equals Sto:<< []>> 
2125_0-NonEquals Sto: << []>> 
2125_0-Useless: []
2125_0-Constancy: [(7, 0)]
2125_0-ContextAliasing: []

.....
-----
Block: 1040
1040Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1040-Stack size: 9 
1040-Equals Mem:<< []>> 
1040-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1040-Equals Sto:<< []>> 
1040-NonEquals Sto: << []>> 
1040-Useless: []
1040-Constancy: [(4, 0)]
1040-ContextAliasing: []

.....
-----
Block: 1138
1138Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1138-Stack size: 9 
1138-Equals Mem:<< []>> 
1138-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1138-Equals Sto:<< []>> 
1138-NonEquals Sto: << []>> 
1138-Useless: []
1138-Constancy: [(4, 0)]
1138-ContextAliasing: []

.....
-----
Block: 272
272Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
272-Stack size: 1 
272-Equals Mem:<< []>> 
272-NonEquals Mem: << [<5,2>]>> 
272-Equals Sto:<< []>> 
272-NonEquals Sto: << []>> 
272-Useless: []
272-Constancy: []
272-ContextAliasing: []

.....
-----
Block: 1331
1331Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1331-Stack size: 10 
1331-Equals Mem:<< []>> 
1331-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1331-Equals Sto:<< []>> 
1331-NonEquals Sto: << []>> 
1331-Useless: []
1331-Constancy: [(4, 0)]
1331-ContextAliasing: []

.....
-----
Block: 1431
1431Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1431-Stack size: 10 
1431-Equals Mem:<< []>> 
1431-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1431-Equals Sto:<< []>> 
1431-NonEquals Sto: << []>> 
1431-Useless: []
1431-Constancy: [(4, 0)]
1431-ContextAliasing: []

.....
-----
Block: 1514
1514Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP2', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x0661', 'JUMPI']>> 
1514-Stack size: 10 
1514-Equals Mem:<< []>> 
1514-NonEquals Mem: << [<11,15>]>> 
1514-Equals Sto:<< []>> 
1514-NonEquals Sto: << []>> 
1514-Useless: []
1514-Constancy: [(4, 0)]
1514-ContextAliasing: []

.....
-----
Block: 1547
1547Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x616c616e6365', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1547-Stack size: 11 
1547-Equals Mem:<< []>> 
1547-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1547-Equals Sto:<< []>> 
1547-NonEquals Sto: << []>> 
1547-Useless: []
1547-Constancy: [(5, 0)]
1547-ContextAliasing: []

.....
-----
Block: 1633
1633Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'DUP6', 'DUP6', 'SUB', 'SWAP1', 'SSTORE', 'SWAP2', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP5', 'SWAP3', 'SWAP1', 'PUSH2 0x0697', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0841', 'JUMP']>> 
1633-Stack size: 11 
1633-Equals Mem:<< [<12,30>]>> 
1633-NonEquals Mem: << [<12,16>, <16,30>]>> 
1633-Equals Sto:<< [<25,35>]>> 
1633-NonEquals Sto: << []>> 
1633-Useless: []
1633-Constancy: [(5, 0)]
1633-ContextAliasing: []

.....
-----
Block: 2125
2125Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2125-Stack size: 18 
2125-Equals Mem:<< []>> 
2125-NonEquals Mem: << [<4,7>]>> 
2125-Equals Sto:<< []>> 
2125-NonEquals Sto: << []>> 
2125-Useless: []
2125-Constancy: [(12, 0), (4, 0)]
2125-ContextAliasing: []

.....
-----
Block: 1687
1687Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'POP', 'DUP2', 'SWAP1', 'SSTORE', 'POP', 'DUP3', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP5', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x06e3', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
1687-Stack size: 15 
1687-Equals Mem:<< []>> 
1687-NonEquals Mem: << [<29,25>]>> 
1687-Equals Sto:<< []>> 
1687-NonEquals Sto: << []>> 
1687-Useless: []
1687-Constancy: [(9, 0), (1, 0)]
1687-ContextAliasing: []

.....
-----
Block: 626
626Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'CALLER', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP3', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x02fb', 'JUMPI']>> 
626-Stack size: 6 
626-Equals Mem:<< [<11,23>, <16,26>]>> 
626-NonEquals Mem: << [<11,16>, <11,26>, <16,23>, <23,26>]>> 
626-Equals Sto:<< []>> 
626-NonEquals Sto: << []>> 
626-Useless: []
626-Constancy: [(0, 0)]
626-ContextAliasing: []

.....
-----
Block: 670
670Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x28', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
670-Stack size: 7 
670-Equals Mem:<< []>> 
670-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
670-Equals Sto:<< []>> 
670-NonEquals Sto: << []>> 
670-Useless: []
670-Constancy: [(1, 0)]
670-ContextAliasing: []

.....
-----
Block: 1040_0
1040_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1040_0-Stack size: 11 
1040_0-Equals Mem:<< []>> 
1040_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1040_0-Equals Sto:<< []>> 
1040_0-NonEquals Sto: << []>> 
1040_0-Useless: []
1040_0-Constancy: [(5, 0)]
1040_0-ContextAliasing: []

.....
-----
Block: 1138_0
1138_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x02f2', 'JUMP']>> 
1138_0-Stack size: 11 
1138_0-Equals Mem:<< []>> 
1138_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1138_0-Equals Sto:<< []>> 
1138_0-NonEquals Sto: << []>> 
1138_0-Useless: []
1138_0-Constancy: [(5, 0)]
1138_0-ContextAliasing: []

.....
-----
Block: 191
191Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
191-Stack size: 2 
191-Equals Mem:<< []>> 
191-NonEquals Mem: << []>> 
191-Equals Sto:<< []>> 
191-NonEquals Sto: << []>> 
191-Useless: []
191-Constancy: []
191-ContextAliasing: []

.....
-----
Block: 754
754Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754-Stack size: 10 
754-Equals Mem:<< []>> 
754-NonEquals Mem: << []>> 
754-Equals Sto:<< []>> 
754-NonEquals Sto: << []>> 
754-Useless: []
754-Constancy: [(5, 0)]
754-ContextAliasing: []

.....
-----
Block: 754_6
754_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754_6-Stack size: 11 
754_6-Equals Mem:<< []>> 
754_6-NonEquals Mem: << []>> 
754_6-Equals Sto:<< []>> 
754_6-NonEquals Sto: << []>> 
754_6-Useless: []
754_6-Constancy: [(6, 0)]
754_6-ContextAliasing: []

.....
-----
Block: 754_5
754_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754_5-Stack size: 7 
754_5-Equals Mem:<< []>> 
754_5-NonEquals Mem: << []>> 
754_5-Equals Sto:<< []>> 
754_5-NonEquals Sto: << []>> 
754_5-Useless: []
754_5-Constancy: [(2, 0)]
754_5-ContextAliasing: []

.....
-----
Block: 754_4
754_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754_4-Stack size: 11 
754_4-Equals Mem:<< []>> 
754_4-NonEquals Mem: << []>> 
754_4-Equals Sto:<< []>> 
754_4-NonEquals Sto: << []>> 
754_4-Useless: []
754_4-Constancy: [(6, 0)]
754_4-ContextAliasing: []

.....
-----
Block: 754_3
754_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754_3-Stack size: 11 
754_3-Equals Mem:<< []>> 
754_3-NonEquals Mem: << []>> 
754_3-Equals Sto:<< []>> 
754_3-NonEquals Sto: << []>> 
754_3-Useless: []
754_3-Constancy: [(5, 0)]
754_3-ContextAliasing: []

.....
-----
Block: 754_2
754_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754_2-Stack size: 12 
754_2-Equals Mem:<< []>> 
754_2-NonEquals Mem: << []>> 
754_2-Equals Sto:<< []>> 
754_2-NonEquals Sto: << []>> 
754_2-Useless: []
754_2-Constancy: [(6, 0)]
754_2-ContextAliasing: []

.....
-----
Block: 754_1
754_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754_1-Stack size: 8 
754_1-Equals Mem:<< []>> 
754_1-NonEquals Mem: << []>> 
754_1-Equals Sto:<< []>> 
754_1-NonEquals Sto: << []>> 
754_1-Useless: []
754_1-Constancy: [(2, 0)]
754_1-ContextAliasing: []

.....
-----
Block: 754_0
754_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
754_0-Stack size: 12 
754_0-Equals Mem:<< []>> 
754_0-NonEquals Mem: << []>> 
754_0-Equals Sto:<< []>> 
754_0-NonEquals Sto: << []>> 
754_0-Useless: []
754_0-Constancy: [(6, 0)]
754_0-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.042773697001393884s

*************************************************************
File: WomoToken
Build CFG: 0.10640128498198465s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis WomoToken
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract WomoToken: 42
Memory read accesses ContractWomoToken: 143
Memory write accesses ContractWomoToken: 256
********************************** INIT
COMPACT CLONES: True
CONTRACT: WomoToken
-----
Block: 1652
1652Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x045b', 'SWAP1', 'PUSH2 0x0f4e', 'JUMP']>> 
1652-Stack size: 3 
1652-Equals Mem:<< []>> 
1652-NonEquals Mem: << [<6,1>]>> 
1652-Equals Sto:<< []>> 
1652-NonEquals Sto: << []>> 
1652-Useless: []
1652-Constancy: []
1652-ContextAliasing: []

.....
-----
Block: 1690
1690Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1690-Stack size: 3 
1690-Equals Mem:<< []>> 
1690-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1690-Equals Sto:<< []>> 
1690-NonEquals Sto: << []>> 
1690-Useless: []
1690-Constancy: []
1690-ContextAliasing: []

.....
-----
Block: 748
748Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
748-Stack size: 4 
748-Equals Mem:<< [<12,27>, <17,31>]>> 
748-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
748-Equals Sto:<< []>> 
748-NonEquals Sto: << []>> 
748-Useless: []
748-Constancy: []
748-ContextAliasing: []

.....
-----
Block: 424
424Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0156', 'JUMP']>> 
424-Stack size: 2 
424-Equals Mem:<< []>> 
424-NonEquals Mem: << [<5,2>]>> 
424-Equals Sto:<< []>> 
424-NonEquals Sto: << []>> 
424-Useless: []
424-Constancy: []
424-ContextAliasing: []

.....
-----
Block: 2092_0
2092_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2092_0-Stack size: 9 
2092_0-Equals Mem:<< []>> 
2092_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2092_0-Equals Sto:<< []>> 
2092_0-NonEquals Sto: << []>> 
2092_0-Useless: []
2092_0-Constancy: [(4, 0)]
2092_0-ContextAliasing: []

.....
-----
Block: 2192_0
2192_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2192_0-Stack size: 9 
2192_0-Equals Mem:<< []>> 
2192_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2192_0-Equals Sto:<< []>> 
2192_0-NonEquals Sto: << []>> 
2192_0-Useless: []
2192_0-Constancy: [(4, 0)]
2192_0-ContextAliasing: []

.....
-----
Block: 2967_1
2967_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0bd7', 'JUMPI']>> 
2967_1-Stack size: 13 
2967_1-Equals Mem:<< []>> 
2967_1-NonEquals Mem: << [<11,14>]>> 
2967_1-Equals Sto:<< []>> 
2967_1-NonEquals Sto: << []>> 
2967_1-Useless: []
2967_1-Constancy: [(8, 0)]
2967_1-ContextAliasing: []

.....
-----
Block: 3002_1
3002_1Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3002_1-Stack size: 14 
3002_1-Equals Mem:<< []>> 
3002_1-NonEquals Mem: << [<11,14>]>> 
3002_1-Equals Sto:<< []>> 
3002_1-NonEquals Sto: << []>> 
3002_1-Useless: []
3002_1-Constancy: [(9, 0)]
3002_1-ContextAliasing: []

.....
-----
Block: 3036_1
3036_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH11 0x109b1858dadb1a5cdd1959', 'PUSH1 0xaa', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3036_1-Stack size: 13 
3036_1-Equals Mem:<< []>> 
3036_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3036_1-Equals Sto:<< []>> 
3036_1-NonEquals Sto: << []>> 
3036_1-Useless: []
3036_1-Constancy: [(8, 0)]
3036_1-ContextAliasing: []

.....
-----
Block: 3149_1
3149_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1d1c98591a5b99c81a5cc81b9bdd081cdd185c9d1959', 'PUSH1 0x52', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3149_1-Stack size: 13 
3149_1-Equals Mem:<< []>> 
3149_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3149_1-Equals Sto:<< []>> 
3149_1-NonEquals Sto: << []>> 
3149_1-Useless: []
3149_1-Constancy: [(8, 0)]
3149_1-ContextAliasing: []

.....
-----
Block: 2286_0
2286_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP2', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x0965', 'JUMPI']>> 
2286_0-Stack size: 9 
2286_0-Equals Mem:<< []>> 
2286_0-NonEquals Mem: << [<11,14>]>> 
2286_0-Equals Sto:<< []>> 
2286_0-NonEquals Sto: << []>> 
2286_0-Useless: []
2286_0-Constancy: [(4, 0)]
2286_0-ContextAliasing: []

.....
-----
Block: 2319_0
2319_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x616c616e6365', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2319_0-Stack size: 10 
2319_0-Equals Mem:<< []>> 
2319_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2319_0-Equals Sto:<< []>> 
2319_0-NonEquals Sto: << []>> 
2319_0-Useless: []
2319_0-Constancy: [(5, 0)]
2319_0-ContextAliasing: []

.....
-----
Block: 2405_0
2405_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'DUP6', 'DUP6', 'SUB', 'SWAP1', 'SSTORE', 'SWAP2', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP5', 'SWAP3', 'SWAP1', 'PUSH2 0x099b', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f3b', 'JUMP']>> 
2405_0-Stack size: 10 
2405_0-Equals Mem:<< [<12,29>]>> 
2405_0-NonEquals Mem: << [<12,15>, <15,29>]>> 
2405_0-Equals Sto:<< [<24,34>]>> 
2405_0-NonEquals Sto: << []>> 
2405_0-Useless: []
2405_0-Constancy: [(5, 0)]
2405_0-ContextAliasing: []

.....
-----
Block: 3879_6
3879_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_6-Stack size: 18 
3879_6-Equals Mem:<< []>> 
3879_6-NonEquals Mem: << [<5,8>]>> 
3879_6-Equals Sto:<< []>> 
3879_6-NonEquals Sto: << []>> 
3879_6-Useless: []
3879_6-Constancy: [(13, 0), (5, 0)]
3879_6-ContextAliasing: []

.....
-----
Block: 2459_0
2459_0Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'POP', 'DUP2', 'SWAP1', 'SSTORE', 'POP', 'DUP3', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP5', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x09e7', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
2459_0-Stack size: 14 
2459_0-Equals Mem:<< []>> 
2459_0-NonEquals Mem: << [<29,25>]>> 
2459_0-Equals Sto:<< []>> 
2459_0-NonEquals Sto: << []>> 
2459_0-Useless: []
2459_0-Constancy: [(9, 0), (1, 0)]
2459_0-ContextAliasing: []

.....
-----
Block: 370
370Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0156', 'JUMP']>> 
370-Stack size: 2 
370-Equals Mem:<< []>> 
370-NonEquals Mem: << [<7,2>]>> 
370-Equals Sto:<< []>> 
370-NonEquals Sto: << []>> 
370-Useless: []
370-Constancy: []
370-ContextAliasing: []

.....
-----
Block: 3250_1
3250_1Instr:<<['PUSH1 0x07', 'SLOAD', 'DUP2', 'PUSH2 0x0cd3', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3250_1-Stack size: 13 
3250_1-Equals Mem:<< []>> 
3250_1-NonEquals Mem: << [<14,17>]>> 
3250_1-Equals Sto:<< []>> 
3250_1-NonEquals Sto: << [<1,21>]>> 
3250_1-Useless: []
3250_1-Constancy: [(8, 0)]
3250_1-ContextAliasing: []

.....
-----
Block: 3879_8
3879_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_8-Stack size: 19 
3879_8-Equals Mem:<< []>> 
3879_8-NonEquals Mem: << [<5,8>]>> 
3879_8-Equals Sto:<< []>> 
3879_8-NonEquals Sto: << []>> 
3879_8-Useless: []
3879_8-Constancy: [(14, 0)]
3879_8-ContextAliasing: []

.....
-----
Block: 3302_1
3302_1Instr:<<['POP', 'PUSH1 0x08', 'SLOAD', 'DUP2', 'PUSH2 0x0d08', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3302_1-Stack size: 14 
3302_1-Equals Mem:<< []>> 
3302_1-NonEquals Mem: << [<15,18>]>> 
3302_1-Equals Sto:<< []>> 
3302_1-NonEquals Sto: << [<2,22>]>> 
3302_1-Useless: []
3302_1-Constancy: [(9, 0)]
3302_1-ContextAliasing: []

.....
-----
Block: 3879_7
3879_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_7-Stack size: 19 
3879_7-Equals Mem:<< []>> 
3879_7-NonEquals Mem: << [<5,8>]>> 
3879_7-Equals Sto:<< []>> 
3879_7-NonEquals Sto: << []>> 
3879_7-Useless: []
3879_7-Constancy: [(14, 0)]
3879_7-ContextAliasing: []

.....
-----
Block: 3354_1
3354_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x119bdc989a59', 'PUSH1 0xd2', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3354_1-Stack size: 13 
3354_1-Equals Mem:<< []>> 
3354_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3354_1-Equals Sto:<< []>> 
3354_1-NonEquals Sto: << []>> 
3354_1-Useless: []
3354_1-Constancy: [(8, 0)]
3354_1-ContextAliasing: []

.....
-----
Block: 1470
1470Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'DUP3', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x063f', 'JUMPI']>> 
1470-Stack size: 4 
1470-Equals Mem:<< [<5,23>, <10,26>]>> 
1470-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
1470-Equals Sto:<< []>> 
1470-NonEquals Sto: << []>> 
1470-Useless: []
1470-Constancy: []
1470-ContextAliasing: []

.....
-----
Block: 1514
1514Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x207a65726f', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1514-Stack size: 6 
1514-Equals Mem:<< []>> 
1514-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1514-Equals Sto:<< []>> 
1514-NonEquals Sto: << []>> 
1514-Useless: []
1514-Constancy: [(1, 0)]
1514-ContextAliasing: []

.....
-----
Block: 1800_1
1800_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1800_1-Stack size: 10 
1800_1-Equals Mem:<< []>> 
1800_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1800_1-Equals Sto:<< []>> 
1800_1-NonEquals Sto: << []>> 
1800_1-Useless: []
1800_1-Constancy: [(5, 0)]
1800_1-ContextAliasing: []

.....
-----
Block: 1898_1
1898_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1898_1-Stack size: 10 
1898_1-Equals Mem:<< []>> 
1898_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1898_1-Equals Sto:<< []>> 
1898_1-NonEquals Sto: << []>> 
1898_1-Useless: []
1898_1-Constancy: [(5, 0)]
1898_1-ContextAliasing: []

.....
-----
Block: 1980_1
1980_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1980_1-Stack size: 10 
1980_1-Equals Mem:<< [<12,27>, <17,30>]>> 
1980_1-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
1980_1-Equals Sto:<< []>> 
1980_1-NonEquals Sto: << []>> 
1980_1-Useless: []
1980_1-Constancy: [(5, 0)]
1980_1-ContextAliasing: []

.....
-----
Block: 3854_0
3854_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3854_0-Stack size: 8 
3854_0-Equals Mem:<< []>> 
3854_0-NonEquals Mem: << [<4,7>]>> 
3854_0-Equals Sto:<< []>> 
3854_0-NonEquals Sto: << []>> 
3854_0-Useless: []
3854_0-Constancy: [(5, 96)]
3854_0-ContextAliasing: []

.....
-----
Block: 824
824Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x0364', 'SWAP1', 'PUSH2 0x0eef', 'JUMP']>> 
824-Stack size: 5 
824-Equals Mem:<< [<17,12>]>> 
824-NonEquals Mem: << [<17,24>, <24,12>]>> 
824-Equals Sto:<< []>> 
824-NonEquals Sto: << []>> 
824-Useless: []
824-Constancy: [(2, 96)]
824-ContextAliasing: []

.....
-----
Block: 3854
3854Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3854-Stack size: 12 
3854-Equals Mem:<< []>> 
3854-NonEquals Mem: << [<4,7>]>> 
3854-Equals Sto:<< []>> 
3854-NonEquals Sto: << []>> 
3854-Useless: []
3854-Constancy: [(9, 96)]
3854-ContextAliasing: []

.....
-----
Block: 3402
3402Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
3402-Stack size: 4 
3402-Equals Mem:<< []>> 
3402-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
3402-Equals Sto:<< []>> 
3402-NonEquals Sto: << []>> 
3402-Useless: []
3402-Constancy: []
3402-ContextAliasing: []

.....
-----
Block: 3426
3426Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x0d59', 'JUMP']>> 
3426-Stack size: 8 
3426-Equals Mem:<< []>> 
3426-NonEquals Mem: << [<11,5>]>> 
3426-Equals Sto:<< []>> 
3426-NonEquals Sto: << []>> 
3426-Useless: []
3426-Constancy: [(3, 0), (2, 32)]
3426-ContextAliasing: []

.....
-----
Block: 578_0
578_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0156', 'JUMP']>> 
578_0-Stack size: 2 
578_0-Equals Mem:<< []>> 
578_0-NonEquals Mem: << [<12,2>]>> 
578_0-Equals Sto:<< []>> 
578_0-NonEquals Sto: << []>> 
578_0-Useless: []
578_0-Constancy: []
578_0-ContextAliasing: []

.....
-----
Block: 424_0
424_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0156', 'JUMP']>> 
424_0-Stack size: 3 
424_0-Equals Mem:<< []>> 
424_0-NonEquals Mem: << [<5,2>]>> 
424_0-Equals Sto:<< []>> 
424_0-NonEquals Sto: << []>> 
424_0-Useless: []
424_0-Constancy: []
424_0-ContextAliasing: []

.....
-----
Block: 370_0
370_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0156', 'JUMP']>> 
370_0-Stack size: 3 
370_0-Equals Mem:<< []>> 
370_0-NonEquals Mem: << [<7,2>]>> 
370_0-Equals Sto:<< []>> 
370_0-NonEquals Sto: << []>> 
370_0-Useless: []
370_0-Constancy: []
370_0-ContextAliasing: []

.....
-----
Block: 1421
1421Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x045b', 'SWAP1', 'PUSH2 0x0f4e', 'JUMP']>> 
1421-Stack size: 2 
1421-Equals Mem:<< []>> 
1421-NonEquals Mem: << [<6,1>]>> 
1421-Equals Sto:<< []>> 
1421-NonEquals Sto: << []>> 
1421-Useless: []
1421-Constancy: []
1421-ContextAliasing: []

.....
-----
Block: 616
616Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
616-Stack size: 3 
616-Equals Mem:<< []>> 
616-NonEquals Mem: << [<10,13>]>> 
616-Equals Sto:<< []>> 
616-NonEquals Sto: << []>> 
616-Useless: []
616-Constancy: []
616-ContextAliasing: []

.....
-----
Block: 578
578Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0156', 'JUMP']>> 
578-Stack size: 3 
578-Equals Mem:<< []>> 
578-NonEquals Mem: << [<12,2>]>> 
578-Equals Sto:<< []>> 
578-NonEquals Sto: << []>> 
578-Useless: []
578-Constancy: []
578-ContextAliasing: []

.....
-----
Block: 2564
2564Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x73', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2564-Stack size: 6 
2564-Equals Mem:<< []>> 
2564-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2564-Equals Sto:<< []>> 
2564-NonEquals Sto: << []>> 
2564-Useless: []
2564-Constancy: []
2564-ContextAliasing: []

.....
-----
Block: 2967_0
2967_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0bd7', 'JUMPI']>> 
2967_0-Stack size: 10 
2967_0-Equals Mem:<< []>> 
2967_0-NonEquals Mem: << [<11,14>]>> 
2967_0-Equals Sto:<< []>> 
2967_0-NonEquals Sto: << []>> 
2967_0-Useless: []
2967_0-Constancy: [(1, 0)]
2967_0-ContextAliasing: []

.....
-----
Block: 3002_0
3002_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3002_0-Stack size: 11 
3002_0-Equals Mem:<< []>> 
3002_0-NonEquals Mem: << [<11,14>]>> 
3002_0-Equals Sto:<< []>> 
3002_0-NonEquals Sto: << []>> 
3002_0-Useless: []
3002_0-Constancy: [(2, 0)]
3002_0-ContextAliasing: []

.....
-----
Block: 3036_0
3036_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH11 0x109b1858dadb1a5cdd1959', 'PUSH1 0xaa', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3036_0-Stack size: 10 
3036_0-Equals Mem:<< []>> 
3036_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3036_0-Equals Sto:<< []>> 
3036_0-NonEquals Sto: << []>> 
3036_0-Useless: []
3036_0-Constancy: [(1, 0)]
3036_0-ContextAliasing: []

.....
-----
Block: 3149_0
3149_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1d1c98591a5b99c81a5cc81b9bdd081cdd185c9d1959', 'PUSH1 0x52', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3149_0-Stack size: 10 
3149_0-Equals Mem:<< []>> 
3149_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3149_0-Equals Sto:<< []>> 
3149_0-NonEquals Sto: << []>> 
3149_0-Useless: []
3149_0-Constancy: [(1, 0)]
3149_0-ContextAliasing: []

.....
-----
Block: 2656
2656Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP2', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x0ad3', 'JUMPI']>> 
2656-Stack size: 6 
2656-Equals Mem:<< []>> 
2656-NonEquals Mem: << [<11,14>]>> 
2656-Equals Sto:<< []>> 
2656-NonEquals Sto: << []>> 
2656-Useless: []
2656-Constancy: []
2656-ContextAliasing: []

.....
-----
Block: 2689
2689Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x6365', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2689-Stack size: 7 
2689-Equals Mem:<< []>> 
2689-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2689-Equals Sto:<< []>> 
2689-NonEquals Sto: << []>> 
2689-Useless: []
2689-Constancy: []
2689-ContextAliasing: []

.....
-----
Block: 2771
2771Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'DUP4', 'DUP4', 'SUB', 'SWAP1', 'SSTORE', 'PUSH1 0x03', 'DUP1', 'SLOAD', 'DUP5', 'SWAP3', 'SWAP1', 'PUSH2 0x0b01', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f83', 'JUMP']>> 
2771-Stack size: 7 
2771-Equals Mem:<< []>> 
2771-NonEquals Mem: << [<11,14>]>> 
2771-Equals Sto:<< []>> 
2771-NonEquals Sto: << [<22,25>]>> 
2771-Useless: []
2771-Constancy: []
2771-ContextAliasing: []

.....
-----
Block: 3879_3
3879_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_3-Stack size: 15 
3879_3-Equals Mem:<< []>> 
3879_3-NonEquals Mem: << [<5,8>]>> 
3879_3-Equals Sto:<< []>> 
3879_3-NonEquals Sto: << []>> 
3879_3-Useless: []
3879_3-Constancy: [(5, 0)]
3879_3-ContextAliasing: []

.....
-----
Block: 2817
2817Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'DUP3', 'DUP2', 'MSTORE', 'PUSH0', 'SWAP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'SWAP1', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP1', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0810', 'JUMP']>> 
2817-Stack size: 11 
2817-Equals Mem:<< []>> 
2817-NonEquals Mem: << [<10,7>]>> 
2817-Equals Sto:<< []>> 
2817-NonEquals Sto: << []>> 
2817-Useless: []
2817-Constancy: [(1, 0)]
2817-ContextAliasing: []

.....
-----
Block: 3250_0
3250_0Instr:<<['PUSH1 0x07', 'SLOAD', 'DUP2', 'PUSH2 0x0cd3', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3250_0-Stack size: 10 
3250_0-Equals Mem:<< []>> 
3250_0-NonEquals Mem: << [<14,17>]>> 
3250_0-Equals Sto:<< []>> 
3250_0-NonEquals Sto: << [<1,21>]>> 
3250_0-Useless: []
3250_0-Constancy: [(1, 0)]
3250_0-ContextAliasing: []

.....
-----
Block: 3879_5
3879_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_5-Stack size: 16 
3879_5-Equals Mem:<< []>> 
3879_5-NonEquals Mem: << [<5,8>]>> 
3879_5-Equals Sto:<< []>> 
3879_5-NonEquals Sto: << []>> 
3879_5-Useless: []
3879_5-Constancy: [(7, 0)]
3879_5-ContextAliasing: []

.....
-----
Block: 3302_0
3302_0Instr:<<['POP', 'PUSH1 0x08', 'SLOAD', 'DUP2', 'PUSH2 0x0d08', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3302_0-Stack size: 11 
3302_0-Equals Mem:<< []>> 
3302_0-NonEquals Mem: << [<15,18>]>> 
3302_0-Equals Sto:<< []>> 
3302_0-NonEquals Sto: << [<2,22>]>> 
3302_0-Useless: []
3302_0-Constancy: [(2, 0)]
3302_0-ContextAliasing: []

.....
-----
Block: 3879_4
3879_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_4-Stack size: 16 
3879_4-Equals Mem:<< []>> 
3879_4-NonEquals Mem: << [<5,8>]>> 
3879_4-Equals Sto:<< []>> 
3879_4-NonEquals Sto: << []>> 
3879_4-Useless: []
3879_4-Constancy: [(7, 0)]
3879_4-ContextAliasing: []

.....
-----
Block: 3354_0
3354_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x119bdc989a59', 'PUSH1 0xd2', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3354_0-Stack size: 10 
3354_0-Equals Mem:<< []>> 
3354_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3354_0-Equals Sto:<< []>> 
3354_0-NonEquals Sto: << []>> 
3354_0-Useless: []
3354_0-Constancy: [(1, 0)]
3354_0-ContextAliasing: []

.....
-----
Block: 1325
1325Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x045b', 'SWAP1', 'PUSH2 0x0f4e', 'JUMP']>> 
1325-Stack size: 4 
1325-Equals Mem:<< []>> 
1325-NonEquals Mem: << [<6,1>]>> 
1325-Equals Sto:<< []>> 
1325-NonEquals Sto: << []>> 
1325-Useless: []
1325-Constancy: []
1325-ContextAliasing: []

.....
-----
Block: 1348
1348Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
1348-Stack size: 4 
1348-Equals Mem:<< []>> 
1348-NonEquals Mem: << [<13,16>]>> 
1348-Equals Sto:<< [<21,33>]>> 
1348-NonEquals Sto: << []>> 
1348-Useless: []
1348-Constancy: []
1348-ContextAliasing: []

.....
-----
Block: 1225
1225Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x045b', 'SWAP1', 'PUSH2 0x0f4e', 'JUMP']>> 
1225-Stack size: 6 
1225-Equals Mem:<< []>> 
1225-NonEquals Mem: << [<6,1>]>> 
1225-Equals Sto:<< []>> 
1225-NonEquals Sto: << []>> 
1225-Useless: []
1225-Constancy: []
1225-ContextAliasing: []

.....
-----
Block: 1148
1148Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x03c5', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x04b2', 'SWAP1', 'DUP7', 'SWAP1', 'PUSH2 0x0f3b', 'JUMP']>> 
1148-Stack size: 4 
1148-Equals Mem:<< [<5,23>, <10,26>]>> 
1148-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
1148-Equals Sto:<< []>> 
1148-NonEquals Sto: << []>> 
1148-Useless: []
1148-Constancy: []
1148-ContextAliasing: []

.....
-----
Block: 3879_2
3879_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_2-Stack size: 13 
3879_2-Equals Mem:<< []>> 
3879_2-NonEquals Mem: << [<5,8>]>> 
3879_2-Equals Sto:<< []>> 
3879_2-NonEquals Sto: << []>> 
3879_2-Useless: []
3879_2-Constancy: [(8, 0)]
3879_2-ContextAliasing: []

.....
-----
Block: 1800
1800Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1800-Stack size: 9 
1800-Equals Mem:<< []>> 
1800-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1800-Equals Sto:<< []>> 
1800-NonEquals Sto: << []>> 
1800-Useless: []
1800-Constancy: [(4, 0)]
1800-ContextAliasing: []

.....
-----
Block: 1898
1898Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1898-Stack size: 9 
1898-Equals Mem:<< []>> 
1898-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1898-Equals Sto:<< []>> 
1898-NonEquals Sto: << []>> 
1898-Useless: []
1898-Constancy: [(4, 0)]
1898-ContextAliasing: []

.....
-----
Block: 1980
1980Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1980-Stack size: 9 
1980-Equals Mem:<< [<12,27>, <17,30>]>> 
1980-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
1980-Equals Sto:<< []>> 
1980-NonEquals Sto: << []>> 
1980-Useless: []
1980-Constancy: [(4, 0)]
1980-ContextAliasing: []

.....
-----
Block: 466
466Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0156', 'JUMP']>> 
466-Stack size: 1 
466-Equals Mem:<< []>> 
466-NonEquals Mem: << [<5,2>]>> 
466-Equals Sto:<< []>> 
466-NonEquals Sto: << []>> 
466-Useless: []
466-Constancy: []
466-ContextAliasing: []

.....
-----
Block: 2092
2092Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2092-Stack size: 10 
2092-Equals Mem:<< []>> 
2092-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2092-Equals Sto:<< []>> 
2092-NonEquals Sto: << []>> 
2092-Useless: []
2092-Constancy: [(4, 0)]
2092-ContextAliasing: []

.....
-----
Block: 2192
2192Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2192-Stack size: 10 
2192-Equals Mem:<< []>> 
2192-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2192-Equals Sto:<< []>> 
2192-NonEquals Sto: << []>> 
2192-Useless: []
2192-Constancy: [(4, 0)]
2192-ContextAliasing: []

.....
-----
Block: 2967
2967Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0bd7', 'JUMPI']>> 
2967-Stack size: 14 
2967-Equals Mem:<< []>> 
2967-NonEquals Mem: << [<11,14>]>> 
2967-Equals Sto:<< []>> 
2967-NonEquals Sto: << []>> 
2967-Useless: []
2967-Constancy: [(8, 0)]
2967-ContextAliasing: []

.....
-----
Block: 3002
3002Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3002-Stack size: 15 
3002-Equals Mem:<< []>> 
3002-NonEquals Mem: << [<11,14>]>> 
3002-Equals Sto:<< []>> 
3002-NonEquals Sto: << []>> 
3002-Useless: []
3002-Constancy: [(9, 0)]
3002-ContextAliasing: []

.....
-----
Block: 3036
3036Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH11 0x109b1858dadb1a5cdd1959', 'PUSH1 0xaa', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3036-Stack size: 14 
3036-Equals Mem:<< []>> 
3036-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3036-Equals Sto:<< []>> 
3036-NonEquals Sto: << []>> 
3036-Useless: []
3036-Constancy: [(8, 0)]
3036-ContextAliasing: []

.....
-----
Block: 3149
3149Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1d1c98591a5b99c81a5cc81b9bdd081cdd185c9d1959', 'PUSH1 0x52', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3149-Stack size: 14 
3149-Equals Mem:<< []>> 
3149-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3149-Equals Sto:<< []>> 
3149-NonEquals Sto: << []>> 
3149-Useless: []
3149-Constancy: [(8, 0)]
3149-ContextAliasing: []

.....
-----
Block: 2286
2286Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP2', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x0965', 'JUMPI']>> 
2286-Stack size: 10 
2286-Equals Mem:<< []>> 
2286-NonEquals Mem: << [<11,14>]>> 
2286-Equals Sto:<< []>> 
2286-NonEquals Sto: << []>> 
2286-Useless: []
2286-Constancy: [(4, 0)]
2286-ContextAliasing: []

.....
-----
Block: 2319
2319Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x616c616e6365', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
2319-Stack size: 11 
2319-Equals Mem:<< []>> 
2319-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2319-Equals Sto:<< []>> 
2319-NonEquals Sto: << []>> 
2319-Useless: []
2319-Constancy: [(5, 0)]
2319-ContextAliasing: []

.....
-----
Block: 2405
2405Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'DUP6', 'DUP6', 'SUB', 'SWAP1', 'SSTORE', 'SWAP2', 'DUP6', 'AND', 'DUP2', 'MSTORE', 'SWAP1', 'DUP2', 'KECCAK256', 'DUP1', 'SLOAD', 'DUP5', 'SWAP3', 'SWAP1', 'PUSH2 0x099b', 'SWAP1', 'DUP5', 'SWAP1', 'PUSH2 0x0f3b', 'JUMP']>> 
2405-Stack size: 11 
2405-Equals Mem:<< [<12,29>]>> 
2405-NonEquals Mem: << [<12,15>, <15,29>]>> 
2405-Equals Sto:<< [<24,34>]>> 
2405-NonEquals Sto: << []>> 
2405-Useless: []
2405-Constancy: [(5, 0)]
2405-ContextAliasing: []

.....
-----
Block: 3879
3879Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879-Stack size: 19 
3879-Equals Mem:<< []>> 
3879-NonEquals Mem: << [<5,8>]>> 
3879-Equals Sto:<< []>> 
3879-NonEquals Sto: << []>> 
3879-Useless: []
3879-Constancy: [(13, 0), (5, 0)]
3879-ContextAliasing: []

.....
-----
Block: 2459
2459Instr:<<['JUMPDEST', 'SWAP3', 'POP', 'POP', 'DUP2', 'SWAP1', 'SSTORE', 'POP', 'DUP3', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP5', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x09e7', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
2459-Stack size: 15 
2459-Equals Mem:<< []>> 
2459-NonEquals Mem: << [<29,25>]>> 
2459-Equals Sto:<< []>> 
2459-NonEquals Sto: << []>> 
2459-Useless: []
2459-Constancy: [(9, 0), (1, 0)]
2459-ContextAliasing: []

.....
-----
Block: 987
987Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'CALLER', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'SWAP1', 'KECCAK256', 'SLOAD', 'DUP3', 'DUP2', 'LT', 'ISZERO', 'PUSH2 0x0464', 'JUMPI']>> 
987-Stack size: 6 
987-Equals Mem:<< [<11,23>, <16,26>]>> 
987-NonEquals Mem: << [<11,16>, <11,26>, <16,23>, <23,26>]>> 
987-Equals Sto:<< []>> 
987-NonEquals Sto: << []>> 
987-Useless: []
987-Constancy: [(0, 0)]
987-ContextAliasing: []

.....
-----
Block: 1031
1031Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x28', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH8 0x6c6c6f77616e6365', 'PUSH1 0xc0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
1031-Stack size: 7 
1031-Equals Mem:<< []>> 
1031-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1031-Equals Sto:<< []>> 
1031-NonEquals Sto: << []>> 
1031-Useless: []
1031-Constancy: [(1, 0)]
1031-ContextAliasing: []

.....
-----
Block: 1800_0
1800_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1800_0-Stack size: 11 
1800_0-Equals Mem:<< []>> 
1800_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1800_0-Equals Sto:<< []>> 
1800_0-NonEquals Sto: << []>> 
1800_0-Useless: []
1800_0-Constancy: [(5, 0)]
1800_0-ContextAliasing: []

.....
-----
Block: 1898_0
1898_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
1898_0-Stack size: 11 
1898_0-Equals Mem:<< []>> 
1898_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1898_0-Equals Sto:<< []>> 
1898_0-NonEquals Sto: << []>> 
1898_0-Useless: []
1898_0-Constancy: [(5, 0)]
1898_0-ContextAliasing: []

.....
-----
Block: 1980_0
1980_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1980_0-Stack size: 11 
1980_0-Equals Mem:<< [<12,27>, <17,30>]>> 
1980_0-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
1980_0-Equals Sto:<< []>> 
1980_0-NonEquals Sto: << []>> 
1980_0-Useless: []
1980_0-Constancy: [(5, 0)]
1980_0-ContextAliasing: []

.....
-----
Block: 3250
3250Instr:<<['PUSH1 0x07', 'SLOAD', 'DUP2', 'PUSH2 0x0cd3', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3250-Stack size: 14 
3250-Equals Mem:<< []>> 
3250-NonEquals Mem: << [<14,17>]>> 
3250-Equals Sto:<< []>> 
3250-NonEquals Sto: << [<1,21>]>> 
3250-Useless: []
3250-Constancy: [(8, 0)]
3250-ContextAliasing: []

.....
-----
Block: 3879_1
3879_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_1-Stack size: 20 
3879_1-Equals Mem:<< []>> 
3879_1-NonEquals Mem: << [<5,8>]>> 
3879_1-Equals Sto:<< []>> 
3879_1-NonEquals Sto: << []>> 
3879_1-Useless: []
3879_1-Constancy: [(14, 0)]
3879_1-ContextAliasing: []

.....
-----
Block: 3302
3302Instr:<<['POP', 'PUSH1 0x08', 'SLOAD', 'DUP2', 'PUSH2 0x0d08', 'DUP5', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
3302-Stack size: 15 
3302-Equals Mem:<< []>> 
3302-NonEquals Mem: << [<15,18>]>> 
3302-Equals Sto:<< []>> 
3302-NonEquals Sto: << [<2,22>]>> 
3302-Useless: []
3302-Constancy: [(9, 0)]
3302-ContextAliasing: []

.....
-----
Block: 3879_0
3879_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
3879_0-Stack size: 20 
3879_0-Equals Mem:<< []>> 
3879_0-NonEquals Mem: << [<5,8>]>> 
3879_0-Equals Sto:<< []>> 
3879_0-NonEquals Sto: << []>> 
3879_0-Useless: []
3879_0-Constancy: [(14, 0)]
3879_0-ContextAliasing: []

.....
-----
Block: 3354
3354Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x119bdc989a59', 'PUSH1 0xd2', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x045b', 'JUMP']>> 
3354-Stack size: 14 
3354-Equals Mem:<< []>> 
3354-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3354-Equals Sto:<< []>> 
3354-NonEquals Sto: << []>> 
3354-Useless: []
3354-Constancy: [(8, 0)]
3354-ContextAliasing: []

.....
-----
Block: 400
400Instr:<<['JUMPDEST', 'PUSH1 0x0a', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
400-Stack size: 3 
400-Equals Mem:<< []>> 
400-NonEquals Mem: << [<3,7>]>> 
400-Equals Sto:<< []>> 
400-NonEquals Sto: << []>> 
400-Useless: []
400-Constancy: []
400-ContextAliasing: []

.....
-----
Block: 1115_15
1115_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_15-Stack size: 4 
1115_15-Equals Mem:<< []>> 
1115_15-NonEquals Mem: << []>> 
1115_15-Equals Sto:<< []>> 
1115_15-NonEquals Sto: << []>> 
1115_15-Useless: []
1115_15-Constancy: []
1115_15-ContextAliasing: []

.....
-----
Block: 342
342Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
342-Stack size: 2 
342-Equals Mem:<< []>> 
342-NonEquals Mem: << []>> 
342-Equals Sto:<< []>> 
342-NonEquals Sto: << []>> 
342-Useless: []
342-Constancy: []
342-ContextAliasing: []

.....
-----
Block: 1115
1115Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115-Stack size: 10 
1115-Equals Mem:<< []>> 
1115-NonEquals Mem: << []>> 
1115-Equals Sto:<< []>> 
1115-NonEquals Sto: << []>> 
1115-Useless: []
1115-Constancy: [(5, 0)]
1115-ContextAliasing: []

.....
-----
Block: 1115_14
1115_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_14-Stack size: 14 
1115_14-Equals Mem:<< []>> 
1115_14-NonEquals Mem: << []>> 
1115_14-Equals Sto:<< []>> 
1115_14-NonEquals Sto: << []>> 
1115_14-Useless: []
1115_14-Constancy: [(9, 0)]
1115_14-ContextAliasing: []

.....
-----
Block: 1115_13
1115_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_13-Stack size: 11 
1115_13-Equals Mem:<< []>> 
1115_13-NonEquals Mem: << []>> 
1115_13-Equals Sto:<< []>> 
1115_13-NonEquals Sto: << []>> 
1115_13-Useless: []
1115_13-Constancy: [(6, 0)]
1115_13-ContextAliasing: []

.....
-----
Block: 1115_12
1115_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_12-Stack size: 7 
1115_12-Equals Mem:<< []>> 
1115_12-NonEquals Mem: << []>> 
1115_12-Equals Sto:<< []>> 
1115_12-NonEquals Sto: << []>> 
1115_12-Useless: []
1115_12-Constancy: [(2, 0)]
1115_12-ContextAliasing: []

.....
-----
Block: 1115_11
1115_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_11-Stack size: 11 
1115_11-Equals Mem:<< []>> 
1115_11-NonEquals Mem: << []>> 
1115_11-Equals Sto:<< []>> 
1115_11-NonEquals Sto: << []>> 
1115_11-Useless: []
1115_11-Constancy: [(6, 0)]
1115_11-ContextAliasing: []

.....
-----
Block: 342_1
342_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
342_1-Stack size: 3 
342_1-Equals Mem:<< []>> 
342_1-NonEquals Mem: << []>> 
342_1-Equals Sto:<< []>> 
342_1-NonEquals Sto: << []>> 
342_1-Useless: []
342_1-Constancy: []
342_1-ContextAliasing: []

.....
-----
Block: 342_0
342_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
342_0-Stack size: 3 
342_0-Equals Mem:<< []>> 
342_0-NonEquals Mem: << []>> 
342_0-Equals Sto:<< []>> 
342_0-NonEquals Sto: << []>> 
342_0-Useless: []
342_0-Constancy: []
342_0-ContextAliasing: []

.....
-----
Block: 1115_10
1115_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_10-Stack size: 3 
1115_10-Equals Mem:<< []>> 
1115_10-NonEquals Mem: << []>> 
1115_10-Equals Sto:<< []>> 
1115_10-NonEquals Sto: << []>> 
1115_10-Useless: []
1115_10-Constancy: []
1115_10-ContextAliasing: []

.....
-----
Block: 342_2
342_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
342_2-Stack size: 3 
342_2-Equals Mem:<< []>> 
342_2-NonEquals Mem: << []>> 
342_2-Equals Sto:<< []>> 
342_2-NonEquals Sto: << []>> 
342_2-Useless: []
342_2-Constancy: []
342_2-ContextAliasing: []

.....
-----
Block: 1115_9
1115_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_9-Stack size: 7 
1115_9-Equals Mem:<< []>> 
1115_9-NonEquals Mem: << []>> 
1115_9-Equals Sto:<< []>> 
1115_9-NonEquals Sto: << []>> 
1115_9-Useless: []
1115_9-Constancy: []
1115_9-ContextAliasing: []

.....
-----
Block: 1115_8
1115_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_8-Stack size: 11 
1115_8-Equals Mem:<< []>> 
1115_8-NonEquals Mem: << []>> 
1115_8-Equals Sto:<< []>> 
1115_8-NonEquals Sto: << []>> 
1115_8-Useless: []
1115_8-Constancy: [(2, 0)]
1115_8-ContextAliasing: []

.....
-----
Block: 1115_7
1115_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_7-Stack size: 8 
1115_7-Equals Mem:<< []>> 
1115_7-NonEquals Mem: << []>> 
1115_7-Equals Sto:<< []>> 
1115_7-NonEquals Sto: << []>> 
1115_7-Useless: []
1115_7-Constancy: []
1115_7-ContextAliasing: []

.....
-----
Block: 1115_6
1115_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_6-Stack size: 5 
1115_6-Equals Mem:<< []>> 
1115_6-NonEquals Mem: << []>> 
1115_6-Equals Sto:<< []>> 
1115_6-NonEquals Sto: << []>> 
1115_6-Useless: []
1115_6-Constancy: []
1115_6-ContextAliasing: []

.....
-----
Block: 1115_5
1115_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_5-Stack size: 7 
1115_5-Equals Mem:<< []>> 
1115_5-NonEquals Mem: << []>> 
1115_5-Equals Sto:<< []>> 
1115_5-NonEquals Sto: << []>> 
1115_5-Useless: []
1115_5-Constancy: []
1115_5-ContextAliasing: []

.....
-----
Block: 1115_4
1115_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_4-Stack size: 11 
1115_4-Equals Mem:<< []>> 
1115_4-NonEquals Mem: << []>> 
1115_4-Equals Sto:<< []>> 
1115_4-NonEquals Sto: << []>> 
1115_4-Useless: []
1115_4-Constancy: [(5, 0)]
1115_4-ContextAliasing: []

.....
-----
Block: 1115_3
1115_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_3-Stack size: 15 
1115_3-Equals Mem:<< []>> 
1115_3-NonEquals Mem: << []>> 
1115_3-Equals Sto:<< []>> 
1115_3-NonEquals Sto: << []>> 
1115_3-Useless: []
1115_3-Constancy: [(9, 0)]
1115_3-ContextAliasing: []

.....
-----
Block: 1115_2
1115_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_2-Stack size: 12 
1115_2-Equals Mem:<< []>> 
1115_2-NonEquals Mem: << []>> 
1115_2-Equals Sto:<< []>> 
1115_2-NonEquals Sto: << []>> 
1115_2-Useless: []
1115_2-Constancy: [(6, 0)]
1115_2-ContextAliasing: []

.....
-----
Block: 1115_1
1115_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_1-Stack size: 8 
1115_1-Equals Mem:<< []>> 
1115_1-NonEquals Mem: << []>> 
1115_1-Equals Sto:<< []>> 
1115_1-NonEquals Sto: << []>> 
1115_1-Useless: []
1115_1-Constancy: [(2, 0)]
1115_1-ContextAliasing: []

.....
-----
Block: 1115_0
1115_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1115_0-Stack size: 12 
1115_0-Equals Mem:<< []>> 
1115_0-NonEquals Mem: << []>> 
1115_0-Equals Sto:<< []>> 
1115_0-NonEquals Sto: << []>> 
1115_0-Useless: []
1115_0-Constancy: [(6, 0)]
1115_0-ContextAliasing: []

.....
-----
Block: 1248
1248Instr:<<['JUMPDEST', 'PUSH1 0x06', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP5', 'ISZERO', 'ISZERO', 'SWAP5', 'SWAP1', 'SWAP5', 'OR', 'SWAP1', 'SWAP4', 'SSTORE', 'PUSH1 0x09', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP4', 'SWAP1', 'SWAP4', 'AND', 'SWAP3', 'SWAP1', 'SWAP3', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH1 0x07', 'SSTORE', 'PUSH1 0x08', 'SSTORE', 'JUMP']>> 
1248-Stack size: 6 
1248-Equals Mem:<< []>> 
1248-NonEquals Mem: << []>> 
1248-Equals Sto:<< [<3,16>, <19,42>]>> 
1248-NonEquals Sto: << [<3,19>, <3,42>, <3,44>, <3,46>, <16,19>, <16,42>, <16,44>, <16,46>, <19,44>, <19,46>, <42,44>, <42,46>, <44,46>]>> 
1248-Useless: []
1248-Constancy: []
1248-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.08553332695737481s

*************************************************************
FILERES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20;111;186;25;56;39;2;0.08838170999661088
FILERES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken;210;403;47;122;87;13;0.19498636695789173


Aux path: /tmp/0x00//ethir_58fb2fc49fd54dc8aa9798708497ad70
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/

NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(8)', 'mstore'), 2), (('32', 's(11)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/ERC20_406_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_406_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2261

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 42

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_406;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;406;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;2261;42;36;2261;42;36;0;0;0;False;False;False;False;1.1335601219907403;2;6;2100;2100


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_239_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_239_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 13
Estimated size optimized in bytes: 13

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_239;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;239;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;33;13;10;33;13;10;0;0;0;False;False;False;False;0.020431071985512972;0;1;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_219_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_219_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_219;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;219;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;39;15;12;39;15;12;0;0;0;False;False;False;False;0.053015391051303595;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(13)', 'mstore'), 2), (('32', 's(16)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 03de)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 03de)']
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 03de)']

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x03de JUMPI

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x03de JUMPI

Optimized code stored in /tmp/0x00/ERC20_861_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_861_statistics.csv

Estimated initial gas: 2262
Estimated gas optimized: 2262

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_861;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;861;1;True;False;False;JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x03de JUMPI;JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x03de JUMPI;2262;44;36;2262;44;36;0;0;0;False;False;False;False;1.1449924990301952;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '139492422255', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678506476475496475743842680577777870365728514456330491174612855', 'mstore'), 2), (('s(12)', '14690266658072097593480850647027335513285713462661904985951319567533531463680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 207a65726f)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 207a65726f)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 207a65726f)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized code stored in /tmp/0x00/ERC20_905_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_905_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_905;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;905;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;104;85;33;104;85;33;0;0;0;False;False;False;False;1.126766122004483;2;5;0;0


NORMAL EXECUTION

Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(12)', 'mstore'), 2), (('s(10)', 's(1)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 1), (0, 2)]
Memory dep simplified: [(1, 2), (0, 1)]
{}
['nop(DUP1)', 'nop(PUSH 1f)', 'nop(ADD)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(DIV)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(SWAP3)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01fb)', 'nop(SWAP1)', 'nop(PUSH 0809)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(DUP1)', 'nop(PUSH 1f)', 'nop(ADD)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(DIV)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(SWAP3)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01fb)', 'nop(SWAP1)', 'nop(PUSH 0809)']
{}
['nop(DUP1)', 'nop(PUSH 1f)', 'nop(ADD)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(DIV)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(SWAP3)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01fb)', 'nop(SWAP1)', 'nop(PUSH 0809)']

Initial sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x0809 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x0809 JUMP

Optimized code stored in /tmp/0x00/ERC20_463_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_463_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2206

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_463;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;463;1;True;False;False;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x0809 JUMP;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x0809 JUMP;2206;44;34;2206;44;34;0;0;0;False;False;False;False;1.1846872470341623;0;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '34', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 22)', 'nop(PUSH 4)', 'nop(MSTORE)', 'nop(PUSH 4e487b7100000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH 0)']
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']

Initial sequence (basic block per line):
PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT

Optimized sequence (basic block per line):
PUSH1 0x22 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT

Optimized code stored in /tmp/0x00/ERC20_2088_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_2088_statistics.csv

Estimated initial gas: 28
Estimated gas optimized: 24

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 46

Initial number of instructions: 11
Final number of instructions: 9

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_2088;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;2088;1;False;True;True;PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT;PUSH1 0x22 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT;28;19;11;24;46;9;4;-27;2;False;False;False;False;0.015807911986485124;1;0;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2), (0, 1), (1, 2)]
Memory dep simplified: [(0, 1), (1, 2)]
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/ERC20_1777_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1777_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1777;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1777;1;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;False;False;False;False;0.1308759159874171;0;2;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0700)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0700)']
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0700)']

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0700 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0700 JUMP

Optimized code stored in /tmp/0x00/ERC20_1801_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1801_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1801;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1801;1;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0700 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0700 JUMP;53;19;16;53;19;16;0;0;0;False;False;False;False;0.6966315869940445;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(PUSH 0)', 'nop(DUP1)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 DUP1 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/ERC20_320_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_320_statistics.csv

Estimated initial gas: 2189
Estimated gas optimized: 2169

Estimated initial size in bytes: 26
Estimated size optimized in bytes: 38

Initial number of instructions: 21
Final number of instructions: 14

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_320;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;320;1;False;True;True;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 DUP1 PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 JUMP;2189;26;21;2169;38;14;20;-12;7;False;False;False;False;0.1500975009985268;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(14)', 'mstore'), 2), (('32', 's(17)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 025c)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(PUSH 0349)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(PUSH 0841)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 025c)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(PUSH 0349)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(PUSH 0841)']
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 025c)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(PUSH 0349)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(PUSH 0841)']

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x0349 SWAP1 DUP7 SWAP1 PUSH2 0x0841 JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x0349 SWAP1 DUP7 SWAP1 PUSH2 0x0841 JUMP

Optimized code stored in /tmp/0x00/ERC20_787_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_787_statistics.csv

Estimated initial gas: 2278
Estimated gas optimized: 2278

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 54

Initial number of instructions: 42
Final number of instructions: 42

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_787;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;787;1;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x0349 SWAP1 DUP7 SWAP1 PUSH2 0x0841 JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x0349 SWAP1 DUP7 SWAP1 PUSH2 0x0841 JUMP;2278;54;42;2278;54;42;0;0;0;False;False;False;False;1.2190826199948788;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f76652066726f6d20746865207a65726f20616464)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 72657373)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f76652066726f6d20746865207a65726f20616464)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 72657373)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f76652066726f6d20746865207a65726f20616464)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 72657373)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized code stored in /tmp/0x00/ERC20_1040_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1040_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1040;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1040;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;104;83;33;104;83;33;0;0;0;False;False;False;False;1.1265336299547926;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f766520746f20746865207a65726f206164647265)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 7373)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f766520746f20746865207a65726f206164647265)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 7373)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f766520746f20746865207a65726f206164647265)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 7373)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized code stored in /tmp/0x00/ERC20_1138_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1138_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1138;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1138;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;104;82;33;104;82;33;0;0;0;False;False;False;False;1.1237021460547112;2;5;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '18', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 12)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 12)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 12)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 00bf)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_272_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_272_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_272;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;272;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;33;14;10;33;14;10;0;0;0;False;False;False;False;0.0193365280283615;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e736665722066726f6d20746865207a65726f206164)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6472657373)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e736665722066726f6d20746865207a65726f206164)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6472657373)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e736665722066726f6d20746865207a65726f206164)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6472657373)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized code stored in /tmp/0x00/ERC20_1331_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1331_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1331;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1331;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;104;85;33;104;85;33;0;0;0;False;False;False;False;1.1241493139532395;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 23)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220746f20746865207a65726f2061646472)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 657373)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 23)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220746f20746865207a65726f2061646472)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 657373)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 23)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220746f20746865207a65726f2061646472)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 657373)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized code stored in /tmp/0x00/ERC20_1431_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1431_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1431;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1431;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;104;83;33;104;83;33;0;0;0;False;False;False;False;1.1249554479727522;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0661)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(DUP4)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 661)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0661)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x0661 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x661 JUMPI

Optimized code stored in /tmp/0x00/ERC20_1514_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1514_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2186

Estimated initial size in bytes: 33
Estimated size optimized in bytes: 46

Initial number of instructions: 26
Final number of instructions: 19

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1514;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1514;1;False;True;True;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x0661 JUMPI;JUMPDEST PUSH1 0x40 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x661 JUMPI;2206;33;26;2186;46;19;20;-13;7;False;False;False;False;1.0554692360456102;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '107118118986597', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859100820671745083778533502622993977909346', 'mstore'), 2), (('s(12)', '44065838241030143116324720188876985940908656145555552347773292252211112312832', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732062)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 616c616e6365)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732062)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 616c616e6365)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732062)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 616c616e6365)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 02f2)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP

Optimized code stored in /tmp/0x00/ERC20_1547_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1547_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 86
Estimated size optimized in bytes: 86

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1547;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1547;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x02f2 JUMP;104;86;33;104;86;33;0;0;0;False;False;False;False;1.1256385060260072;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(17)', 's(18)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: [(1, 3)]
Storage dep simplified: [(1, 3)]
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(19)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(3, 4), (1, 4), (0, 4), (0, 3), (1, 2), (0, 2), (2, 3)]
Memory dep simplified: [(3, 4), (1, 2), (0, 2), (2, 3)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP1)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(DUP6)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0697)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0841)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP1)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(DUP6)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0697)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0841)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP1)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(DUP6)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0697)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0841)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0697 SWAP1 DUP5 SWAP1 PUSH2 0x0841 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0697 SWAP1 DUP5 SWAP1 PUSH2 0x0841 JUMP

Optimized code stored in /tmp/0x00/ERC20_1633_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1633_statistics.csv

Estimated initial gas: 5285
Estimated gas optimized: 5285

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 54

Initial number of instructions: 45
Final number of instructions: 45

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1633;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1633;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0697 SWAP1 DUP5 SWAP1 PUSH2 0x0841 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0697 SWAP1 DUP5 SWAP1 PUSH2 0x0841 JUMP;5285;54;45;5285;54;45;0;0;0;False;False;False;False;1.2705884029855952;2;4;5100;5100


NORMAL EXECUTION

[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 11)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 11)', 'nop(PUSH 4)', 'nop(MSTORE)', 'nop(PUSH 4e487b7100000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH 0)']
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 11)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']

Initial sequence (basic block per line):
PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT

Optimized sequence (basic block per line):
PUSH1 0x11 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT

Optimized code stored in /tmp/0x00/ERC20_2125_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_2125_statistics.csv

Estimated initial gas: 28
Estimated gas optimized: 24

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 46

Initial number of instructions: 11
Final number of instructions: 9

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_2125;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;2125;1;False;True;True;PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT;PUSH1 0x11 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT;28;19;11;24;46;9;4;-27;2;False;False;False;False;0.016300187970045954;1;0;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(5)', 's(7)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(10)', 's(2)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP3)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(DUP5)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 06e3)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP3)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(DUP5)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 06e3)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP3)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(DUP5)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 06e3)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x06e3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x06e3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized code stored in /tmp/0x00/ERC20_1687_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1687_statistics.csv

Estimated initial gas: 5099
Estimated gas optimized: 5099

Estimated initial size in bytes: 76
Estimated size optimized in bytes: 76

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_1687;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;1687;1;True;False;False;JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x06e3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x06e3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;5099;76;34;5099;76;34;0;0;0;False;False;False;False;1.1451778349583037;4;1;5000;5000


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(16)', 'mstore'), 2), (('32', 's(17)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 02fb)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 02fb)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 02fb)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x02fb JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x02fb JUMPI

Optimized code stored in /tmp/0x00/ERC20_626_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_626_statistics.csv

Estimated initial gas: 2262
Estimated gas optimized: 2262

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_626;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;626;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x02fb JUMPI;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x02fb JUMPI;2262;44;36;2262;44;36;0;0;0;False;False;False;False;1.1783474969561212;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('192', '7812742012107383653', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '40', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859100820671745083778533502622993977909345', 'mstore'), 2), (('s(11)', '49041376442327685983450583443845300569967147870487584211451521639864848089088', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized code stored in /tmp/0x00/ERC20_670_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_670_statistics.csv

Estimated initial gas: 93
Estimated gas optimized: 93

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 84

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_670;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;670;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;93;84;31;93;84;31;0;0;0;False;False;False;False;1.1142435990041122;2;5;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
MEJORADO: /tmp/gasol_df557d80e9544474837335933ec143ba/jsons/isolated_block_0_0_input.json --- (4, 3)
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN

Optimized code stored in /tmp/0x00/ERC20_191_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_191_statistics.csv

Estimated initial gas: 19
Estimated gas optimized: 19

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 8
Final number of instructions: 8

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_191;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;191;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN;19;9;8;19;9;8;0;0;0;False;False;False;False;0.012513025954831392;0;0;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
MEJORADO: /tmp/gasol_df557d80e9544474837335933ec143ba/jsons/isolated_block_0_0_input.json --- (4, 3)
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized code stored in /tmp/0x00/ERC20_754_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_754_statistics.csv

Estimated initial gas: 19
Estimated gas optimized: 19

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 8
Final number of instructions: 8

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_ERC20_754;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;ERC20;754;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;19;9;8;19;9;8;0;0;0;False;False;False;False;0.012262932024896145;0;0;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 45b)', 'nop(SWAP1)', 'nop(PUSH 4)', 'nop(ADD)', 'nop(PUSH f4e)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP

Optimized code stored in /tmp/0x00/WomoToken_1652_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1652_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 49

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1652;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1652;1;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP;44;23;13;38;49;11;6;-26;2;False;False;False;False;0.026918626972474158;1;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 646472657373)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 646472657373)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 646472657373)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_1690_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1690_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 86
Estimated size optimized in bytes: 86

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1690;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1690;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;86;33;104;86;33;0;0;0;False;False;False;False;1.1241079690516926;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(8)', 'mstore'), 2), (('32', 's(11)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(AND)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/WomoToken_748_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_748_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2261

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 42

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_748;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;748;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;2261;42;36;2261;42;36;0;0;0;False;False;False;False;1.1323287109844387;2;6;2100;2100


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP

Optimized code stored in /tmp/0x00/WomoToken_424_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_424_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_424;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;424;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP;33;14;10;33;14;10;0;0;0;False;False;False;False;0.02004165097605437;0;1;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP

Optimized code stored in /tmp/0x00/WomoToken_370_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_370_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_370;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;370;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP;39;16;12;39;16;12;0;0;0;False;False;False;False;0.05435418599518016;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(13)', 'mstore'), 2), (('32', 's(16)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 063f)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 063f)']
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP7)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 063f)']

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x063f JUMPI

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x063f JUMPI

Optimized code stored in /tmp/0x00/WomoToken_1470_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1470_statistics.csv

Estimated initial gas: 2262
Estimated gas optimized: 2262

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1470;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1470;1;True;False;False;JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x063f JUMPI;JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x063f JUMPI;2262;44;36;2262;44;36;0;0;0;False;False;False;False;1.1567436619661748;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '139492422255', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678506476475496475743842680577777870365728514456330491174612855', 'mstore'), 2), (('s(12)', '14690266658072097593480850647027335513285713462661904985951319567533531463680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 207a65726f)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 207a65726f)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 207a65726f)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_1514_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1514_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1514;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1514;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207a65726f PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;85;33;104;85;33;0;0;0;False;False;False;False;1.1495821420103312;2;5;0;0


NORMAL EXECUTION

Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(12)', 'mstore'), 2), (('s(10)', 's(1)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 1), (0, 2)]
Memory dep simplified: [(1, 2), (0, 1)]
{}
['nop(DUP1)', 'nop(PUSH 1f)', 'nop(ADD)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(DIV)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(SWAP3)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 0364)', 'nop(SWAP1)', 'nop(PUSH 0eef)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(DUP1)', 'nop(PUSH 1f)', 'nop(ADD)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(DIV)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(SWAP3)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 0364)', 'nop(SWAP1)', 'nop(PUSH 0eef)']
{}
['nop(DUP1)', 'nop(PUSH 1f)', 'nop(ADD)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(DIV)', 'nop(MUL)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(MSTORE)', 'nop(DUP1)', 'nop(SWAP3)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(DUP3)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 0364)', 'nop(SWAP1)', 'nop(PUSH 0eef)']

Initial sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0364 SWAP1 PUSH2 0x0eef JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0364 SWAP1 PUSH2 0x0eef JUMP

Optimized code stored in /tmp/0x00/WomoToken_824_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_824_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2206

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_824;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;824;1;True;False;False;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0364 SWAP1 PUSH2 0x0eef JUMP;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0364 SWAP1 PUSH2 0x0eef JUMP;2206;44;34;2206;44;34;0;0;0;False;False;False;False;1.1887748959707096;0;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '34', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 22)', 'nop(PUSH 4)', 'nop(MSTORE)', 'nop(PUSH 4e487b7100000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH 0)']
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']

Initial sequence (basic block per line):
PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT

Optimized sequence (basic block per line):
PUSH1 0x22 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT

Optimized code stored in /tmp/0x00/WomoToken_3854_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3854_statistics.csv

Estimated initial gas: 28
Estimated gas optimized: 24

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 46

Initial number of instructions: 11
Final number of instructions: 9

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3854;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3854;1;False;True;True;PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT;PUSH1 0x22 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT;28;19;11;24;46;9;4;-27;2;False;False;False;False;0.01600414200220257;1;0;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2), (0, 1), (1, 2)]
Memory dep simplified: [(0, 1), (1, 2)]
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']
{}
['nop(PUSH0)', 'nop(PUSH 20)', 'nop(DUP1)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(DUP4)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(DUP3)', 'nop(DUP6)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH0)']

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/WomoToken_3402_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3402_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3402;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3402;1;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;False;False;False;False;0.1357483090250753;0;2;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0d59)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0d59)']
{}
['nop(DUP6)', 'nop(DUP2)', 'nop(ADD)', 'nop(DUP4)', 'nop(ADD)', 'nop(MLOAD)', 'nop(DUP6)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 40)', 'nop(ADD)', 'nop(MSTORE)', 'nop(DUP3)', 'nop(ADD)', 'nop(PUSH 0d59)']

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d59 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d59 JUMP

Optimized code stored in /tmp/0x00/WomoToken_3426_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3426_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3426;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3426;1;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d59 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x0d59 JUMP;53;19;16;53;19;16;0;0;0;False;False;False;False;0.7225018669851124;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 45b)', 'nop(SWAP1)', 'nop(PUSH 4)', 'nop(ADD)', 'nop(PUSH f4e)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP

Optimized code stored in /tmp/0x00/WomoToken_1421_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1421_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 49

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1421;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1421;1;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP;44;23;13;38;49;11;6;-26;2;False;False;False;False;0.02764802100136876;1;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(PUSH 1)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/WomoToken_616_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_616_statistics.csv

Estimated initial gas: 2186
Estimated gas optimized: 2169

Estimated initial size in bytes: 26
Estimated size optimized in bytes: 39

Initial number of instructions: 20
Final number of instructions: 14

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_616;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;616;1;False;True;True;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP;2186;26;20;2169;39;14;17;-13;6;False;False;False;False;0.11659670999506488;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(SWAP1)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 156)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP

Optimized code stored in /tmp/0x00/WomoToken_578_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_578_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 39

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 36

Initial number of instructions: 17
Final number of instructions: 12

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_578;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;578;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x156 JUMP;54;24;17;39;36;12;15;-12;5;False;False;False;False;0.08754366298671812;2;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '115', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '33', 'mstore'), 2), (('s(10)', '31354931781638678494316026001340845558170976982936511063842609339963588896115', 'mstore'), 2), (('s(12)', '52015977587075634662932278421871521105961125924018222127100086566054726205440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 21)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a206275726e2066726f6d20746865207a65726f20616464726573)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 73)', 'nop(PUSH f8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 21)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a206275726e2066726f6d20746865207a65726f20616464726573)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 73)', 'nop(PUSH f8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 21)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a206275726e2066726f6d20746865207a65726f20616464726573)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 73)', 'nop(PUSH f8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_2564_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2564_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 81

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2564;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2564;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;81;33;104;81;33;0;0;0;False;False;False;False;1.1280157439759932;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(11)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0ad3)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(PUSH 0)', 'nop(DUP2)', 'nop(PUSH 1)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(POP)', 'nop(DUP4)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH ad3)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0ad3)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x0ad3 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 MSTORE POP DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xad3 JUMPI

Optimized code stored in /tmp/0x00/WomoToken_2656_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2656_statistics.csv

Estimated initial gas: 2203
Estimated gas optimized: 2191

Estimated initial size in bytes: 33
Estimated size optimized in bytes: 47

Initial number of instructions: 25
Final number of instructions: 21

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2656;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2656;1;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x0ad3 JUMPI;JUMPDEST PUSH1 0x40 PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x20 MSTORE POP DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xad3 JUMPI;2203;33;25;2191;47;21;12;-14;4;False;False;False;False;1.0782956480397843;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '25445', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678494316026001312189103416802390932084224065329695412615668078', 'mstore'), 2), (('s(12)', '44957423563285989266247004906403561635230327756000124389404269791890710200320', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a206275726e20616d6f756e7420657863656564732062616c616e)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6365)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a206275726e20616d6f756e7420657863656564732062616c616e)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6365)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a206275726e20616d6f756e7420657863656564732062616c616e)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6365)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_2689_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2689_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2689;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2689;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;82;33;104;82;33;0;0;0;False;False;False;False;1.1469788139802404;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(14)', 's(15)', 'sstore'), 2), (('3', 'sload0'), 1)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(11)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP4)', 'nop(DUP4)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(PUSH 03)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0b01)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f83)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP4)', 'nop(DUP4)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(PUSH 03)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0b01)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f83)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP4)', 'nop(DUP4)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(PUSH 03)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 0b01)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f83)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x03 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0b01 SWAP1 DUP5 SWAP1 PUSH2 0x0f83 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x03 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0b01 SWAP1 DUP5 SWAP1 PUSH2 0x0f83 JUMP

Optimized code stored in /tmp/0x00/WomoToken_2771_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2771_statistics.csv

Estimated initial gas: 7228
Estimated gas optimized: 7228

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 46

Initial number of instructions: 35
Final number of instructions: 35

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2771;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2771;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x03 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0b01 SWAP1 DUP5 SWAP1 PUSH2 0x0f83 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x03 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x0b01 SWAP1 DUP5 SWAP1 PUSH2 0x0f83 JUMP;7228;46;35;7228;46;35;0;0;0;False;False;False;False;1.1852609599591233;2;2;7100;7100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(4)', 's(6)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(9)', 's(1)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0810)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0810)']
{}
['nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(POP)', 'nop(POP)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP6)', 'nop(AND)', 'nop(SWAP1)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(SWAP1)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0810)']

Initial sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH1 0x20 ADD PUSH2 0x0810 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH1 0x20 ADD PUSH2 0x0810 JUMP

Optimized code stored in /tmp/0x00/WomoToken_2817_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2817_statistics.csv

Estimated initial gas: 5078
Estimated gas optimized: 5078

Estimated initial size in bytes: 66
Estimated size optimized in bytes: 66

Initial number of instructions: 27
Final number of instructions: 27

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2817;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2817;1;True;False;False;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH1 0x20 ADD PUSH2 0x0810 JUMP;JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP6 AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP1 PUSH1 0x20 ADD PUSH2 0x0810 JUMP;5078;66;27;5078;66;27;0;0;0;False;False;False;False;1.1048836729605682;2;1;5000;5000


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 45b)', 'nop(SWAP1)', 'nop(PUSH 4)', 'nop(ADD)', 'nop(PUSH f4e)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP

Optimized code stored in /tmp/0x00/WomoToken_1325_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1325_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 49

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1325;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1325;1;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP;44;23;13;38;49;11;6;-26;2;False;False;False;False;0.02801835600985214;1;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(5)', 's(6)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '10', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(NOT)', 'nop(AND)', 'nop(SWAP2)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(OR)', 'nop(SWAP1)', 'nop(SSTORE)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(NOT)', 'nop(AND)', 'nop(SWAP2)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(OR)', 'nop(SWAP1)', 'nop(SSTORE)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(NOT)', 'nop(AND)', 'nop(SWAP2)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(SWAP2)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(OR)', 'nop(SWAP1)', 'nop(SSTORE)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP

Optimized code stored in /tmp/0x00/WomoToken_1348_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1348_statistics.csv

Estimated initial gas: 5128
Estimated gas optimized: 5128

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 42

Initial number of instructions: 35
Final number of instructions: 35

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1348;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1348;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xff NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP;5128;42;35;5128;42;35;0;0;0;False;False;False;False;1.1458420509588905;3;2;5000;5000


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 45b)', 'nop(SWAP1)', 'nop(PUSH 4)', 'nop(ADD)', 'nop(PUSH f4e)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 04)', 'nop(ADD)', 'nop(PUSH 045b)', 'nop(SWAP1)', 'nop(PUSH 0f4e)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP

Optimized code stored in /tmp/0x00/WomoToken_1225_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1225_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 49

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1225;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1225;1;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x045b SWAP1 PUSH2 0x0f4e JUMP;PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH2 0x45b SWAP1 PUSH1 0x4 ADD PUSH2 0xf4e JUMP;44;23;13;38;49;11;6;-26;2;False;False;False;False;0.02769773598993197;1;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(14)', 'mstore'), 2), (('32', 's(17)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 03c5)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(PUSH 04b2)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(PUSH 0f3b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 03c5)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(PUSH 04b2)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(PUSH 0f3b)']
{}
['nop(CALLER)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(PUSH 03c5)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(PUSH 04b2)', 'nop(SWAP1)', 'nop(DUP7)', 'nop(SWAP1)', 'nop(PUSH 0f3b)']

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x03c5 SWAP2 DUP6 SWAP1 PUSH2 0x04b2 SWAP1 DUP7 SWAP1 PUSH2 0x0f3b JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x03c5 SWAP2 DUP6 SWAP1 PUSH2 0x04b2 SWAP1 DUP7 SWAP1 PUSH2 0x0f3b JUMP

Optimized code stored in /tmp/0x00/WomoToken_1148_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1148_statistics.csv

Estimated initial gas: 2278
Estimated gas optimized: 2278

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 54

Initial number of instructions: 42
Final number of instructions: 42

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1148;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1148;1;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x03c5 SWAP2 DUP6 SWAP1 PUSH2 0x04b2 SWAP1 DUP7 SWAP1 PUSH2 0x0f3b JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x03c5 SWAP2 DUP6 SWAP1 PUSH2 0x04b2 SWAP1 DUP7 SWAP1 PUSH2 0x0f3b JUMP;2278;54;42;2278;54;42;0;0;0;False;False;False;False;1.2211037370143458;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f76652066726f6d20746865207a65726f20616464)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 72657373)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f76652066726f6d20746865207a65726f20616464)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 72657373)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(DUP1)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f76652066726f6d20746865207a65726f20616464)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 72657373)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_1800_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1800_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1800;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1800;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;83;33;104;83;33;0;0;0;False;False;False;False;1.123011788004078;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f766520746f20746865207a65726f206164647265)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 7373)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f766520746f20746865207a65726f206164647265)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 7373)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 22)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a20617070726f766520746f20746865207a65726f206164647265)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 7373)', 'nop(PUSH f0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_1898_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1898_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1898;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1898;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;82;33;104;82;33;0;0;0;False;False;False;False;1.1233662780141458;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(22)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(12)', 'mstore'), 2), (('32', 's(21)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2), (('64', 'mload0'), 1), (('s(8)', 's(2)', 'mstore'), 2)]
Memory dep: [(4, 7), (3, 7), (1, 7), (0, 7), (6, 7), (4, 5), (3, 5), (1, 5), (0, 5), (5, 7), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4), (2, 7)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (6, 7), (5, 7), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(DUP2)', 'nop(AND)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP5)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP1)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP5)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP1)', 'nop(MLOAD)', 'nop(DUP5)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP2)', 'nop(ADD)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(DUP2)', 'nop(AND)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP5)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP1)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP5)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP1)', 'nop(MLOAD)', 'nop(DUP5)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP2)', 'nop(ADD)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(DUP2)', 'nop(AND)', 'nop(PUSH0)', 'nop(DUP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(SWAP5)', 'nop(DUP8)', 'nop(AND)', 'nop(DUP1)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP5)', 'nop(DUP3)', 'nop(MSTORE)', 'nop(SWAP2)', 'nop(DUP3)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP1)', 'nop(MLOAD)', 'nop(DUP5)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925)', 'nop(SWAP2)', 'nop(ADD)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized code stored in /tmp/0x00/WomoToken_1980_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1980_statistics.csv

Estimated initial gas: 5186
Estimated gas optimized: 5186

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 84

Initial number of instructions: 46
Final number of instructions: 46

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1980;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1980;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;5186;84;46;5186;84;46;0;0;0;False;False;False;False;1.305962119018659;2;8;5000;5000


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '18', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 12)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 12)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 12)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(PUSH 0156)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP

Optimized code stored in /tmp/0x00/WomoToken_466_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_466_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_466;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;466;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0156 JUMP;33;15;10;33;15;10;0;0;0;False;False;False;False;0.01892951299669221;0;1;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e736665722066726f6d20746865207a65726f206164)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6472657373)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e736665722066726f6d20746865207a65726f206164)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6472657373)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 25)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e736665722066726f6d20746865207a65726f206164)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6472657373)', 'nop(PUSH d8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_2092_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2092_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2092;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2092;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;85;33;104;85;33;0;0;0;False;False;False;False;1.1218851580051705;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 23)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220746f20746865207a65726f2061646472)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 657373)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 23)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220746f20746865207a65726f2061646472)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 657373)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 23)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220746f20746865207a65726f2061646472)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 657373)', 'nop(PUSH e8)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_2192_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2192_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2192;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2192;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;83;33;104;83;33;0;0;0;False;False;False;False;1.122422460000962;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '10', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(AND)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(ISZERO)', 'nop(PUSH 0bd7)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(DUP2)', 'nop(PUSH ff)', 'nop(SWAP1)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(PUSH a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(AND)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(AND)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(ISZERO)', 'nop(PUSH bd7)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP3)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(AND)', 'nop(ISZERO)', 'nop(DUP1)', 'nop(ISZERO)', 'nop(PUSH 0bd7)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xff AND ISZERO DUP1 ISZERO PUSH2 0x0bd7 JUMPI

Optimized sequence (basic block per line):
JUMPDEST DUP2 PUSH1 0xff SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0xa PUSH1 0x20 MSTORE AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xbd7 JUMPI

Optimized code stored in /tmp/0x00/WomoToken_2967_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2967_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2192

Estimated initial size in bytes: 35
Estimated size optimized in bytes: 49

Initial number of instructions: 26
Final number of instructions: 21

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2967;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2967;1;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xff AND ISZERO DUP1 ISZERO PUSH2 0x0bd7 JUMPI;JUMPDEST DUP2 PUSH1 0xff SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0xa PUSH1 0x20 MSTORE AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xbd7 JUMPI;2206;35;26;2192;49;21;14;-14;5;False;False;False;False;1.0875030329916626;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '10', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(AND)', 'nop(ISZERO)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(DUP4)', 'nop(PUSH a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(POP)', 'nop(PUSH ff)', 'nop(PUSH 40)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(AND)', 'nop(ISZERO)']
{}
['nop(POP)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(AND)', 'nop(ISZERO)']

Initial sequence (basic block per line):
POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xff AND ISZERO

Optimized sequence (basic block per line):
DUP4 PUSH1 0xa PUSH1 0x20 MSTORE PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE POP PUSH1 0xff PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO

Optimized code stored in /tmp/0x00/WomoToken_3002_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3002_statistics.csv

Estimated initial gas: 2188
Estimated gas optimized: 2171

Estimated initial size in bytes: 29
Estimated size optimized in bytes: 42

Initial number of instructions: 22
Final number of instructions: 16

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3002;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3002;1;True;True;False;POP PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x0a PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xff AND ISZERO;DUP4 PUSH1 0xa PUSH1 0x20 MSTORE PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 MSTORE POP PUSH1 0xff PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO;2188;29;22;2171;42;16;17;-13;6;False;False;False;False;1.089040397957433;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('170', '20075229043207357366868313', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '11', 'mstore'), 2), (('s(10)', '30044139639235019157633772865639075122406310005163412590591679401374842355712', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 0b)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 109b1858dadb1a5cdd1959)', 'nop(PUSH aa)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 64)', 'nop(PUSH 20)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(PUSH 4)', 'nop(DUP4)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH b)', 'nop(DUP3)', 'nop(PUSH 24)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 426c61636b6c6973746564000000000000000000000000000000000000000000)', 'nop(DUP3)', 'nop(PUSH 44)', 'nop(ADD)', 'nop(MSTORE)', 'nop(ADD)', 'nop(PUSH 45b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 0b)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 109b1858dadb1a5cdd1959)', 'nop(PUSH aa)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0b PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109b1858dadb1a5cdd1959 PUSH1 0xaa SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xb DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x426c61636b6c6973746564000000000000000000000000000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x45b JUMP

Optimized code stored in /tmp/0x00/WomoToken_3036_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3036_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3036;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3036;1;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0b PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109b1858dadb1a5cdd1959 PUSH1 0xaa SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0xb DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x426c61636b6c6973746564000000000000000000000000000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x45b JUMP;89;53;28;77;97;24;12;-44;4;False;False;False;False;1.0894165280042216;2;4;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('82', '10891979955049465979779994591056822354704933335144793', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '22', 'mstore'), 2), (('s(10)', '52670383177537149983225730567356918022648040027205964535086749179480765366272', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 16)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 1d1c98591a5b99c81a5cc81b9bdd081cdd185c9d1959)', 'nop(PUSH 52)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 64)', 'nop(PUSH 20)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(PUSH 4)', 'nop(DUP4)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 16)', 'nop(DUP3)', 'nop(PUSH 24)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 74726164696e67206973206e6f74207374617274656400000000000000000000)', 'nop(DUP3)', 'nop(PUSH 44)', 'nop(ADD)', 'nop(MSTORE)', 'nop(ADD)', 'nop(PUSH 45b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 16)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 1d1c98591a5b99c81a5cc81b9bdd081cdd185c9d1959)', 'nop(PUSH 52)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1d1c98591a5b99c81a5cc81b9bdd081cdd185c9d1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x16 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x74726164696e67206973206e6f74207374617274656400000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x45b JUMP

Optimized code stored in /tmp/0x00/WomoToken_3149_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3149_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 64
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3149;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3149;1;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1d1c98591a5b99c81a5cc81b9bdd081cdd185c9d1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x16 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x74726164696e67206973206e6f74207374617274656400000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x45b JUMP;89;64;28;77;97;24;12;-33;4;False;False;False;False;1.0903190030367114;2;4;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0965)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 0)', 'nop(DUP4)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(AND)', 'nop(PUSH 1)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 965)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0965)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x0965 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x965 JUMPI

Optimized code stored in /tmp/0x00/WomoToken_2286_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2286_statistics.csv

Estimated initial gas: 2203
Estimated gas optimized: 2189

Estimated initial size in bytes: 33
Estimated size optimized in bytes: 47

Initial number of instructions: 25
Final number of instructions: 20

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2286;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2286;1;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x0965 JUMPI;JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x965 JUMPI;2203;33;25;2189;47;20;14;-14;5;False;False;False;False;1.0820610459777527;2;2;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '107118118986597', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859100820671745083778533502622993977909346', 'mstore'), 2), (('s(12)', '44065838241030143116324720188876985940908656145555552347773292252211112312832', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732062)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 616c616e6365)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732062)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 616c616e6365)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 26)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732062)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 616c616e6365)', 'nop(PUSH d0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP

Optimized code stored in /tmp/0x00/WomoToken_2319_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2319_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 86
Estimated size optimized in bytes: 86

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2319;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2319;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616c616e6365 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x045b JUMP;104;86;33;104;86;33;0;0;0;False;False;False;False;1.1216881569707766;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(17)', 's(18)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: [(1, 3)]
Storage dep simplified: [(1, 3)]
Memory order: [(('0', 's(14)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(19)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(3, 4), (1, 4), (0, 4), (0, 3), (1, 2), (0, 2), (2, 3)]
Memory dep simplified: [(3, 4), (1, 2), (0, 2), (2, 3)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP1)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(DUP6)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 099b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f3b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP1)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(DUP6)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 099b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f3b)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP1)', 'nop(DUP6)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP3)', 'nop(KECCAK256)', 'nop(DUP6)', 'nop(DUP6)', 'nop(SUB)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(SWAP2)', 'nop(DUP6)', 'nop(AND)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(KECCAK256)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(DUP5)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(PUSH 099b)', 'nop(SWAP1)', 'nop(DUP5)', 'nop(SWAP1)', 'nop(PUSH 0f3b)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x099b SWAP1 DUP5 SWAP1 PUSH2 0x0f3b JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x099b SWAP1 DUP5 SWAP1 PUSH2 0x0f3b JUMP

Optimized code stored in /tmp/0x00/WomoToken_2405_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2405_statistics.csv

Estimated initial gas: 5282
Estimated gas optimized: 5282

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 54

Initial number of instructions: 44
Final number of instructions: 44

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2405;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2405;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x099b SWAP1 DUP5 SWAP1 PUSH2 0x0f3b JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x099b SWAP1 DUP5 SWAP1 PUSH2 0x0f3b JUMP;5282;54;44;5282;54;44;0;0;0;False;False;False;False;1.2581341130426154;2;4;5100;5100


NORMAL EXECUTION

[RULE]: Evaluate expression ('224', '1313373041', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 11)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 11)', 'nop(PUSH 4)', 'nop(MSTORE)', 'nop(PUSH 4e487b7100000000000000000000000000000000000000000000000000000000)', 'nop(PUSH 0)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH 0)']
{}
['nop(PUSH 4e487b71)', 'nop(PUSH e0)', 'nop(SHL)', 'nop(PUSH0)', 'nop(MSTORE)', 'nop(PUSH 11)', 'nop(PUSH 04)', 'nop(MSTORE)', 'nop(PUSH 24)', 'nop(PUSH0)']

Initial sequence (basic block per line):
JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x11 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT

Optimized code stored in /tmp/0x00/WomoToken_3879_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3879_statistics.csv

Estimated initial gas: 29
Estimated gas optimized: 25

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 47

Initial number of instructions: 12
Final number of instructions: 10

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3879;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3879;1;False;True;True;JUMPDEST PUSH4 0x4e487b71 PUSH1 0xe0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x04 MSTORE PUSH1 0x24 PUSH0 REVERT;JUMPDEST PUSH1 0x11 PUSH1 0x4 MSTORE PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT;29;20;12;25;47;10;4;-27;2;False;False;False;False;0.01589316304307431;1;0;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('s(5)', 's(7)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(10)', 's(2)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP3)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(DUP5)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 09e7)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP3)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(DUP5)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 09e7)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']
{}
['nop(SWAP3)', 'nop(POP)', 'nop(POP)', 'nop(DUP2)', 'nop(SWAP1)', 'nop(SSTORE)', 'nop(POP)', 'nop(DUP3)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef)', 'nop(DUP5)', 'nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 09e7)', 'nop(SWAP2)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(ADD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x09e7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x09e7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized code stored in /tmp/0x00/WomoToken_2459_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_2459_statistics.csv

Estimated initial gas: 5099
Estimated gas optimized: 5099

Estimated initial size in bytes: 76
Estimated size optimized in bytes: 76

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_2459;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;2459;1;True;False;False;JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x09e7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP5 PUSH1 0x40 MLOAD PUSH2 0x09e7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;5099;76;34;5099;76;34;0;0;0;False;False;False;False;1.1437337970128283;4;1;5000;5000


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(8)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('0', 's(16)', 'mstore'), 2), (('32', 's(17)', 'mstore'), 2), (('0', '64', 'keccak2561'), 2)]
Memory dep: [(4, 5), (3, 5), (1, 5), (0, 5), (1, 4), (0, 3), (1, 2), (0, 2), (2, 3), (2, 4)]
Memory dep simplified: [(4, 5), (3, 5), (1, 2), (0, 2), (2, 3), (2, 4)]
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0464)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0464)']
{}
['nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(DUP5)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 02)', 'nop(PUSH 20)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(DUP1)', 'nop(DUP4)', 'nop(KECCAK256)', 'nop(CALLER)', 'nop(DUP5)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(MSTORE)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(DUP3)', 'nop(DUP2)', 'nop(LT)', 'nop(ISZERO)', 'nop(PUSH 0464)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x0464 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x0464 JUMPI

Optimized code stored in /tmp/0x00/WomoToken_987_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_987_statistics.csv

Estimated initial gas: 2262
Estimated gas optimized: 2262

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_987;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;987;1;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x0464 JUMPI;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x0464 JUMPI;2262;44;36;2262;44;36;0;0;0;False;False;False;False;1.1750513699953444;2;6;2100;2100


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('192', '7812742012107383653', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '40', 'mstore'), 2), (('s(9)', '31354931781638678607228669297131712859100820671745083778533502622993977909345', 'mstore'), 2), (('s(11)', '49041376442327685983450583443845300569967147870487584211451521639864848089088', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 28)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 45524332303a207472616e7366657220616d6f756e7420657863656564732061)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6c6c6f77616e6365)', 'nop(PUSH c0)', 'nop(SHL)', 'nop(PUSH 64)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 84)', 'nop(ADD)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized code stored in /tmp/0x00/WomoToken_1031_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1031_statistics.csv

Estimated initial gas: 93
Estimated gas optimized: 93

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 84

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1031;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1031;1;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220616d6f756e7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6c6c6f77616e6365 PUSH1 0xc0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;93;84;31;93;84;31;0;0;0;False;False;False;False;1.1137965350062586;2;5;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('7', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(6)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 07)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(PUSH 0cd3)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 20)', 'nop(PUSH ffffffffffffffffffffffffffffffffffffffff)', 'nop(DUP4)', 'nop(AND)', 'nop(PUSH 7)', 'nop(PUSH 1)', 'nop(PUSH 0)', 'nop(SWAP2)', 'nop(SWAP4)', 'nop(MSTORE)', 'nop(MSTORE)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(PUSH 40)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH cd3)']
{}
['nop(PUSH 07)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(PUSH 0cd3)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
PUSH1 0x07 SLOAD DUP2 PUSH2 0x0cd3 DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
PUSH1 0x20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP4 AND PUSH1 0x7 PUSH1 0x1 PUSH1 0x0 SWAP2 SWAP4 MSTORE MSTORE SLOAD DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xcd3 JUMP

Optimized code stored in /tmp/0x00/WomoToken_3250_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3250_statistics.csv

Estimated initial gas: 4297
Estimated gas optimized: 4283

Estimated initial size in bytes: 33
Estimated size optimized in bytes: 47

Initial number of instructions: 24
Final number of instructions: 19

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3250;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3250;1;True;True;False;PUSH1 0x07 SLOAD DUP2 PUSH2 0x0cd3 DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;PUSH1 0x20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP4 AND PUSH1 0x7 PUSH1 0x1 PUSH1 0x0 SWAP2 SWAP4 MSTORE MSTORE SLOAD DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xcd3 JUMP;4297;33;24;4283;47;19;14;-14;5;False;False;False;False;1.0958855600329116;2;2;4200;4200


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('8', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(6)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(POP)', 'nop(PUSH 08)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(PUSH 0d08)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(POP)', 'nop(PUSH 08)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(PUSH 0d08)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']
{}
['nop(POP)', 'nop(PUSH 08)', 'nop(SLOAD)', 'nop(DUP2)', 'nop(PUSH 0d08)', 'nop(DUP5)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(AND)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 01)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(SWAP1)']

Initial sequence (basic block per line):
POP PUSH1 0x08 SLOAD DUP2 PUSH2 0x0d08 DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
POP PUSH1 0x08 SLOAD DUP2 PUSH2 0x0d08 DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/WomoToken_3302_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3302_statistics.csv

Estimated initial gas: 4299
Estimated gas optimized: 4299

Estimated initial size in bytes: 34
Estimated size optimized in bytes: 34

Initial number of instructions: 25
Final number of instructions: 25

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3302;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3302;1;True;False;False;POP PUSH1 0x08 SLOAD DUP2 PUSH2 0x0d08 DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;POP PUSH1 0x08 SLOAD DUP2 PUSH2 0x0d08 DUP5 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP;4299;34;25;4299;34;25;0;0;0;False;False;False;False;1.0890649589709938;2;2;4200;4200


NORMAL EXECUTION

[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('210', '19361118591577', 'shl')
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '6', 'mstore'), 2), (('s(10)', '31858808877276283590882439429766609004060076743535819680632569269708912590848', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3), (0, 4)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2), (0, 1)]
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 06)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 119bdc989a59)', 'nop(PUSH d2)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 045b)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 64)', 'nop(PUSH 20)', 'nop(PUSH 8c379a000000000000000000000000000000000000000000000000000000000)', 'nop(DUP4)', 'nop(MSTORE)', 'nop(PUSH 4)', 'nop(DUP4)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 6)', 'nop(DUP3)', 'nop(PUSH 24)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 466f726269640000000000000000000000000000000000000000000000000000)', 'nop(DUP3)', 'nop(PUSH 44)', 'nop(ADD)', 'nop(MSTORE)', 'nop(ADD)', 'nop(PUSH 45b)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(PUSH 461bcd)', 'nop(PUSH e5)', 'nop(SHL)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 20)', 'nop(PUSH 04)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 06)', 'nop(PUSH 24)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 119bdc989a59)', 'nop(PUSH d2)', 'nop(SHL)', 'nop(PUSH 44)', 'nop(DUP3)', 'nop(ADD)', 'nop(MSTORE)', 'nop(PUSH 64)', 'nop(ADD)', 'nop(PUSH 045b)']

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x06 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x119bdc989a59 PUSH1 0xd2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x045b JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x6 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x466f726269640000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x45b JUMP

Optimized code stored in /tmp/0x00/WomoToken_3354_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_3354_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 48
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_3354;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;3354;1;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x06 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x119bdc989a59 PUSH1 0xd2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x045b JUMP;PUSH1 0x40 MLOAD PUSH1 0x64 PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x6 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x466f726269640000000000000000000000000000000000000000000000000000 DUP3 PUSH1 0x44 ADD MSTORE ADD PUSH2 0x45b JUMP;89;48;28;77;97;24;12;-49;4;False;False;False;False;1.0881602840381674;2;4;0;0


NORMAL EXECUTION

Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '10', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
{}
['nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(AND)', 'nop(DUP2)']
********************IT*********************
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 0)', 'nop(PUSH a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(PUSH 0)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(AND)', 'nop(DUP2)']
{}
['nop(PUSH 0a)', 'nop(PUSH 20)', 'nop(MSTORE)', 'nop(PUSH0)', 'nop(SWAP1)', 'nop(DUP2)', 'nop(MSTORE)', 'nop(PUSH 40)', 'nop(SWAP1)', 'nop(KECCAK256)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(AND)', 'nop(DUP2)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x0a PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xff AND DUP2 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x0 PUSH1 0xa PUSH1 0x20 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xff AND DUP2 JUMP

Optimized code stored in /tmp/0x00/WomoToken_400_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_400_statistics.csv

Estimated initial gas: 2174
Estimated gas optimized: 2169

Estimated initial size in bytes: 20
Estimated size optimized in bytes: 20

Initial number of instructions: 16
Final number of instructions: 14

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_400;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;400;1;False;True;True;JUMPDEST PUSH1 0x0a PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xff AND DUP2 JUMP;JUMPDEST PUSH1 0x0 PUSH1 0xa PUSH1 0x20 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xff AND DUP2 JUMP;2174;20;16;2169;20;14;5;0;2;False;False;False;False;0.13079737697262317;0;2;2100;2100


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
MEJORADO: /tmp/gasol_df557d80e9544474837335933ec143ba/jsons/isolated_block_0_0_input.json --- (4, 3)
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN

Optimized code stored in /tmp/0x00/WomoToken_342_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_342_statistics.csv

Estimated initial gas: 19
Estimated gas optimized: 19

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 8
Final number of instructions: 8

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_342;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;342;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN;19;9;8;19;9;8;0;0;0;False;False;False;False;0.011957873997744173;0;0;0;0


NORMAL EXECUTION

Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1)]
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
********************IT*********************
MEJORADO: /tmp/gasol_df557d80e9544474837335933ec143ba/jsons/isolated_block_0_0_input.json --- (4, 3)
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']
{}
['nop(PUSH 40)', 'nop(MLOAD)', 'nop(DUP1)', 'nop(SWAP2)', 'nop(SUB)', 'nop(SWAP1)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized code stored in /tmp/0x00/WomoToken_1115_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1115_statistics.csv

Estimated initial gas: 19
Estimated gas optimized: 19

Estimated initial size in bytes: 9
Estimated size optimized in bytes: 9

Initial number of instructions: 8
Final number of instructions: 8

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1115;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1115;1;False;True;True;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;19;9;8;19;9;8;0;0;0;False;False;False;False;0.011737231980077922;0;0;0;0


NORMAL EXECUTION

[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
Storage order: [(('6', 'sload0'), 1), (('6', 's(4)', 'sstore'), 2), (('9', 'sload1'), 1), (('9', 's(9)', 'sstore'), 2), (('7', 's(2)', 'sstore'), 2), (('8', 's(3)', 'sstore'), 2)]
Storage dep: [(2, 3), (0, 1)]
Storage dep simplified: [(2, 3), (0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
{}
['nop(PUSH 06)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(NOT)', 'nop(AND)', 'nop(SWAP5)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(SWAP5)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(OR)', 'nop(SWAP1)', 'nop(SWAP4)', 'nop(SSTORE)', 'nop(PUSH 09)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(NOT)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP4)', 'nop(AND)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP3)', 'nop(OR)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(PUSH 07)', 'nop(SSTORE)', 'nop(PUSH 08)', 'nop(SSTORE)']
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
Optimizing isolated_block_0_0... Timeout:1
{}
['nop(PUSH 06)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(NOT)', 'nop(AND)', 'nop(SWAP5)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(SWAP5)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(OR)', 'nop(SWAP1)', 'nop(SWAP4)', 'nop(SSTORE)', 'nop(PUSH 09)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(NOT)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP4)', 'nop(AND)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP3)', 'nop(OR)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(PUSH 07)', 'nop(SSTORE)', 'nop(PUSH 08)', 'nop(SSTORE)']
{}
['nop(PUSH 06)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH ff)', 'nop(NOT)', 'nop(AND)', 'nop(SWAP5)', 'nop(ISZERO)', 'nop(ISZERO)', 'nop(SWAP5)', 'nop(SWAP1)', 'nop(SWAP5)', 'nop(OR)', 'nop(SWAP1)', 'nop(SWAP4)', 'nop(SSTORE)', 'nop(PUSH 09)', 'nop(DUP1)', 'nop(SLOAD)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(NOT)', 'nop(AND)', 'nop(PUSH 01)', 'nop(PUSH 01)', 'nop(PUSH a0)', 'nop(SHL)', 'nop(SUB)', 'nop(SWAP4)', 'nop(SWAP1)', 'nop(SWAP4)', 'nop(AND)', 'nop(SWAP3)', 'nop(SWAP1)', 'nop(SWAP3)', 'nop(OR)', 'nop(SWAP1)', 'nop(SWAP2)', 'nop(SSTORE)', 'nop(PUSH 07)', 'nop(SSTORE)', 'nop(PUSH 08)', 'nop(SSTORE)']

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x06 DUP1 SLOAD PUSH1 0xff NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x09 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x07 SSTORE PUSH1 0x08 SSTORE JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x06 DUP1 SLOAD PUSH1 0xff NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x09 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x07 SSTORE PUSH1 0x08 SSTORE JUMP

Optimized code stored in /tmp/0x00/WomoToken_1248_optimized.txt
Optimality results stored in /tmp/0x00/WomoToken_1248_statistics.csv

Estimated initial gas: 20129
Estimated gas optimized: 20129

Estimated initial size in bytes: 59
Estimated size optimized in bytes: 59

Initial number of instructions: 48
Final number of instructions: 48

GREENRES: 0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol_WomoToken_1248;0x001ba75c600c480dc5b69e92eca9e5f16128663d.sol;WomoToken;1248;1;True;False;False;JUMPDEST PUSH1 0x06 DUP1 SLOAD PUSH1 0xff NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x09 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x07 SSTORE PUSH1 0x08 SSTORE JUMP;JUMPDEST PUSH1 0x06 DUP1 SLOAD PUSH1 0xff NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x09 DUP1 SLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB NOT AND PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x07 SSTORE PUSH1 0x08 SSTORE JUMP;20129;59;48;20129;59;48;0;0;0;False;False;False;False;1.349568345991429;6;0;20000;20000

