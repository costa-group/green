incomplete push instruction at 62
incomplete push instruction at 6424
Green Main
*************************************************************
Compilation time: 0.29233850399032235s
*************************************************************
File: Ownable
Build CFG: 0.004914661985822022s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 3
Memory read accesses ContractOwnable: 8
Memory write accesses ContractOwnable: 6
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 66
66Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
66-Stack size: 1 
66-Equals Mem:<< [<5,16>]>> 
66-NonEquals Mem: << [<15,5>, <15,16>]>> 
66-Equals Sto:<< []>> 
66-NonEquals Sto: << []>> 
66-Useless: []
66-Constancy: []
66-ContextAliasing: []

.....
-----
Block: 114
114Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
114-Stack size: 2 
114-Equals Mem:<< [<1,26>]>> 
114-NonEquals Mem: << [<6,1>, <6,26>, <13,1>, <13,26>, <17,1>, <17,26>, <22,1>, <22,26>]>> 
114-Equals Sto:<< []>> 
114-NonEquals Sto: << []>> 
114-Useless: []
114-Constancy: [(0, 64)]
114-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.0020584409940056503s

*************************************************************
File: SafeMath
Build CFG: 0.0005232980474829674s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.00012215599417686462s

*************************************************************
File: TRUMP
Build CFG: 1.028565312968567s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis TRUMP
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract TRUMP: 176
Memory read accesses ContractTRUMP: 561
Memory write accesses ContractTRUMP: 990
********************************** INIT
CONTEXT: Detected context equality 30 <slot13,0> 32 <slot13,0>
CONTEXT: Detected context equality 30 <slot13,0> 33 <slot13,0>
CONTEXT: Detected context equality 30 <slot13,0> 33 <slot13,0>
CONTEXT: Detected context equality 25 <slot15,0> 27 <slot15,0>
CONTEXT: Detected context equality 25 <slot15,0> 28 <slot15,0>
CONTEXT: Detected context equality 25 <slot15,0> 28 <slot15,0>
CONTEXT: Detected context equality 21 <slot17,0> 23 <slot17,0>
CONTEXT: Detected context equality 21 <slot17,0> 24 <slot17,0>
CONTEXT: Detected context equality 21 <slot17,0> 24 <slot17,0>
CONTEXT: Detected context equality 26 <slot22,0> 28 <slot22,0>
CONTEXT: Detected context equality 26 <slot22,0> 29 <slot22,0>
CONTEXT: Detected context equality 26 <slot22,0> 29 <slot22,0>
CONTEXT: Detected context equality 21 <slot24,0> 23 <slot24,0>
CONTEXT: Detected context equality 21 <slot24,0> 24 <slot24,0>
CONTEXT: Detected context equality 21 <slot24,0> 24 <slot24,0>
CONTEXT: Detected context equality 17 <slot26,0> 19 <slot26,0>
CONTEXT: Detected context equality 17 <slot26,0> 20 <slot26,0>
CONTEXT: Detected context equality 17 <slot26,0> 20 <slot26,0>
CONTEXT: Detected context equality 5 <slot28,0> 7 <slot28,0>
CONTEXT: Detected context equality 5 <slot28,0> 7 <slot28,0>
CONTEXT: Detected context equality 5 <slot28,0> 11 <slot28,0>
CONTEXT: Detected context equality 5 <slot28,0> 11 <slot28,0>
CONTEXT: Detected context equality 34 <slot40,0> 36 <slot40,0>
CONTEXT: Detected context equality 34 <slot40,0> 37 <slot40,0>
CONTEXT: Detected context equality 34 <slot40,0> 37 <slot40,0>
CONTEXT: Detected context equality 29 <slot42,0> 31 <slot42,0>
CONTEXT: Detected context equality 29 <slot42,0> 32 <slot42,0>
CONTEXT: Detected context equality 29 <slot42,0> 32 <slot42,0>
CONTEXT: Detected context equality 25 <slot44,0> 27 <slot44,0>
CONTEXT: Detected context equality 25 <slot44,0> 28 <slot44,0>
CONTEXT: Detected context equality 25 <slot44,0> 28 <slot44,0>
CONTEXT: Detected context equality 33 <slot48,0> 35 <slot48,0>
CONTEXT: Detected context equality 33 <slot48,0> 36 <slot48,0>
CONTEXT: Detected context equality 33 <slot48,0> 36 <slot48,0>
CONTEXT: Detected context equality 28 <slot50,0> 30 <slot50,0>
CONTEXT: Detected context equality 28 <slot50,0> 31 <slot50,0>
CONTEXT: Detected context equality 28 <slot50,0> 31 <slot50,0>
CONTEXT: Detected context equality 24 <slot52,0> 26 <slot52,0>
CONTEXT: Detected context equality 24 <slot52,0> 27 <slot52,0>
CONTEXT: Detected context equality 24 <slot52,0> 27 <slot52,0>
CONTEXT: Detected context equality 12 <slot54,0> 14 <slot54,0>
CONTEXT: Detected context equality 12 <slot54,0> 14 <slot54,0>
CONTEXT: Detected context equality 12 <slot54,0> 18 <slot54,0>
CONTEXT: Detected context equality 12 <slot54,0> 18 <slot54,0>
CONTEXT: Detected context equality 49 <slot59,0> 51 <slot59,0>
CONTEXT: Detected context equality 49 <slot59,0> 52 <slot59,0>
CONTEXT: Detected context equality 49 <slot59,0> 52 <slot59,0>
CONTEXT: Detected context equality 50 <slot61,0> 52 <slot61,0>
CONTEXT: Detected context equality 50 <slot61,0> 53 <slot61,0>
CONTEXT: Detected context equality 50 <slot61,0> 53 <slot61,0>
CONTEXT: Detected context equality 53 <slot63,0> 55 <slot63,0>
CONTEXT: Detected context equality 53 <slot63,0> 56 <slot63,0>
CONTEXT: Detected context equality 53 <slot63,0> 56 <slot63,0>
CONTEXT: Detected context equality 51 <slot65,0> 53 <slot65,0>
CONTEXT: Detected context equality 51 <slot65,0> 54 <slot65,0>
CONTEXT: Detected context equality 51 <slot65,0> 54 <slot65,0>
CONTEXT: Detected context equality 51 <slot67,0> 53 <slot67,0>
CONTEXT: Detected context equality 51 <slot67,0> 54 <slot67,0>
CONTEXT: Detected context equality 51 <slot67,0> 54 <slot67,0>
CONTEXT: Detected context equality 46 <slot69,0> 48 <slot69,0>
CONTEXT: Detected context equality 46 <slot69,0> 49 <slot69,0>
CONTEXT: Detected context equality 46 <slot69,0> 49 <slot69,0>
CONTEXT: Detected context equality 59 <slot71,0> 61 <slot71,0>
CONTEXT: Detected context equality 59 <slot71,0> 62 <slot71,0>
CONTEXT: Detected context equality 59 <slot71,0> 62 <slot71,0>
CONTEXT: Detected context equality 57 <slot73,0> 59 <slot73,0>
CONTEXT: Detected context equality 57 <slot73,0> 60 <slot73,0>
CONTEXT: Detected context equality 57 <slot73,0> 60 <slot73,0>
CONTEXT: Detected context equality 30 <slot75,0> 32 <slot75,0>
CONTEXT: Detected context equality 30 <slot75,0> 33 <slot75,0>
CONTEXT: Detected context equality 30 <slot75,0> 33 <slot75,0>
CONTEXT: Detected context equality 42 <slot78,0> 44 <slot78,0>
CONTEXT: Detected context equality 42 <slot78,0> 45 <slot78,0>
CONTEXT: Detected context equality 42 <slot78,0> 45 <slot78,0>
CONTEXT: Detected context equality 37 <slot80,0> 39 <slot80,0>
CONTEXT: Detected context equality 37 <slot80,0> 40 <slot80,0>
CONTEXT: Detected context equality 37 <slot80,0> 40 <slot80,0>
CONTEXT: Detected context equality 33 <slot83,0> 35 <slot83,0>
CONTEXT: Detected context equality 33 <slot83,0> 36 <slot83,0>
CONTEXT: Detected context equality 33 <slot83,0> 36 <slot83,0>
CONTEXT: Detected context equality 24 <slot100,0> 26 <slot100,0>
CONTEXT: Detected context equality 24 <slot100,0> 27 <slot100,0>
CONTEXT: Detected context equality 24 <slot100,0> 27 <slot100,0>
CONTEXT: Detected context equality 19 <slot102,0> 21 <slot102,0>
CONTEXT: Detected context equality 19 <slot102,0> 22 <slot102,0>
CONTEXT: Detected context equality 19 <slot102,0> 22 <slot102,0>
CONTEXT: Detected context equality 15 <slot104,0> 17 <slot104,0>
CONTEXT: Detected context equality 15 <slot104,0> 18 <slot104,0>
CONTEXT: Detected context equality 15 <slot104,0> 18 <slot104,0>
CONTEXT: Detected context equality 35 <slot119,0> 37 <slot119,0>
CONTEXT: Detected context equality 35 <slot119,0> 38 <slot119,0>
CONTEXT: Detected context equality 35 <slot119,0> 38 <slot119,0>
CONTEXT: Detected context equality 30 <slot121,0> 32 <slot121,0>
CONTEXT: Detected context equality 30 <slot121,0> 33 <slot121,0>
CONTEXT: Detected context equality 30 <slot121,0> 33 <slot121,0>
CONTEXT: Detected context equality 26 <slot123,0> 28 <slot123,0>
CONTEXT: Detected context equality 26 <slot123,0> 29 <slot123,0>
CONTEXT: Detected context equality 26 <slot123,0> 29 <slot123,0>
CONTEXT: Detected context equality 34 <slot127,0> 36 <slot127,0>
CONTEXT: Detected context equality 34 <slot127,0> 37 <slot127,0>
CONTEXT: Detected context equality 34 <slot127,0> 37 <slot127,0>
CONTEXT: Detected context equality 29 <slot129,0> 31 <slot129,0>
CONTEXT: Detected context equality 29 <slot129,0> 32 <slot129,0>
CONTEXT: Detected context equality 29 <slot129,0> 32 <slot129,0>
CONTEXT: Detected context equality 25 <slot131,0> 27 <slot131,0>
CONTEXT: Detected context equality 25 <slot131,0> 28 <slot131,0>
CONTEXT: Detected context equality 25 <slot131,0> 28 <slot131,0>
CONTEXT: Detected context equality 13 <slot133,0> 15 <slot133,0>
CONTEXT: Detected context equality 13 <slot133,0> 15 <slot133,0>
CONTEXT: Detected context equality 13 <slot133,0> 19 <slot133,0>
CONTEXT: Detected context equality 13 <slot133,0> 19 <slot133,0>
CONTEXT: Detected context equality 50 <slot138,0> 52 <slot138,0>
CONTEXT: Detected context equality 50 <slot138,0> 53 <slot138,0>
CONTEXT: Detected context equality 50 <slot138,0> 53 <slot138,0>
CONTEXT: Detected context equality 51 <slot140,0> 53 <slot140,0>
CONTEXT: Detected context equality 51 <slot140,0> 54 <slot140,0>
CONTEXT: Detected context equality 51 <slot140,0> 54 <slot140,0>
CONTEXT: Detected context equality 54 <slot142,0> 56 <slot142,0>
CONTEXT: Detected context equality 54 <slot142,0> 57 <slot142,0>
CONTEXT: Detected context equality 54 <slot142,0> 57 <slot142,0>
CONTEXT: Detected context equality 52 <slot144,0> 54 <slot144,0>
CONTEXT: Detected context equality 52 <slot144,0> 55 <slot144,0>
CONTEXT: Detected context equality 52 <slot144,0> 55 <slot144,0>
CONTEXT: Detected context equality 52 <slot146,0> 54 <slot146,0>
CONTEXT: Detected context equality 52 <slot146,0> 55 <slot146,0>
CONTEXT: Detected context equality 52 <slot146,0> 55 <slot146,0>
CONTEXT: Detected context equality 47 <slot148,0> 49 <slot148,0>
CONTEXT: Detected context equality 47 <slot148,0> 50 <slot148,0>
CONTEXT: Detected context equality 47 <slot148,0> 50 <slot148,0>
CONTEXT: Detected context equality 60 <slot150,0> 62 <slot150,0>
CONTEXT: Detected context equality 60 <slot150,0> 63 <slot150,0>
CONTEXT: Detected context equality 60 <slot150,0> 63 <slot150,0>
CONTEXT: Detected context equality 58 <slot152,0> 60 <slot152,0>
CONTEXT: Detected context equality 58 <slot152,0> 61 <slot152,0>
CONTEXT: Detected context equality 58 <slot152,0> 61 <slot152,0>
CONTEXT: Detected context equality 31 <slot154,0> 33 <slot154,0>
CONTEXT: Detected context equality 31 <slot154,0> 34 <slot154,0>
CONTEXT: Detected context equality 31 <slot154,0> 34 <slot154,0>
CONTEXT: Detected context equality 43 <slot157,0> 45 <slot157,0>
CONTEXT: Detected context equality 43 <slot157,0> 46 <slot157,0>
CONTEXT: Detected context equality 43 <slot157,0> 46 <slot157,0>
CONTEXT: Detected context equality 38 <slot159,0> 40 <slot159,0>
CONTEXT: Detected context equality 38 <slot159,0> 41 <slot159,0>
CONTEXT: Detected context equality 38 <slot159,0> 41 <slot159,0>
CONTEXT: Detected context equality 34 <slot162,0> 36 <slot162,0>
CONTEXT: Detected context equality 34 <slot162,0> 37 <slot162,0>
CONTEXT: Detected context equality 34 <slot162,0> 37 <slot162,0>
CONTEXT: Detected context equality 12 <slot165,0> 14 <slot165,0>
CONTEXT: Detected context equality 12 <slot165,0> 15 <slot165,0>
CONTEXT: Detected context equality 12 <slot165,0> 15 <slot165,0>
COMPACT CLONES: True
CONTRACT: TRUMP
-----
Block: 940
940Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
940-Stack size: 4 
940-Equals Mem:<< [<12,27>, <17,31>]>> 
940-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
940-Equals Sto:<< []>> 
940-NonEquals Sto: << []>> 
940-Useless: []
940-Constancy: []
940-ContextAliasing: []

.....
-----
Block: 435
435Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
435-Stack size: 2 
435-Equals Mem:<< []>> 
435-NonEquals Mem: << [<5,2>]>> 
435-Equals Sto:<< []>> 
435-NonEquals Sto: << []>> 
435-Useless: []
435-Constancy: []
435-ContextAliasing: []

.....
-----
Block: 1730
1730Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1730-Stack size: 2 
1730-Equals Mem:<< []>> 
1730-NonEquals Mem: << [<6,1>]>> 
1730-Equals Sto:<< []>> 
1730-NonEquals Sto: << []>> 
1730-Useless: []
1730-Constancy: []
1730-ContextAliasing: []

.....
-----
Block: 1772
1772Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
1772-Stack size: 2 
1772-Equals Mem:<< []>> 
1772-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1772-Equals Sto:<< []>> 
1772-NonEquals Sto: << []>> 
1772-Useless: []
1772-Constancy: []
1772-ContextAliasing: []

.....
-----
Block: 2593_4
2593_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2593_4-Stack size: 7 
2593_4-Equals Mem:<< []>> 
2593_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2593_4-Equals Sto:<< []>> 
2593_4-NonEquals Sto: << []>> 
2593_4-Useless: []
2593_4-Constancy: []
2593_4-ContextAliasing: []

.....
-----
Block: 2691_4
2691_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2691_4-Stack size: 7 
2691_4-Equals Mem:<< []>> 
2691_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2691_4-Equals Sto:<< []>> 
2691_4-NonEquals Sto: << []>> 
2691_4-Useless: []
2691_4-Constancy: []
2691_4-ContextAliasing: []

.....
-----
Block: 1962
1962Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x07ce', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
1962-Stack size: 7 
1962-Equals Mem:<< [<18,6>]>> 
1962-NonEquals Mem: << []>> 
1962-Equals Sto:<< []>> 
1962-NonEquals Sto: << []>> 
1962-Useless: []
1962-Constancy: []
1962-ContextAliasing: []

.....
-----
Block: 2073
2073Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x083d', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
2073-Stack size: 10 
2073-Equals Mem:<< [<18,6>]>> 
2073-NonEquals Mem: << []>> 
2073-Equals Sto:<< []>> 
2073-NonEquals Sto: << []>> 
2073-Useless: []
2073-Constancy: []
2073-ContextAliasing: []

.....
-----
Block: 2183
2183Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x08ab', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
2183-Stack size: 7 
2183-Equals Mem:<< [<18,6>]>> 
2183-NonEquals Mem: << []>> 
2183-Equals Sto:<< []>> 
2183-NonEquals Sto: << []>> 
2183-Useless: []
2183-Constancy: []
2183-ContextAliasing: []

.....
-----
Block: 1443_5
1443_5Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443_5-Stack size: 9 
1443_5-Equals Mem:<< []>> 
1443_5-NonEquals Mem: << [<11,14>]>> 
1443_5-Equals Sto:<< []>> 
1443_5-NonEquals Sto: << []>> 
1443_5-Useless: []
1443_5-Constancy: []
1443_5-ContextAliasing: []

.....
-----
Block: 4007_5
4007_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007_5-Stack size: 13 
4007_5-Equals Mem:<< []>> 
4007_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007_5-Equals Sto:<< []>> 
4007_5-NonEquals Sto: << []>> 
4007_5-Useless: []
4007_5-Constancy: [(3, 0), (0, 0)]
4007_5-ContextAliasing: []

.....
-----
Block: 4537_29
4537_29Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_29-Stack size: 26 
4537_29-Equals Mem:<< [<11,6>]>> 
4537_29-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_29-Equals Sto:<< []>> 
4537_29-NonEquals Sto: << []>> 
4537_29-Useless: []
4537_29-Constancy: [(16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_29-ContextAliasing: []

.....
-----
Block: 4912_31
4912_31Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_31-Stack size: 33 
4912_31-Equals Mem:<< []>> 
4912_31-NonEquals Mem: << [<6,1>]>> 
4912_31-Equals Sto:<< []>> 
4912_31-NonEquals Sto: << []>> 
4912_31-Useless: []
4912_31-Constancy: [(23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_31-ContextAliasing: [(2, 32)]

.....
-----
Block: 5582_45
5582_45Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_45-Stack size: 35 
5582_45-Equals Mem:<< []>> 
5582_45-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_45-Equals Sto:<< []>> 
5582_45-NonEquals Sto: << []>> 
5582_45-Useless: []
5582_45-Constancy: [(25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_45-ContextAliasing: [(4, 33)]

.....
-----
Block: 5606_45
5606_45Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_45-Stack size: 39 
5606_45-Equals Mem:<< []>> 
5606_45-NonEquals Mem: << [<11,5>]>> 
5606_45-Equals Sto:<< []>> 
5606_45-NonEquals Sto: << []>> 
5606_45-Useless: []
5606_45-Constancy: [(29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_45-ContextAliasing: [(8, 33)]

.....
-----
Block: 6293_43
6293_43Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_43-Stack size: 37 
6293_43-Equals Mem:<< []>> 
6293_43-NonEquals Mem: << [<4,7>]>> 
6293_43-Equals Sto:<< []>> 
6293_43-NonEquals Sto: << []>> 
6293_43-Useless: []
6293_43-Constancy: [(27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_43-ContextAliasing: []

.....
-----
Block: 4537_30
4537_30Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_30-Stack size: 21 
4537_30-Equals Mem:<< [<11,6>]>> 
4537_30-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_30-Equals Sto:<< []>> 
4537_30-NonEquals Sto: << []>> 
4537_30-Useless: []
4537_30-Constancy: [(11, 0), (8, 0), (7, 0), (5, 0)]
4537_30-ContextAliasing: []

.....
-----
Block: 4912_30
4912_30Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_30-Stack size: 28 
4912_30-Equals Mem:<< []>> 
4912_30-NonEquals Mem: << [<6,1>]>> 
4912_30-Equals Sto:<< []>> 
4912_30-NonEquals Sto: << []>> 
4912_30-Useless: []
4912_30-Constancy: [(18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_30-ContextAliasing: [(2, 27)]

.....
-----
Block: 5582_44
5582_44Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_44-Stack size: 30 
5582_44-Equals Mem:<< []>> 
5582_44-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_44-Equals Sto:<< []>> 
5582_44-NonEquals Sto: << []>> 
5582_44-Useless: []
5582_44-Constancy: [(20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_44-ContextAliasing: [(4, 28)]

.....
-----
Block: 5606_44
5606_44Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_44-Stack size: 34 
5606_44-Equals Mem:<< []>> 
5606_44-NonEquals Mem: << [<11,5>]>> 
5606_44-Equals Sto:<< []>> 
5606_44-NonEquals Sto: << []>> 
5606_44-Useless: []
5606_44-Constancy: [(24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_44-ContextAliasing: [(8, 28)]

.....
-----
Block: 6293_42
6293_42Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_42-Stack size: 32 
6293_42-Equals Mem:<< []>> 
6293_42-NonEquals Mem: << [<4,7>]>> 
6293_42-Equals Sto:<< []>> 
6293_42-NonEquals Sto: << []>> 
6293_42-Useless: []
6293_42-Constancy: [(22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_42-ContextAliasing: []

.....
-----
Block: 4537_31
4537_31Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_31-Stack size: 17 
4537_31-Equals Mem:<< [<11,6>]>> 
4537_31-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_31-Equals Sto:<< []>> 
4537_31-NonEquals Sto: << []>> 
4537_31-Useless: []
4537_31-Constancy: [(7, 0), (4, 0)]
4537_31-ContextAliasing: []

.....
-----
Block: 4912_29
4912_29Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_29-Stack size: 24 
4912_29-Equals Mem:<< []>> 
4912_29-NonEquals Mem: << [<6,1>]>> 
4912_29-Equals Sto:<< []>> 
4912_29-NonEquals Sto: << []>> 
4912_29-Useless: []
4912_29-Constancy: [(14, 0), (11, 0), (6, 0), (1, 0)]
4912_29-ContextAliasing: [(2, 23)]

.....
-----
Block: 5582_43
5582_43Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_43-Stack size: 26 
5582_43-Equals Mem:<< []>> 
5582_43-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_43-Equals Sto:<< []>> 
5582_43-NonEquals Sto: << []>> 
5582_43-Useless: []
5582_43-Constancy: [(16, 0), (13, 0), (8, 0), (3, 0)]
5582_43-ContextAliasing: [(4, 24)]

.....
-----
Block: 5606_43
5606_43Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_43-Stack size: 30 
5606_43-Equals Mem:<< []>> 
5606_43-NonEquals Mem: << [<11,5>]>> 
5606_43-Equals Sto:<< []>> 
5606_43-NonEquals Sto: << []>> 
5606_43-Useless: []
5606_43-Constancy: [(20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_43-ContextAliasing: [(8, 24)]

.....
-----
Block: 6293_41
6293_41Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_41-Stack size: 28 
6293_41-Equals Mem:<< []>> 
6293_41-NonEquals Mem: << [<4,7>]>> 
6293_41-Equals Sto:<< []>> 
6293_41-NonEquals Sto: << []>> 
6293_41-Useless: []
6293_41-Constancy: [(18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_41-ContextAliasing: []

.....
-----
Block: 2388
2388Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0979', 'SWAP2', 'SWAP1', 'PUSH2 0x1776', 'JUMP']>> 
2388-Stack size: 8 
2388-Equals Mem:<< [<19,7>]>> 
2388-NonEquals Mem: << []>> 
2388-Equals Sto:<< []>> 
2388-NonEquals Sto: << []>> 
2388-Useless: []
2388-Constancy: []
2388-ContextAliasing: []

.....
-----
Block: 2538
2538Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0a0e', 'SWAP2', 'SWAP1', 'PUSH2 0x17a1', 'JUMP']>> 
2538-Stack size: 7 
2538-Equals Mem:<< [<18,6>]>> 
2538-NonEquals Mem: << []>> 
2538-Equals Sto:<< []>> 
2538-NonEquals Sto: << []>> 
2538-Useless: []
2538-Constancy: []
2538-ContextAliasing: []

.....
-----
Block: 1443_4
1443_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443_4-Stack size: 5 
1443_4-Equals Mem:<< []>> 
1443_4-NonEquals Mem: << [<11,14>]>> 
1443_4-Equals Sto:<< []>> 
1443_4-NonEquals Sto: << []>> 
1443_4-Useless: []
1443_4-Constancy: [(2, 0)]
1443_4-ContextAliasing: []

.....
-----
Block: 4007_4
4007_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007_4-Stack size: 9 
4007_4-Equals Mem:<< []>> 
4007_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007_4-Equals Sto:<< []>> 
4007_4-NonEquals Sto: << []>> 
4007_4-Useless: []
4007_4-Constancy: [(6, 0), (3, 0), (0, 0)]
4007_4-ContextAliasing: []

.....
-----
Block: 4537_26
4537_26Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_26-Stack size: 22 
4537_26-Equals Mem:<< [<11,6>]>> 
4537_26-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_26-Equals Sto:<< []>> 
4537_26-NonEquals Sto: << []>> 
4537_26-Useless: []
4537_26-Constancy: [(19, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_26-ContextAliasing: []

.....
-----
Block: 4912_28
4912_28Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_28-Stack size: 29 
4912_28-Equals Mem:<< []>> 
4912_28-NonEquals Mem: << [<6,1>]>> 
4912_28-Equals Sto:<< []>> 
4912_28-NonEquals Sto: << []>> 
4912_28-Useless: []
4912_28-Constancy: [(26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_28-ContextAliasing: [(2, 28)]

.....
-----
Block: 5582_42
5582_42Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_42-Stack size: 31 
5582_42-Equals Mem:<< []>> 
5582_42-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_42-Equals Sto:<< []>> 
5582_42-NonEquals Sto: << []>> 
5582_42-Useless: []
5582_42-Constancy: [(28, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_42-ContextAliasing: [(4, 29)]

.....
-----
Block: 5606_42
5606_42Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_42-Stack size: 35 
5606_42-Equals Mem:<< []>> 
5606_42-NonEquals Mem: << [<11,5>]>> 
5606_42-Equals Sto:<< []>> 
5606_42-NonEquals Sto: << []>> 
5606_42-Useless: []
5606_42-Constancy: [(32, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_42-ContextAliasing: [(8, 29)]

.....
-----
Block: 6293_40
6293_40Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_40-Stack size: 33 
6293_40-Equals Mem:<< []>> 
6293_40-NonEquals Mem: << [<4,7>]>> 
6293_40-Equals Sto:<< []>> 
6293_40-NonEquals Sto: << []>> 
6293_40-Useless: []
6293_40-Constancy: [(30, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_40-ContextAliasing: []

.....
-----
Block: 4537_27
4537_27Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_27-Stack size: 17 
4537_27-Equals Mem:<< [<11,6>]>> 
4537_27-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_27-Equals Sto:<< []>> 
4537_27-NonEquals Sto: << []>> 
4537_27-Useless: []
4537_27-Constancy: [(14, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
4537_27-ContextAliasing: []

.....
-----
Block: 4912_27
4912_27Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_27-Stack size: 24 
4912_27-Equals Mem:<< []>> 
4912_27-NonEquals Mem: << [<6,1>]>> 
4912_27-Equals Sto:<< []>> 
4912_27-NonEquals Sto: << []>> 
4912_27-Useless: []
4912_27-Constancy: [(21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_27-ContextAliasing: [(2, 23)]

.....
-----
Block: 5582_41
5582_41Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_41-Stack size: 26 
5582_41-Equals Mem:<< []>> 
5582_41-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_41-Equals Sto:<< []>> 
5582_41-NonEquals Sto: << []>> 
5582_41-Useless: []
5582_41-Constancy: [(23, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_41-ContextAliasing: [(4, 24)]

.....
-----
Block: 5606_41
5606_41Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_41-Stack size: 30 
5606_41-Equals Mem:<< []>> 
5606_41-NonEquals Mem: << [<11,5>]>> 
5606_41-Equals Sto:<< []>> 
5606_41-NonEquals Sto: << []>> 
5606_41-Useless: []
5606_41-Constancy: [(27, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_41-ContextAliasing: [(8, 24)]

.....
-----
Block: 6293_39
6293_39Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_39-Stack size: 28 
6293_39-Equals Mem:<< []>> 
6293_39-NonEquals Mem: << [<4,7>]>> 
6293_39-Equals Sto:<< []>> 
6293_39-NonEquals Sto: << []>> 
6293_39-Useless: []
6293_39-Constancy: [(25, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_39-ContextAliasing: []

.....
-----
Block: 4537_28
4537_28Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_28-Stack size: 13 
4537_28-Equals Mem:<< [<11,6>]>> 
4537_28-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_28-Equals Sto:<< []>> 
4537_28-NonEquals Sto: << []>> 
4537_28-Useless: []
4537_28-Constancy: [(10, 0), (7, 0), (4, 0)]
4537_28-ContextAliasing: []

.....
-----
Block: 4912_26
4912_26Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_26-Stack size: 20 
4912_26-Equals Mem:<< []>> 
4912_26-NonEquals Mem: << [<6,1>]>> 
4912_26-Equals Sto:<< []>> 
4912_26-NonEquals Sto: << []>> 
4912_26-Useless: []
4912_26-Constancy: [(17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
4912_26-ContextAliasing: [(2, 19)]

.....
-----
Block: 5582_40
5582_40Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_40-Stack size: 22 
5582_40-Equals Mem:<< []>> 
5582_40-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_40-Equals Sto:<< []>> 
5582_40-NonEquals Sto: << []>> 
5582_40-Useless: []
5582_40-Constancy: [(19, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
5582_40-ContextAliasing: [(4, 20)]

.....
-----
Block: 5606_40
5606_40Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_40-Stack size: 26 
5606_40-Equals Mem:<< []>> 
5606_40-NonEquals Mem: << [<11,5>]>> 
5606_40-Equals Sto:<< []>> 
5606_40-NonEquals Sto: << []>> 
5606_40-Useless: []
5606_40-Constancy: [(23, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_40-ContextAliasing: [(8, 20)]

.....
-----
Block: 6293_38
6293_38Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_38-Stack size: 24 
6293_38-Equals Mem:<< []>> 
6293_38-NonEquals Mem: << [<4,7>]>> 
6293_38-Equals Sto:<< []>> 
6293_38-NonEquals Sto: << []>> 
6293_38-Useless: []
6293_38-Constancy: [(21, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_38-ContextAliasing: []

.....
-----
Block: 6155_4
6155_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6155_4-Stack size: 10 
6155_4-Equals Mem:<< []>> 
6155_4-NonEquals Mem: << [<5,8>]>> 
6155_4-Equals Sto:<< []>> 
6155_4-NonEquals Sto: << []>> 
6155_4-Useless: []
6155_4-Constancy: [(1, 0)]
6155_4-ContextAliasing: [(4, 7)]

.....
-----
Block: 4282_1
4282_1Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x10de', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
4282_1-Stack size: 10 
4282_1-Equals Mem:<< [<18,6>]>> 
4282_1-NonEquals Mem: << []>> 
4282_1-Equals Sto:<< []>> 
4282_1-NonEquals Sto: << []>> 
4282_1-Useless: []
4282_1-Constancy: []
4282_1-ContextAliasing: []

.....
-----
Block: 6155_3
6155_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6155_3-Stack size: 10 
6155_3-Equals Mem:<< []>> 
6155_3-NonEquals Mem: << [<5,8>]>> 
6155_3-Equals Sto:<< []>> 
6155_3-NonEquals Sto: << []>> 
6155_3-Useless: []
6155_3-Constancy: []
6155_3-ContextAliasing: [(4, 7)]

.....
-----
Block: 2593_3
2593_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2593_3-Stack size: 10 
2593_3-Equals Mem:<< []>> 
2593_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2593_3-Equals Sto:<< []>> 
2593_3-NonEquals Sto: << []>> 
2593_3-Useless: []
2593_3-Constancy: []
2593_3-ContextAliasing: []

.....
-----
Block: 2691_3
2691_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2691_3-Stack size: 10 
2691_3-Equals Mem:<< []>> 
2691_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2691_3-Equals Sto:<< []>> 
2691_3-NonEquals Sto: << []>> 
2691_3-Useless: []
2691_3-Constancy: []
2691_3-ContextAliasing: []

.....
-----
Block: 4375_1
4375_1Instr:<<['JUMPDEST', 'PUSH1 0x12', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x114f', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x181f', 'JUMP']>> 
4375_1-Stack size: 6 
4375_1-Equals Mem:<< []>> 
4375_1-NonEquals Mem: << [<9,4>]>> 
4375_1-Equals Sto:<< []>> 
4375_1-NonEquals Sto: << []>> 
4375_1-Useless: []
4375_1-Constancy: []
4375_1-ContextAliasing: []

.....
-----
Block: 6175_1
6175_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6175_1-Stack size: 15 
6175_1-Equals Mem:<< []>> 
6175_1-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
6175_1-Equals Sto:<< []>> 
6175_1-NonEquals Sto: << []>> 
6175_1-Useless: []
6175_1-Constancy: [(4, 0)]
6175_1-ContextAliasing: [(9, 11)]

.....
-----
Block: 6225_1
6225_1Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1848', 'JUMP']>> 
6225_1-Stack size: 21 
6225_1-Equals Mem:<< []>> 
6225_1-NonEquals Mem: << [<9,1>]>> 
6225_1-Equals Sto:<< []>> 
6225_1-NonEquals Sto: << []>> 
6225_1-Useless: []
6225_1-Constancy: [(10, 0), (5, 0), (3, 32)]
6225_1-ContextAliasing: [(15, 11)]

.....
-----
Block: 854
854Instr:<<['JUMPDEST', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
854-Stack size: 3 
854-Equals Mem:<< []>> 
854-NonEquals Mem: << [<3,7>]>> 
854-Equals Sto:<< []>> 
854-NonEquals Sto: << []>> 
854-Useless: []
854-Constancy: []
854-ContextAliasing: []

.....
-----
Block: 398_0
398_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
398_0-Stack size: 3 
398_0-Equals Mem:<< []>> 
398_0-NonEquals Mem: << [<7,2>]>> 
398_0-Equals Sto:<< []>> 
398_0-NonEquals Sto: << []>> 
398_0-Useless: []
398_0-Constancy: []
398_0-ContextAliasing: []

.....
-----
Block: 2884_0
2884_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2884_0-Stack size: 9 
2884_0-Equals Mem:<< []>> 
2884_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2884_0-Equals Sto:<< []>> 
2884_0-NonEquals Sto: << []>> 
2884_0-Useless: []
2884_0-Constancy: [(4, 0)]
2884_0-ContextAliasing: []

.....
-----
Block: 2984_0
2984_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2984_0-Stack size: 9 
2984_0-Equals Mem:<< []>> 
2984_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2984_0-Equals Sto:<< []>> 
2984_0-NonEquals Sto: << []>> 
2984_0-Useless: []
2984_0-Constancy: [(4, 0)]
2984_0-ContextAliasing: []

.....
-----
Block: 3075_0
3075_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3075_0-Stack size: 9 
3075_0-Equals Mem:<< []>> 
3075_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3075_0-Equals Sto:<< []>> 
3075_0-NonEquals Sto: << []>> 
3075_0-Useless: []
3075_0-Constancy: [(4, 0)]
3075_0-ContextAliasing: []

.....
-----
Block: 3212_0
3212_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0ccb', 'JUMPI']>> 
3212_0-Stack size: 9 
3212_0-Equals Mem:<< []>> 
3212_0-NonEquals Mem: << [<10,13>]>> 
3212_0-Equals Sto:<< []>> 
3212_0-NonEquals Sto: << []>> 
3212_0-Useless: []
3212_0-Constancy: [(4, 0)]
3212_0-ContextAliasing: []

.....
-----
Block: 3246_0
3246_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3246_0-Stack size: 10 
3246_0-Equals Mem:<< []>> 
3246_0-NonEquals Mem: << [<11,14>]>> 
3246_0-Equals Sto:<< []>> 
3246_0-NonEquals Sto: << []>> 
3246_0-Useless: []
3246_0-Constancy: [(5, 0)]
3246_0-ContextAliasing: []

.....
-----
Block: 3280_0
3280_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH12 0x213630b1b5b634b9ba32b217', 'PUSH1 0xa1', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3280_0-Stack size: 9 
3280_0-Equals Mem:<< []>> 
3280_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3280_0-Equals Sto:<< []>> 
3280_0-NonEquals Sto: << []>> 
3280_0-Useless: []
3280_0-Constancy: [(4, 0)]
3280_0-ContextAliasing: []

.....
-----
Block: 3411_0
3411_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3411_0-Stack size: 10 
3411_0-Equals Mem:<< []>> 
3411_0-NonEquals Mem: << [<11,14>]>> 
3411_0-Equals Sto:<< []>> 
3411_0-NonEquals Sto: << []>> 
3411_0-Useless: []
3411_0-Constancy: [(5, 0)]
3411_0-ContextAliasing: []

.....
-----
Block: 3477_0
3477_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3477_0-Stack size: 9 
3477_0-Equals Mem:<< []>> 
3477_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3477_0-Equals Sto:<< []>> 
3477_0-NonEquals Sto: << []>> 
3477_0-Useless: []
3477_0-Constancy: [(4, 0)]
3477_0-ContextAliasing: []

.....
-----
Block: 1443_3
1443_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443_3-Stack size: 13 
1443_3-Equals Mem:<< []>> 
1443_3-NonEquals Mem: << [<11,14>]>> 
1443_3-Equals Sto:<< []>> 
1443_3-NonEquals Sto: << []>> 
1443_3-Useless: []
1443_3-Constancy: [(8, 0)]
1443_3-ContextAliasing: []

.....
-----
Block: 4007_3
4007_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007_3-Stack size: 17 
4007_3-Equals Mem:<< []>> 
4007_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007_3-Equals Sto:<< []>> 
4007_3-NonEquals Sto: << []>> 
4007_3-Useless: []
4007_3-Constancy: [(12, 0), (3, 0), (0, 0)]
4007_3-ContextAliasing: []

.....
-----
Block: 4537_23
4537_23Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_23-Stack size: 30 
4537_23-Equals Mem:<< [<11,6>]>> 
4537_23-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_23-Equals Sto:<< []>> 
4537_23-NonEquals Sto: << []>> 
4537_23-Useless: []
4537_23-Constancy: [(25, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_23-ContextAliasing: []

.....
-----
Block: 4912_25
4912_25Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_25-Stack size: 37 
4912_25-Equals Mem:<< []>> 
4912_25-NonEquals Mem: << [<6,1>]>> 
4912_25-Equals Sto:<< []>> 
4912_25-NonEquals Sto: << []>> 
4912_25-Useless: []
4912_25-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_25-ContextAliasing: [(2, 36)]

.....
-----
Block: 5582_39
5582_39Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_39-Stack size: 39 
5582_39-Equals Mem:<< []>> 
5582_39-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_39-Equals Sto:<< []>> 
5582_39-NonEquals Sto: << []>> 
5582_39-Useless: []
5582_39-Constancy: [(34, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_39-ContextAliasing: [(4, 37)]

.....
-----
Block: 5606_39
5606_39Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_39-Stack size: 43 
5606_39-Equals Mem:<< []>> 
5606_39-NonEquals Mem: << [<11,5>]>> 
5606_39-Equals Sto:<< []>> 
5606_39-NonEquals Sto: << []>> 
5606_39-Useless: []
5606_39-Constancy: [(38, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_39-ContextAliasing: [(8, 37)]

.....
-----
Block: 6293_37
6293_37Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_37-Stack size: 41 
6293_37-Equals Mem:<< []>> 
6293_37-NonEquals Mem: << [<4,7>]>> 
6293_37-Equals Sto:<< []>> 
6293_37-NonEquals Sto: << []>> 
6293_37-Useless: []
6293_37-Constancy: [(36, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_37-ContextAliasing: []

.....
-----
Block: 4537_24
4537_24Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_24-Stack size: 25 
4537_24-Equals Mem:<< [<11,6>]>> 
4537_24-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_24-Equals Sto:<< []>> 
4537_24-NonEquals Sto: << []>> 
4537_24-Useless: []
4537_24-Constancy: [(20, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
4537_24-ContextAliasing: []

.....
-----
Block: 4912_24
4912_24Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_24-Stack size: 32 
4912_24-Equals Mem:<< []>> 
4912_24-NonEquals Mem: << [<6,1>]>> 
4912_24-Equals Sto:<< []>> 
4912_24-NonEquals Sto: << []>> 
4912_24-Useless: []
4912_24-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_24-ContextAliasing: [(2, 31)]

.....
-----
Block: 5582_38
5582_38Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_38-Stack size: 34 
5582_38-Equals Mem:<< []>> 
5582_38-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_38-Equals Sto:<< []>> 
5582_38-NonEquals Sto: << []>> 
5582_38-Useless: []
5582_38-Constancy: [(29, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_38-ContextAliasing: [(4, 32)]

.....
-----
Block: 5606_38
5606_38Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_38-Stack size: 38 
5606_38-Equals Mem:<< []>> 
5606_38-NonEquals Mem: << [<11,5>]>> 
5606_38-Equals Sto:<< []>> 
5606_38-NonEquals Sto: << []>> 
5606_38-Useless: []
5606_38-Constancy: [(33, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_38-ContextAliasing: [(8, 32)]

.....
-----
Block: 6293_36
6293_36Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_36-Stack size: 36 
6293_36-Equals Mem:<< []>> 
6293_36-NonEquals Mem: << [<4,7>]>> 
6293_36-Equals Sto:<< []>> 
6293_36-NonEquals Sto: << []>> 
6293_36-Useless: []
6293_36-Constancy: [(31, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_36-ContextAliasing: []

.....
-----
Block: 4537_25
4537_25Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_25-Stack size: 21 
4537_25-Equals Mem:<< [<11,6>]>> 
4537_25-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_25-Equals Sto:<< []>> 
4537_25-NonEquals Sto: << []>> 
4537_25-Useless: []
4537_25-Constancy: [(16, 0), (7, 0), (4, 0)]
4537_25-ContextAliasing: []

.....
-----
Block: 4912_23
4912_23Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_23-Stack size: 28 
4912_23-Equals Mem:<< []>> 
4912_23-NonEquals Mem: << [<6,1>]>> 
4912_23-Equals Sto:<< []>> 
4912_23-NonEquals Sto: << []>> 
4912_23-Useless: []
4912_23-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
4912_23-ContextAliasing: [(2, 27)]

.....
-----
Block: 5582_37
5582_37Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_37-Stack size: 30 
5582_37-Equals Mem:<< []>> 
5582_37-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_37-Equals Sto:<< []>> 
5582_37-NonEquals Sto: << []>> 
5582_37-Useless: []
5582_37-Constancy: [(25, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
5582_37-ContextAliasing: [(4, 28)]

.....
-----
Block: 5606_37
5606_37Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_37-Stack size: 34 
5606_37-Equals Mem:<< []>> 
5606_37-NonEquals Mem: << [<11,5>]>> 
5606_37-Equals Sto:<< []>> 
5606_37-NonEquals Sto: << []>> 
5606_37-Useless: []
5606_37-Constancy: [(29, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_37-ContextAliasing: [(8, 28)]

.....
-----
Block: 6293_35
6293_35Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_35-Stack size: 32 
6293_35-Equals Mem:<< []>> 
6293_35-NonEquals Mem: << [<4,7>]>> 
6293_35-Equals Sto:<< []>> 
6293_35-NonEquals Sto: << []>> 
6293_35-Useless: []
6293_35-Constancy: [(27, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_35-ContextAliasing: []

.....
-----
Block: 6076_35
6076_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_35-Stack size: 15 
6076_35-Equals Mem:<< []>> 
6076_35-NonEquals Mem: << [<5,8>]>> 
6076_35-Equals Sto:<< []>> 
6076_35-NonEquals Sto: << []>> 
6076_35-Useless: []
6076_35-Constancy: [(10, 0)]
6076_35-ContextAliasing: []

.....
-----
Block: 3578_0
3578_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3578_0-Stack size: 9 
3578_0-Equals Mem:<< []>> 
3578_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3578_0-Equals Sto:<< []>> 
3578_0-NonEquals Sto: << []>> 
3578_0-Useless: []
3578_0-Constancy: [(4, 0)]
3578_0-ContextAliasing: []

.....
-----
Block: 6076_34
6076_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_34-Stack size: 16 
6076_34-Equals Mem:<< []>> 
6076_34-NonEquals Mem: << [<5,8>]>> 
6076_34-Equals Sto:<< []>> 
6076_34-NonEquals Sto: << []>> 
6076_34-Useless: []
6076_34-Constancy: [(11, 0), (4, 0), (1, 0)]
6076_34-ContextAliasing: []

.....
-----
Block: 6076_33
6076_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_33-Stack size: 14 
6076_33-Equals Mem:<< []>> 
6076_33-NonEquals Mem: << [<5,8>]>> 
6076_33-Equals Sto:<< []>> 
6076_33-NonEquals Sto: << []>> 
6076_33-Useless: []
6076_33-Constancy: [(9, 0)]
6076_33-ContextAliasing: []

.....
-----
Block: 3701_0
3701_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE']>> 
3701_0-Stack size: 9 
3701_0-Equals Mem:<< []>> 
3701_0-NonEquals Mem: << [<10,13>]>> 
3701_0-Equals Sto:<< [<18,25>]>> 
3701_0-NonEquals Sto: << []>> 
3701_0-Useless: []
3701_0-Constancy: [(4, 0)]
3701_0-ContextAliasing: []

.....
-----
Block: 1443_2
1443_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443_2-Stack size: 12 
1443_2-Equals Mem:<< []>> 
1443_2-NonEquals Mem: << [<11,14>]>> 
1443_2-Equals Sto:<< []>> 
1443_2-NonEquals Sto: << []>> 
1443_2-Useless: []
1443_2-Constancy: [(7, 0), (2, 0)]
1443_2-ContextAliasing: []

.....
-----
Block: 4007_2
4007_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007_2-Stack size: 16 
4007_2-Equals Mem:<< []>> 
4007_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007_2-Equals Sto:<< []>> 
4007_2-NonEquals Sto: << []>> 
4007_2-Useless: []
4007_2-Constancy: [(11, 0), (6, 0), (3, 0), (0, 0)]
4007_2-ContextAliasing: []

.....
-----
Block: 4537_20
4537_20Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_20-Stack size: 29 
4537_20-Equals Mem:<< [<11,6>]>> 
4537_20-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_20-Equals Sto:<< []>> 
4537_20-NonEquals Sto: << []>> 
4537_20-Useless: []
4537_20-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_20-ContextAliasing: []

.....
-----
Block: 4912_22
4912_22Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_22-Stack size: 36 
4912_22-Equals Mem:<< []>> 
4912_22-NonEquals Mem: << [<6,1>]>> 
4912_22-Equals Sto:<< []>> 
4912_22-NonEquals Sto: << []>> 
4912_22-Useless: []
4912_22-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_22-ContextAliasing: [(2, 35)]

.....
-----
Block: 5582_36
5582_36Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_36-Stack size: 38 
5582_36-Equals Mem:<< []>> 
5582_36-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_36-Equals Sto:<< []>> 
5582_36-NonEquals Sto: << []>> 
5582_36-Useless: []
5582_36-Constancy: [(33, 0), (28, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_36-ContextAliasing: [(4, 36)]

.....
-----
Block: 5606_36
5606_36Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_36-Stack size: 42 
5606_36-Equals Mem:<< []>> 
5606_36-NonEquals Mem: << [<11,5>]>> 
5606_36-Equals Sto:<< []>> 
5606_36-NonEquals Sto: << []>> 
5606_36-Useless: []
5606_36-Constancy: [(37, 0), (32, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_36-ContextAliasing: [(8, 36)]

.....
-----
Block: 6293_34
6293_34Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_34-Stack size: 40 
6293_34-Equals Mem:<< []>> 
6293_34-NonEquals Mem: << [<4,7>]>> 
6293_34-Equals Sto:<< []>> 
6293_34-NonEquals Sto: << []>> 
6293_34-Useless: []
6293_34-Constancy: [(35, 0), (30, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_34-ContextAliasing: []

.....
-----
Block: 4537_21
4537_21Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_21-Stack size: 24 
4537_21-Equals Mem:<< [<11,6>]>> 
4537_21-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_21-Equals Sto:<< []>> 
4537_21-NonEquals Sto: << []>> 
4537_21-Useless: []
4537_21-Constancy: [(19, 0), (14, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
4537_21-ContextAliasing: []

.....
-----
Block: 4912_21
4912_21Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_21-Stack size: 31 
4912_21-Equals Mem:<< []>> 
4912_21-NonEquals Mem: << [<6,1>]>> 
4912_21-Equals Sto:<< []>> 
4912_21-NonEquals Sto: << []>> 
4912_21-Useless: []
4912_21-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_21-ContextAliasing: [(2, 30)]

.....
-----
Block: 5582_35
5582_35Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_35-Stack size: 33 
5582_35-Equals Mem:<< []>> 
5582_35-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_35-Equals Sto:<< []>> 
5582_35-NonEquals Sto: << []>> 
5582_35-Useless: []
5582_35-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_35-ContextAliasing: [(4, 31)]

.....
-----
Block: 5606_35
5606_35Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_35-Stack size: 37 
5606_35-Equals Mem:<< []>> 
5606_35-NonEquals Mem: << [<11,5>]>> 
5606_35-Equals Sto:<< []>> 
5606_35-NonEquals Sto: << []>> 
5606_35-Useless: []
5606_35-Constancy: [(32, 0), (27, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_35-ContextAliasing: [(8, 31)]

.....
-----
Block: 6293_33
6293_33Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_33-Stack size: 35 
6293_33-Equals Mem:<< []>> 
6293_33-NonEquals Mem: << [<4,7>]>> 
6293_33-Equals Sto:<< []>> 
6293_33-NonEquals Sto: << []>> 
6293_33-Useless: []
6293_33-Constancy: [(30, 0), (25, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_33-ContextAliasing: []

.....
-----
Block: 4537_22
4537_22Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_22-Stack size: 20 
4537_22-Equals Mem:<< [<11,6>]>> 
4537_22-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_22-Equals Sto:<< []>> 
4537_22-NonEquals Sto: << []>> 
4537_22-Useless: []
4537_22-Constancy: [(15, 0), (10, 0), (7, 0), (4, 0)]
4537_22-ContextAliasing: []

.....
-----
Block: 4912_20
4912_20Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_20-Stack size: 27 
4912_20-Equals Mem:<< []>> 
4912_20-NonEquals Mem: << [<6,1>]>> 
4912_20-Equals Sto:<< []>> 
4912_20-NonEquals Sto: << []>> 
4912_20-Useless: []
4912_20-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
4912_20-ContextAliasing: [(2, 26)]

.....
-----
Block: 5582_34
5582_34Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_34-Stack size: 29 
5582_34-Equals Mem:<< []>> 
5582_34-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_34-Equals Sto:<< []>> 
5582_34-NonEquals Sto: << []>> 
5582_34-Useless: []
5582_34-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
5582_34-ContextAliasing: [(4, 27)]

.....
-----
Block: 5606_34
5606_34Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_34-Stack size: 33 
5606_34-Equals Mem:<< []>> 
5606_34-NonEquals Mem: << [<11,5>]>> 
5606_34-Equals Sto:<< []>> 
5606_34-NonEquals Sto: << []>> 
5606_34-Useless: []
5606_34-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_34-ContextAliasing: [(8, 27)]

.....
-----
Block: 6293_32
6293_32Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_32-Stack size: 31 
6293_32-Equals Mem:<< []>> 
6293_32-NonEquals Mem: << [<4,7>]>> 
6293_32-Equals Sto:<< []>> 
6293_32-NonEquals Sto: << []>> 
6293_32-Useless: []
6293_32-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_32-ContextAliasing: []

.....
-----
Block: 6155_2
6155_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6155_2-Stack size: 17 
6155_2-Equals Mem:<< []>> 
6155_2-NonEquals Mem: << [<5,8>]>> 
6155_2-Equals Sto:<< []>> 
6155_2-NonEquals Sto: << []>> 
6155_2-Useless: []
6155_2-Constancy: [(12, 0), (1, 0)]
6155_2-ContextAliasing: [(4, 14)]

.....
-----
Block: 4282_0
4282_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x10de', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
4282_0-Stack size: 17 
4282_0-Equals Mem:<< [<18,6>]>> 
4282_0-NonEquals Mem: << []>> 
4282_0-Equals Sto:<< []>> 
4282_0-NonEquals Sto: << []>> 
4282_0-Useless: []
4282_0-Constancy: [(12, 0)]
4282_0-ContextAliasing: []

.....
-----
Block: 6155_1
6155_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6155_1-Stack size: 17 
6155_1-Equals Mem:<< []>> 
6155_1-NonEquals Mem: << [<5,8>]>> 
6155_1-Equals Sto:<< []>> 
6155_1-NonEquals Sto: << []>> 
6155_1-Useless: []
6155_1-Constancy: [(12, 0)]
6155_1-ContextAliasing: [(4, 14)]

.....
-----
Block: 2593_2
2593_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2593_2-Stack size: 17 
2593_2-Equals Mem:<< []>> 
2593_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2593_2-Equals Sto:<< []>> 
2593_2-NonEquals Sto: << []>> 
2593_2-Useless: []
2593_2-Constancy: [(12, 0)]
2593_2-ContextAliasing: []

.....
-----
Block: 2691_2
2691_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2691_2-Stack size: 17 
2691_2-Equals Mem:<< []>> 
2691_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2691_2-Equals Sto:<< []>> 
2691_2-NonEquals Sto: << []>> 
2691_2-Useless: []
2691_2-Constancy: [(12, 0)]
2691_2-ContextAliasing: []

.....
-----
Block: 4375_0
4375_0Instr:<<['JUMPDEST', 'PUSH1 0x12', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x114f', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x181f', 'JUMP']>> 
4375_0-Stack size: 13 
4375_0-Equals Mem:<< []>> 
4375_0-NonEquals Mem: << [<9,4>]>> 
4375_0-Equals Sto:<< []>> 
4375_0-NonEquals Sto: << []>> 
4375_0-Useless: []
4375_0-Constancy: [(8, 0)]
4375_0-ContextAliasing: []

.....
-----
Block: 6175_0
6175_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6175_0-Stack size: 22 
6175_0-Equals Mem:<< []>> 
6175_0-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
6175_0-Equals Sto:<< []>> 
6175_0-NonEquals Sto: << []>> 
6175_0-Useless: []
6175_0-Constancy: [(17, 0), (4, 0)]
6175_0-ContextAliasing: [(9, 18)]

.....
-----
Block: 6225_0
6225_0Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1848', 'JUMP']>> 
6225_0-Stack size: 28 
6225_0-Equals Mem:<< []>> 
6225_0-NonEquals Mem: << [<9,1>]>> 
6225_0-Equals Sto:<< []>> 
6225_0-NonEquals Sto: << []>> 
6225_0-Useless: []
6225_0-Constancy: [(23, 0), (10, 0), (5, 0), (3, 32)]
6225_0-ContextAliasing: [(15, 18)]

.....
-----
Block: 4537_14
4537_14Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_14-Stack size: 45 
4537_14-Equals Mem:<< [<11,6>]>> 
4537_14-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_14-Equals Sto:<< []>> 
4537_14-NonEquals Sto: << []>> 
4537_14-Useless: []
4537_14-Constancy: [(40, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (6, 0), (5, 0), (4, 0), (3, 0)]
4537_14-ContextAliasing: []

.....
-----
Block: 4912_19
4912_19Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_19-Stack size: 52 
4912_19-Equals Mem:<< []>> 
4912_19-NonEquals Mem: << [<6,1>]>> 
4912_19-Equals Sto:<< []>> 
4912_19-NonEquals Sto: << []>> 
4912_19-Useless: []
4912_19-Constancy: [(47, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
4912_19-ContextAliasing: [(2, 51)]

.....
-----
Block: 5582_33
5582_33Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_33-Stack size: 54 
5582_33-Equals Mem:<< []>> 
5582_33-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_33-Equals Sto:<< []>> 
5582_33-NonEquals Sto: << []>> 
5582_33-Useless: []
5582_33-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (8, 0), (3, 0)]
5582_33-ContextAliasing: [(4, 52)]

.....
-----
Block: 5606_33
5606_33Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_33-Stack size: 58 
5606_33-Equals Mem:<< []>> 
5606_33-NonEquals Mem: << [<11,5>]>> 
5606_33-Equals Sto:<< []>> 
5606_33-NonEquals Sto: << []>> 
5606_33-Useless: []
5606_33-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_33-ContextAliasing: [(8, 52)]

.....
-----
Block: 6293_30
6293_30Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_30-Stack size: 56 
6293_30-Equals Mem:<< []>> 
6293_30-NonEquals Mem: << [<4,7>]>> 
6293_30-Equals Sto:<< []>> 
6293_30-NonEquals Sto: << []>> 
6293_30-Useless: []
6293_30-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_30-ContextAliasing: []

.....
-----
Block: 4537_15
4537_15Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_15-Stack size: 46 
4537_15-Equals Mem:<< [<11,6>]>> 
4537_15-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_15-Equals Sto:<< []>> 
4537_15-NonEquals Sto: << []>> 
4537_15-Useless: []
4537_15-Constancy: [(41, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
4537_15-ContextAliasing: []

.....
-----
Block: 4912_18
4912_18Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_18-Stack size: 53 
4912_18-Equals Mem:<< []>> 
4912_18-NonEquals Mem: << [<6,1>]>> 
4912_18-Equals Sto:<< []>> 
4912_18-NonEquals Sto: << []>> 
4912_18-Useless: []
4912_18-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
4912_18-ContextAliasing: [(2, 52)]

.....
-----
Block: 5582_32
5582_32Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_32-Stack size: 55 
5582_32-Equals Mem:<< []>> 
5582_32-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_32-Equals Sto:<< []>> 
5582_32-NonEquals Sto: << []>> 
5582_32-Useless: []
5582_32-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
5582_32-ContextAliasing: [(4, 53)]

.....
-----
Block: 5606_32
5606_32Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_32-Stack size: 59 
5606_32-Equals Mem:<< []>> 
5606_32-NonEquals Mem: << [<11,5>]>> 
5606_32-Equals Sto:<< []>> 
5606_32-NonEquals Sto: << []>> 
5606_32-Useless: []
5606_32-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_32-ContextAliasing: [(8, 53)]

.....
-----
Block: 6293_28
6293_28Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_28-Stack size: 57 
6293_28-Equals Mem:<< []>> 
6293_28-NonEquals Mem: << [<4,7>]>> 
6293_28-Equals Sto:<< []>> 
6293_28-NonEquals Sto: << []>> 
6293_28-Useless: []
6293_28-Constancy: [(52, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_28-ContextAliasing: []

.....
-----
Block: 5033_5
5033_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_5-Stack size: 49 
5033_5-Equals Mem:<< [<11,6>]>> 
5033_5-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_5-Equals Sto:<< []>> 
5033_5-NonEquals Sto: << []>> 
5033_5-Useless: []
5033_5-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (5, 0)]
5033_5-ContextAliasing: []

.....
-----
Block: 3895_11
3895_11Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_11-Stack size: 56 
3895_11-Equals Mem:<< []>> 
3895_11-NonEquals Mem: << [<6,1>]>> 
3895_11-Equals Sto:<< []>> 
3895_11-NonEquals Sto: << []>> 
3895_11-Useless: []
3895_11-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
3895_11-ContextAliasing: [(2, 55)]

.....
-----
Block: 5582_31
5582_31Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_31-Stack size: 58 
5582_31-Equals Mem:<< []>> 
5582_31-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_31-Equals Sto:<< []>> 
5582_31-NonEquals Sto: << []>> 
5582_31-Useless: []
5582_31-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (14, 0), (8, 0), (3, 0)]
5582_31-ContextAliasing: [(4, 56)]

.....
-----
Block: 5606_31
5606_31Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_31-Stack size: 62 
5606_31-Equals Mem:<< []>> 
5606_31-NonEquals Mem: << [<11,5>]>> 
5606_31-Equals Sto:<< []>> 
5606_31-NonEquals Sto: << []>> 
5606_31-Useless: []
5606_31-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_31-ContextAliasing: [(8, 56)]

.....
-----
Block: 6076_30
6076_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_30-Stack size: 61 
6076_30-Equals Mem:<< []>> 
6076_30-NonEquals Mem: << [<5,8>]>> 
6076_30-Equals Sto:<< []>> 
6076_30-NonEquals Sto: << []>> 
6076_30-Useless: []
6076_30-Constancy: [(56, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
6076_30-ContextAliasing: []

.....
-----
Block: 5033_6
5033_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_6-Stack size: 47 
5033_6-Equals Mem:<< [<11,6>]>> 
5033_6-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_6-Equals Sto:<< []>> 
5033_6-NonEquals Sto: << []>> 
5033_6-Useless: []
5033_6-Constancy: [(42, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (8, 0), (7, 0), (6, 0), (3, 0)]
5033_6-ContextAliasing: []

.....
-----
Block: 3895_10
3895_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_10-Stack size: 54 
3895_10-Equals Mem:<< []>> 
3895_10-NonEquals Mem: << [<6,1>]>> 
3895_10-Equals Sto:<< []>> 
3895_10-NonEquals Sto: << []>> 
3895_10-Useless: []
3895_10-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
3895_10-ContextAliasing: [(2, 53)]

.....
-----
Block: 5582_30
5582_30Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_30-Stack size: 56 
5582_30-Equals Mem:<< []>> 
5582_30-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_30-Equals Sto:<< []>> 
5582_30-NonEquals Sto: << []>> 
5582_30-Useless: []
5582_30-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (8, 0), (3, 0)]
5582_30-ContextAliasing: [(4, 54)]

.....
-----
Block: 5606_30
5606_30Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_30-Stack size: 60 
5606_30-Equals Mem:<< []>> 
5606_30-NonEquals Mem: << [<11,5>]>> 
5606_30-Equals Sto:<< []>> 
5606_30-NonEquals Sto: << []>> 
5606_30-Useless: []
5606_30-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_30-ContextAliasing: [(8, 54)]

.....
-----
Block: 6076_29
6076_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_29-Stack size: 59 
6076_29-Equals Mem:<< []>> 
6076_29-NonEquals Mem: << [<5,8>]>> 
6076_29-Equals Sto:<< []>> 
6076_29-NonEquals Sto: << []>> 
6076_29-Useless: []
6076_29-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
6076_29-ContextAliasing: []

.....
-----
Block: 4537_16
4537_16Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_16-Stack size: 47 
4537_16-Equals Mem:<< [<11,6>]>> 
4537_16-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_16-Equals Sto:<< []>> 
4537_16-NonEquals Sto: << []>> 
4537_16-Useless: []
4537_16-Constancy: [(42, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_16-ContextAliasing: []

.....
-----
Block: 4912_17
4912_17Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_17-Stack size: 54 
4912_17-Equals Mem:<< []>> 
4912_17-NonEquals Mem: << [<6,1>]>> 
4912_17-Equals Sto:<< []>> 
4912_17-NonEquals Sto: << []>> 
4912_17-Useless: []
4912_17-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_17-ContextAliasing: [(2, 53)]

.....
-----
Block: 5582_29
5582_29Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_29-Stack size: 56 
5582_29-Equals Mem:<< []>> 
5582_29-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_29-Equals Sto:<< []>> 
5582_29-NonEquals Sto: << []>> 
5582_29-Useless: []
5582_29-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_29-ContextAliasing: [(4, 54)]

.....
-----
Block: 5606_29
5606_29Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_29-Stack size: 60 
5606_29-Equals Mem:<< []>> 
5606_29-NonEquals Mem: << [<11,5>]>> 
5606_29-Equals Sto:<< []>> 
5606_29-NonEquals Sto: << []>> 
5606_29-Useless: []
5606_29-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_29-ContextAliasing: [(8, 54)]

.....
-----
Block: 6293_27
6293_27Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_27-Stack size: 58 
6293_27-Equals Mem:<< []>> 
6293_27-NonEquals Mem: << [<4,7>]>> 
6293_27-Equals Sto:<< []>> 
6293_27-NonEquals Sto: << []>> 
6293_27-Useless: []
6293_27-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_27-ContextAliasing: []

.....
-----
Block: 4537_17
4537_17Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_17-Stack size: 42 
4537_17-Equals Mem:<< [<11,6>]>> 
4537_17-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_17-Equals Sto:<< []>> 
4537_17-NonEquals Sto: << []>> 
4537_17-Useless: []
4537_17-Constancy: [(37, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (7, 0), (5, 0)]
4537_17-ContextAliasing: []

.....
-----
Block: 4912_16
4912_16Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_16-Stack size: 49 
4912_16-Equals Mem:<< []>> 
4912_16-NonEquals Mem: << [<6,1>]>> 
4912_16-Equals Sto:<< []>> 
4912_16-NonEquals Sto: << []>> 
4912_16-Useless: []
4912_16-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_16-ContextAliasing: [(2, 48)]

.....
-----
Block: 5582_28
5582_28Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_28-Stack size: 51 
5582_28-Equals Mem:<< []>> 
5582_28-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_28-Equals Sto:<< []>> 
5582_28-NonEquals Sto: << []>> 
5582_28-Useless: []
5582_28-Constancy: [(46, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_28-ContextAliasing: [(4, 49)]

.....
-----
Block: 5606_28
5606_28Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_28-Stack size: 55 
5606_28-Equals Mem:<< []>> 
5606_28-NonEquals Mem: << [<11,5>]>> 
5606_28-Equals Sto:<< []>> 
5606_28-NonEquals Sto: << []>> 
5606_28-Useless: []
5606_28-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_28-ContextAliasing: [(8, 49)]

.....
-----
Block: 6293_26
6293_26Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_26-Stack size: 53 
6293_26-Equals Mem:<< []>> 
6293_26-NonEquals Mem: << [<4,7>]>> 
6293_26-Equals Sto:<< []>> 
6293_26-NonEquals Sto: << []>> 
6293_26-Useless: []
6293_26-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_26-ContextAliasing: []

.....
-----
Block: 5033_7
5033_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_7-Stack size: 55 
5033_7-Equals Mem:<< [<11,6>]>> 
5033_7-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_7-Equals Sto:<< []>> 
5033_7-NonEquals Sto: << []>> 
5033_7-Useless: []
5033_7-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (5, 0)]
5033_7-ContextAliasing: []

.....
-----
Block: 3895_9
3895_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_9-Stack size: 62 
3895_9-Equals Mem:<< []>> 
3895_9-NonEquals Mem: << [<6,1>]>> 
3895_9-Equals Sto:<< []>> 
3895_9-NonEquals Sto: << []>> 
3895_9-Useless: []
3895_9-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
3895_9-ContextAliasing: [(2, 61)]

.....
-----
Block: 5582_27
5582_27Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_27-Stack size: 64 
5582_27-Equals Mem:<< []>> 
5582_27-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_27-Equals Sto:<< []>> 
5582_27-NonEquals Sto: << []>> 
5582_27-Useless: []
5582_27-Constancy: [(59, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (28, 0), (27, 0), (26, 0), (20, 0), (19, 0), (18, 0), (14, 0), (8, 0), (3, 0)]
5582_27-ContextAliasing: [(4, 62)]

.....
-----
Block: 5606_27
5606_27Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_27-Stack size: 68 
5606_27-Equals Mem:<< []>> 
5606_27-NonEquals Mem: << [<11,5>]>> 
5606_27-Equals Sto:<< []>> 
5606_27-NonEquals Sto: << []>> 
5606_27-Useless: []
5606_27-Constancy: [(63, 0), (50, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (32, 0), (31, 0), (30, 0), (24, 0), (23, 0), (22, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_27-ContextAliasing: [(8, 62)]

.....
-----
Block: 6076_25
6076_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_25-Stack size: 67 
6076_25-Equals Mem:<< []>> 
6076_25-NonEquals Mem: << [<5,8>]>> 
6076_25-Equals Sto:<< []>> 
6076_25-NonEquals Sto: << []>> 
6076_25-Useless: []
6076_25-Constancy: [(62, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (31, 0), (30, 0), (29, 0), (23, 0), (22, 0), (21, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
6076_25-ContextAliasing: []

.....
-----
Block: 5033_8
5033_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_8-Stack size: 53 
5033_8-Equals Mem:<< [<11,6>]>> 
5033_8-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_8-Equals Sto:<< []>> 
5033_8-NonEquals Sto: << []>> 
5033_8-Useless: []
5033_8-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (3, 0)]
5033_8-ContextAliasing: []

.....
-----
Block: 3895_8
3895_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_8-Stack size: 60 
3895_8-Equals Mem:<< []>> 
3895_8-NonEquals Mem: << [<6,1>]>> 
3895_8-Equals Sto:<< []>> 
3895_8-NonEquals Sto: << []>> 
3895_8-Useless: []
3895_8-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
3895_8-ContextAliasing: [(2, 59)]

.....
-----
Block: 5582_26
5582_26Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_26-Stack size: 62 
5582_26-Equals Mem:<< []>> 
5582_26-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_26-Equals Sto:<< []>> 
5582_26-NonEquals Sto: << []>> 
5582_26-Useless: []
5582_26-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (8, 0), (3, 0)]
5582_26-ContextAliasing: [(4, 60)]

.....
-----
Block: 5606_26
5606_26Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_26-Stack size: 66 
5606_26-Equals Mem:<< []>> 
5606_26-NonEquals Mem: << [<11,5>]>> 
5606_26-Equals Sto:<< []>> 
5606_26-NonEquals Sto: << []>> 
5606_26-Useless: []
5606_26-Constancy: [(61, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (30, 0), (29, 0), (28, 0), (22, 0), (21, 0), (20, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_26-ContextAliasing: [(8, 60)]

.....
-----
Block: 6076_24
6076_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_24-Stack size: 65 
6076_24-Equals Mem:<< []>> 
6076_24-NonEquals Mem: << [<5,8>]>> 
6076_24-Equals Sto:<< []>> 
6076_24-NonEquals Sto: << []>> 
6076_24-Useless: []
6076_24-Constancy: [(60, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (29, 0), (28, 0), (27, 0), (21, 0), (20, 0), (19, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
6076_24-ContextAliasing: []

.....
-----
Block: 4617_0
4617_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP16', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP6', 'SWAP12', 'POP', 'SWAP4', 'SWAP10', 'POP', 'SWAP2', 'SWAP8', 'POP', 'SWAP6', 'POP', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x123a', 'SWAP1', 'DUP8', 'PUSH2 0x13a9', 'JUMP']>> 
4617_0-Stack size: 29 
4617_0-Equals Mem:<< []>> 
4617_0-NonEquals Mem: << [<11,14>]>> 
4617_0-Equals Sto:<< []>> 
4617_0-NonEquals Sto: << []>> 
4617_0-Useless: []
4617_0-Constancy: [(24, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0)]
4617_0-ContextAliasing: []

.....
-----
Block: 5033_9
5033_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_9-Stack size: 26 
5033_9-Equals Mem:<< [<11,6>]>> 
5033_9-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_9-Equals Sto:<< []>> 
5033_9-NonEquals Sto: << []>> 
5033_9-Useless: []
5033_9-Constancy: [(21, 0)]
5033_9-ContextAliasing: []

.....
-----
Block: 3895_7
3895_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_7-Stack size: 33 
3895_7-Equals Mem:<< []>> 
3895_7-NonEquals Mem: << [<6,1>]>> 
3895_7-Equals Sto:<< []>> 
3895_7-NonEquals Sto: << []>> 
3895_7-Useless: []
3895_7-Constancy: [(28, 0), (6, 0), (1, 0)]
3895_7-ContextAliasing: [(2, 32)]

.....
-----
Block: 5582_25
5582_25Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_25-Stack size: 35 
5582_25-Equals Mem:<< []>> 
5582_25-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_25-Equals Sto:<< []>> 
5582_25-NonEquals Sto: << []>> 
5582_25-Useless: []
5582_25-Constancy: [(30, 0), (8, 0), (3, 0)]
5582_25-ContextAliasing: [(4, 33)]

.....
-----
Block: 5606_25
5606_25Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_25-Stack size: 39 
5606_25-Equals Mem:<< []>> 
5606_25-NonEquals Mem: << [<11,5>]>> 
5606_25-Equals Sto:<< []>> 
5606_25-NonEquals Sto: << []>> 
5606_25-Useless: []
5606_25-Constancy: [(34, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_25-ContextAliasing: [(8, 33)]

.....
-----
Block: 6076_23
6076_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_23-Stack size: 38 
6076_23-Equals Mem:<< []>> 
6076_23-NonEquals Mem: << [<5,8>]>> 
6076_23-Equals Sto:<< []>> 
6076_23-NonEquals Sto: << []>> 
6076_23-Useless: []
6076_23-Constancy: [(33, 0), (11, 0), (6, 0), (5, 0)]
6076_23-ContextAliasing: []

.....
-----
Block: 4666_0
4666_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP12', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP11', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1268', 'SWAP1', 'DUP7', 'PUSH2 0x13ea', 'JUMP']>> 
4666_0-Stack size: 24 
4666_0-Equals Mem:<< [<12,28>]>> 
4666_0-NonEquals Mem: << [<12,15>, <15,28>]>> 
4666_0-Equals Sto:<< [<23,30>]>> 
4666_0-NonEquals Sto: << []>> 
4666_0-Useless: []
4666_0-Constancy: [(19, 0)]
4666_0-ContextAliasing: []

.....
-----
Block: 6076_22
6076_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_22-Stack size: 33 
6076_22-Equals Mem:<< []>> 
6076_22-NonEquals Mem: << [<5,8>]>> 
6076_22-Equals Sto:<< []>> 
6076_22-NonEquals Sto: << []>> 
6076_22-Useless: []
6076_22-Constancy: [(28, 0), (6, 0), (5, 0)]
6076_22-ContextAliasing: []

.....
-----
Block: 5121_4
5121_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5121_4-Stack size: 28 
5121_4-Equals Mem:<< []>> 
5121_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5121_4-Equals Sto:<< []>> 
5121_4-NonEquals Sto: << []>> 
5121_4-Useless: []
5121_4-Constancy: [(23, 0), (1, 0)]
5121_4-ContextAliasing: []

.....
-----
Block: 4712_0
4712_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP10', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1289', 'DUP2', 'PUSH2 0x1448', 'JUMP']>> 
4712_0-Stack size: 24 
4712_0-Equals Mem:<< []>> 
4712_0-NonEquals Mem: << [<11,14>]>> 
4712_0-Equals Sto:<< []>> 
4712_0-NonEquals Sto: << []>> 
4712_0-Useless: []
4712_0-Constancy: [(19, 0)]
4712_0-ContextAliasing: []

.....
-----
Block: 4537_18
4537_18Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_18-Stack size: 38 
4537_18-Equals Mem:<< [<11,6>]>> 
4537_18-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_18-Equals Sto:<< []>> 
4537_18-NonEquals Sto: << []>> 
4537_18-Useless: []
4537_18-Constancy: [(33, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_18-ContextAliasing: []

.....
-----
Block: 4912_15
4912_15Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_15-Stack size: 45 
4912_15-Equals Mem:<< []>> 
4912_15-NonEquals Mem: << [<6,1>]>> 
4912_15-Equals Sto:<< []>> 
4912_15-NonEquals Sto: << []>> 
4912_15-Useless: []
4912_15-Constancy: [(40, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_15-ContextAliasing: [(2, 44)]

.....
-----
Block: 5582_24
5582_24Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_24-Stack size: 47 
5582_24-Equals Mem:<< []>> 
5582_24-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_24-Equals Sto:<< []>> 
5582_24-NonEquals Sto: << []>> 
5582_24-Useless: []
5582_24-Constancy: [(42, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_24-ContextAliasing: [(4, 45)]

.....
-----
Block: 5606_24
5606_24Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_24-Stack size: 51 
5606_24-Equals Mem:<< []>> 
5606_24-NonEquals Mem: << [<11,5>]>> 
5606_24-Equals Sto:<< []>> 
5606_24-NonEquals Sto: << []>> 
5606_24-Useless: []
5606_24-Constancy: [(46, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_24-ContextAliasing: [(8, 45)]

.....
-----
Block: 6293_22
6293_22Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_22-Stack size: 49 
6293_22-Equals Mem:<< []>> 
6293_22-NonEquals Mem: << [<4,7>]>> 
6293_22-Equals Sto:<< []>> 
6293_22-NonEquals Sto: << []>> 
6293_22-Useless: []
6293_22-Constancy: [(44, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_22-ContextAliasing: []

.....
-----
Block: 4537_19
4537_19Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_19-Stack size: 33 
4537_19-Equals Mem:<< [<11,6>]>> 
4537_19-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_19-Equals Sto:<< []>> 
4537_19-NonEquals Sto: << []>> 
4537_19-Useless: []
4537_19-Constancy: [(28, 0), (7, 0), (5, 0)]
4537_19-ContextAliasing: []

.....
-----
Block: 4912_14
4912_14Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_14-Stack size: 40 
4912_14-Equals Mem:<< []>> 
4912_14-NonEquals Mem: << [<6,1>]>> 
4912_14-Equals Sto:<< []>> 
4912_14-NonEquals Sto: << []>> 
4912_14-Useless: []
4912_14-Constancy: [(35, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_14-ContextAliasing: [(2, 39)]

.....
-----
Block: 5582_23
5582_23Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_23-Stack size: 42 
5582_23-Equals Mem:<< []>> 
5582_23-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_23-Equals Sto:<< []>> 
5582_23-NonEquals Sto: << []>> 
5582_23-Useless: []
5582_23-Constancy: [(37, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_23-ContextAliasing: [(4, 40)]

.....
-----
Block: 5606_23
5606_23Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_23-Stack size: 46 
5606_23-Equals Mem:<< []>> 
5606_23-NonEquals Mem: << [<11,5>]>> 
5606_23-Equals Sto:<< []>> 
5606_23-NonEquals Sto: << []>> 
5606_23-Useless: []
5606_23-Constancy: [(41, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_23-ContextAliasing: [(8, 40)]

.....
-----
Block: 6293_21
6293_21Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_21-Stack size: 44 
6293_21-Equals Mem:<< []>> 
6293_21-NonEquals Mem: << [<4,7>]>> 
6293_21-Equals Sto:<< []>> 
6293_21-NonEquals Sto: << []>> 
6293_21-Useless: []
6293_21-Constancy: [(39, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_21-ContextAliasing: []

.....
-----
Block: 5214_0
5214_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH2 0x147a', 'SWAP1', 'DUP3', 'PUSH2 0x13ea', 'JUMP']>> 
5214_0-Stack size: 28 
5214_0-Equals Mem:<< []>> 
5214_0-NonEquals Mem: << [<5,8>]>> 
5214_0-Equals Sto:<< []>> 
5214_0-NonEquals Sto: << []>> 
5214_0-Useless: []
5214_0-Constancy: [(23, 0), (1, 0)]
5214_0-ContextAliasing: []

.....
-----
Block: 6076_20
6076_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_20-Stack size: 37 
6076_20-Equals Mem:<< []>> 
6076_20-NonEquals Mem: << [<5,8>]>> 
6076_20-Equals Sto:<< []>> 
6076_20-NonEquals Sto: << []>> 
6076_20-Useless: []
6076_20-Constancy: [(32, 0), (6, 0), (5, 0)]
6076_20-ContextAliasing: []

.....
-----
Block: 5121_3
5121_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5121_3-Stack size: 32 
5121_3-Equals Mem:<< []>> 
5121_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5121_3-Equals Sto:<< []>> 
5121_3-NonEquals Sto: << []>> 
5121_3-Useless: []
5121_3-Constancy: [(27, 0), (1, 0)]
5121_3-ContextAliasing: []

.....
-----
Block: 5242_0
5242_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'POP', 'POP', 'POP', 'JUMP']>> 
5242_0-Stack size: 28 
5242_0-Equals Mem:<< []>> 
5242_0-NonEquals Mem: << [<5,8>]>> 
5242_0-Equals Sto:<< []>> 
5242_0-NonEquals Sto: << []>> 
5242_0-Useless: []
5242_0-Constancy: [(23, 0)]
5242_0-ContextAliasing: []

.....
-----
Block: 5033_10
5033_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_10-Stack size: 29 
5033_10-Equals Mem:<< [<11,6>]>> 
5033_10-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_10-Equals Sto:<< []>> 
5033_10-NonEquals Sto: << []>> 
5033_10-Useless: []
5033_10-Constancy: [(24, 0)]
5033_10-ContextAliasing: []

.....
-----
Block: 3895_6
3895_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_6-Stack size: 36 
3895_6-Equals Mem:<< []>> 
3895_6-NonEquals Mem: << [<6,1>]>> 
3895_6-Equals Sto:<< []>> 
3895_6-NonEquals Sto: << []>> 
3895_6-Useless: []
3895_6-Constancy: [(31, 0), (6, 0), (1, 0)]
3895_6-ContextAliasing: [(2, 35)]

.....
-----
Block: 5582_22
5582_22Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_22-Stack size: 38 
5582_22-Equals Mem:<< []>> 
5582_22-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_22-Equals Sto:<< []>> 
5582_22-NonEquals Sto: << []>> 
5582_22-Useless: []
5582_22-Constancy: [(33, 0), (8, 0), (3, 0)]
5582_22-ContextAliasing: [(4, 36)]

.....
-----
Block: 5606_22
5606_22Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_22-Stack size: 42 
5606_22-Equals Mem:<< []>> 
5606_22-NonEquals Mem: << [<11,5>]>> 
5606_22-Equals Sto:<< []>> 
5606_22-NonEquals Sto: << []>> 
5606_22-Useless: []
5606_22-Constancy: [(37, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_22-ContextAliasing: [(8, 36)]

.....
-----
Block: 6076_19
6076_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_19-Stack size: 41 
6076_19-Equals Mem:<< []>> 
6076_19-NonEquals Mem: << [<5,8>]>> 
6076_19-Equals Sto:<< []>> 
6076_19-NonEquals Sto: << []>> 
6076_19-Useless: []
6076_19-Constancy: [(36, 0), (11, 0), (6, 0), (5, 0)]
6076_19-ContextAliasing: []

.....
-----
Block: 6076_18
6076_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_18-Stack size: 36 
6076_18-Equals Mem:<< []>> 
6076_18-NonEquals Mem: << [<5,8>]>> 
6076_18-Equals Sto:<< []>> 
6076_18-NonEquals Sto: << []>> 
6076_18-Useless: []
6076_18-Constancy: [(31, 0), (6, 0), (5, 0)]
6076_18-ContextAliasing: []

.....
-----
Block: 5121_2
5121_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5121_2-Stack size: 31 
5121_2-Equals Mem:<< []>> 
5121_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5121_2-Equals Sto:<< []>> 
5121_2-NonEquals Sto: << []>> 
5121_2-Useless: []
5121_2-Constancy: [(26, 0), (1, 0)]
5121_2-ContextAliasing: []

.....
-----
Block: 4755_0
4755_0Instr:<<['JUMPDEST', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP10', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP6', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x12d8', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
4755_0-Stack size: 23 
4755_0-Equals Mem:<< []>> 
4755_0-NonEquals Mem: << [<22,18>]>> 
4755_0-Equals Sto:<< []>> 
4755_0-NonEquals Sto: << []>> 
4755_0-Useless: []
4755_0-Constancy: [(18, 0)]
4755_0-ContextAliasing: []

.....
-----
Block: 398
398Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
398-Stack size: 2 
398-Equals Mem:<< []>> 
398-NonEquals Mem: << [<7,2>]>> 
398-Equals Sto:<< []>> 
398-NonEquals Sto: << []>> 
398-Useless: []
398-Constancy: []
398-ContextAliasing: []

.....
-----
Block: 6076_21
6076_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_21-Stack size: 37 
6076_21-Equals Mem:<< []>> 
6076_21-NonEquals Mem: << [<5,8>]>> 
6076_21-Equals Sto:<< []>> 
6076_21-NonEquals Sto: << []>> 
6076_21-Useless: []
6076_21-Constancy: [(32, 0), (10, 0), (6, 0), (5, 0)]
6076_21-ContextAliasing: []

.....
-----
Block: 6293_20
6293_20Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_20-Stack size: 37 
6293_20-Equals Mem:<< []>> 
6293_20-NonEquals Mem: << [<4,7>]>> 
6293_20-Equals Sto:<< []>> 
6293_20-NonEquals Sto: << []>> 
6293_20-Useless: []
6293_20-Constancy: [(32, 0), (10, 0), (6, 0), (0, 0)]
6293_20-ContextAliasing: []

.....
-----
Block: 5501_5
5501_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_5-Stack size: 32 
5501_5-Equals Mem:<< []>> 
5501_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_5-Equals Sto:<< []>> 
5501_5-NonEquals Sto: << []>> 
5501_5-Useless: []
5501_5-Constancy: [(27, 0), (5, 0), (1, 0)]
5501_5-ContextAliasing: []

.....
-----
Block: 6076_26
6076_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_26-Stack size: 59 
6076_26-Equals Mem:<< []>> 
6076_26-NonEquals Mem: << [<5,8>]>> 
6076_26-Equals Sto:<< []>> 
6076_26-NonEquals Sto: << []>> 
6076_26-Useless: []
6076_26-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (5, 0)]
6076_26-ContextAliasing: []

.....
-----
Block: 6293_23
6293_23Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_23-Stack size: 59 
6293_23-Equals Mem:<< []>> 
6293_23-NonEquals Mem: << [<4,7>]>> 
6293_23-Equals Sto:<< []>> 
6293_23-NonEquals Sto: << []>> 
6293_23-Useless: []
6293_23-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (0, 0)]
6293_23-ContextAliasing: []

.....
-----
Block: 5501_6
5501_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_6-Stack size: 54 
5501_6-Equals Mem:<< []>> 
5501_6-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_6-Equals Sto:<< []>> 
5501_6-NonEquals Sto: << []>> 
5501_6-Useless: []
5501_6-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (5, 0), (1, 0)]
5501_6-ContextAliasing: []

.....
-----
Block: 6076_27
6076_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_27-Stack size: 58 
6076_27-Equals Mem:<< []>> 
6076_27-NonEquals Mem: << [<5,8>]>> 
6076_27-Equals Sto:<< []>> 
6076_27-NonEquals Sto: << []>> 
6076_27-Useless: []
6076_27-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (5, 0)]
6076_27-ContextAliasing: []

.....
-----
Block: 6293_24
6293_24Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_24-Stack size: 58 
6293_24-Equals Mem:<< []>> 
6293_24-NonEquals Mem: << [<4,7>]>> 
6293_24-Equals Sto:<< []>> 
6293_24-NonEquals Sto: << []>> 
6293_24-Useless: []
6293_24-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (0, 0)]
6293_24-ContextAliasing: []

.....
-----
Block: 5501_7
5501_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_7-Stack size: 53 
5501_7-Equals Mem:<< []>> 
5501_7-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_7-Equals Sto:<< []>> 
5501_7-NonEquals Sto: << []>> 
5501_7-Useless: []
5501_7-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (5, 0), (1, 0)]
5501_7-ContextAliasing: []

.....
-----
Block: 6076_28
6076_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_28-Stack size: 57 
6076_28-Equals Mem:<< []>> 
6076_28-NonEquals Mem: << [<5,8>]>> 
6076_28-Equals Sto:<< []>> 
6076_28-NonEquals Sto: << []>> 
6076_28-Useless: []
6076_28-Constancy: [(52, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (5, 0)]
6076_28-ContextAliasing: []

.....
-----
Block: 6293_25
6293_25Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_25-Stack size: 57 
6293_25-Equals Mem:<< []>> 
6293_25-NonEquals Mem: << [<4,7>]>> 
6293_25-Equals Sto:<< []>> 
6293_25-NonEquals Sto: << []>> 
6293_25-Useless: []
6293_25-Constancy: [(52, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (0, 0)]
6293_25-ContextAliasing: []

.....
-----
Block: 5501_8
5501_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_8-Stack size: 52 
5501_8-Equals Mem:<< []>> 
5501_8-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_8-Equals Sto:<< []>> 
5501_8-NonEquals Sto: << []>> 
5501_8-Useless: []
5501_8-Constancy: [(47, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (8, 0), (7, 0), (6, 0), (5, 0), (1, 0)]
5501_8-ContextAliasing: []

.....
-----
Block: 6076_31
6076_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_31-Stack size: 55 
6076_31-Equals Mem:<< []>> 
6076_31-NonEquals Mem: << [<5,8>]>> 
6076_31-Equals Sto:<< []>> 
6076_31-NonEquals Sto: << []>> 
6076_31-Useless: []
6076_31-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (5, 0)]
6076_31-ContextAliasing: []

.....
-----
Block: 6293_29
6293_29Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_29-Stack size: 55 
6293_29-Equals Mem:<< []>> 
6293_29-NonEquals Mem: << [<4,7>]>> 
6293_29-Equals Sto:<< []>> 
6293_29-NonEquals Sto: << []>> 
6293_29-Useless: []
6293_29-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (0, 0)]
6293_29-ContextAliasing: []

.....
-----
Block: 5501_9
5501_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_9-Stack size: 50 
5501_9-Equals Mem:<< []>> 
5501_9-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_9-Equals Sto:<< []>> 
5501_9-NonEquals Sto: << []>> 
5501_9-Useless: []
5501_9-Constancy: [(45, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (7, 0), (1, 0)]
5501_9-ContextAliasing: []

.....
-----
Block: 6076_32
6076_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_32-Stack size: 54 
6076_32-Equals Mem:<< []>> 
6076_32-NonEquals Mem: << [<5,8>]>> 
6076_32-Equals Sto:<< []>> 
6076_32-NonEquals Sto: << []>> 
6076_32-Useless: []
6076_32-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (5, 0)]
6076_32-ContextAliasing: []

.....
-----
Block: 6293_31
6293_31Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_31-Stack size: 54 
6293_31-Equals Mem:<< []>> 
6293_31-NonEquals Mem: << [<4,7>]>> 
6293_31-Equals Sto:<< []>> 
6293_31-NonEquals Sto: << []>> 
6293_31-Useless: []
6293_31-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (0, 0)]
6293_31-ContextAliasing: []

.....
-----
Block: 5501_10
5501_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_10-Stack size: 49 
5501_10-Equals Mem:<< []>> 
5501_10-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_10-Equals Sto:<< []>> 
5501_10-NonEquals Sto: << []>> 
5501_10-Useless: []
5501_10-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (7, 0), (1, 0)]
5501_10-ContextAliasing: []

.....
-----
Block: 763
763Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x05', 'DUP2', 'MSTORE', 'PUSH5 0x05452554d5', 'PUSH1 0xdc', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x0159', 'JUMP']>> 
763-Stack size: 2 
763-Equals Mem:<< [<10,4>]>> 
763-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
763-Equals Sto:<< []>> 
763-NonEquals Sto: << []>> 
763-Useless: []
763-Constancy: []
763-ContextAliasing: []

.....
-----
Block: 5582
5582Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582-Stack size: 4 
5582-Equals Mem:<< []>> 
5582-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
5582-Equals Sto:<< []>> 
5582-NonEquals Sto: << []>> 
5582-Useless: []
5582-Constancy: []
5582-ContextAliasing: []

.....
-----
Block: 5606
5606Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606-Stack size: 8 
5606-Equals Mem:<< []>> 
5606-NonEquals Mem: << [<11,5>]>> 
5606-Equals Sto:<< []>> 
5606-NonEquals Sto: << []>> 
5606-Useless: []
5606-Constancy: [(3, 0), (2, 32)]
5606-ContextAliasing: []

.....
-----
Block: 725
725Instr:<<['JUMPDEST', 'POP', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
725-Stack size: 2 
725-Equals Mem:<< []>> 
725-NonEquals Mem: << [<15,5>]>> 
725-Equals Sto:<< []>> 
725-NonEquals Sto: << []>> 
725-Useless: []
725-Constancy: []
725-ContextAliasing: []

.....
-----
Block: 1607
1607Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1607-Stack size: 2 
1607-Equals Mem:<< []>> 
1607-NonEquals Mem: << [<6,1>]>> 
1607-Equals Sto:<< []>> 
1607-NonEquals Sto: << []>> 
1607-Useless: []
1607-Constancy: []
1607-ContextAliasing: []

.....
-----
Block: 1494
1494Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1494-Stack size: 2 
1494-Equals Mem:<< []>> 
1494-NonEquals Mem: << [<6,1>]>> 
1494-Equals Sto:<< []>> 
1494-NonEquals Sto: << []>> 
1494-Useless: []
1494-Constancy: []
1494-ContextAliasing: []

.....
-----
Block: 1443_1
1443_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443_1-Stack size: 3 
1443_1-Equals Mem:<< []>> 
1443_1-NonEquals Mem: << [<11,14>]>> 
1443_1-Equals Sto:<< []>> 
1443_1-NonEquals Sto: << []>> 
1443_1-Useless: []
1443_1-Constancy: []
1443_1-ContextAliasing: []

.....
-----
Block: 4007_1
4007_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007_1-Stack size: 7 
4007_1-Equals Mem:<< []>> 
4007_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007_1-Equals Sto:<< []>> 
4007_1-NonEquals Sto: << []>> 
4007_1-Useless: []
4007_1-Constancy: [(3, 0), (0, 0)]
4007_1-ContextAliasing: []

.....
-----
Block: 4537_11
4537_11Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_11-Stack size: 20 
4537_11-Equals Mem:<< [<11,6>]>> 
4537_11-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_11-Equals Sto:<< []>> 
4537_11-NonEquals Sto: << []>> 
4537_11-Useless: []
4537_11-Constancy: [(16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_11-ContextAliasing: []

.....
-----
Block: 4912_13
4912_13Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_13-Stack size: 27 
4912_13-Equals Mem:<< []>> 
4912_13-NonEquals Mem: << [<6,1>]>> 
4912_13-Equals Sto:<< []>> 
4912_13-NonEquals Sto: << []>> 
4912_13-Useless: []
4912_13-Constancy: [(23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_13-ContextAliasing: [(2, 26)]

.....
-----
Block: 5582_21
5582_21Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_21-Stack size: 29 
5582_21-Equals Mem:<< []>> 
5582_21-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_21-Equals Sto:<< []>> 
5582_21-NonEquals Sto: << []>> 
5582_21-Useless: []
5582_21-Constancy: [(25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_21-ContextAliasing: [(4, 27)]

.....
-----
Block: 5606_21
5606_21Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_21-Stack size: 33 
5606_21-Equals Mem:<< []>> 
5606_21-NonEquals Mem: << [<11,5>]>> 
5606_21-Equals Sto:<< []>> 
5606_21-NonEquals Sto: << []>> 
5606_21-Useless: []
5606_21-Constancy: [(29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_21-ContextAliasing: [(8, 27)]

.....
-----
Block: 6293_19
6293_19Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_19-Stack size: 31 
6293_19-Equals Mem:<< []>> 
6293_19-NonEquals Mem: << [<4,7>]>> 
6293_19-Equals Sto:<< []>> 
6293_19-NonEquals Sto: << []>> 
6293_19-Useless: []
6293_19-Constancy: [(27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_19-ContextAliasing: []

.....
-----
Block: 4537_12
4537_12Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_12-Stack size: 15 
4537_12-Equals Mem:<< [<11,6>]>> 
4537_12-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_12-Equals Sto:<< []>> 
4537_12-NonEquals Sto: << []>> 
4537_12-Useless: []
4537_12-Constancy: [(11, 0), (8, 0), (7, 0), (5, 0)]
4537_12-ContextAliasing: []

.....
-----
Block: 4912_12
4912_12Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_12-Stack size: 22 
4912_12-Equals Mem:<< []>> 
4912_12-NonEquals Mem: << [<6,1>]>> 
4912_12-Equals Sto:<< []>> 
4912_12-NonEquals Sto: << []>> 
4912_12-Useless: []
4912_12-Constancy: [(18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_12-ContextAliasing: [(2, 21)]

.....
-----
Block: 5582_20
5582_20Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_20-Stack size: 24 
5582_20-Equals Mem:<< []>> 
5582_20-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_20-Equals Sto:<< []>> 
5582_20-NonEquals Sto: << []>> 
5582_20-Useless: []
5582_20-Constancy: [(20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_20-ContextAliasing: [(4, 22)]

.....
-----
Block: 5606_20
5606_20Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_20-Stack size: 28 
5606_20-Equals Mem:<< []>> 
5606_20-NonEquals Mem: << [<11,5>]>> 
5606_20-Equals Sto:<< []>> 
5606_20-NonEquals Sto: << []>> 
5606_20-Useless: []
5606_20-Constancy: [(24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_20-ContextAliasing: [(8, 22)]

.....
-----
Block: 6293_18
6293_18Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_18-Stack size: 26 
6293_18-Equals Mem:<< []>> 
6293_18-NonEquals Mem: << [<4,7>]>> 
6293_18-Equals Sto:<< []>> 
6293_18-NonEquals Sto: << []>> 
6293_18-Useless: []
6293_18-Constancy: [(22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_18-ContextAliasing: []

.....
-----
Block: 4537_13
4537_13Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_13-Stack size: 11 
4537_13-Equals Mem:<< [<11,6>]>> 
4537_13-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_13-Equals Sto:<< []>> 
4537_13-NonEquals Sto: << []>> 
4537_13-Useless: []
4537_13-Constancy: [(7, 0), (4, 0)]
4537_13-ContextAliasing: []

.....
-----
Block: 4912_11
4912_11Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_11-Stack size: 18 
4912_11-Equals Mem:<< []>> 
4912_11-NonEquals Mem: << [<6,1>]>> 
4912_11-Equals Sto:<< []>> 
4912_11-NonEquals Sto: << []>> 
4912_11-Useless: []
4912_11-Constancy: [(14, 0), (11, 0), (6, 0), (1, 0)]
4912_11-ContextAliasing: [(2, 17)]

.....
-----
Block: 5582_19
5582_19Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_19-Stack size: 20 
5582_19-Equals Mem:<< []>> 
5582_19-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_19-Equals Sto:<< []>> 
5582_19-NonEquals Sto: << []>> 
5582_19-Useless: []
5582_19-Constancy: [(16, 0), (13, 0), (8, 0), (3, 0)]
5582_19-ContextAliasing: [(4, 18)]

.....
-----
Block: 5606_19
5606_19Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_19-Stack size: 24 
5606_19-Equals Mem:<< []>> 
5606_19-NonEquals Mem: << [<11,5>]>> 
5606_19-Equals Sto:<< []>> 
5606_19-NonEquals Sto: << []>> 
5606_19-Useless: []
5606_19-Constancy: [(20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_19-ContextAliasing: [(8, 18)]

.....
-----
Block: 6293_17
6293_17Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_17-Stack size: 22 
6293_17-Equals Mem:<< []>> 
6293_17-NonEquals Mem: << [<4,7>]>> 
6293_17-Equals Sto:<< []>> 
6293_17-NonEquals Sto: << []>> 
6293_17-Useless: []
6293_17-Constancy: [(18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_17-ContextAliasing: []

.....
-----
Block: 1278
1278Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1278-Stack size: 3 
1278-Equals Mem:<< []>> 
1278-NonEquals Mem: << [<6,1>]>> 
1278-Equals Sto:<< []>> 
1278-NonEquals Sto: << []>> 
1278-Useless: []
1278-Constancy: []
1278-ContextAliasing: []

.....
-----
Block: 1311
1311Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374206265206c6f776572207468656e2063757272656e742066696e616c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x040e8c2f', 'PUSH1 0xe3', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
1311-Stack size: 3 
1311-Equals Mem:<< []>> 
1311-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1311-Equals Sto:<< []>> 
1311-NonEquals Sto: << []>> 
1311-Useless: []
1311-Constancy: []
1311-ContextAliasing: []

.....
-----
Block: 435_0
435_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
435_0-Stack size: 3 
435_0-Equals Mem:<< []>> 
435_0-NonEquals Mem: << [<5,2>]>> 
435_0-Equals Sto:<< []>> 
435_0-NonEquals Sto: << []>> 
435_0-Useless: []
435_0-Constancy: []
435_0-ContextAliasing: []

.....
-----
Block: 1207
1207Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1207-Stack size: 3 
1207-Equals Mem:<< []>> 
1207-NonEquals Mem: << [<6,1>]>> 
1207-Equals Sto:<< []>> 
1207-NonEquals Sto: << []>> 
1207-Useless: []
1207-Constancy: []
1207-ContextAliasing: []

.....
-----
Block: 524
524Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
524-Stack size: 2 
524-Equals Mem:<< []>> 
524-NonEquals Mem: << [<6,3>]>> 
524-Equals Sto:<< []>> 
524-NonEquals Sto: << []>> 
524-Useless: []
524-Constancy: []
524-ContextAliasing: []

.....
-----
Block: 1125
1125Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1125-Stack size: 3 
1125-Equals Mem:<< []>> 
1125-NonEquals Mem: << [<6,1>]>> 
1125-Equals Sto:<< []>> 
1125-NonEquals Sto: << []>> 
1125-Useless: []
1125-Constancy: []
1125-ContextAliasing: []

.....
-----
Block: 1157
1157Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
1157-Stack size: 3 
1157-Equals Mem:<< []>> 
1157-NonEquals Mem: << [<10,13>]>> 
1157-Equals Sto:<< [<18,23>]>> 
1157-NonEquals Sto: << []>> 
1157-Useless: []
1157-Constancy: []
1157-ContextAliasing: []

.....
-----
Block: 2884
2884Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2884-Stack size: 10 
2884-Equals Mem:<< []>> 
2884-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2884-Equals Sto:<< []>> 
2884-NonEquals Sto: << []>> 
2884-Useless: []
2884-Constancy: [(4, 0)]
2884-ContextAliasing: []

.....
-----
Block: 2984
2984Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2984-Stack size: 10 
2984-Equals Mem:<< []>> 
2984-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2984-Equals Sto:<< []>> 
2984-NonEquals Sto: << []>> 
2984-Useless: []
2984-Constancy: [(4, 0)]
2984-ContextAliasing: []

.....
-----
Block: 3075
3075Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3075-Stack size: 10 
3075-Equals Mem:<< []>> 
3075-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3075-Equals Sto:<< []>> 
3075-NonEquals Sto: << []>> 
3075-Useless: []
3075-Constancy: [(4, 0)]
3075-ContextAliasing: []

.....
-----
Block: 3212
3212Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0ccb', 'JUMPI']>> 
3212-Stack size: 10 
3212-Equals Mem:<< []>> 
3212-NonEquals Mem: << [<10,13>]>> 
3212-Equals Sto:<< []>> 
3212-NonEquals Sto: << []>> 
3212-Useless: []
3212-Constancy: [(4, 0)]
3212-ContextAliasing: []

.....
-----
Block: 3246
3246Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3246-Stack size: 11 
3246-Equals Mem:<< []>> 
3246-NonEquals Mem: << [<11,14>]>> 
3246-Equals Sto:<< []>> 
3246-NonEquals Sto: << []>> 
3246-Useless: []
3246-Constancy: [(5, 0)]
3246-ContextAliasing: []

.....
-----
Block: 3280
3280Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH12 0x213630b1b5b634b9ba32b217', 'PUSH1 0xa1', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3280-Stack size: 10 
3280-Equals Mem:<< []>> 
3280-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
3280-Equals Sto:<< []>> 
3280-NonEquals Sto: << []>> 
3280-Useless: []
3280-Constancy: [(4, 0)]
3280-ContextAliasing: []

.....
-----
Block: 3411
3411Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3411-Stack size: 11 
3411-Equals Mem:<< []>> 
3411-NonEquals Mem: << [<11,14>]>> 
3411-Equals Sto:<< []>> 
3411-NonEquals Sto: << []>> 
3411-Useless: []
3411-Constancy: [(5, 0)]
3411-ContextAliasing: []

.....
-----
Block: 3477
3477Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3477-Stack size: 10 
3477-Equals Mem:<< []>> 
3477-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3477-Equals Sto:<< []>> 
3477-NonEquals Sto: << []>> 
3477-Useless: []
3477-Constancy: [(4, 0)]
3477-ContextAliasing: []

.....
-----
Block: 1443_0
1443_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443_0-Stack size: 14 
1443_0-Equals Mem:<< []>> 
1443_0-NonEquals Mem: << [<11,14>]>> 
1443_0-Equals Sto:<< []>> 
1443_0-NonEquals Sto: << []>> 
1443_0-Useless: []
1443_0-Constancy: [(8, 0)]
1443_0-ContextAliasing: []

.....
-----
Block: 4007_0
4007_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007_0-Stack size: 18 
4007_0-Equals Mem:<< []>> 
4007_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007_0-Equals Sto:<< []>> 
4007_0-NonEquals Sto: << []>> 
4007_0-Useless: []
4007_0-Constancy: [(12, 0), (3, 0), (0, 0)]
4007_0-ContextAliasing: []

.....
-----
Block: 4537_8
4537_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_8-Stack size: 31 
4537_8-Equals Mem:<< [<11,6>]>> 
4537_8-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_8-Equals Sto:<< []>> 
4537_8-NonEquals Sto: << []>> 
4537_8-Useless: []
4537_8-Constancy: [(25, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_8-ContextAliasing: []

.....
-----
Block: 4912_10
4912_10Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_10-Stack size: 38 
4912_10-Equals Mem:<< []>> 
4912_10-NonEquals Mem: << [<6,1>]>> 
4912_10-Equals Sto:<< []>> 
4912_10-NonEquals Sto: << []>> 
4912_10-Useless: []
4912_10-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_10-ContextAliasing: [(2, 37)]

.....
-----
Block: 5582_18
5582_18Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_18-Stack size: 40 
5582_18-Equals Mem:<< []>> 
5582_18-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_18-Equals Sto:<< []>> 
5582_18-NonEquals Sto: << []>> 
5582_18-Useless: []
5582_18-Constancy: [(34, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_18-ContextAliasing: [(4, 38)]

.....
-----
Block: 5606_18
5606_18Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_18-Stack size: 44 
5606_18-Equals Mem:<< []>> 
5606_18-NonEquals Mem: << [<11,5>]>> 
5606_18-Equals Sto:<< []>> 
5606_18-NonEquals Sto: << []>> 
5606_18-Useless: []
5606_18-Constancy: [(38, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_18-ContextAliasing: [(8, 38)]

.....
-----
Block: 6293_16
6293_16Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_16-Stack size: 42 
6293_16-Equals Mem:<< []>> 
6293_16-NonEquals Mem: << [<4,7>]>> 
6293_16-Equals Sto:<< []>> 
6293_16-NonEquals Sto: << []>> 
6293_16-Useless: []
6293_16-Constancy: [(36, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_16-ContextAliasing: []

.....
-----
Block: 4537_9
4537_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_9-Stack size: 26 
4537_9-Equals Mem:<< [<11,6>]>> 
4537_9-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_9-Equals Sto:<< []>> 
4537_9-NonEquals Sto: << []>> 
4537_9-Useless: []
4537_9-Constancy: [(20, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
4537_9-ContextAliasing: []

.....
-----
Block: 4912_9
4912_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_9-Stack size: 33 
4912_9-Equals Mem:<< []>> 
4912_9-NonEquals Mem: << [<6,1>]>> 
4912_9-Equals Sto:<< []>> 
4912_9-NonEquals Sto: << []>> 
4912_9-Useless: []
4912_9-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_9-ContextAliasing: [(2, 32)]

.....
-----
Block: 5582_17
5582_17Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_17-Stack size: 35 
5582_17-Equals Mem:<< []>> 
5582_17-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_17-Equals Sto:<< []>> 
5582_17-NonEquals Sto: << []>> 
5582_17-Useless: []
5582_17-Constancy: [(29, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_17-ContextAliasing: [(4, 33)]

.....
-----
Block: 5606_17
5606_17Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_17-Stack size: 39 
5606_17-Equals Mem:<< []>> 
5606_17-NonEquals Mem: << [<11,5>]>> 
5606_17-Equals Sto:<< []>> 
5606_17-NonEquals Sto: << []>> 
5606_17-Useless: []
5606_17-Constancy: [(33, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_17-ContextAliasing: [(8, 33)]

.....
-----
Block: 6293_15
6293_15Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_15-Stack size: 37 
6293_15-Equals Mem:<< []>> 
6293_15-NonEquals Mem: << [<4,7>]>> 
6293_15-Equals Sto:<< []>> 
6293_15-NonEquals Sto: << []>> 
6293_15-Useless: []
6293_15-Constancy: [(31, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_15-ContextAliasing: []

.....
-----
Block: 4537_10
4537_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_10-Stack size: 22 
4537_10-Equals Mem:<< [<11,6>]>> 
4537_10-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_10-Equals Sto:<< []>> 
4537_10-NonEquals Sto: << []>> 
4537_10-Useless: []
4537_10-Constancy: [(16, 0), (7, 0), (4, 0)]
4537_10-ContextAliasing: []

.....
-----
Block: 4912_8
4912_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_8-Stack size: 29 
4912_8-Equals Mem:<< []>> 
4912_8-NonEquals Mem: << [<6,1>]>> 
4912_8-Equals Sto:<< []>> 
4912_8-NonEquals Sto: << []>> 
4912_8-Useless: []
4912_8-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
4912_8-ContextAliasing: [(2, 28)]

.....
-----
Block: 5582_16
5582_16Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_16-Stack size: 31 
5582_16-Equals Mem:<< []>> 
5582_16-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_16-Equals Sto:<< []>> 
5582_16-NonEquals Sto: << []>> 
5582_16-Useless: []
5582_16-Constancy: [(25, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
5582_16-ContextAliasing: [(4, 29)]

.....
-----
Block: 5606_16
5606_16Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_16-Stack size: 35 
5606_16-Equals Mem:<< []>> 
5606_16-NonEquals Mem: << [<11,5>]>> 
5606_16-Equals Sto:<< []>> 
5606_16-NonEquals Sto: << []>> 
5606_16-Useless: []
5606_16-Constancy: [(29, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_16-ContextAliasing: [(8, 29)]

.....
-----
Block: 6293_14
6293_14Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_14-Stack size: 33 
6293_14-Equals Mem:<< []>> 
6293_14-NonEquals Mem: << [<4,7>]>> 
6293_14-Equals Sto:<< []>> 
6293_14-NonEquals Sto: << []>> 
6293_14-Useless: []
6293_14-Constancy: [(27, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_14-ContextAliasing: []

.....
-----
Block: 6076_17
6076_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_17-Stack size: 16 
6076_17-Equals Mem:<< []>> 
6076_17-NonEquals Mem: << [<5,8>]>> 
6076_17-Equals Sto:<< []>> 
6076_17-NonEquals Sto: << []>> 
6076_17-Useless: []
6076_17-Constancy: [(10, 0)]
6076_17-ContextAliasing: []

.....
-----
Block: 3578
3578Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3578-Stack size: 10 
3578-Equals Mem:<< []>> 
3578-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
3578-Equals Sto:<< []>> 
3578-NonEquals Sto: << []>> 
3578-Useless: []
3578-Constancy: [(4, 0)]
3578-ContextAliasing: []

.....
-----
Block: 6076_16
6076_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_16-Stack size: 17 
6076_16-Equals Mem:<< []>> 
6076_16-NonEquals Mem: << [<5,8>]>> 
6076_16-Equals Sto:<< []>> 
6076_16-NonEquals Sto: << []>> 
6076_16-Useless: []
6076_16-Constancy: [(11, 0), (4, 0), (1, 0)]
6076_16-ContextAliasing: []

.....
-----
Block: 6076_15
6076_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_15-Stack size: 15 
6076_15-Equals Mem:<< []>> 
6076_15-NonEquals Mem: << [<5,8>]>> 
6076_15-Equals Sto:<< []>> 
6076_15-NonEquals Sto: << []>> 
6076_15-Useless: []
6076_15-Constancy: [(9, 0)]
6076_15-ContextAliasing: []

.....
-----
Block: 3701
3701Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE']>> 
3701-Stack size: 10 
3701-Equals Mem:<< []>> 
3701-NonEquals Mem: << [<10,13>]>> 
3701-Equals Sto:<< [<18,25>]>> 
3701-NonEquals Sto: << []>> 
3701-Useless: []
3701-Constancy: [(4, 0)]
3701-ContextAliasing: []

.....
-----
Block: 1443
1443Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443-Stack size: 13 
1443-Equals Mem:<< []>> 
1443-NonEquals Mem: << [<11,14>]>> 
1443-Equals Sto:<< []>> 
1443-NonEquals Sto: << []>> 
1443-Useless: []
1443-Constancy: [(7, 0), (2, 0)]
1443-ContextAliasing: []

.....
-----
Block: 4007
4007Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007-Stack size: 17 
4007-Equals Mem:<< []>> 
4007-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007-Equals Sto:<< []>> 
4007-NonEquals Sto: << []>> 
4007-Useless: []
4007-Constancy: [(11, 0), (6, 0), (3, 0), (0, 0)]
4007-ContextAliasing: []

.....
-----
Block: 4537_5
4537_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_5-Stack size: 30 
4537_5-Equals Mem:<< [<11,6>]>> 
4537_5-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_5-Equals Sto:<< []>> 
4537_5-NonEquals Sto: << []>> 
4537_5-Useless: []
4537_5-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_5-ContextAliasing: []

.....
-----
Block: 4912_7
4912_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_7-Stack size: 37 
4912_7-Equals Mem:<< []>> 
4912_7-NonEquals Mem: << [<6,1>]>> 
4912_7-Equals Sto:<< []>> 
4912_7-NonEquals Sto: << []>> 
4912_7-Useless: []
4912_7-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_7-ContextAliasing: [(2, 36)]

.....
-----
Block: 5582_15
5582_15Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_15-Stack size: 39 
5582_15-Equals Mem:<< []>> 
5582_15-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_15-Equals Sto:<< []>> 
5582_15-NonEquals Sto: << []>> 
5582_15-Useless: []
5582_15-Constancy: [(33, 0), (28, 0), (25, 0), (22, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_15-ContextAliasing: [(4, 37)]

.....
-----
Block: 5606_15
5606_15Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_15-Stack size: 43 
5606_15-Equals Mem:<< []>> 
5606_15-NonEquals Mem: << [<11,5>]>> 
5606_15-Equals Sto:<< []>> 
5606_15-NonEquals Sto: << []>> 
5606_15-Useless: []
5606_15-Constancy: [(37, 0), (32, 0), (29, 0), (26, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_15-ContextAliasing: [(8, 37)]

.....
-----
Block: 6293_13
6293_13Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_13-Stack size: 41 
6293_13-Equals Mem:<< []>> 
6293_13-NonEquals Mem: << [<4,7>]>> 
6293_13-Equals Sto:<< []>> 
6293_13-NonEquals Sto: << []>> 
6293_13-Useless: []
6293_13-Constancy: [(35, 0), (30, 0), (27, 0), (24, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_13-ContextAliasing: []

.....
-----
Block: 4537_6
4537_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_6-Stack size: 25 
4537_6-Equals Mem:<< [<11,6>]>> 
4537_6-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_6-Equals Sto:<< []>> 
4537_6-NonEquals Sto: << []>> 
4537_6-Useless: []
4537_6-Constancy: [(19, 0), (14, 0), (11, 0), (8, 0), (7, 0), (5, 0)]
4537_6-ContextAliasing: []

.....
-----
Block: 4912_6
4912_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_6-Stack size: 32 
4912_6-Equals Mem:<< []>> 
4912_6-NonEquals Mem: << [<6,1>]>> 
4912_6-Equals Sto:<< []>> 
4912_6-NonEquals Sto: << []>> 
4912_6-Useless: []
4912_6-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_6-ContextAliasing: [(2, 31)]

.....
-----
Block: 5582_14
5582_14Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_14-Stack size: 34 
5582_14-Equals Mem:<< []>> 
5582_14-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_14-Equals Sto:<< []>> 
5582_14-NonEquals Sto: << []>> 
5582_14-Useless: []
5582_14-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_14-ContextAliasing: [(4, 32)]

.....
-----
Block: 5606_14
5606_14Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_14-Stack size: 38 
5606_14-Equals Mem:<< []>> 
5606_14-NonEquals Mem: << [<11,5>]>> 
5606_14-Equals Sto:<< []>> 
5606_14-NonEquals Sto: << []>> 
5606_14-Useless: []
5606_14-Constancy: [(32, 0), (27, 0), (24, 0), (21, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_14-ContextAliasing: [(8, 32)]

.....
-----
Block: 6293_12
6293_12Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_12-Stack size: 36 
6293_12-Equals Mem:<< []>> 
6293_12-NonEquals Mem: << [<4,7>]>> 
6293_12-Equals Sto:<< []>> 
6293_12-NonEquals Sto: << []>> 
6293_12-Useless: []
6293_12-Constancy: [(30, 0), (25, 0), (22, 0), (19, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_12-ContextAliasing: []

.....
-----
Block: 4537_7
4537_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_7-Stack size: 21 
4537_7-Equals Mem:<< [<11,6>]>> 
4537_7-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_7-Equals Sto:<< []>> 
4537_7-NonEquals Sto: << []>> 
4537_7-Useless: []
4537_7-Constancy: [(15, 0), (10, 0), (7, 0), (4, 0)]
4537_7-ContextAliasing: []

.....
-----
Block: 4912_5
4912_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_5-Stack size: 28 
4912_5-Equals Mem:<< []>> 
4912_5-NonEquals Mem: << [<6,1>]>> 
4912_5-Equals Sto:<< []>> 
4912_5-NonEquals Sto: << []>> 
4912_5-Useless: []
4912_5-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
4912_5-ContextAliasing: [(2, 27)]

.....
-----
Block: 5582_13
5582_13Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_13-Stack size: 30 
5582_13-Equals Mem:<< []>> 
5582_13-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_13-Equals Sto:<< []>> 
5582_13-NonEquals Sto: << []>> 
5582_13-Useless: []
5582_13-Constancy: [(24, 0), (19, 0), (16, 0), (13, 0), (8, 0), (3, 0)]
5582_13-ContextAliasing: [(4, 28)]

.....
-----
Block: 5606_13
5606_13Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_13-Stack size: 34 
5606_13-Equals Mem:<< []>> 
5606_13-NonEquals Mem: << [<11,5>]>> 
5606_13-Equals Sto:<< []>> 
5606_13-NonEquals Sto: << []>> 
5606_13-Useless: []
5606_13-Constancy: [(28, 0), (23, 0), (20, 0), (17, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_13-ContextAliasing: [(8, 28)]

.....
-----
Block: 6293_11
6293_11Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_11-Stack size: 32 
6293_11-Equals Mem:<< []>> 
6293_11-NonEquals Mem: << [<4,7>]>> 
6293_11-Equals Sto:<< []>> 
6293_11-NonEquals Sto: << []>> 
6293_11-Useless: []
6293_11-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_11-ContextAliasing: []

.....
-----
Block: 6155_0
6155_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6155_0-Stack size: 18 
6155_0-Equals Mem:<< []>> 
6155_0-NonEquals Mem: << [<5,8>]>> 
6155_0-Equals Sto:<< []>> 
6155_0-NonEquals Sto: << []>> 
6155_0-Useless: []
6155_0-Constancy: [(12, 0), (1, 0)]
6155_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 4282
4282Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x10de', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
4282-Stack size: 18 
4282-Equals Mem:<< [<18,6>]>> 
4282-NonEquals Mem: << []>> 
4282-Equals Sto:<< []>> 
4282-NonEquals Sto: << []>> 
4282-Useless: []
4282-Constancy: [(12, 0)]
4282-ContextAliasing: []

.....
-----
Block: 6155
6155Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6155-Stack size: 18 
6155-Equals Mem:<< []>> 
6155-NonEquals Mem: << [<5,8>]>> 
6155-Equals Sto:<< []>> 
6155-NonEquals Sto: << []>> 
6155-Useless: []
6155-Constancy: [(12, 0)]
6155-ContextAliasing: [(4, 15)]

.....
-----
Block: 2593_1
2593_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2593_1-Stack size: 18 
2593_1-Equals Mem:<< []>> 
2593_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2593_1-Equals Sto:<< []>> 
2593_1-NonEquals Sto: << []>> 
2593_1-Useless: []
2593_1-Constancy: [(12, 0)]
2593_1-ContextAliasing: []

.....
-----
Block: 2691_1
2691_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2691_1-Stack size: 18 
2691_1-Equals Mem:<< []>> 
2691_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2691_1-Equals Sto:<< []>> 
2691_1-NonEquals Sto: << []>> 
2691_1-Useless: []
2691_1-Constancy: [(12, 0)]
2691_1-ContextAliasing: []

.....
-----
Block: 4375
4375Instr:<<['JUMPDEST', 'PUSH1 0x12', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x114f', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x181f', 'JUMP']>> 
4375-Stack size: 14 
4375-Equals Mem:<< []>> 
4375-NonEquals Mem: << [<9,4>]>> 
4375-Equals Sto:<< []>> 
4375-NonEquals Sto: << []>> 
4375-Useless: []
4375-Constancy: [(8, 0)]
4375-ContextAliasing: []

.....
-----
Block: 6175
6175Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6175-Stack size: 23 
6175-Equals Mem:<< []>> 
6175-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
6175-Equals Sto:<< []>> 
6175-NonEquals Sto: << []>> 
6175-Useless: []
6175-Constancy: [(17, 0), (4, 0)]
6175-ContextAliasing: [(9, 19)]

.....
-----
Block: 6225
6225Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1848', 'JUMP']>> 
6225-Stack size: 29 
6225-Equals Mem:<< []>> 
6225-NonEquals Mem: << [<9,1>]>> 
6225-Equals Sto:<< []>> 
6225-NonEquals Sto: << []>> 
6225-Useless: []
6225-Constancy: [(23, 0), (10, 0), (5, 0), (3, 32)]
6225-ContextAliasing: [(15, 19)]

.....
-----
Block: 4537
4537Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537-Stack size: 46 
4537-Equals Mem:<< [<11,6>]>> 
4537-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537-Equals Sto:<< []>> 
4537-NonEquals Sto: << []>> 
4537-Useless: []
4537-Constancy: [(40, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (6, 0), (5, 0), (4, 0), (3, 0)]
4537-ContextAliasing: []

.....
-----
Block: 4912_4
4912_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_4-Stack size: 53 
4912_4-Equals Mem:<< []>> 
4912_4-NonEquals Mem: << [<6,1>]>> 
4912_4-Equals Sto:<< []>> 
4912_4-NonEquals Sto: << []>> 
4912_4-Useless: []
4912_4-Constancy: [(47, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
4912_4-ContextAliasing: [(2, 52)]

.....
-----
Block: 5582_12
5582_12Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_12-Stack size: 55 
5582_12-Equals Mem:<< []>> 
5582_12-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_12-Equals Sto:<< []>> 
5582_12-NonEquals Sto: << []>> 
5582_12-Useless: []
5582_12-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (8, 0), (3, 0)]
5582_12-ContextAliasing: [(4, 53)]

.....
-----
Block: 5606_12
5606_12Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_12-Stack size: 59 
5606_12-Equals Mem:<< []>> 
5606_12-NonEquals Mem: << [<11,5>]>> 
5606_12-Equals Sto:<< []>> 
5606_12-NonEquals Sto: << []>> 
5606_12-Useless: []
5606_12-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_12-ContextAliasing: [(8, 53)]

.....
-----
Block: 6293_9
6293_9Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_9-Stack size: 57 
6293_9-Equals Mem:<< []>> 
6293_9-NonEquals Mem: << [<4,7>]>> 
6293_9-Equals Sto:<< []>> 
6293_9-NonEquals Sto: << []>> 
6293_9-Useless: []
6293_9-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_9-ContextAliasing: []

.....
-----
Block: 4537_0
4537_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_0-Stack size: 47 
4537_0-Equals Mem:<< [<11,6>]>> 
4537_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_0-Equals Sto:<< []>> 
4537_0-NonEquals Sto: << []>> 
4537_0-Useless: []
4537_0-Constancy: [(41, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
4537_0-ContextAliasing: []

.....
-----
Block: 4912_3
4912_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_3-Stack size: 54 
4912_3-Equals Mem:<< []>> 
4912_3-NonEquals Mem: << [<6,1>]>> 
4912_3-Equals Sto:<< []>> 
4912_3-NonEquals Sto: << []>> 
4912_3-Useless: []
4912_3-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
4912_3-ContextAliasing: [(2, 53)]

.....
-----
Block: 5582_11
5582_11Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_11-Stack size: 56 
5582_11-Equals Mem:<< []>> 
5582_11-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_11-Equals Sto:<< []>> 
5582_11-NonEquals Sto: << []>> 
5582_11-Useless: []
5582_11-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (8, 0), (3, 0)]
5582_11-ContextAliasing: [(4, 54)]

.....
-----
Block: 5606_11
5606_11Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_11-Stack size: 60 
5606_11-Equals Mem:<< []>> 
5606_11-NonEquals Mem: << [<11,5>]>> 
5606_11-Equals Sto:<< []>> 
5606_11-NonEquals Sto: << []>> 
5606_11-Useless: []
5606_11-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_11-ContextAliasing: [(8, 54)]

.....
-----
Block: 6293_7
6293_7Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_7-Stack size: 58 
6293_7-Equals Mem:<< []>> 
6293_7-NonEquals Mem: << [<4,7>]>> 
6293_7-Equals Sto:<< []>> 
6293_7-NonEquals Sto: << []>> 
6293_7-Useless: []
6293_7-Constancy: [(52, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (14, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_7-ContextAliasing: []

.....
-----
Block: 5033
5033Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033-Stack size: 50 
5033-Equals Mem:<< [<11,6>]>> 
5033-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033-Equals Sto:<< []>> 
5033-NonEquals Sto: << []>> 
5033-Useless: []
5033-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (5, 0)]
5033-ContextAliasing: []

.....
-----
Block: 3895_5
3895_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_5-Stack size: 57 
3895_5-Equals Mem:<< []>> 
3895_5-NonEquals Mem: << [<6,1>]>> 
3895_5-Equals Sto:<< []>> 
3895_5-NonEquals Sto: << []>> 
3895_5-Useless: []
3895_5-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
3895_5-ContextAliasing: [(2, 56)]

.....
-----
Block: 5582_10
5582_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_10-Stack size: 59 
5582_10-Equals Mem:<< []>> 
5582_10-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_10-Equals Sto:<< []>> 
5582_10-NonEquals Sto: << []>> 
5582_10-Useless: []
5582_10-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (14, 0), (8, 0), (3, 0)]
5582_10-ContextAliasing: [(4, 57)]

.....
-----
Block: 5606_10
5606_10Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_10-Stack size: 63 
5606_10-Equals Mem:<< []>> 
5606_10-NonEquals Mem: << [<11,5>]>> 
5606_10-Equals Sto:<< []>> 
5606_10-NonEquals Sto: << []>> 
5606_10-Useless: []
5606_10-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_10-ContextAliasing: [(8, 57)]

.....
-----
Block: 6076_12
6076_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_12-Stack size: 62 
6076_12-Equals Mem:<< []>> 
6076_12-NonEquals Mem: << [<5,8>]>> 
6076_12-Equals Sto:<< []>> 
6076_12-NonEquals Sto: << []>> 
6076_12-Useless: []
6076_12-Constancy: [(56, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
6076_12-ContextAliasing: []

.....
-----
Block: 5033_0
5033_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_0-Stack size: 48 
5033_0-Equals Mem:<< [<11,6>]>> 
5033_0-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_0-Equals Sto:<< []>> 
5033_0-NonEquals Sto: << []>> 
5033_0-Useless: []
5033_0-Constancy: [(42, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (14, 0), (13, 0), (8, 0), (7, 0), (6, 0), (3, 0)]
5033_0-ContextAliasing: []

.....
-----
Block: 3895_4
3895_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_4-Stack size: 55 
3895_4-Equals Mem:<< []>> 
3895_4-NonEquals Mem: << [<6,1>]>> 
3895_4-Equals Sto:<< []>> 
3895_4-NonEquals Sto: << []>> 
3895_4-Useless: []
3895_4-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
3895_4-ContextAliasing: [(2, 54)]

.....
-----
Block: 5582_9
5582_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_9-Stack size: 57 
5582_9-Equals Mem:<< []>> 
5582_9-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_9-Equals Sto:<< []>> 
5582_9-NonEquals Sto: << []>> 
5582_9-Useless: []
5582_9-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (8, 0), (3, 0)]
5582_9-ContextAliasing: [(4, 55)]

.....
-----
Block: 5606_9
5606_9Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_9-Stack size: 61 
5606_9-Equals Mem:<< []>> 
5606_9-NonEquals Mem: << [<11,5>]>> 
5606_9-Equals Sto:<< []>> 
5606_9-NonEquals Sto: << []>> 
5606_9-Useless: []
5606_9-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_9-ContextAliasing: [(8, 55)]

.....
-----
Block: 6076_11
6076_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_11-Stack size: 60 
6076_11-Equals Mem:<< []>> 
6076_11-NonEquals Mem: << [<5,8>]>> 
6076_11-Equals Sto:<< []>> 
6076_11-NonEquals Sto: << []>> 
6076_11-Useless: []
6076_11-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (20, 0), (19, 0), (18, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
6076_11-ContextAliasing: []

.....
-----
Block: 4537_1
4537_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_1-Stack size: 48 
4537_1-Equals Mem:<< [<11,6>]>> 
4537_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_1-Equals Sto:<< []>> 
4537_1-NonEquals Sto: << []>> 
4537_1-Useless: []
4537_1-Constancy: [(42, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_1-ContextAliasing: []

.....
-----
Block: 4912_2
4912_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_2-Stack size: 55 
4912_2-Equals Mem:<< []>> 
4912_2-NonEquals Mem: << [<6,1>]>> 
4912_2-Equals Sto:<< []>> 
4912_2-NonEquals Sto: << []>> 
4912_2-Useless: []
4912_2-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_2-ContextAliasing: [(2, 54)]

.....
-----
Block: 5582_8
5582_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_8-Stack size: 57 
5582_8-Equals Mem:<< []>> 
5582_8-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_8-Equals Sto:<< []>> 
5582_8-NonEquals Sto: << []>> 
5582_8-Useless: []
5582_8-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_8-ContextAliasing: [(4, 55)]

.....
-----
Block: 5606_8
5606_8Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_8-Stack size: 61 
5606_8-Equals Mem:<< []>> 
5606_8-NonEquals Mem: << [<11,5>]>> 
5606_8-Equals Sto:<< []>> 
5606_8-NonEquals Sto: << []>> 
5606_8-Useless: []
5606_8-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_8-ContextAliasing: [(8, 55)]

.....
-----
Block: 6293_6
6293_6Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_6-Stack size: 59 
6293_6-Equals Mem:<< []>> 
6293_6-NonEquals Mem: << [<4,7>]>> 
6293_6-Equals Sto:<< []>> 
6293_6-NonEquals Sto: << []>> 
6293_6-Useless: []
6293_6-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_6-ContextAliasing: []

.....
-----
Block: 4537_2
4537_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_2-Stack size: 43 
4537_2-Equals Mem:<< [<11,6>]>> 
4537_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_2-Equals Sto:<< []>> 
4537_2-NonEquals Sto: << []>> 
4537_2-Useless: []
4537_2-Constancy: [(37, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (16, 0), (15, 0), (14, 0), (13, 0), (12, 0), (11, 0), (7, 0), (5, 0)]
4537_2-ContextAliasing: []

.....
-----
Block: 4912_1
4912_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_1-Stack size: 50 
4912_1-Equals Mem:<< []>> 
4912_1-NonEquals Mem: << [<6,1>]>> 
4912_1-Equals Sto:<< []>> 
4912_1-NonEquals Sto: << []>> 
4912_1-Useless: []
4912_1-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912_1-ContextAliasing: [(2, 49)]

.....
-----
Block: 5582_7
5582_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_7-Stack size: 52 
5582_7-Equals Mem:<< []>> 
5582_7-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_7-Equals Sto:<< []>> 
5582_7-NonEquals Sto: << []>> 
5582_7-Useless: []
5582_7-Constancy: [(46, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_7-ContextAliasing: [(4, 50)]

.....
-----
Block: 5606_7
5606_7Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_7-Stack size: 56 
5606_7-Equals Mem:<< []>> 
5606_7-NonEquals Mem: << [<11,5>]>> 
5606_7-Equals Sto:<< []>> 
5606_7-NonEquals Sto: << []>> 
5606_7-Useless: []
5606_7-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_7-ContextAliasing: [(8, 50)]

.....
-----
Block: 6293_5
6293_5Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_5-Stack size: 54 
6293_5-Equals Mem:<< []>> 
6293_5-NonEquals Mem: << [<4,7>]>> 
6293_5-Equals Sto:<< []>> 
6293_5-NonEquals Sto: << []>> 
6293_5-Useless: []
6293_5-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_5-ContextAliasing: []

.....
-----
Block: 5033_1
5033_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_1-Stack size: 56 
5033_1-Equals Mem:<< [<11,6>]>> 
5033_1-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_1-Equals Sto:<< []>> 
5033_1-NonEquals Sto: << []>> 
5033_1-Useless: []
5033_1-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (5, 0)]
5033_1-ContextAliasing: []

.....
-----
Block: 3895_3
3895_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_3-Stack size: 63 
3895_3-Equals Mem:<< []>> 
3895_3-NonEquals Mem: << [<6,1>]>> 
3895_3-Equals Sto:<< []>> 
3895_3-NonEquals Sto: << []>> 
3895_3-Useless: []
3895_3-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
3895_3-ContextAliasing: [(2, 62)]

.....
-----
Block: 5582_6
5582_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_6-Stack size: 65 
5582_6-Equals Mem:<< []>> 
5582_6-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_6-Equals Sto:<< []>> 
5582_6-NonEquals Sto: << []>> 
5582_6-Useless: []
5582_6-Constancy: [(59, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (41, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (28, 0), (27, 0), (26, 0), (20, 0), (19, 0), (18, 0), (14, 0), (8, 0), (3, 0)]
5582_6-ContextAliasing: [(4, 63)]

.....
-----
Block: 5606_6
5606_6Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_6-Stack size: 69 
5606_6-Equals Mem:<< []>> 
5606_6-NonEquals Mem: << [<11,5>]>> 
5606_6-Equals Sto:<< []>> 
5606_6-NonEquals Sto: << []>> 
5606_6-Useless: []
5606_6-Constancy: [(63, 0), (50, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (32, 0), (31, 0), (30, 0), (24, 0), (23, 0), (22, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_6-ContextAliasing: [(8, 63)]

.....
-----
Block: 6076_7
6076_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_7-Stack size: 68 
6076_7-Equals Mem:<< []>> 
6076_7-NonEquals Mem: << [<5,8>]>> 
6076_7-Equals Sto:<< []>> 
6076_7-NonEquals Sto: << []>> 
6076_7-Useless: []
6076_7-Constancy: [(62, 0), (49, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (31, 0), (30, 0), (29, 0), (23, 0), (22, 0), (21, 0), (17, 0), (11, 0), (6, 0), (5, 0)]
6076_7-ContextAliasing: []

.....
-----
Block: 5033_2
5033_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_2-Stack size: 54 
5033_2-Equals Mem:<< [<11,6>]>> 
5033_2-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_2-Equals Sto:<< []>> 
5033_2-NonEquals Sto: << []>> 
5033_2-Useless: []
5033_2-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (3, 0)]
5033_2-ContextAliasing: []

.....
-----
Block: 3895_2
3895_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_2-Stack size: 61 
3895_2-Equals Mem:<< []>> 
3895_2-NonEquals Mem: << [<6,1>]>> 
3895_2-Equals Sto:<< []>> 
3895_2-NonEquals Sto: << []>> 
3895_2-Useless: []
3895_2-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
3895_2-ContextAliasing: [(2, 60)]

.....
-----
Block: 5582_5
5582_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_5-Stack size: 63 
5582_5-Equals Mem:<< []>> 
5582_5-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_5-Equals Sto:<< []>> 
5582_5-NonEquals Sto: << []>> 
5582_5-Useless: []
5582_5-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (8, 0), (3, 0)]
5582_5-ContextAliasing: [(4, 61)]

.....
-----
Block: 5606_5
5606_5Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_5-Stack size: 67 
5606_5-Equals Mem:<< []>> 
5606_5-NonEquals Mem: << [<11,5>]>> 
5606_5-Equals Sto:<< []>> 
5606_5-NonEquals Sto: << []>> 
5606_5-Useless: []
5606_5-Constancy: [(61, 0), (48, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (30, 0), (29, 0), (28, 0), (22, 0), (21, 0), (20, 0), (16, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_5-ContextAliasing: [(8, 61)]

.....
-----
Block: 6076_6
6076_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_6-Stack size: 66 
6076_6-Equals Mem:<< []>> 
6076_6-NonEquals Mem: << [<5,8>]>> 
6076_6-Equals Sto:<< []>> 
6076_6-NonEquals Sto: << []>> 
6076_6-Useless: []
6076_6-Constancy: [(60, 0), (47, 0), (46, 0), (45, 0), (44, 0), (43, 0), (42, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (29, 0), (28, 0), (27, 0), (21, 0), (20, 0), (19, 0), (15, 0), (11, 0), (6, 0), (5, 0)]
6076_6-ContextAliasing: []

.....
-----
Block: 4617
4617Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP16', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP6', 'SWAP12', 'POP', 'SWAP4', 'SWAP10', 'POP', 'SWAP2', 'SWAP8', 'POP', 'SWAP6', 'POP', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x123a', 'SWAP1', 'DUP8', 'PUSH2 0x13a9', 'JUMP']>> 
4617-Stack size: 30 
4617-Equals Mem:<< []>> 
4617-NonEquals Mem: << [<11,14>]>> 
4617-Equals Sto:<< []>> 
4617-NonEquals Sto: << []>> 
4617-Useless: []
4617-Constancy: [(24, 0), (11, 0), (10, 0), (9, 0), (8, 0), (7, 0), (6, 0)]
4617-ContextAliasing: []

.....
-----
Block: 5033_3
5033_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_3-Stack size: 27 
5033_3-Equals Mem:<< [<11,6>]>> 
5033_3-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_3-Equals Sto:<< []>> 
5033_3-NonEquals Sto: << []>> 
5033_3-Useless: []
5033_3-Constancy: [(21, 0)]
5033_3-ContextAliasing: []

.....
-----
Block: 3895_1
3895_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_1-Stack size: 34 
3895_1-Equals Mem:<< []>> 
3895_1-NonEquals Mem: << [<6,1>]>> 
3895_1-Equals Sto:<< []>> 
3895_1-NonEquals Sto: << []>> 
3895_1-Useless: []
3895_1-Constancy: [(28, 0), (6, 0), (1, 0)]
3895_1-ContextAliasing: [(2, 33)]

.....
-----
Block: 5582_4
5582_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_4-Stack size: 36 
5582_4-Equals Mem:<< []>> 
5582_4-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_4-Equals Sto:<< []>> 
5582_4-NonEquals Sto: << []>> 
5582_4-Useless: []
5582_4-Constancy: [(30, 0), (8, 0), (3, 0)]
5582_4-ContextAliasing: [(4, 34)]

.....
-----
Block: 5606_4
5606_4Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_4-Stack size: 40 
5606_4-Equals Mem:<< []>> 
5606_4-NonEquals Mem: << [<11,5>]>> 
5606_4-Equals Sto:<< []>> 
5606_4-NonEquals Sto: << []>> 
5606_4-Useless: []
5606_4-Constancy: [(34, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_4-ContextAliasing: [(8, 34)]

.....
-----
Block: 6076_5
6076_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_5-Stack size: 39 
6076_5-Equals Mem:<< []>> 
6076_5-NonEquals Mem: << [<5,8>]>> 
6076_5-Equals Sto:<< []>> 
6076_5-NonEquals Sto: << []>> 
6076_5-Useless: []
6076_5-Constancy: [(33, 0), (11, 0), (6, 0), (5, 0)]
6076_5-ContextAliasing: []

.....
-----
Block: 4666
4666Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP12', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP11', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1268', 'SWAP1', 'DUP7', 'PUSH2 0x13ea', 'JUMP']>> 
4666-Stack size: 25 
4666-Equals Mem:<< [<12,28>]>> 
4666-NonEquals Mem: << [<12,15>, <15,28>]>> 
4666-Equals Sto:<< [<23,30>]>> 
4666-NonEquals Sto: << []>> 
4666-Useless: []
4666-Constancy: [(19, 0)]
4666-ContextAliasing: []

.....
-----
Block: 6076_4
6076_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_4-Stack size: 34 
6076_4-Equals Mem:<< []>> 
6076_4-NonEquals Mem: << [<5,8>]>> 
6076_4-Equals Sto:<< []>> 
6076_4-NonEquals Sto: << []>> 
6076_4-Useless: []
6076_4-Constancy: [(28, 0), (6, 0), (5, 0)]
6076_4-ContextAliasing: []

.....
-----
Block: 5121_1
5121_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5121_1-Stack size: 29 
5121_1-Equals Mem:<< []>> 
5121_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5121_1-Equals Sto:<< []>> 
5121_1-NonEquals Sto: << []>> 
5121_1-Useless: []
5121_1-Constancy: [(23, 0), (1, 0)]
5121_1-ContextAliasing: []

.....
-----
Block: 4712
4712Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP10', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1289', 'DUP2', 'PUSH2 0x1448', 'JUMP']>> 
4712-Stack size: 25 
4712-Equals Mem:<< []>> 
4712-NonEquals Mem: << [<11,14>]>> 
4712-Equals Sto:<< []>> 
4712-NonEquals Sto: << []>> 
4712-Useless: []
4712-Constancy: [(19, 0)]
4712-ContextAliasing: []

.....
-----
Block: 4537_3
4537_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_3-Stack size: 39 
4537_3-Equals Mem:<< [<11,6>]>> 
4537_3-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_3-Equals Sto:<< []>> 
4537_3-NonEquals Sto: << []>> 
4537_3-Useless: []
4537_3-Constancy: [(33, 0), (12, 0), (10, 0), (9, 0), (8, 0), (6, 0), (5, 0)]
4537_3-ContextAliasing: []

.....
-----
Block: 4912_0
4912_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912_0-Stack size: 46 
4912_0-Equals Mem:<< []>> 
4912_0-NonEquals Mem: << [<6,1>]>> 
4912_0-Equals Sto:<< []>> 
4912_0-NonEquals Sto: << []>> 
4912_0-Useless: []
4912_0-Constancy: [(40, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
4912_0-ContextAliasing: [(2, 45)]

.....
-----
Block: 5582_3
5582_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_3-Stack size: 48 
5582_3-Equals Mem:<< []>> 
5582_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_3-Equals Sto:<< []>> 
5582_3-NonEquals Sto: << []>> 
5582_3-Useless: []
5582_3-Constancy: [(42, 0), (21, 0), (19, 0), (18, 0), (17, 0), (15, 0), (14, 0), (8, 0), (3, 0)]
5582_3-ContextAliasing: [(4, 46)]

.....
-----
Block: 5606_3
5606_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_3-Stack size: 52 
5606_3-Equals Mem:<< []>> 
5606_3-NonEquals Mem: << [<11,5>]>> 
5606_3-Equals Sto:<< []>> 
5606_3-NonEquals Sto: << []>> 
5606_3-Useless: []
5606_3-Constancy: [(46, 0), (25, 0), (23, 0), (22, 0), (21, 0), (19, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_3-ContextAliasing: [(8, 46)]

.....
-----
Block: 6293_1
6293_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_1-Stack size: 50 
6293_1-Equals Mem:<< []>> 
6293_1-NonEquals Mem: << [<4,7>]>> 
6293_1-Equals Sto:<< []>> 
6293_1-NonEquals Sto: << []>> 
6293_1-Useless: []
6293_1-Constancy: [(44, 0), (23, 0), (21, 0), (20, 0), (19, 0), (17, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_1-ContextAliasing: []

.....
-----
Block: 4537_4
4537_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537_4-Stack size: 34 
4537_4-Equals Mem:<< [<11,6>]>> 
4537_4-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
4537_4-Equals Sto:<< []>> 
4537_4-NonEquals Sto: << []>> 
4537_4-Useless: []
4537_4-Constancy: [(28, 0), (7, 0), (5, 0)]
4537_4-ContextAliasing: []

.....
-----
Block: 4912
4912Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912-Stack size: 41 
4912-Equals Mem:<< []>> 
4912-NonEquals Mem: << [<6,1>]>> 
4912-Equals Sto:<< []>> 
4912-NonEquals Sto: << []>> 
4912-Useless: []
4912-Constancy: [(35, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
4912-ContextAliasing: [(2, 40)]

.....
-----
Block: 5582_2
5582_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_2-Stack size: 43 
5582_2-Equals Mem:<< []>> 
5582_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_2-Equals Sto:<< []>> 
5582_2-NonEquals Sto: << []>> 
5582_2-Useless: []
5582_2-Constancy: [(37, 0), (16, 0), (14, 0), (8, 0), (3, 0)]
5582_2-ContextAliasing: [(4, 41)]

.....
-----
Block: 5606_2
5606_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_2-Stack size: 47 
5606_2-Equals Mem:<< []>> 
5606_2-NonEquals Mem: << [<11,5>]>> 
5606_2-Equals Sto:<< []>> 
5606_2-NonEquals Sto: << []>> 
5606_2-Useless: []
5606_2-Constancy: [(41, 0), (20, 0), (18, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_2-ContextAliasing: [(8, 41)]

.....
-----
Block: 6293_0
6293_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_0-Stack size: 45 
6293_0-Equals Mem:<< []>> 
6293_0-NonEquals Mem: << [<4,7>]>> 
6293_0-Equals Sto:<< []>> 
6293_0-NonEquals Sto: << []>> 
6293_0-Useless: []
6293_0-Constancy: [(39, 0), (18, 0), (16, 0), (10, 0), (5, 0), (4, 0), (0, 0)]
6293_0-ContextAliasing: []

.....
-----
Block: 5214
5214Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH2 0x147a', 'SWAP1', 'DUP3', 'PUSH2 0x13ea', 'JUMP']>> 
5214-Stack size: 29 
5214-Equals Mem:<< []>> 
5214-NonEquals Mem: << [<5,8>]>> 
5214-Equals Sto:<< []>> 
5214-NonEquals Sto: << []>> 
5214-Useless: []
5214-Constancy: [(23, 0), (1, 0)]
5214-ContextAliasing: []

.....
-----
Block: 6076_2
6076_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_2-Stack size: 38 
6076_2-Equals Mem:<< []>> 
6076_2-NonEquals Mem: << [<5,8>]>> 
6076_2-Equals Sto:<< []>> 
6076_2-NonEquals Sto: << []>> 
6076_2-Useless: []
6076_2-Constancy: [(32, 0), (6, 0), (5, 0)]
6076_2-ContextAliasing: []

.....
-----
Block: 5121_0
5121_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5121_0-Stack size: 33 
5121_0-Equals Mem:<< []>> 
5121_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5121_0-Equals Sto:<< []>> 
5121_0-NonEquals Sto: << []>> 
5121_0-Useless: []
5121_0-Constancy: [(27, 0), (1, 0)]
5121_0-ContextAliasing: []

.....
-----
Block: 5242
5242Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'POP', 'POP', 'POP', 'JUMP']>> 
5242-Stack size: 29 
5242-Equals Mem:<< []>> 
5242-NonEquals Mem: << [<5,8>]>> 
5242-Equals Sto:<< []>> 
5242-NonEquals Sto: << []>> 
5242-Useless: []
5242-Constancy: [(23, 0)]
5242-ContextAliasing: []

.....
-----
Block: 5033_4
5033_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033_4-Stack size: 30 
5033_4-Equals Mem:<< [<11,6>]>> 
5033_4-NonEquals Mem: << [<11,15>, <11,20>, <15,6>, <15,20>, <20,6>]>> 
5033_4-Equals Sto:<< []>> 
5033_4-NonEquals Sto: << []>> 
5033_4-Useless: []
5033_4-Constancy: [(24, 0)]
5033_4-ContextAliasing: []

.....
-----
Block: 3895_0
3895_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895_0-Stack size: 37 
3895_0-Equals Mem:<< []>> 
3895_0-NonEquals Mem: << [<6,1>]>> 
3895_0-Equals Sto:<< []>> 
3895_0-NonEquals Sto: << []>> 
3895_0-Useless: []
3895_0-Constancy: [(31, 0), (6, 0), (1, 0)]
3895_0-ContextAliasing: [(2, 36)]

.....
-----
Block: 5582_1
5582_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_1-Stack size: 39 
5582_1-Equals Mem:<< []>> 
5582_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_1-Equals Sto:<< []>> 
5582_1-NonEquals Sto: << []>> 
5582_1-Useless: []
5582_1-Constancy: [(33, 0), (8, 0), (3, 0)]
5582_1-ContextAliasing: [(4, 37)]

.....
-----
Block: 5606_1
5606_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_1-Stack size: 43 
5606_1-Equals Mem:<< []>> 
5606_1-NonEquals Mem: << [<11,5>]>> 
5606_1-Equals Sto:<< []>> 
5606_1-NonEquals Sto: << []>> 
5606_1-Useless: []
5606_1-Constancy: [(37, 0), (12, 0), (7, 0), (3, 0), (2, 32)]
5606_1-ContextAliasing: [(8, 37)]

.....
-----
Block: 6076_1
6076_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_1-Stack size: 42 
6076_1-Equals Mem:<< []>> 
6076_1-NonEquals Mem: << [<5,8>]>> 
6076_1-Equals Sto:<< []>> 
6076_1-NonEquals Sto: << []>> 
6076_1-Useless: []
6076_1-Constancy: [(36, 0), (11, 0), (6, 0), (5, 0)]
6076_1-ContextAliasing: []

.....
-----
Block: 6076_0
6076_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_0-Stack size: 37 
6076_0-Equals Mem:<< []>> 
6076_0-NonEquals Mem: << [<5,8>]>> 
6076_0-Equals Sto:<< []>> 
6076_0-NonEquals Sto: << []>> 
6076_0-Useless: []
6076_0-Constancy: [(31, 0), (6, 0), (5, 0)]
6076_0-ContextAliasing: []

.....
-----
Block: 5121
5121Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5121-Stack size: 32 
5121-Equals Mem:<< []>> 
5121-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5121-Equals Sto:<< []>> 
5121-NonEquals Sto: << []>> 
5121-Useless: []
5121-Constancy: [(26, 0), (1, 0)]
5121-ContextAliasing: []

.....
-----
Block: 4755
4755Instr:<<['JUMPDEST', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP10', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP6', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x12d8', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
4755-Stack size: 24 
4755-Equals Mem:<< []>> 
4755-NonEquals Mem: << [<22,18>]>> 
4755-Equals Sto:<< []>> 
4755-NonEquals Sto: << []>> 
4755-Useless: []
4755-Constancy: [(18, 0)]
4755-ContextAliasing: []

.....
-----
Block: 3895
3895Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895-Stack size: 15 
3895-Equals Mem:<< []>> 
3895-NonEquals Mem: << [<6,1>]>> 
3895-Equals Sto:<< []>> 
3895-NonEquals Sto: << []>> 
3895-Useless: []
3895-Constancy: [(9, 0), (1, 0)]
3895-ContextAliasing: [(2, 14)]

.....
-----
Block: 5582_0
5582_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582_0-Stack size: 17 
5582_0-Equals Mem:<< []>> 
5582_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
5582_0-Equals Sto:<< []>> 
5582_0-NonEquals Sto: << []>> 
5582_0-Useless: []
5582_0-Constancy: [(11, 0), (3, 0)]
5582_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 5606_0
5606_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606_0-Stack size: 21 
5606_0-Equals Mem:<< []>> 
5606_0-NonEquals Mem: << [<11,5>]>> 
5606_0-Equals Sto:<< []>> 
5606_0-NonEquals Sto: << []>> 
5606_0-Useless: []
5606_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
5606_0-ContextAliasing: [(8, 15)]

.....
-----
Block: 6076
6076Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076-Stack size: 20 
6076-Equals Mem:<< []>> 
6076-NonEquals Mem: << [<5,8>]>> 
6076-Equals Sto:<< []>> 
6076-NonEquals Sto: << []>> 
6076-Useless: []
6076-Constancy: [(14, 0), (6, 0), (5, 0)]
6076-ContextAliasing: []

.....
-----
Block: 2593_0
2593_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2593_0-Stack size: 10 
2593_0-Equals Mem:<< []>> 
2593_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2593_0-Equals Sto:<< []>> 
2593_0-NonEquals Sto: << []>> 
2593_0-Useless: []
2593_0-Constancy: [(4, 0)]
2593_0-ContextAliasing: []

.....
-----
Block: 2691_0
2691_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2691_0-Stack size: 10 
2691_0-Equals Mem:<< []>> 
2691_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2691_0-Equals Sto:<< []>> 
2691_0-NonEquals Sto: << []>> 
2691_0-Useless: []
2691_0-Constancy: [(4, 0)]
2691_0-ContextAliasing: []

.....
-----
Block: 6076_3
6076_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_3-Stack size: 38 
6076_3-Equals Mem:<< []>> 
6076_3-NonEquals Mem: << [<5,8>]>> 
6076_3-Equals Sto:<< []>> 
6076_3-NonEquals Sto: << []>> 
6076_3-Useless: []
6076_3-Constancy: [(32, 0), (10, 0), (6, 0), (5, 0)]
6076_3-ContextAliasing: []

.....
-----
Block: 6293
6293Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293-Stack size: 38 
6293-Equals Mem:<< []>> 
6293-NonEquals Mem: << [<4,7>]>> 
6293-Equals Sto:<< []>> 
6293-NonEquals Sto: << []>> 
6293-Useless: []
6293-Constancy: [(32, 0), (10, 0), (6, 0), (0, 0)]
6293-ContextAliasing: []

.....
-----
Block: 5501
5501Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501-Stack size: 33 
5501-Equals Mem:<< []>> 
5501-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501-Equals Sto:<< []>> 
5501-NonEquals Sto: << []>> 
5501-Useless: []
5501-Constancy: [(27, 0), (5, 0), (1, 0)]
5501-ContextAliasing: []

.....
-----
Block: 6076_8
6076_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_8-Stack size: 60 
6076_8-Equals Mem:<< []>> 
6076_8-NonEquals Mem: << [<5,8>]>> 
6076_8-Equals Sto:<< []>> 
6076_8-NonEquals Sto: << []>> 
6076_8-Useless: []
6076_8-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (5, 0)]
6076_8-ContextAliasing: []

.....
-----
Block: 6293_2
6293_2Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_2-Stack size: 60 
6293_2-Equals Mem:<< []>> 
6293_2-NonEquals Mem: << [<4,7>]>> 
6293_2-Equals Sto:<< []>> 
6293_2-NonEquals Sto: << []>> 
6293_2-Useless: []
6293_2-Constancy: [(54, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (23, 0), (22, 0), (21, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (0, 0)]
6293_2-ContextAliasing: []

.....
-----
Block: 5501_0
5501_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_0-Stack size: 55 
5501_0-Equals Mem:<< []>> 
5501_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_0-Equals Sto:<< []>> 
5501_0-NonEquals Sto: << []>> 
5501_0-Useless: []
5501_0-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (5, 0), (1, 0)]
5501_0-ContextAliasing: []

.....
-----
Block: 6076_9
6076_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_9-Stack size: 59 
6076_9-Equals Mem:<< []>> 
6076_9-NonEquals Mem: << [<5,8>]>> 
6076_9-Equals Sto:<< []>> 
6076_9-NonEquals Sto: << []>> 
6076_9-Useless: []
6076_9-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (5, 0)]
6076_9-ContextAliasing: []

.....
-----
Block: 6293_3
6293_3Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_3-Stack size: 59 
6293_3-Equals Mem:<< []>> 
6293_3-NonEquals Mem: << [<4,7>]>> 
6293_3-Equals Sto:<< []>> 
6293_3-NonEquals Sto: << []>> 
6293_3-Useless: []
6293_3-Constancy: [(53, 0), (40, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (22, 0), (21, 0), (20, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (0, 0)]
6293_3-ContextAliasing: []

.....
-----
Block: 5501_1
5501_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_1-Stack size: 54 
5501_1-Equals Mem:<< []>> 
5501_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_1-Equals Sto:<< []>> 
5501_1-NonEquals Sto: << []>> 
5501_1-Useless: []
5501_1-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (5, 0), (1, 0)]
5501_1-ContextAliasing: []

.....
-----
Block: 6076_10
6076_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_10-Stack size: 58 
6076_10-Equals Mem:<< []>> 
6076_10-NonEquals Mem: << [<5,8>]>> 
6076_10-Equals Sto:<< []>> 
6076_10-NonEquals Sto: << []>> 
6076_10-Useless: []
6076_10-Constancy: [(52, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (5, 0)]
6076_10-ContextAliasing: []

.....
-----
Block: 6293_4
6293_4Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_4-Stack size: 58 
6293_4-Equals Mem:<< []>> 
6293_4-NonEquals Mem: << [<4,7>]>> 
6293_4-Equals Sto:<< []>> 
6293_4-NonEquals Sto: << []>> 
6293_4-Useless: []
6293_4-Constancy: [(52, 0), (39, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (21, 0), (20, 0), (19, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (0, 0)]
6293_4-ContextAliasing: []

.....
-----
Block: 5501_2
5501_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_2-Stack size: 53 
5501_2-Equals Mem:<< []>> 
5501_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_2-Equals Sto:<< []>> 
5501_2-NonEquals Sto: << []>> 
5501_2-Useless: []
5501_2-Constancy: [(47, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (8, 0), (7, 0), (6, 0), (5, 0), (1, 0)]
5501_2-ContextAliasing: []

.....
-----
Block: 6076_13
6076_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_13-Stack size: 56 
6076_13-Equals Mem:<< []>> 
6076_13-NonEquals Mem: << [<5,8>]>> 
6076_13-Equals Sto:<< []>> 
6076_13-NonEquals Sto: << []>> 
6076_13-Useless: []
6076_13-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (5, 0)]
6076_13-ContextAliasing: []

.....
-----
Block: 6293_8
6293_8Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_8-Stack size: 56 
6293_8-Equals Mem:<< []>> 
6293_8-NonEquals Mem: << [<4,7>]>> 
6293_8-Equals Sto:<< []>> 
6293_8-NonEquals Sto: << []>> 
6293_8-Useless: []
6293_8-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (16, 0), (15, 0), (14, 0), (12, 0), (6, 0), (0, 0)]
6293_8-ContextAliasing: []

.....
-----
Block: 5501_3
5501_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_3-Stack size: 51 
5501_3-Equals Mem:<< []>> 
5501_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_3-Equals Sto:<< []>> 
5501_3-NonEquals Sto: << []>> 
5501_3-Useless: []
5501_3-Constancy: [(45, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (7, 0), (1, 0)]
5501_3-ContextAliasing: []

.....
-----
Block: 6076_14
6076_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076_14-Stack size: 55 
6076_14-Equals Mem:<< []>> 
6076_14-NonEquals Mem: << [<5,8>]>> 
6076_14-Equals Sto:<< []>> 
6076_14-NonEquals Sto: << []>> 
6076_14-Useless: []
6076_14-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (5, 0)]
6076_14-ContextAliasing: []

.....
-----
Block: 6293_10
6293_10Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293_10-Stack size: 55 
6293_10-Equals Mem:<< []>> 
6293_10-NonEquals Mem: << [<4,7>]>> 
6293_10-Equals Sto:<< []>> 
6293_10-NonEquals Sto: << []>> 
6293_10-Useless: []
6293_10-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (12, 0), (6, 0), (0, 0)]
6293_10-ContextAliasing: []

.....
-----
Block: 5501_4
5501_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501_4-Stack size: 50 
5501_4-Equals Mem:<< []>> 
5501_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501_4-Equals Sto:<< []>> 
5501_4-NonEquals Sto: << []>> 
5501_4-Useless: []
5501_4-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (15, 0), (10, 0), (9, 0), (8, 0), (7, 0), (1, 0)]
5501_4-ContextAliasing: []

.....
-----
Block: 2593
2593Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2593-Stack size: 9 
2593-Equals Mem:<< []>> 
2593-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2593-Equals Sto:<< []>> 
2593-NonEquals Sto: << []>> 
2593-Useless: []
2593-Constancy: [(4, 0)]
2593-ContextAliasing: []

.....
-----
Block: 2691
2691Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2691-Stack size: 9 
2691-Equals Mem:<< []>> 
2691-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2691-Equals Sto:<< []>> 
2691-NonEquals Sto: << []>> 
2691-Useless: []
2691-Constancy: [(4, 0)]
2691-ContextAliasing: []

.....
-----
Block: 308
308Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x0c', 'DUP2', 'MSTORE', 'PUSH12 0x0446f6e616c64205472756d7', 'PUSH1 0xa4', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
308-Stack size: 2 
308-Equals Mem:<< [<10,4>]>> 
308-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
308-Equals Sto:<< []>> 
308-NonEquals Sto: << []>> 
308-Useless: []
308-Constancy: []
308-ContextAliasing: []

.....
-----
Block: 358
358Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
358-Stack size: 2 
358-Equals Mem:<< []>> 
358-NonEquals Mem: << []>> 
358-Equals Sto:<< []>> 
358-NonEquals Sto: << []>> 
358-Useless: []
358-Constancy: []
358-ContextAliasing: []

.....
-----
Block: 1148_38
1148_38Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_38-Stack size: 3 
1148_38-Equals Mem:<< []>> 
1148_38-NonEquals Mem: << []>> 
1148_38-Equals Sto:<< []>> 
1148_38-NonEquals Sto: << []>> 
1148_38-Useless: []
1148_38-Constancy: []
1148_38-ContextAliasing: []

.....
-----
Block: 1148_78
1148_78Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_78-Stack size: 8 
1148_78-Equals Mem:<< []>> 
1148_78-NonEquals Mem: << []>> 
1148_78-Equals Sto:<< []>> 
1148_78-NonEquals Sto: << []>> 
1148_78-Useless: []
1148_78-Constancy: []
1148_78-ContextAliasing: []

.....
-----
Block: 1148_77
1148_77Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_77-Stack size: 14 
1148_77-Equals Mem:<< []>> 
1148_77-NonEquals Mem: << []>> 
1148_77-Equals Sto:<< []>> 
1148_77-NonEquals Sto: << []>> 
1148_77-Useless: []
1148_77-Constancy: [(4, 0), (1, 0)]
1148_77-ContextAliasing: []

.....
-----
Block: 1148_76
1148_76Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_76-Stack size: 33 
1148_76-Equals Mem:<< []>> 
1148_76-NonEquals Mem: << []>> 
1148_76-Equals Sto:<< []>> 
1148_76-NonEquals Sto: << []>> 
1148_76-Useless: []
1148_76-Constancy: [(23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_76-ContextAliasing: []

.....
-----
Block: 1148_75
1148_75Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_75-Stack size: 28 
1148_75-Equals Mem:<< []>> 
1148_75-NonEquals Mem: << []>> 
1148_75-Equals Sto:<< []>> 
1148_75-NonEquals Sto: << []>> 
1148_75-Useless: []
1148_75-Constancy: [(18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_75-ContextAliasing: []

.....
-----
Block: 1148_74
1148_74Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_74-Stack size: 24 
1148_74-Equals Mem:<< []>> 
1148_74-NonEquals Mem: << []>> 
1148_74-Equals Sto:<< []>> 
1148_74-NonEquals Sto: << []>> 
1148_74-Useless: []
1148_74-Constancy: [(14, 0), (11, 0), (6, 0), (1, 0)]
1148_74-ContextAliasing: []

.....
-----
Block: 6024
6024Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
6024-Stack size: 9 
6024-Equals Mem:<< []>> 
6024-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
6024-Equals Sto:<< []>> 
6024-NonEquals Sto: << []>> 
6024-Useless: []
6024-Constancy: [(2, 0), (1, 0), (0, 0)]
6024-ContextAliasing: []

.....
-----
Block: 1148_73
1148_73Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_73-Stack size: 10 
1148_73-Equals Mem:<< []>> 
1148_73-NonEquals Mem: << []>> 
1148_73-Equals Sto:<< []>> 
1148_73-NonEquals Sto: << []>> 
1148_73-Useless: []
1148_73-Constancy: [(7, 0), (4, 0), (1, 0)]
1148_73-ContextAliasing: []

.....
-----
Block: 1148_72
1148_72Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_72-Stack size: 29 
1148_72-Equals Mem:<< []>> 
1148_72-NonEquals Mem: << []>> 
1148_72-Equals Sto:<< []>> 
1148_72-NonEquals Sto: << []>> 
1148_72-Useless: []
1148_72-Constancy: [(26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_72-ContextAliasing: []

.....
-----
Block: 1148_71
1148_71Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_71-Stack size: 24 
1148_71-Equals Mem:<< []>> 
1148_71-NonEquals Mem: << []>> 
1148_71-Equals Sto:<< []>> 
1148_71-NonEquals Sto: << []>> 
1148_71-Useless: []
1148_71-Constancy: [(21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_71-ContextAliasing: []

.....
-----
Block: 1148_70
1148_70Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_70-Stack size: 20 
1148_70-Equals Mem:<< []>> 
1148_70-NonEquals Mem: << []>> 
1148_70-Equals Sto:<< []>> 
1148_70-NonEquals Sto: << []>> 
1148_70-Useless: []
1148_70-Constancy: [(17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1148_70-ContextAliasing: []

.....
-----
Block: 1148_69
1148_69Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_69-Stack size: 11 
1148_69-Equals Mem:<< []>> 
1148_69-NonEquals Mem: << []>> 
1148_69-Equals Sto:<< []>> 
1148_69-NonEquals Sto: << []>> 
1148_69-Useless: []
1148_69-Constancy: []
1148_69-ContextAliasing: []

.....
-----
Block: 358_1
358_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
358_1-Stack size: 3 
358_1-Equals Mem:<< []>> 
358_1-NonEquals Mem: << []>> 
358_1-Equals Sto:<< []>> 
358_1-NonEquals Sto: << []>> 
358_1-Useless: []
358_1-Constancy: []
358_1-ContextAliasing: []

.....
-----
Block: 1148
1148Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148-Stack size: 10 
1148-Equals Mem:<< []>> 
1148-NonEquals Mem: << []>> 
1148-Equals Sto:<< []>> 
1148-NonEquals Sto: << []>> 
1148-Useless: []
1148-Constancy: [(5, 0)]
1148-ContextAliasing: []

.....
-----
Block: 1148_68
1148_68Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_68-Stack size: 18 
1148_68-Equals Mem:<< []>> 
1148_68-NonEquals Mem: << []>> 
1148_68-Equals Sto:<< []>> 
1148_68-NonEquals Sto: << []>> 
1148_68-Useless: []
1148_68-Constancy: [(13, 0), (4, 0), (1, 0)]
1148_68-ContextAliasing: []

.....
-----
Block: 1148_67
1148_67Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_67-Stack size: 37 
1148_67-Equals Mem:<< []>> 
1148_67-NonEquals Mem: << []>> 
1148_67-Equals Sto:<< []>> 
1148_67-NonEquals Sto: << []>> 
1148_67-Useless: []
1148_67-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_67-ContextAliasing: []

.....
-----
Block: 1148_66
1148_66Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_66-Stack size: 32 
1148_66-Equals Mem:<< []>> 
1148_66-NonEquals Mem: << []>> 
1148_66-Equals Sto:<< []>> 
1148_66-NonEquals Sto: << []>> 
1148_66-Useless: []
1148_66-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_66-ContextAliasing: []

.....
-----
Block: 1148_65
1148_65Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_65-Stack size: 28 
1148_65-Equals Mem:<< []>> 
1148_65-NonEquals Mem: << []>> 
1148_65-Equals Sto:<< []>> 
1148_65-NonEquals Sto: << []>> 
1148_65-Useless: []
1148_65-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1148_65-ContextAliasing: []

.....
-----
Block: 1148_64
1148_64Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_64-Stack size: 17 
1148_64-Equals Mem:<< []>> 
1148_64-NonEquals Mem: << []>> 
1148_64-Equals Sto:<< []>> 
1148_64-NonEquals Sto: << []>> 
1148_64-Useless: []
1148_64-Constancy: [(12, 0), (7, 0), (4, 0), (1, 0)]
1148_64-ContextAliasing: []

.....
-----
Block: 1148_63
1148_63Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_63-Stack size: 36 
1148_63-Equals Mem:<< []>> 
1148_63-NonEquals Mem: << []>> 
1148_63-Equals Sto:<< []>> 
1148_63-NonEquals Sto: << []>> 
1148_63-Useless: []
1148_63-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_63-ContextAliasing: []

.....
-----
Block: 1148_62
1148_62Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_62-Stack size: 31 
1148_62-Equals Mem:<< []>> 
1148_62-NonEquals Mem: << []>> 
1148_62-Equals Sto:<< []>> 
1148_62-NonEquals Sto: << []>> 
1148_62-Useless: []
1148_62-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_62-ContextAliasing: []

.....
-----
Block: 1148_61
1148_61Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_61-Stack size: 27 
1148_61-Equals Mem:<< []>> 
1148_61-NonEquals Mem: << []>> 
1148_61-Equals Sto:<< []>> 
1148_61-NonEquals Sto: << []>> 
1148_61-Useless: []
1148_61-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1148_61-ContextAliasing: []

.....
-----
Block: 1148_60
1148_60Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_60-Stack size: 18 
1148_60-Equals Mem:<< []>> 
1148_60-NonEquals Mem: << []>> 
1148_60-Equals Sto:<< []>> 
1148_60-NonEquals Sto: << []>> 
1148_60-Useless: []
1148_60-Constancy: [(13, 0)]
1148_60-ContextAliasing: []

.....
-----
Block: 1148_58
1148_58Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_58-Stack size: 52 
1148_58-Equals Mem:<< []>> 
1148_58-NonEquals Mem: << []>> 
1148_58-Equals Sto:<< []>> 
1148_58-NonEquals Sto: << []>> 
1148_58-Useless: []
1148_58-Constancy: [(47, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
1148_58-ContextAliasing: []

.....
-----
Block: 1148_56
1148_56Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_56-Stack size: 53 
1148_56-Equals Mem:<< []>> 
1148_56-NonEquals Mem: << []>> 
1148_56-Equals Sto:<< []>> 
1148_56-NonEquals Sto: << []>> 
1148_56-Useless: []
1148_56-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
1148_56-ContextAliasing: []

.....
-----
Block: 1148_55
1148_55Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_55-Stack size: 56 
1148_55-Equals Mem:<< []>> 
1148_55-NonEquals Mem: << []>> 
1148_55-Equals Sto:<< []>> 
1148_55-NonEquals Sto: << []>> 
1148_55-Useless: []
1148_55-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
1148_55-ContextAliasing: []

.....
-----
Block: 1148_54
1148_54Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_54-Stack size: 54 
1148_54-Equals Mem:<< []>> 
1148_54-NonEquals Mem: << []>> 
1148_54-Equals Sto:<< []>> 
1148_54-NonEquals Sto: << []>> 
1148_54-Useless: []
1148_54-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
1148_54-ContextAliasing: []

.....
-----
Block: 1148_53
1148_53Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_53-Stack size: 54 
1148_53-Equals Mem:<< []>> 
1148_53-NonEquals Mem: << []>> 
1148_53-Equals Sto:<< []>> 
1148_53-NonEquals Sto: << []>> 
1148_53-Useless: []
1148_53-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_53-ContextAliasing: []

.....
-----
Block: 1148_52
1148_52Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_52-Stack size: 49 
1148_52-Equals Mem:<< []>> 
1148_52-NonEquals Mem: << []>> 
1148_52-Equals Sto:<< []>> 
1148_52-NonEquals Sto: << []>> 
1148_52-Useless: []
1148_52-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_52-ContextAliasing: []

.....
-----
Block: 1148_48
1148_48Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_48-Stack size: 62 
1148_48-Equals Mem:<< []>> 
1148_48-NonEquals Mem: << []>> 
1148_48-Equals Sto:<< []>> 
1148_48-NonEquals Sto: << []>> 
1148_48-Useless: []
1148_48-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
1148_48-ContextAliasing: []

.....
-----
Block: 1148_47
1148_47Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_47-Stack size: 60 
1148_47-Equals Mem:<< []>> 
1148_47-NonEquals Mem: << []>> 
1148_47-Equals Sto:<< []>> 
1148_47-NonEquals Sto: << []>> 
1148_47-Useless: []
1148_47-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
1148_47-ContextAliasing: []

.....
-----
Block: 1148_46
1148_46Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_46-Stack size: 33 
1148_46-Equals Mem:<< []>> 
1148_46-NonEquals Mem: << []>> 
1148_46-Equals Sto:<< []>> 
1148_46-NonEquals Sto: << []>> 
1148_46-Useless: []
1148_46-Constancy: [(28, 0), (6, 0), (1, 0)]
1148_46-ContextAliasing: []

.....
-----
Block: 1148_45
1148_45Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_45-Stack size: 29 
1148_45-Equals Mem:<< []>> 
1148_45-NonEquals Mem: << []>> 
1148_45-Equals Sto:<< []>> 
1148_45-NonEquals Sto: << []>> 
1148_45-Useless: []
1148_45-Constancy: [(24, 0), (2, 0)]
1148_45-ContextAliasing: []

.....
-----
Block: 1148_44
1148_44Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_44-Stack size: 45 
1148_44-Equals Mem:<< []>> 
1148_44-NonEquals Mem: << []>> 
1148_44-Equals Sto:<< []>> 
1148_44-NonEquals Sto: << []>> 
1148_44-Useless: []
1148_44-Constancy: [(40, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_44-ContextAliasing: []

.....
-----
Block: 1148_43
1148_43Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_43-Stack size: 40 
1148_43-Equals Mem:<< []>> 
1148_43-NonEquals Mem: << []>> 
1148_43-Equals Sto:<< []>> 
1148_43-NonEquals Sto: << []>> 
1148_43-Useless: []
1148_43-Constancy: [(35, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_43-ContextAliasing: []

.....
-----
Block: 1148_41
1148_41Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_41-Stack size: 33 
1148_41-Equals Mem:<< []>> 
1148_41-NonEquals Mem: << []>> 
1148_41-Equals Sto:<< []>> 
1148_41-NonEquals Sto: << []>> 
1148_41-Useless: []
1148_41-Constancy: [(28, 0), (2, 0)]
1148_41-ContextAliasing: []

.....
-----
Block: 1148_40
1148_40Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_40-Stack size: 36 
1148_40-Equals Mem:<< []>> 
1148_40-NonEquals Mem: << []>> 
1148_40-Equals Sto:<< []>> 
1148_40-NonEquals Sto: << []>> 
1148_40-Useless: []
1148_40-Constancy: [(31, 0), (6, 0), (1, 0)]
1148_40-ContextAliasing: []

.....
-----
Block: 1148_39
1148_39Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_39-Stack size: 32 
1148_39-Equals Mem:<< []>> 
1148_39-NonEquals Mem: << []>> 
1148_39-Equals Sto:<< []>> 
1148_39-NonEquals Sto: << []>> 
1148_39-Useless: []
1148_39-Constancy: [(27, 0), (2, 0)]
1148_39-ContextAliasing: []

.....
-----
Block: 1148_42
1148_42Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_42-Stack size: 33 
1148_42-Equals Mem:<< []>> 
1148_42-NonEquals Mem: << []>> 
1148_42-Equals Sto:<< []>> 
1148_42-NonEquals Sto: << []>> 
1148_42-Useless: []
1148_42-Constancy: [(28, 0), (6, 0), (2, 0)]
1148_42-ContextAliasing: []

.....
-----
Block: 1148_49
1148_49Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_49-Stack size: 55 
1148_49-Equals Mem:<< []>> 
1148_49-NonEquals Mem: << []>> 
1148_49-Equals Sto:<< []>> 
1148_49-NonEquals Sto: << []>> 
1148_49-Useless: []
1148_49-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (6, 0), (2, 0)]
1148_49-ContextAliasing: []

.....
-----
Block: 1148_50
1148_50Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_50-Stack size: 54 
1148_50-Equals Mem:<< []>> 
1148_50-NonEquals Mem: << []>> 
1148_50-Equals Sto:<< []>> 
1148_50-NonEquals Sto: << []>> 
1148_50-Useless: []
1148_50-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (6, 0), (2, 0)]
1148_50-ContextAliasing: []

.....
-----
Block: 1148_51
1148_51Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_51-Stack size: 53 
1148_51-Equals Mem:<< []>> 
1148_51-NonEquals Mem: << []>> 
1148_51-Equals Sto:<< []>> 
1148_51-NonEquals Sto: << []>> 
1148_51-Useless: []
1148_51-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (6, 0), (2, 0)]
1148_51-ContextAliasing: []

.....
-----
Block: 1148_57
1148_57Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_57-Stack size: 51 
1148_57-Equals Mem:<< []>> 
1148_57-NonEquals Mem: << []>> 
1148_57-Equals Sto:<< []>> 
1148_57-NonEquals Sto: << []>> 
1148_57-Useless: []
1148_57-Constancy: [(46, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (12, 0), (11, 0), (10, 0), (8, 0), (2, 0)]
1148_57-ContextAliasing: []

.....
-----
Block: 1148_59
1148_59Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_59-Stack size: 50 
1148_59-Equals Mem:<< []>> 
1148_59-NonEquals Mem: << []>> 
1148_59-Equals Sto:<< []>> 
1148_59-NonEquals Sto: << []>> 
1148_59-Useless: []
1148_59-Constancy: [(45, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (8, 0), (2, 0)]
1148_59-ContextAliasing: []

.....
-----
Block: 1148_37
1148_37Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_37-Stack size: 8 
1148_37-Equals Mem:<< []>> 
1148_37-NonEquals Mem: << []>> 
1148_37-Equals Sto:<< []>> 
1148_37-NonEquals Sto: << []>> 
1148_37-Useless: []
1148_37-Constancy: [(4, 0), (1, 0)]
1148_37-ContextAliasing: []

.....
-----
Block: 1148_36
1148_36Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_36-Stack size: 27 
1148_36-Equals Mem:<< []>> 
1148_36-NonEquals Mem: << []>> 
1148_36-Equals Sto:<< []>> 
1148_36-NonEquals Sto: << []>> 
1148_36-Useless: []
1148_36-Constancy: [(23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_36-ContextAliasing: []

.....
-----
Block: 1148_35
1148_35Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_35-Stack size: 22 
1148_35-Equals Mem:<< []>> 
1148_35-NonEquals Mem: << []>> 
1148_35-Equals Sto:<< []>> 
1148_35-NonEquals Sto: << []>> 
1148_35-Useless: []
1148_35-Constancy: [(18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_35-ContextAliasing: []

.....
-----
Block: 1148_34
1148_34Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_34-Stack size: 18 
1148_34-Equals Mem:<< []>> 
1148_34-NonEquals Mem: << []>> 
1148_34-Equals Sto:<< []>> 
1148_34-NonEquals Sto: << []>> 
1148_34-Useless: []
1148_34-Constancy: [(14, 0), (11, 0), (6, 0), (1, 0)]
1148_34-ContextAliasing: []

.....
-----
Block: 1148_33
1148_33Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_33-Stack size: 4 
1148_33-Equals Mem:<< []>> 
1148_33-NonEquals Mem: << []>> 
1148_33-Equals Sto:<< []>> 
1148_33-NonEquals Sto: << []>> 
1148_33-Useless: []
1148_33-Constancy: []
1148_33-ContextAliasing: []

.....
-----
Block: 358_0
358_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
358_0-Stack size: 3 
358_0-Equals Mem:<< []>> 
358_0-NonEquals Mem: << []>> 
358_0-Equals Sto:<< []>> 
358_0-NonEquals Sto: << []>> 
358_0-Useless: []
358_0-Constancy: []
358_0-ContextAliasing: []

.....
-----
Block: 1148_28
1148_28Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_28-Stack size: 11 
1148_28-Equals Mem:<< []>> 
1148_28-NonEquals Mem: << []>> 
1148_28-Equals Sto:<< []>> 
1148_28-NonEquals Sto: << []>> 
1148_28-Useless: []
1148_28-Constancy: [(5, 0)]
1148_28-ContextAliasing: []

.....
-----
Block: 1148_32
1148_32Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_32-Stack size: 19 
1148_32-Equals Mem:<< []>> 
1148_32-NonEquals Mem: << []>> 
1148_32-Equals Sto:<< []>> 
1148_32-NonEquals Sto: << []>> 
1148_32-Useless: []
1148_32-Constancy: [(13, 0), (4, 0), (1, 0)]
1148_32-ContextAliasing: []

.....
-----
Block: 1148_31
1148_31Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_31-Stack size: 38 
1148_31-Equals Mem:<< []>> 
1148_31-NonEquals Mem: << []>> 
1148_31-Equals Sto:<< []>> 
1148_31-NonEquals Sto: << []>> 
1148_31-Useless: []
1148_31-Constancy: [(32, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_31-ContextAliasing: []

.....
-----
Block: 1148_30
1148_30Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_30-Stack size: 33 
1148_30-Equals Mem:<< []>> 
1148_30-NonEquals Mem: << []>> 
1148_30-Equals Sto:<< []>> 
1148_30-NonEquals Sto: << []>> 
1148_30-Useless: []
1148_30-Constancy: [(27, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_30-ContextAliasing: []

.....
-----
Block: 1148_29
1148_29Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_29-Stack size: 29 
1148_29-Equals Mem:<< []>> 
1148_29-NonEquals Mem: << []>> 
1148_29-Equals Sto:<< []>> 
1148_29-NonEquals Sto: << []>> 
1148_29-Useless: []
1148_29-Constancy: [(23, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1148_29-ContextAliasing: []

.....
-----
Block: 1148_27
1148_27Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_27-Stack size: 18 
1148_27-Equals Mem:<< []>> 
1148_27-NonEquals Mem: << []>> 
1148_27-Equals Sto:<< []>> 
1148_27-NonEquals Sto: << []>> 
1148_27-Useless: []
1148_27-Constancy: [(12, 0), (7, 0), (4, 0), (1, 0)]
1148_27-ContextAliasing: []

.....
-----
Block: 1148_26
1148_26Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_26-Stack size: 37 
1148_26-Equals Mem:<< []>> 
1148_26-NonEquals Mem: << []>> 
1148_26-Equals Sto:<< []>> 
1148_26-NonEquals Sto: << []>> 
1148_26-Useless: []
1148_26-Constancy: [(31, 0), (26, 0), (23, 0), (20, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_26-ContextAliasing: []

.....
-----
Block: 1148_25
1148_25Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_25-Stack size: 32 
1148_25-Equals Mem:<< []>> 
1148_25-NonEquals Mem: << []>> 
1148_25-Equals Sto:<< []>> 
1148_25-NonEquals Sto: << []>> 
1148_25-Useless: []
1148_25-Constancy: [(26, 0), (21, 0), (18, 0), (15, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_25-ContextAliasing: []

.....
-----
Block: 1148_24
1148_24Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_24-Stack size: 28 
1148_24-Equals Mem:<< []>> 
1148_24-NonEquals Mem: << []>> 
1148_24-Equals Sto:<< []>> 
1148_24-NonEquals Sto: << []>> 
1148_24-Useless: []
1148_24-Constancy: [(22, 0), (17, 0), (14, 0), (11, 0), (6, 0), (1, 0)]
1148_24-ContextAliasing: []

.....
-----
Block: 1148_23
1148_23Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_23-Stack size: 19 
1148_23-Equals Mem:<< []>> 
1148_23-NonEquals Mem: << []>> 
1148_23-Equals Sto:<< []>> 
1148_23-NonEquals Sto: << []>> 
1148_23-Useless: []
1148_23-Constancy: [(13, 0)]
1148_23-ContextAliasing: []

.....
-----
Block: 1148_21
1148_21Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_21-Stack size: 53 
1148_21-Equals Mem:<< []>> 
1148_21-NonEquals Mem: << []>> 
1148_21-Equals Sto:<< []>> 
1148_21-NonEquals Sto: << []>> 
1148_21-Useless: []
1148_21-Constancy: [(47, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (13, 0), (12, 0), (11, 0), (10, 0), (6, 0), (1, 0)]
1148_21-ContextAliasing: []

.....
-----
Block: 1148_19
1148_19Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_19-Stack size: 54 
1148_19-Equals Mem:<< []>> 
1148_19-NonEquals Mem: << []>> 
1148_19-Equals Sto:<< []>> 
1148_19-NonEquals Sto: << []>> 
1148_19-Useless: []
1148_19-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (14, 0), (13, 0), (12, 0), (10, 0), (6, 0), (1, 0)]
1148_19-ContextAliasing: []

.....
-----
Block: 1148_18
1148_18Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_18-Stack size: 57 
1148_18-Equals Mem:<< []>> 
1148_18-NonEquals Mem: << []>> 
1148_18-Equals Sto:<< []>> 
1148_18-NonEquals Sto: << []>> 
1148_18-Useless: []
1148_18-Constancy: [(51, 0), (38, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (12, 0), (6, 0), (1, 0)]
1148_18-ContextAliasing: []

.....
-----
Block: 1148_17
1148_17Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_17-Stack size: 55 
1148_17-Equals Mem:<< []>> 
1148_17-NonEquals Mem: << []>> 
1148_17-Equals Sto:<< []>> 
1148_17-NonEquals Sto: << []>> 
1148_17-Useless: []
1148_17-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (15, 0), (14, 0), (13, 0), (10, 0), (6, 0), (1, 0)]
1148_17-ContextAliasing: []

.....
-----
Block: 1148_16
1148_16Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_16-Stack size: 55 
1148_16-Equals Mem:<< []>> 
1148_16-NonEquals Mem: << []>> 
1148_16-Equals Sto:<< []>> 
1148_16-NonEquals Sto: << []>> 
1148_16-Useless: []
1148_16-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_16-ContextAliasing: []

.....
-----
Block: 1148_15
1148_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_15-Stack size: 50 
1148_15-Equals Mem:<< []>> 
1148_15-NonEquals Mem: << []>> 
1148_15-Equals Sto:<< []>> 
1148_15-NonEquals Sto: << []>> 
1148_15-Useless: []
1148_15-Constancy: [(44, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (26, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_15-ContextAliasing: []

.....
-----
Block: 1148_11
1148_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_11-Stack size: 63 
1148_11-Equals Mem:<< []>> 
1148_11-NonEquals Mem: << []>> 
1148_11-Equals Sto:<< []>> 
1148_11-NonEquals Sto: << []>> 
1148_11-Useless: []
1148_11-Constancy: [(57, 0), (44, 0), (43, 0), (42, 0), (41, 0), (40, 0), (39, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (26, 0), (25, 0), (24, 0), (18, 0), (17, 0), (16, 0), (12, 0), (6, 0), (1, 0)]
1148_11-ContextAliasing: []

.....
-----
Block: 1148_10
1148_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_10-Stack size: 61 
1148_10-Equals Mem:<< []>> 
1148_10-NonEquals Mem: << []>> 
1148_10-Equals Sto:<< []>> 
1148_10-NonEquals Sto: << []>> 
1148_10-Useless: []
1148_10-Constancy: [(55, 0), (42, 0), (41, 0), (40, 0), (39, 0), (38, 0), (37, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (24, 0), (23, 0), (22, 0), (16, 0), (15, 0), (14, 0), (10, 0), (6, 0), (1, 0)]
1148_10-ContextAliasing: []

.....
-----
Block: 1148_9
1148_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_9-Stack size: 34 
1148_9-Equals Mem:<< []>> 
1148_9-NonEquals Mem: << []>> 
1148_9-Equals Sto:<< []>> 
1148_9-NonEquals Sto: << []>> 
1148_9-Useless: []
1148_9-Constancy: [(28, 0), (6, 0), (1, 0)]
1148_9-ContextAliasing: []

.....
-----
Block: 1148_8
1148_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_8-Stack size: 30 
1148_8-Equals Mem:<< []>> 
1148_8-NonEquals Mem: << []>> 
1148_8-Equals Sto:<< []>> 
1148_8-NonEquals Sto: << []>> 
1148_8-Useless: []
1148_8-Constancy: [(24, 0), (2, 0)]
1148_8-ContextAliasing: []

.....
-----
Block: 1148_7
1148_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_7-Stack size: 46 
1148_7-Equals Mem:<< []>> 
1148_7-NonEquals Mem: << []>> 
1148_7-Equals Sto:<< []>> 
1148_7-NonEquals Sto: << []>> 
1148_7-Useless: []
1148_7-Constancy: [(40, 0), (19, 0), (17, 0), (16, 0), (15, 0), (13, 0), (12, 0), (6, 0), (1, 0)]
1148_7-ContextAliasing: []

.....
-----
Block: 1148_6
1148_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_6-Stack size: 41 
1148_6-Equals Mem:<< []>> 
1148_6-NonEquals Mem: << []>> 
1148_6-Equals Sto:<< []>> 
1148_6-NonEquals Sto: << []>> 
1148_6-Useless: []
1148_6-Constancy: [(35, 0), (14, 0), (12, 0), (6, 0), (1, 0)]
1148_6-ContextAliasing: []

.....
-----
Block: 1148_4
1148_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_4-Stack size: 34 
1148_4-Equals Mem:<< []>> 
1148_4-NonEquals Mem: << []>> 
1148_4-Equals Sto:<< []>> 
1148_4-NonEquals Sto: << []>> 
1148_4-Useless: []
1148_4-Constancy: [(28, 0), (2, 0)]
1148_4-ContextAliasing: []

.....
-----
Block: 1148_3
1148_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_3-Stack size: 37 
1148_3-Equals Mem:<< []>> 
1148_3-NonEquals Mem: << []>> 
1148_3-Equals Sto:<< []>> 
1148_3-NonEquals Sto: << []>> 
1148_3-Useless: []
1148_3-Constancy: [(31, 0), (6, 0), (1, 0)]
1148_3-ContextAliasing: []

.....
-----
Block: 1148_2
1148_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_2-Stack size: 33 
1148_2-Equals Mem:<< []>> 
1148_2-NonEquals Mem: << []>> 
1148_2-Equals Sto:<< []>> 
1148_2-NonEquals Sto: << []>> 
1148_2-Useless: []
1148_2-Constancy: [(27, 0), (2, 0)]
1148_2-ContextAliasing: []

.....
-----
Block: 1148_1
1148_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_1-Stack size: 15 
1148_1-Equals Mem:<< []>> 
1148_1-NonEquals Mem: << []>> 
1148_1-Equals Sto:<< []>> 
1148_1-NonEquals Sto: << []>> 
1148_1-Useless: []
1148_1-Constancy: [(9, 0), (1, 0)]
1148_1-ContextAliasing: []

.....
-----
Block: 1148_0
1148_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_0-Stack size: 11 
1148_0-Equals Mem:<< []>> 
1148_0-NonEquals Mem: << []>> 
1148_0-Equals Sto:<< []>> 
1148_0-NonEquals Sto: << []>> 
1148_0-Useless: []
1148_0-Constancy: [(5, 0)]
1148_0-ContextAliasing: []

.....
-----
Block: 1148_5
1148_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_5-Stack size: 34 
1148_5-Equals Mem:<< []>> 
1148_5-NonEquals Mem: << []>> 
1148_5-Equals Sto:<< []>> 
1148_5-NonEquals Sto: << []>> 
1148_5-Useless: []
1148_5-Constancy: [(28, 0), (6, 0), (2, 0)]
1148_5-ContextAliasing: []

.....
-----
Block: 1148_12
1148_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_12-Stack size: 56 
1148_12-Equals Mem:<< []>> 
1148_12-NonEquals Mem: << []>> 
1148_12-Equals Sto:<< []>> 
1148_12-NonEquals Sto: << []>> 
1148_12-Useless: []
1148_12-Constancy: [(50, 0), (37, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (29, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (19, 0), (18, 0), (17, 0), (11, 0), (10, 0), (9, 0), (6, 0), (2, 0)]
1148_12-ContextAliasing: []

.....
-----
Block: 1148_13
1148_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_13-Stack size: 55 
1148_13-Equals Mem:<< []>> 
1148_13-NonEquals Mem: << []>> 
1148_13-Equals Sto:<< []>> 
1148_13-NonEquals Sto: << []>> 
1148_13-Useless: []
1148_13-Constancy: [(49, 0), (36, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (28, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (18, 0), (17, 0), (16, 0), (10, 0), (9, 0), (8, 0), (6, 0), (2, 0)]
1148_13-ContextAliasing: []

.....
-----
Block: 1148_14
1148_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_14-Stack size: 54 
1148_14-Equals Mem:<< []>> 
1148_14-NonEquals Mem: << []>> 
1148_14-Equals Sto:<< []>> 
1148_14-NonEquals Sto: << []>> 
1148_14-Useless: []
1148_14-Constancy: [(48, 0), (35, 0), (34, 0), (33, 0), (32, 0), (31, 0), (30, 0), (27, 0), (26, 0), (25, 0), (24, 0), (23, 0), (22, 0), (17, 0), (16, 0), (15, 0), (9, 0), (8, 0), (7, 0), (6, 0), (2, 0)]
1148_14-ContextAliasing: []

.....
-----
Block: 1148_20
1148_20Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_20-Stack size: 52 
1148_20-Equals Mem:<< []>> 
1148_20-NonEquals Mem: << []>> 
1148_20-Equals Sto:<< []>> 
1148_20-NonEquals Sto: << []>> 
1148_20-Useless: []
1148_20-Constancy: [(46, 0), (33, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (25, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (12, 0), (11, 0), (10, 0), (8, 0), (2, 0)]
1148_20-ContextAliasing: []

.....
-----
Block: 1148_22
1148_22Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148_22-Stack size: 51 
1148_22-Equals Mem:<< []>> 
1148_22-NonEquals Mem: << []>> 
1148_22-Equals Sto:<< []>> 
1148_22-NonEquals Sto: << []>> 
1148_22-Useless: []
1148_22-Constancy: [(45, 0), (32, 0), (31, 0), (30, 0), (29, 0), (28, 0), (27, 0), (24, 0), (23, 0), (22, 0), (21, 0), (20, 0), (19, 0), (18, 0), (17, 0), (16, 0), (11, 0), (10, 0), (9, 0), (8, 0), (2, 0)]
1148_22-ContextAliasing: []

.....
-----
Block: 1230
1230Instr:<<['JUMPDEST', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xb8', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xb8', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
1230-Stack size: 3 
1230-Equals Mem:<< []>> 
1230-NonEquals Mem: << []>> 
1230-Equals Sto:<< [<3,23>]>> 
1230-NonEquals Sto: << []>> 
1230-Useless: []
1230-Constancy: []
1230-ContextAliasing: []

.....
-----
Block: 1630
1630Instr:<<['JUMPDEST', 'PUSH7 0x038d7ea4c68000', 'PUSH1 0x14', 'DUP2', 'SWAP1', 'SSTORE', 'PUSH1 0x15', 'SSTORE', 'JUMP']>> 
1630-Stack size: 2 
1630-Equals Mem:<< []>> 
1630-NonEquals Mem: << []>> 
1630-Equals Sto:<< []>> 
1630-NonEquals Sto: << [<5,7>]>> 
1630-Useless: []
1630-Constancy: []
1630-ContextAliasing: []

.....
-----
Block: 1843
1843Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'SWAP1', 'DUP2', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH2 0x076e', 'ADDRESS', 'DUP3', 'PUSH7 0x038d7ea4c68000', 'PUSH2 0x0a12', 'JUMP']>> 
1843-Stack size: 2 
1843-Equals Mem:<< []>> 
1843-NonEquals Mem: << []>> 
1843-Equals Sto:<< [<3,17>]>> 
1843-NonEquals Sto: << []>> 
1843-Useless: []
1843-Constancy: []
1843-ContextAliasing: []

.....
-----
Block: 2219
2219Instr:<<['JUMPDEST', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH1 0x12', 'SLOAD', 'AND', 'PUSH4 0xf305d719', 'SELFBALANCE', 'ADDRESS', 'PUSH2 0x08db', 'DUP2', 'PUSH2 0x05a3', 'JUMP']>> 
2219-Stack size: 4 
2219-Equals Mem:<< []>> 
2219-NonEquals Mem: << []>> 
2219-Equals Sto:<< [<3,21>]>> 
2219-NonEquals Sto: << [<3,23>, <21,23>]>> 
2219-Useless: []
2219-Constancy: []
2219-ContextAliasing: []

.....
-----
Block: 3334
3334Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x10', 'SLOAD', 'ISZERO', 'PUSH2 0x0d1a', 'JUMPI']>> 
3334-Stack size: 10 
3334-Equals Mem:<< []>> 
3334-NonEquals Mem: << []>> 
3334-Equals Sto:<< []>> 
3334-NonEquals Sto: << [<3,5>]>> 
3334-Useless: []
3334-Constancy: [(4, 0)]
3334-ContextAliasing: []

.....
-----
Block: 3358
3358Instr:<<['JUMPDEST', 'PUSH1 0x0d', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'DUP2', 'AND', 'SWAP2', 'AND', 'EQ', 'DUP1', 'ISZERO', 'PUSH2 0x0d4c', 'JUMPI']>> 
3358-Stack size: 11 
3358-Equals Mem:<< []>> 
3358-NonEquals Mem: << []>> 
3358-Equals Sto:<< []>> 
3358-NonEquals Sto: << [<2,4>]>> 
3358-Useless: []
3358-Constancy: [(5, 0)]
3358-ContextAliasing: []

.....
-----
Block: 3678
3678Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0a', 'SLOAD', 'PUSH2 0x0e6e', 'SWAP2', 'SWAP1', 'PUSH2 0x17d0', 'JUMP']>> 
3678-Stack size: 10 
3678-Equals Mem:<< []>> 
3678-NonEquals Mem: << []>> 
3678-Equals Sto:<< []>> 
3678-NonEquals Sto: << [<2,4>]>> 
3678-Useless: []
3678-Constancy: [(4, 0)]
3678-ContextAliasing: []

.....
-----
Block: 3858
3858Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x0c', 'DUP2', 'SWAP1', 'SSTORE', 'PUSH1 0x0d', 'SSTORE']>> 
3858-Stack size: 10 
3858-Equals Mem:<< []>> 
3858-NonEquals Mem: << []>> 
3858-Equals Sto:<< []>> 
3858-NonEquals Sto: << [<5,7>]>> 
3858-Useless: []
3858-Constancy: [(4, 0)]
3858-ContextAliasing: []

.....
-----
Block: 4472
4472Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
4472-Stack size: 18 
4472-Equals Mem:<< []>> 
4472-NonEquals Mem: << []>> 
4472-Equals Sto:<< [<5,12>]>> 
4472-NonEquals Sto: << []>> 
4472-Useless: []
4472-Constancy: [(12, 0)]
4472-ContextAliasing: []

.....
-----
Block: 4948
4948Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'PUSH2 0x136c', 'DUP11', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'PUSH2 0x14b2', 'JUMP']>> 
4948-Stack size: 26 
4948-Equals Mem:<< []>> 
4948-NonEquals Mem: << []>> 
4948-Equals Sto:<< []>> 
4948-NonEquals Sto: << [<13,15>]>> 
4948-Useless: []
4948-Constancy: [(20, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0)]
4948-ContextAliasing: []

.....
-----
Block: 5275
5275Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH2 0x14ab', 'SWAP1', 'DUP3', 'PUSH2 0x13ea', 'JUMP']>> 
5275-Stack size: 28 
5275-Equals Mem:<< []>> 
5275-NonEquals Mem: << []>> 
5275-Equals Sto:<< []>> 
5275-NonEquals Sto: << [<2,4>]>> 
5275-Useless: []
5275-Constancy: [(22, 0)]
5275-ContextAliasing: []

.....
-----
Block: 3858_0
3858_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x0c', 'DUP2', 'SWAP1', 'SSTORE', 'PUSH1 0x0d', 'SSTORE']>> 
3858_0-Stack size: 9 
3858_0-Equals Mem:<< []>> 
3858_0-NonEquals Mem: << []>> 
3858_0-Equals Sto:<< []>> 
3858_0-NonEquals Sto: << [<5,7>]>> 
3858_0-Useless: []
3858_0-Constancy: [(4, 0)]
3858_0-ContextAliasing: []

.....
-----
Block: 4948_0
4948_0Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'PUSH2 0x136c', 'DUP11', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'PUSH2 0x14b2', 'JUMP']>> 
4948_0-Stack size: 25 
4948_0-Equals Mem:<< []>> 
4948_0-NonEquals Mem: << []>> 
4948_0-Equals Sto:<< []>> 
4948_0-NonEquals Sto: << [<13,15>]>> 
4948_0-Useless: []
4948_0-Constancy: [(20, 0), (7, 0), (6, 0), (5, 0), (4, 0), (3, 0), (2, 0)]
4948_0-ContextAliasing: []

.....
-----
Block: 5275_0
5275_0Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH2 0x14ab', 'SWAP1', 'DUP3', 'PUSH2 0x13ea', 'JUMP']>> 
5275_0-Stack size: 27 
5275_0-Equals Mem:<< []>> 
5275_0-NonEquals Mem: << []>> 
5275_0-Equals Sto:<< []>> 
5275_0-NonEquals Sto: << [<2,4>]>> 
5275_0-Useless: []
5275_0-Constancy: [(22, 0)]
5275_0-ContextAliasing: []

.....
-----
Block: 3334_0
3334_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x10', 'SLOAD', 'ISZERO', 'PUSH2 0x0d1a', 'JUMPI']>> 
3334_0-Stack size: 9 
3334_0-Equals Mem:<< []>> 
3334_0-NonEquals Mem: << []>> 
3334_0-Equals Sto:<< []>> 
3334_0-NonEquals Sto: << [<3,5>]>> 
3334_0-Useless: []
3334_0-Constancy: [(4, 0)]
3334_0-ContextAliasing: []

.....
-----
Block: 3358_0
3358_0Instr:<<['JUMPDEST', 'PUSH1 0x0d', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'DUP2', 'AND', 'SWAP2', 'AND', 'EQ', 'DUP1', 'ISZERO', 'PUSH2 0x0d4c', 'JUMPI']>> 
3358_0-Stack size: 10 
3358_0-Equals Mem:<< []>> 
3358_0-NonEquals Mem: << []>> 
3358_0-Equals Sto:<< []>> 
3358_0-NonEquals Sto: << [<2,4>]>> 
3358_0-Useless: []
3358_0-Constancy: [(5, 0)]
3358_0-ContextAliasing: []

.....
-----
Block: 4472_0
4472_0Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
4472_0-Stack size: 17 
4472_0-Equals Mem:<< []>> 
4472_0-NonEquals Mem: << []>> 
4472_0-Equals Sto:<< [<5,12>]>> 
4472_0-NonEquals Sto: << []>> 
4472_0-Useless: []
4472_0-Constancy: [(12, 0)]
4472_0-ContextAliasing: []

.....
-----
Block: 3678_0
3678_0Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0a', 'SLOAD', 'PUSH2 0x0e6e', 'SWAP2', 'SWAP1', 'PUSH2 0x17d0', 'JUMP']>> 
3678_0-Stack size: 9 
3678_0-Equals Mem:<< []>> 
3678_0-NonEquals Mem: << []>> 
3678_0-Equals Sto:<< []>> 
3678_0-NonEquals Sto: << [<2,4>]>> 
3678_0-Useless: []
3678_0-Constancy: [(4, 0)]
3678_0-ContextAliasing: []

.....
-----
Block: 4472_1
4472_1Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
4472_1-Stack size: 10 
4472_1-Equals Mem:<< []>> 
4472_1-NonEquals Mem: << []>> 
4472_1-Equals Sto:<< [<5,12>]>> 
4472_1-NonEquals Sto: << []>> 
4472_1-Useless: []
4472_1-Constancy: []
4472_1-ContextAliasing: []

.....
********************************** END
Memory Analysis: 2.187716349028051s

*************************************************************
FILERES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_Ownable;12;13;2;4;2;1;0.007017345982603729
FILERES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_SafeMath;1;1;0;1;0;0;0.0006555579602718353
FILERES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP;354;1624;71;563;409;29;3.47728549601743


Aux path: /tmp/0x00//ethir_d16e0c0436ad4d719a7e15b72189813c
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 66
66Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
66-Stack size: 1 
66-Equals Mem:<< [<5,16>]>> 
66-NonEquals Mem: << [<15,5>, <15,16>]>> 
66-Equals Sto:<< []>> 
66-NonEquals Sto: << []>> 
66-Useless: []
66-Constancy: []
66-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>]}
{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('0', 'sload0'), 1), 0)}
Storage order: [(('0', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', 's(8)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
[RULE]: Simplification rule type 1: {'id': 'SUB_0', 'opcode': '03', 'disasm': 'SUB', 'inpt_sk': ['s(5)', 's(5)'], 'outpt_sk': ['s(4)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Simplification rule type 1: {'id': 'ADD_0', 'opcode': '01', 'disasm': 'ADD', 'inpt_sk': [32, 0], 'outpt_sk': ['s(3)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}
********************IT*********************
(('0', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('s(5)', 's(5)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('s(5)', 's(5)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_e4dd81ec5cca4e37a42819e7f65949c5/jsons/isolated_block_0_0_input.json --- (6, 5)
{1: ((('0', 'sload0'), 1), 0)}
(('0', 'sload0'), 1)
sload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload1'), 1)
mload1
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_66_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_66_statistics.csv

Estimated initial gas: 2166
Estimated gas optimized: 2125

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 34

Initial number of instructions: 25
Final number of instructions: 11

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_Ownable_66;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;Ownable;66;2;False;True;True;JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN;JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2166;30;25;2125;34;11;41;-4;14;True;False;False;False;0.13840126601280645;4;0;2100;2100

Block: 114
114Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
114-Stack size: 2 
114-Equals Mem:<< [<1,26>]>> 
114-NonEquals Mem: << [<6,1>, <6,26>, <13,1>, <13,26>, <17,1>, <17,26>, <22,1>, <22,26>]>> 
114-Equals Sto:<< []>> 
114-NonEquals Sto: << []>> 
114-Useless: []
114-Constancy: [(0, 64)]
114-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<1,26>], 'memory_deps_noneqs': [<1,6>, <6,26>, <1,13>, <13,26>, <1,17>, <17,26>, <1,22>, <22,26>]}
{'memory_deps_eqs': [<1,26>], 'memory_deps_noneqs': [<1,6>, <6,26>, <1,13>, <13,26>, <1,17>, <17,26>, <1,22>, <22,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(9)', '32', 'mstore'), 2), (('s(11)', '32', 'mstore'), 2), (('s(13)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(5)', '+'), 2), (('s(4)', 's(5)', '-'), 2), (('s(5)', '4', '+'), 2), (('s(5)', '36', '+'), 2), (('s(5)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('100', 's(5)', '+'), 2), (('s(4)', 's(2)', '-'), 2), (('s(5)', '4', '+'), 2), (('s(5)', '36', '+'), 2), (('s(5)', '68', '+'), 2)]
(('64', 'mload1'), 1)
mload1
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('100', 's(5)', '+'), 2), (('s(4)', 's(2)', '-'), 2), (('s(5)', '4', '+'), 2), (('s(5)', '36', '+'), 2), (('s(5)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT

Optimized code stored in /tmp/0x00/Ownable_114_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_114_statistics.csv

Estimated initial gas: 93
Estimated gas optimized: 93

Estimated initial size in bytes: 75
Estimated size optimized in bytes: 75

Initial number of instructions: 32
Final number of instructions: 32

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_Ownable_114;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;Ownable;114;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT;93;75;32;93;75;32;0;0;0;True;False;False;False;2.1314226490212604;1;3;0;0

Block: 940
940Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
940-Stack size: 4 
940-Equals Mem:<< [<12,27>, <17,31>]>> 
940-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
940-Equals Sto:<< []>> 
940-NonEquals Sto: << []>> 
940-Useless: []
940-Constancy: []
940-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '4', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(11)', 'sload0'), 1)
sload0
[(('s(11)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x4 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/TRUMP_940_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_940_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2211

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_940;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;940;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x04 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x4 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP;2261;42;36;2211;55;30;50;-13;6;True;False;False;False;2.1336872540414333;4;2;2100;2100

Block: 435
435Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
435-Stack size: 2 
435-Equals Mem:<< []>> 
435-NonEquals Mem: << [<5,2>]>> 
435-Equals Sto:<< []>> 
435-NonEquals Sto: << []>> 
435-Useless: []
435-Constancy: []
435-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP

Optimized code stored in /tmp/0x00/TRUMP_435_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_435_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_435;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;435;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.01975160400616005;0;0;0;0

Block: 1730
1730Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1730-Stack size: 2 
1730-Equals Mem:<< []>> 
1730-NonEquals Mem: << [<6,1>]>> 
1730-Equals Sto:<< []>> 
1730-NonEquals Sto: << []>> 
1730-Useless: []
1730-Constancy: []
1730-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP

Optimized code stored in /tmp/0x00/TRUMP_1730_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1730_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1730;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1730;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP;PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027132954041007906;1;0;0;0

Block: 1772
1772Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
1772-Stack size: 2 
1772-Equals Mem:<< []>> 
1772-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1772-Equals Sto:<< []>> 
1772-NonEquals Sto: << []>> 
1772-Useless: []
1772-Constancy: []
1772-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '23', 'mstore'), 2), (('s(10)', '52670383177537149983225730548340231168144935501260929414795948319927108108288', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP

Optimized code stored in /tmp/0x00/TRUMP_1772_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1772_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1772;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1772;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74726164696e6720697320616c7265616479206f70656e000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.103837735950947;1;3;0;0

Block: 1962
1962Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x07ce', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
1962-Stack size: 7 
1962-Equals Mem:<< [<18,6>]>> 
1962-NonEquals Mem: << []>> 
1962-Equals Sto:<< []>> 
1962-NonEquals Sto: << []>> 
1962-Useless: []
1962-Constancy: []
1962-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1962 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2073
2073Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x083d', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
2073-Stack size: 10 
2073-Equals Mem:<< [<18,6>]>> 
2073-NonEquals Mem: << []>> 
2073-Equals Sto:<< []>> 
2073-NonEquals Sto: << []>> 
2073-Useless: []
2073-Constancy: []
2073-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2073 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2183
2183Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x08ab', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
2183-Stack size: 7 
2183-Equals Mem:<< [<18,6>]>> 
2183-NonEquals Mem: << []>> 
2183-Equals Sto:<< []>> 
2183-NonEquals Sto: << []>> 
2183-Useless: []
2183-Constancy: []
2183-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2183 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2388
2388Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0979', 'SWAP2', 'SWAP1', 'PUSH2 0x1776', 'JUMP']>> 
2388-Stack size: 8 
2388-Equals Mem:<< [<19,7>]>> 
2388-NonEquals Mem: << []>> 
2388-Equals Sto:<< []>> 
2388-NonEquals Sto: << []>> 
2388-Useless: []
2388-Constancy: []
2388-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2388 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2538
2538Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x0a0e', 'SWAP2', 'SWAP1', 'PUSH2 0x17a1', 'JUMP']>> 
2538-Stack size: 7 
2538-Equals Mem:<< [<18,6>]>> 
2538-NonEquals Mem: << []>> 
2538-Equals Sto:<< []>> 
2538-NonEquals Sto: << []>> 
2538-Useless: []
2538-Constancy: []
2538-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2538 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 854
854Instr:<<['JUMPDEST', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
854-Stack size: 3 
854-Equals Mem:<< []>> 
854-NonEquals Mem: << [<3,7>]>> 
854-Equals Sto:<< []>> 
854-NonEquals Sto: << []>> 
854-Useless: []
854-Constancy: []
854-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '6', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
{10: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_854 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 398
398Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
398-Stack size: 2 
398-Equals Mem:<< []>> 
398-NonEquals Mem: << [<7,2>]>> 
398-Equals Sto:<< []>> 
398-NonEquals Sto: << []>> 
398-Useless: []
398-Constancy: []
398-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP

Optimized code stored in /tmp/0x00/TRUMP_398_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_398_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_398;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;398;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x0166 JUMP;39;16;12;39;16;12;0;0;0;True;False;False;False;0.05029929202282801;0;0;0;0

Block: 763
763Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x05', 'DUP2', 'MSTORE', 'PUSH5 0x05452554d5', 'PUSH1 0xdc', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x0159', 'JUMP']>> 
763-Stack size: 2 
763-Equals Mem:<< [<10,4>]>> 
763-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
763-Equals Sto:<< []>> 
763-NonEquals Sto: << []>> 
763-Useless: []
763-Constancy: []
763-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('220', '22634910933', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(3)', 'mstore'), 2), (('s(2)', '5', 'mstore'), 2), (('s(6)', '38139749473086558040390830930478536545020722197791473480538190220984380817408', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(2)', '+'), 2), (('s(2)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(2)', '+'), 2), (('s(2)', '32', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_763 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5582
5582Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
5582-Stack size: 4 
5582-Equals Mem:<< []>> 
5582-NonEquals Mem: << [<12,7>, <5,7>]>> 
5582-Equals Sto:<< []>> 
5582-NonEquals Sto: << []>> 
5582-Useless: []
5582-Constancy: []
5582-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
{}
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/TRUMP_5582_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_5582_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5582;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;5582;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.14775475702481344;0;1;0;0

Block: 5606
5606Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x15dd', 'JUMP']>> 
5606-Stack size: 8 
5606-Equals Mem:<< []>> 
5606-NonEquals Mem: << [<11,5>]>> 
5606-Equals Sto:<< []>> 
5606-NonEquals Sto: << []>> 
5606-Useless: []
5606-Constancy: [(2, 32), (3, 0)]
5606-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
{}
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x15dd JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x15dd JUMP

Optimized code stored in /tmp/0x00/TRUMP_5606_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_5606_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5606;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;5606;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x15dd JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x15dd JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6696423070388846;0;0;0;0

Block: 725
725Instr:<<['JUMPDEST', 'POP', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
725-Stack size: 2 
725-Equals Mem:<< []>> 
725-NonEquals Mem: << [<15,5>]>> 
725-Equals Sto:<< []>> 
725-NonEquals Sto: << []>> 
725-Useless: []
725-Constancy: []
725-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('0', 'sload0'), 1), 0)}
Storage order: [(('0', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('0', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('0', 'sload0'), 1), 0)}
(('0', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('0', 'sload0'), 1), (('s(6)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_725 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1607
1607Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1607-Stack size: 2 
1607-Equals Mem:<< []>> 
1607-NonEquals Mem: << [<6,1>]>> 
1607-Equals Sto:<< []>> 
1607-NonEquals Sto: << []>> 
1607-Useless: []
1607-Constancy: []
1607-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP

Optimized code stored in /tmp/0x00/TRUMP_1607_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1607_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1607;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1607;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP;PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026928249979391694;1;0;0;0

Block: 1494
1494Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1494-Stack size: 2 
1494-Equals Mem:<< []>> 
1494-NonEquals Mem: << [<6,1>]>> 
1494-Equals Sto:<< []>> 
1494-NonEquals Sto: << []>> 
1494-Useless: []
1494-Constancy: []
1494-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP

Optimized code stored in /tmp/0x00/TRUMP_1494_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1494_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1494;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1494;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP;PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027377968945074826;1;0;0;0

Block: 1278
1278Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1278-Stack size: 3 
1278-Equals Mem:<< []>> 
1278-NonEquals Mem: << [<6,1>]>> 
1278-Equals Sto:<< []>> 
1278-NonEquals Sto: << []>> 
1278-Useless: []
1278-Constancy: []
1278-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP

Optimized code stored in /tmp/0x00/TRUMP_1278_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1278_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1278;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1278;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP;PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027064222958870232;1;0;0;0

Block: 1311
1311Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374206265206c6f776572207468656e2063757272656e742066696e616c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x040e8c2f', 'PUSH1 0xe3', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
1311-Stack size: 3 
1311-Equals Mem:<< []>> 
1311-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1311-Equals Sto:<< []>> 
1311-NonEquals Sto: << []>> 
1311-Useless: []
1311-Constancy: []
1311-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('227', '68062255', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '35035607279084747874933731187167137796829473490090680179000387918448414318956', 'mstore'), 2), (('s(12)', '14679638118768055752942192167532618343319304809270273536438852817622023536640', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4d757374206265206c6f776572207468656e2063757272656e742066696e616c PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x040e8c2f PUSH1 0xe3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4d757374206265206c6f776572207468656e2063757272656e742066696e616c PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x040e8c2f PUSH1 0xe3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_1311_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1311_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1311;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1311;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4d757374206265206c6f776572207468656e2063757272656e742066696e616c PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x040e8c2f PUSH1 0xe3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4d757374206265206c6f776572207468656e2063757272656e742066696e616c PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x040e8c2f PUSH1 0xe3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1285138999810442;2;4;0;0

Block: 1207
1207Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1207-Stack size: 3 
1207-Equals Mem:<< []>> 
1207-NonEquals Mem: << [<6,1>]>> 
1207-Equals Sto:<< []>> 
1207-NonEquals Sto: << []>> 
1207-Useless: []
1207-Constancy: []
1207-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP

Optimized code stored in /tmp/0x00/TRUMP_1207_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1207_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1207;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1207;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP;PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02723431499907747;1;0;0;0

Block: 524
524Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x09', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x0166', 'JUMP']>> 
524-Stack size: 2 
524-Equals Mem:<< []>> 
524-NonEquals Mem: << [<6,3>]>> 
524-Equals Sto:<< []>> 
524-NonEquals Sto: << []>> 
524-Useless: []
524-Constancy: []
524-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '9', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_524 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1125
1125Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP1', 'PUSH2 0x1726', 'JUMP']>> 
1125-Stack size: 3 
1125-Equals Mem:<< []>> 
1125-NonEquals Mem: << [<6,1>]>> 
1125-Equals Sto:<< []>> 
1125-NonEquals Sto: << []>> 
1125-Useless: []
1125-Constancy: []
1125-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP

Optimized code stored in /tmp/0x00/TRUMP_1125_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_1125_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1125;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;1125;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP1 PUSH2 0x1726 JUMP;PUSH2 0x47c PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x1726 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.028152432991191745;1;0;0;0

Block: 1157
1157Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'JUMP']>> 
1157-Stack size: 3 
1157-Equals Mem:<< []>> 
1157-NonEquals Mem: << [<10,13>]>> 
1157-Equals Sto:<< [<18,23>]>> 
1157-NonEquals Sto: << []>> 
1157-Useless: []
1157-Constancy: []
1157-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [<17,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1), 22: ((('s(4)', 's(5)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(4)', 's(5)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(1)', 'mstore'), 2), (('32', '6', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(7)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1), 22: ((('s(4)', 's(5)', 'sstore'), 2), 2)}
(('s(4)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(7)', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1157 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2884
2884Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2884-Stack size: 9 
2884-Equals Mem:<< []>> 
2884-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2884-Equals Sto:<< []>> 
2884-NonEquals Sto: << []>> 
2884-Useless: []
2884-Constancy: [(4, 0)]
2884-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_2884_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_2884_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2884;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;2884;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.1221518340171315;2;4;0;0

Block: 2984
2984Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2984-Stack size: 9 
2984-Equals Mem:<< []>> 
2984-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2984-Equals Sto:<< []>> 
2984-NonEquals Sto: << []>> 
2984-Useless: []
2984-Constancy: [(4, 0)]
2984-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_2984_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_2984_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2984;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;2984;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1259139130124822;2;4;0;0

Block: 3075
3075Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x29', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x7468616e207a65726f', 'PUSH1 0xb8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3075-Stack size: 9 
3075-Equals Mem:<< []>> 
3075-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3075-Equals Sto:<< []>> 
3075-NonEquals Sto: << []>> 
3075-Useless: []
3075-Constancy: [(4, 0)]
3075-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('184', '2147343726488764904047', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '41', 'mstore'), 2), (('s(10)', '38196372293521921433411288587964294122161893341433871906636551770442498929184', 'mstore'), 2), (('s(12)', '52652714968805969334285930938125631089128480032472023743979857642711366500352', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_3075_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_3075_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 89
Estimated size optimized in bytes: 89

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3075;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;3075;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616e7366657220616d6f756e74206d757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616e207a65726f PUSH1 0xb8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;89;33;104;89;33;0;0;0;True;False;False;False;2.1281310829799622;2;4;0;0

Block: 3212
3212Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x0ccb', 'JUMPI']>> 
3212-Stack size: 9 
3212-Equals Mem:<< []>> 
3212-NonEquals Mem: << [<10,13>]>> 
3212-Equals Sto:<< []>> 
3212-NonEquals Sto: << []>> 
3212-Useless: []
3212-Constancy: [(4, 0)]
3212-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(15)', 'mstore'), 2), (('32', '6', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3212 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3246
3246Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3246-Stack size: 10 
3246-Equals Mem:<< []>> 
3246-NonEquals Mem: << [<11,14>]>> 
3246-Equals Sto:<< []>> 
3246-NonEquals Sto: << []>> 
3246-Useless: []
3246-Constancy: [(5, 0)]
3246-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '6', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3246 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3280
3280Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0c', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH12 0x213630b1b5b634b9ba32b217', 'PUSH1 0xa1', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3280-Stack size: 9 
3280-Equals Mem:<< []>> 
3280-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
3280-Equals Sto:<< []>> 
3280-NonEquals Sto: << []>> 
3280-Useless: []
3280-Constancy: [(4, 0)]
3280-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('161', '10278517270122166971836576279', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '12', 'mstore'), 2), (('s(10)', '30044139639235019157633772932868150439627844242532914895540698305547739332608', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0c PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213630b1b5b634b9ba32b217 PUSH1 0xa1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0xc PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c69737465642e0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP

Optimized code stored in /tmp/0x00/TRUMP_3280_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_3280_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 54
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3280;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;3280;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0c PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x213630b1b5b634b9ba32b217 PUSH1 0xa1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0xc PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c69737465642e0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP;89;54;28;77;97;24;12;-43;4;True;False;False;False;2.094773788994644;2;3;0;0

Block: 3411
3411Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x05', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
3411-Stack size: 10 
3411-Equals Mem:<< []>> 
3411-NonEquals Mem: << [<11,14>]>> 
3411-Equals Sto:<< []>> 
3411-NonEquals Sto: << []>> 
3411-Useless: []
3411-Constancy: [(5, 0)]
3411-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '5', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3411 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3477
3477Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x19', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3477-Stack size: 9 
3477-Equals Mem:<< []>> 
3477-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
3477-Equals Sto:<< []>> 
3477-NonEquals Sto: << []>> 
3477-Useless: []
3477-Constancy: [(4, 0)]
3477-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '25', 'mstore'), 2), (('s(10)', '31422294206539596639392900159971917510378963875690889976315079369673265905664', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP

Optimized code stored in /tmp/0x00/TRUMP_3477_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_3477_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3477;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;3477;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865205f6d61785478416d6f756e742e00000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.093717015988659;1;3;0;0

Block: 3578
3578Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
3578-Stack size: 9 
3578-Equals Mem:<< []>> 
3578-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
3578-Equals Sto:<< []>> 
3578-NonEquals Sto: << []>> 
3578-Useless: []
3578-Constancy: [(4, 0)]
3578-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '26', 'mstore'), 2), (('s(10)', '31422294206539596639392900160051577764598592111541354583441290478353383424000', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP

Optimized code stored in /tmp/0x00/TRUMP_3578_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_3578_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3578;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;3578;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320746865206d617857616c6c657453697a652e000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.0948006229591556;1;3;0;0

Block: 3701
3701Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x06', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'PUSH1 0x01', 'OR', 'SWAP1', 'SSTORE']>> 
3701-Stack size: 9 
3701-Equals Mem:<< []>> 
3701-NonEquals Mem: << [<10,13>]>> 
3701-Equals Sto:<< [<18,25>]>> 
3701-NonEquals Sto: << []>> 
3701-Useless: []
3701-Constancy: [(4, 0)]
3701-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [<18,25>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{18: ((('s(5)', 'sload0'), 1), 1), 25: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(5)', 's(6)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '6', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(9)', 'and'), 2), (('1', 's(7)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{18: ((('s(5)', 'sload0'), 1), 1), 25: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
(('s(5)', 'sload0'), 1)
sload0
[(('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(9)', 'and'), 2), (('1', 's(7)', 'or'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3701 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1443
1443Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'PUSH2 0x03e6', 'SWAP1', 'PUSH2 0x0f9b', 'JUMP']>> 
1443-Stack size: 3 
1443-Equals Mem:<< []>> 
1443-NonEquals Mem: << [<11,14>]>> 
1443-Equals Sto:<< []>> 
1443-NonEquals Sto: << []>> 
1443-Useless: []
1443-Constancy: []
1443-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1443 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4007
4007Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x65666c656374696f6e73', 'PUSH1 0xb0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
4007-Stack size: 7 
4007-Equals Mem:<< []>> 
4007-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
4007-Equals Sto:<< []>> 
4007-NonEquals Sto: << []>> 
4007-Useless: []
4007-Constancy: [(3, 0), (0, 0)]
4007-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('176', '478848393423832921108083', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '42', 'mstore'), 2), (('s(10)', '29593690747763536770200911942998446292484964844061988840046503391719982899314', 'mstore'), 2), (('s(12)', '45864564229551173125737521983127142047231388901599435807126209818687898124288', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_4007_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_4007_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 90
Estimated size optimized in bytes: 90

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4007;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;4007;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666c656374696f6e73 PUSH1 0xb0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;90;33;104;90;33;0;0;0;True;False;False;False;2.123249782016501;2;4;0;0

Block: 4282
4282Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x10de', 'SWAP2', 'SWAP1', 'PUSH2 0x175b', 'JUMP']>> 
4282-Stack size: 10 
4282-Equals Mem:<< [<18,6>]>> 
4282-NonEquals Mem: << []>> 
4282-Equals Sto:<< []>> 
4282-NonEquals Sto: << []>> 
4282-Useless: []
4282-Constancy: []
4282-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4282 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6155
6155Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6155-Stack size: 10 
6155-Equals Mem:<< []>> 
6155-NonEquals Mem: << [<5,8>]>> 
6155-Equals Sto:<< []>> 
6155-NonEquals Sto: << []>> 
6155-Useless: []
6155-Constancy: []
6155-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_6155 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4375
4375Instr:<<['JUMPDEST', 'PUSH1 0x12', 'SLOAD', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x114f', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x181f', 'JUMP']>> 
4375-Stack size: 6 
4375-Equals Mem:<< []>> 
4375-NonEquals Mem: << [<9,4>]>> 
4375-Equals Sto:<< []>> 
4375-NonEquals Sto: << []>> 
4375-Useless: []
4375-Constancy: []
4375-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<3,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{1: ((('18', 'sload0'), 1), 0)}
Storage order: [(('18', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(13)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('18', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('18', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('18', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('18', 'sload0'), 1), 0)}
(('18', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('18', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0), (('18', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x114f SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x181f JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x114f SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x181f JUMP

Optimized code stored in /tmp/0x00/TRUMP_4375_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_4375_statistics.csv

Estimated initial gas: 2208
Estimated gas optimized: 2208

Estimated initial size in bytes: 56
Estimated size optimized in bytes: 56

Initial number of instructions: 37
Final number of instructions: 37

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4375;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;4375;2;True;False;False;JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x114f SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x181f JUMP;JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x114f SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x181f JUMP;2208;56;37;2208;56;37;0;0;0;True;False;False;False;2.1986807149951346;3;0;2100;2100

Block: 6175
6175Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
6175-Stack size: 15 
6175-Equals Mem:<< []>> 
6175-NonEquals Mem: << [<13,21>, <7,21>, <24,21>, <18,21>]>> 
6175-Equals Sto:<< []>> 
6175-NonEquals Sto: << []>> 
6175-Useless: []
6175-Constancy: [(4, 0)]
6175-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('s(15)', 's(1)', 'mstore'), 2), (('s(16)', '160', 'mstore'), 2), (('s(2)', 'mload0'), 1), (('s(17)', 's(12)', 'mstore'), 2)]
Memory dep: [(2, 4), (1, 4), (0, 4), (1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(2, 4), (1, 2), (0, 1)]
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized code stored in /tmp/0x00/TRUMP_6175_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_6175_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 41
Estimated size optimized in bytes: 41

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_6175;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;6175;2;True;False;False;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;102;41;36;102;41;36;0;0;0;True;False;False;False;2.27015182597097;0;3;0;0

Block: 6225
6225Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x1848', 'JUMP']>> 
6225-Stack size: 21 
6225-Equals Mem:<< []>> 
6225-NonEquals Mem: << [<9,1>]>> 
6225-Equals Sto:<< []>> 
6225-NonEquals Sto: << []>> 
6225-Useless: []
6225-Constancy: [(5, 0), (10, 0), (3, 32)]
6225-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(9)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x1848 JUMP

Optimized sequence (basic block per line):
PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x1848 JUMP

Optimized code stored in /tmp/0x00/TRUMP_6225_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_6225_statistics.csv

Estimated initial gas: 71
Estimated gas optimized: 53

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 39

Initial number of instructions: 22
Final number of instructions: 16

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_6225;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;6225;2;True;True;False;DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x1848 JUMP;PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x1848 JUMP;71;28;22;53;39;16;18;-11;6;True;False;False;False;2.0964557899860665;2;0;0;0

Block: 4537
4537Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1a', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x1328', 'JUMP']>> 
4537-Stack size: 11 
4537-Equals Mem:<< [<11,6>]>> 
4537-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
4537-Equals Sto:<< []>> 
4537-NonEquals Sto: << []>> 
4537-Useless: []
4537-Constancy: []
4537-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '26', 'mstore'), 2), (('s(12)', '37714057306925736537727338326753656978887423192446994710127794316522513498112', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x1328 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x1328 JUMP

Optimized code stored in /tmp/0x00/TRUMP_4537_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_4537_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4537;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;4537;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x1328 JUMP;JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1a DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000 DUP2 MSTORE POP PUSH2 0x1328 JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.130915349989664;0;1;0;0

Block: 5033
5033Instr:<<['JUMPDEST', 'PUSH0', 'PUSH2 0x1016', 'DUP4', 'DUP4', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'PUSH1 0x40', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'PUSH1 0x1e', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000', 'DUP2', 'MSTORE', 'POP', 'PUSH2 0x0f2c', 'JUMP']>> 
5033-Stack size: 26 
5033-Equals Mem:<< [<11,6>]>> 
5033-NonEquals Mem: << [<11,15>, <15,20>, <15,6>, <20,6>, <11,20>]>> 
5033-Equals Sto:<< []>> 
5033-NonEquals Sto: << []>> 
5033-Useless: []
5033-Constancy: []
5033-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>]}
{'memory_deps_eqs': [<5,10>], 'memory_deps_noneqs': [<10,14>, <14,19>, <5,14>, <5,19>, <10,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2), (('s(8)', '30', 'mstore'), 2), (('s(12)', '37714057306925736537727343956344029380455708191757305005271024775623175766016', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(8)', '+'), 2), (('32', 's(8)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x0f2c JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x0f2c JUMP

Optimized code stored in /tmp/0x00/TRUMP_5033_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_5033_statistics.csv

Estimated initial gas: 73
Estimated gas optimized: 73

Estimated initial size in bytes: 65
Estimated size optimized in bytes: 65

Initial number of instructions: 24
Final number of instructions: 24

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5033;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;5033;2;True;True;False;JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x0f2c JUMP;JUMPDEST PUSH0 PUSH2 0x1016 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1e DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000 DUP2 MSTORE POP PUSH2 0x0f2c JUMP;73;65;24;73;65;24;0;0;0;True;False;False;False;2.1311545170028694;0;1;0;0

Block: 4617
4617Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP16', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP6', 'SWAP12', 'POP', 'SWAP4', 'SWAP10', 'POP', 'SWAP2', 'SWAP8', 'POP', 'SWAP6', 'POP', 'SWAP4', 'POP', 'SWAP2', 'POP', 'PUSH2 0x123a', 'SWAP1', 'DUP8', 'PUSH2 0x13a9', 'JUMP']>> 
4617-Stack size: 29 
4617-Equals Mem:<< []>> 
4617-NonEquals Mem: << [<11,14>]>> 
4617-Equals Sto:<< []>> 
4617-NonEquals Sto: << []>> 
4617-Useless: []
4617-Constancy: [(9, 0), (11, 0), (7, 0), (24, 0), (8, 0), (10, 0), (6, 0)]
4617-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(15)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(15)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(15)', 'sload0'), 1), 1)}
(('s(15)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(15)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4617 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4666
4666Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP12', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP11', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x1268', 'SWAP1', 'DUP7', 'PUSH2 0x13ea', 'JUMP']>> 
4666-Stack size: 24 
4666-Equals Mem:<< [<12,28>]>> 
4666-NonEquals Mem: << [<12,15>, <15,28>]>> 
4666-Equals Sto:<< [<23,30>]>> 
4666-NonEquals Sto: << []>> 
4666-Useless: []
4666-Constancy: [(19, 0)]
4666-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>]}
{'memory_deps_eqs': [<11,27>], 'memory_deps_noneqs': [<11,14>, <14,27>], 'storage_deps_eqs': [<22,29>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{22: ((('s(18)', 's(9)', 'sstore'), 2), 1), 29: ((('s(13)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(18)', 's(9)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(15)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{22: ((('s(18)', 's(9)', 'sstore'), 2), 1), 29: ((('s(13)', 'sload0'), 1), 3)}
(('s(13)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(13)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1268 SWAP1 DUP7 PUSH2 0x13ea JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1268 SWAP1 DUP7 PUSH2 0x13ea JUMP

Optimized code stored in /tmp/0x00/TRUMP_4666_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_4666_statistics.csv

Estimated initial gas: 5258
Estimated gas optimized: 5258

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 46

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4666;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;4666;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1268 SWAP1 DUP7 PUSH2 0x13ea JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x02 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1268 SWAP1 DUP7 PUSH2 0x13ea JUMP;5258;46;36;5258;46;36;0;0;0;True;True;False;False;2.2435620979522355;4;2;5100;5100

Block: 4712
4712Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP10', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'PUSH2 0x1289', 'DUP2', 'PUSH2 0x1448', 'JUMP']>> 
4712-Stack size: 24 
4712-Equals Mem:<< []>> 
4712-NonEquals Mem: << [<11,14>]>> 
4712-Equals Sto:<< []>> 
4712-NonEquals Sto: << []>> 
4712-Useless: []
4712-Constancy: [(19, 0)]
4712-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(14)', 's(8)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(14)', 's(8)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(11)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(14)', 's(8)', 'sstore'), 2), 1)}
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4712 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4912
4912Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
4912-Stack size: 18 
4912-Equals Mem:<< []>> 
4912-NonEquals Mem: << [<6,1>]>> 
4912-Equals Sto:<< []>> 
4912-NonEquals Sto: << []>> 
4912-Useless: []
4912-Constancy: [(1, 0), (6, 0)]
4912-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP2 SWAP1 PUSH2 0x15ce JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x15ce JUMP

Optimized code stored in /tmp/0x00/TRUMP_4912_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_4912_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4912;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;4912;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP2 SWAP1 PUSH2 0x15ce JUMP;PUSH2 0x47c SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x15ce JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07135251798899844;1;0;0;0

Block: 5214
5214Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'POP', 'PUSH2 0x147a', 'SWAP1', 'DUP3', 'PUSH2 0x13ea', 'JUMP']>> 
5214-Stack size: 28 
5214-Equals Mem:<< []>> 
5214-NonEquals Mem: << [<5,8>]>> 
5214-Equals Sto:<< []>> 
5214-NonEquals Sto: << []>> 
5214-Useless: []
5214-Constancy: [(1, 0), (23, 0)]
5214-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('address', 'address'), 0)]
{11: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('address', 'address'), 0)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5214 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5242
5242Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x02', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SSTORE', 'POP', 'POP', 'POP', 'JUMP']>> 
5242-Stack size: 28 
5242-Equals Mem:<< []>> 
5242-NonEquals Mem: << [<5,8>]>> 
5242-Equals Sto:<< []>> 
5242-NonEquals Sto: << []>> 
5242-Useless: []
5242-Constancy: [(23, 0)]
5242-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(5)', 's(3)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '2', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{11: ((('s(5)', 's(3)', 'sstore'), 2), 1)}
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5242 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5121
5121Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5121-Stack size: 28 
5121-Equals Mem:<< []>> 
5121-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
5121-Equals Sto:<< []>> 
5121-NonEquals Sto: << []>> 
5121-Useless: []
5121-Constancy: [(1, 0)]
5121-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP

Optimized code stored in /tmp/0x00/TRUMP_5121_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_5121_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5121;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;5121;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x047c JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x47c JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.0953001419547945;1;3;0;0

Block: 4755
4755Instr:<<['JUMPDEST', 'DUP8', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP10', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'DUP6', 'PUSH1 0x40', 'MLOAD', 'PUSH2 0x12d8', 'SWAP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'SWAP1', 'JUMP']>> 
4755-Stack size: 23 
4755-Equals Mem:<< []>> 
4755-NonEquals Mem: << [<22,18>]>> 
4755-Equals Sto:<< []>> 
4755-NonEquals Sto: << []>> 
4755-Useless: []
4755-Constancy: [(18, 0)]
4755-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<17,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<17,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(15)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(15)', '+'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(15)', '+'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP8 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP10 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP6 PUSH1 0x40 MLOAD PUSH2 0x12d8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP10 AND DUP9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef PUSH1 0x40 MLOAD PUSH1 0x20 DUP8 DUP3 MSTORE ADD PUSH2 0x12d8 JUMP

Optimized code stored in /tmp/0x00/TRUMP_4755_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_4755_statistics.csv

Estimated initial gas: 84
Estimated gas optimized: 57

Estimated initial size in bytes: 69
Estimated size optimized in bytes: 94

Initial number of instructions: 27
Final number of instructions: 18

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4755;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;4755;2;True;True;False;JUMPDEST DUP8 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP10 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef DUP6 PUSH1 0x40 MLOAD PUSH2 0x12d8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP10 AND DUP9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND SWAP1 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef PUSH1 0x40 MLOAD PUSH1 0x20 DUP8 DUP3 MSTORE ADD PUSH2 0x12d8 JUMP;84;69;27;57;94;18;27;-25;9;True;False;False;False;2.170490504009649;4;0;0;0

Block: 3895
3895Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x047c', 'SWAP2', 'SWAP1', 'PUSH2 0x15ce', 'JUMP']>> 
3895-Stack size: 15 
3895-Equals Mem:<< []>> 
3895-NonEquals Mem: << [<6,1>]>> 
3895-Equals Sto:<< []>> 
3895-NonEquals Sto: << []>> 
3895-Useless: []
3895-Constancy: [(1, 0)]
3895-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP2 SWAP1 PUSH2 0x15ce JUMP

Optimized sequence (basic block per line):
PUSH2 0x47c SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x15ce JUMP

Optimized code stored in /tmp/0x00/TRUMP_3895_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_3895_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3895;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;3895;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x047c SWAP2 SWAP1 PUSH2 0x15ce JUMP;PUSH2 0x47c SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x15ce JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07344377902336419;1;0;0;0

Block: 6076
6076Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6076-Stack size: 14 
6076-Equals Mem:<< []>> 
6076-NonEquals Mem: << [<5,8>]>> 
6076-Equals Sto:<< []>> 
6076-NonEquals Sto: << []>> 
6076-Useless: []
6076-Constancy: []
6076-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_6076 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6293
6293Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
6293-Stack size: 22 
6293-Equals Mem:<< []>> 
6293-NonEquals Mem: << [<4,7>]>> 
6293-Equals Sto:<< []>> 
6293-NonEquals Sto: << []>> 
6293-Useless: []
6293-Constancy: [(0, 0)]
6293-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_6293 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5501
5501Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x77', 'PUSH1 0xf8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
5501-Stack size: 32 
5501-Equals Mem:<< []>> 
5501-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5501-Equals Sto:<< []>> 
5501-NonEquals Sto: << []>> 
5501-Useless: []
5501-Constancy: [(1, 0)]
5501-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('248', '119', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '33', 'mstore'), 2), (('s(10)', '37714057306925736537727341711534603569002632158006504148307520321239491439727', 'mstore'), 2), (('s(12)', '53825228981408700216425575062632269666168469434418855940216611316178368856064', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_5501_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_5501_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 81
Estimated size optimized in bytes: 81

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5501;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;5501;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xf8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;81;33;104;81;33;0;0;0;True;False;False;False;2.123800454020966;2;4;0;0

Block: 2593
2593Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2593-Stack size: 7 
2593-Equals Mem:<< []>> 
2593-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2593-Equals Sto:<< []>> 
2593-NonEquals Sto: << []>> 
2593-Useless: []
2593-Constancy: []
2593-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_2593_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_2593_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2593;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;2593;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1217425279901363;2;4;0;0

Block: 2691
2691Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x047c', 'JUMP']>> 
2691-Stack size: 7 
2691-Equals Mem:<< []>> 
2691-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
2691-Equals Sto:<< []>> 
2691-NonEquals Sto: << []>> 
2691-Useless: []
2691-Constancy: []
2691-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP

Optimized code stored in /tmp/0x00/TRUMP_2691_optimized.txt
Optimality results stored in /tmp/0x00/TRUMP_2691_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2691;0x0088bc66027e679da5fa7bdae8ed36539d445699.sol;TRUMP;2691;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x047c JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.124103925016243;2;4;0;0

Block: 308
308Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'DUP1', 'DUP3', 'ADD', 'SWAP1', 'SWAP2', 'MSTORE', 'PUSH1 0x0c', 'DUP2', 'MSTORE', 'PUSH12 0x0446f6e616c64205472756d7', 'PUSH1 0xa4', 'SHL', 'PUSH1 0x20', 'DUP3', 'ADD', 'MSTORE']>> 
308-Stack size: 2 
308-Equals Mem:<< [<10,4>]>> 
308-NonEquals Mem: << [<10,13>, <10,20>, <13,4>, <13,20>, <20,4>]>> 
308-Equals Sto:<< []>> 
308-NonEquals Sto: << []>> 
308-Useless: []
308-Constancy: []
308-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>]}
{'memory_deps_eqs': [<3,9>], 'memory_deps_noneqs': [<9,12>, <9,19>, <3,12>, <12,19>, <3,19>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('164', '1323730793205398907707152087', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(2)', 'mstore'), 2), (('s(1)', '12', 'mstore'), 2), (('s(5)', '30954155546480405811836154381571360669377769058458888585493690350859129454592', 'mstore'), 2)]
Memory dep: [(2, 3), (1, 3), (1, 2), (0, 1), (0, 2), (0, 3)]
Memory dep simplified: [(2, 3), (1, 2), (0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(1)', '+'), 2), (('s(1)', '32', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('64', 's(1)', '+'), 2), (('s(1)', '32', '+'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_308 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 358
358Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
358-Stack size: 2 
358-Equals Mem:<< []>> 
358-NonEquals Mem: << []>> 
358-Equals Sto:<< []>> 
358-NonEquals Sto: << []>> 
358-Useless: []
358-Constancy: []
358-ContextAliasing: []

Block: 6024
6024Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
6024-Stack size: 9 
6024-Equals Mem:<< []>> 
6024-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
6024-Equals Sto:<< []>> 
6024-NonEquals Sto: << []>> 
6024-Useless: []
6024-Constancy: [(2, 0), (1, 0), (0, 0)]
6024-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,7>, <1,13>, <7,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,7>, <1,13>, <7,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(8)', 'mload1'), 1), (('s(6)', 'mload2'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_6024 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1148
1148Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
1148-Stack size: 3 
1148-Equals Mem:<< []>> 
1148-NonEquals Mem: << []>> 
1148-Equals Sto:<< []>> 
1148-NonEquals Sto: << []>> 
1148-Useless: []
1148-Constancy: []
1148-ContextAliasing: []

Block: 1230
1230Instr:<<['JUMPDEST', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH1 0x01', 'PUSH1 0xb8', 'SHL', 'MUL', 'PUSH1 0xff', 'PUSH1 0xb8', 'SHL', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
1230-Stack size: 3 
1230-Equals Mem:<< []>> 
1230-NonEquals Mem: << []>> 
1230-Equals Sto:<< [<3,23>]>> 
1230-NonEquals Sto: << []>> 
1230-Useless: []
1230-Constancy: []
1230-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,22>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('184', '255', 'shl')
[RULE]: Evaluate expression ('184', '1', 'shl')
{2: ((('19', 'sload0'), 1), 0), 22: ((('19', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('19', 'sload0'), 1), (('19', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('19', 'sload0'), 1)
sload0
[(('19', 'sload0'), 1), (('s(3)', 115792089237316195417318403201955081311167928794867302570293128389404032761855, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('24519928653854221733733552434404946937899825954937634816', 's(8)', '*'), 2), (('s(2)', 's(5)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_e4dd81ec5cca4e37a42819e7f65949c5/jsons/isolated_block_0_0_input.json --- (7, 5)
{2: ((('19', 'sload0'), 1), 0), 22: ((('19', 's(1)', 'sstore'), 2), 1)}
(('19', 'sload0'), 1)
sload0
[(('19', 'sload0'), 1), (('s(3)', 115792089237316195417318403201955081311167928794867302570293128389404032761855, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('24519928653854221733733552434404946937899825954937634816', 's(8)', '*'), 2), (('s(2)', 's(5)', 'or'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1230 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1630
1630Instr:<<['JUMPDEST', 'PUSH7 0x038d7ea4c68000', 'PUSH1 0x14', 'DUP2', 'SWAP1', 'SSTORE', 'PUSH1 0x15', 'SSTORE', 'JUMP']>> 
1630-Stack size: 2 
1630-Equals Mem:<< []>> 
1630-NonEquals Mem: << []>> 
1630-Equals Sto:<< []>> 
1630-NonEquals Sto: << [<5,7>]>> 
1630-Useless: []
1630-Constancy: []
1630-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,6>]}
{4: ((('20', '1000000000000000', 'sstore'), 2), 0), 6: ((('21', '1000000000000000', 'sstore'), 2), 1)}
Storage order: [(('20', '1000000000000000', 'sstore'), 2), (('21', '1000000000000000', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{4: ((('20', '1000000000000000', 'sstore'), 2), 0), 6: ((('21', '1000000000000000', 'sstore'), 2), 1)}
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1630 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1843
1843Instr:<<['JUMPDEST', 'PUSH1 0x12', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH20 0x7a250d5630b4cf539739df2c5dacb4c659f2488d', 'SWAP1', 'DUP2', 'OR', 'SWAP1', 'SWAP2', 'SSTORE', 'PUSH2 0x076e', 'ADDRESS', 'DUP3', 'PUSH7 0x038d7ea4c68000', 'PUSH2 0x0a12', 'JUMP']>> 
1843-Stack size: 2 
1843-Equals Mem:<< []>> 
1843-NonEquals Mem: << []>> 
1843-Equals Sto:<< [<3,17>]>> 
1843-NonEquals Sto: << []>> 
1843-Useless: []
1843-Constancy: []
1843-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,16>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('18', 'sload0'), 1), 0), 16: ((('18', 's(7)', 'sstore'), 2), 1)}
Storage order: [(('18', 'sload0'), 1), (('18', 's(7)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('18', 'sload0'), 1)
sload0
[(('address', 'address'), 0), (('18', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(11)', 'and'), 2), (('697323163401596485410334513241460920685086001293', 's(8)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('18', 'sload0'), 1), 0), 16: ((('18', 's(7)', 'sstore'), 2), 1)}
(('18', 'sload0'), 1)
sload0
[(('address', 'address'), 0), (('18', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(11)', 'and'), 2), (('697323163401596485410334513241460920685086001293', 's(8)', 'or'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_1843 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 2219
2219Instr:<<['JUMPDEST', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP3', 'DUP4', 'AND', 'OR', 'SWAP1', 'SSTORE', 'PUSH1 0x12', 'SLOAD', 'AND', 'PUSH4 0xf305d719', 'SELFBALANCE', 'ADDRESS', 'PUSH2 0x08db', 'DUP2', 'PUSH2 0x05a3', 'JUMP']>> 
2219-Stack size: 4 
2219-Equals Mem:<< []>> 
2219-NonEquals Mem: << []>> 
2219-Equals Sto:<< [<3,21>]>> 
2219-NonEquals Sto: << [<3,23>, <21,23>]>> 
2219-Useless: []
2219-Constancy: []
2219-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,20>], 'storage_deps_noneqs': [<2,22>, <20,22>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{2: ((('19', 'sload0'), 1), 0), 20: ((('19', 's(14)', 'sstore'), 2), 1), 22: ((('18', 'sload1'), 1), 2)}
Storage order: [(('19', 'sload0'), 1), (('19', 's(14)', 'sstore'), 2), (('18', 'sload1'), 1)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('19', 'sload0'), 1)
sload0
[(('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('18', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('19', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(21)', 'and'), 2), (('s(15)', 's(18)', 'or'), 2)]
(('18', 'sload1'), 1)
sload1
[(('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('18', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('19', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(21)', 'and'), 2), (('s(15)', 's(18)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('19', 'sload0'), 1), 0), 20: ((('19', 's(14)', 'sstore'), 2), 1), 22: ((('18', 'sload1'), 1), 2)}
(('19', 'sload0'), 1)
sload0
[(('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('18', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('19', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(21)', 'and'), 2), (('s(15)', 's(18)', 'or'), 2)]
(('18', 'sload1'), 1)
sload1
[(('address', 'address'), 0), (('selfbalance', 'selfbalance'), 0), (('18', 'sload1'), 1), (('s(11)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('19', 'sload0'), 1), ((115792089237316195423570985007226406215939081747436879206741300988257197096960, 's(21)', 'and'), 2), (('s(15)', 's(18)', 'or'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_2219 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3334
3334Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x0c', 'SSTORE', 'PUSH1 0x10', 'SLOAD', 'ISZERO', 'PUSH2 0x0d1a', 'JUMPI']>> 
3334-Stack size: 9 
3334-Equals Mem:<< []>> 
3334-NonEquals Mem: << []>> 
3334-Equals Sto:<< []>> 
3334-NonEquals Sto: << [<3,5>]>> 
3334-Useless: []
3334-Constancy: [(4, 0)]
3334-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{2: ((('12', '0', 'sstore'), 2), 0), 4: ((('16', 'sload0'), 1), 1)}
Storage order: [(('12', '0', 'sstore'), 2), (('16', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('16', 'sload0'), 1)
sload0
[(('16', 'sload0'), 1), (('s(2)', 'iszero'), 1)]
{2: ((('12', '0', 'sstore'), 2), 0), 4: ((('16', 'sload0'), 1), 1)}
(('16', 'sload0'), 1)
sload0
[(('16', 'sload0'), 1), (('s(2)', 'iszero'), 1)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3334 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3358
3358Instr:<<['JUMPDEST', 'PUSH1 0x0d', 'SSTORE', 'PUSH1 0x13', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'DUP2', 'AND', 'SWAP2', 'AND', 'EQ', 'DUP1', 'ISZERO', 'PUSH2 0x0d4c', 'JUMPI']>> 
3358-Stack size: 10 
3358-Equals Mem:<< []>> 
3358-NonEquals Mem: << []>> 
3358-Equals Sto:<< []>> 
3358-NonEquals Sto: << [<2,4>]>> 
3358-Useless: []
3358-Constancy: [(5, 0)]
3358-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('13', 's(3)', 'sstore'), 2), 0), 3: ((('19', 'sload0'), 1), 1)}
Storage order: [(('13', 's(3)', 'sstore'), 2), (('19', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('19', 'sload0'), 1)
sload0
[(('19', 'sload0'), 1), (('s(8)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(7)', 's(11)', 'eq'), 2), (('s(6)', 'iszero'), 1)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('13', 's(3)', 'sstore'), 2), 0), 3: ((('19', 'sload0'), 1), 1)}
(('19', 'sload0'), 1)
sload0
[(('19', 'sload0'), 1), (('s(8)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(7)', 's(11)', 'eq'), 2), (('s(6)', 'iszero'), 1)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3358 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3678
3678Instr:<<['JUMPDEST', 'PUSH1 0x0b', 'SLOAD', 'PUSH1 0x0a', 'SLOAD', 'PUSH2 0x0e6e', 'SWAP2', 'SWAP1', 'PUSH2 0x17d0', 'JUMP']>> 
3678-Stack size: 9 
3678-Equals Mem:<< []>> 
3678-NonEquals Mem: << []>> 
3678-Equals Sto:<< []>> 
3678-NonEquals Sto: << [<2,4>]>> 
3678-Useless: []
3678-Constancy: [(4, 0)]
3678-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
{1: ((('11', 'sload0'), 1), 0), 3: ((('10', 'sload1'), 1), 1)}
Storage order: [(('11', 'sload0'), 1), (('10', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('11', 'sload0'), 1)
sload0
[(('10', 'sload1'), 1), (('11', 'sload0'), 1)]
(('10', 'sload1'), 1)
sload1
[(('10', 'sload1'), 1), (('11', 'sload0'), 1)]
{1: ((('11', 'sload0'), 1), 0), 3: ((('10', 'sload1'), 1), 1)}
(('11', 'sload0'), 1)
sload0
[(('10', 'sload1'), 1), (('11', 'sload0'), 1)]
(('10', 'sload1'), 1)
sload1
[(('10', 'sload1'), 1), (('11', 'sload0'), 1)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3678 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3858
3858Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x0c', 'DUP2', 'SWAP1', 'SSTORE', 'PUSH1 0x0d', 'SSTORE']>> 
3858-Stack size: 9 
3858-Equals Mem:<< []>> 
3858-NonEquals Mem: << []>> 
3858-Equals Sto:<< []>> 
3858-NonEquals Sto: << [<5,7>]>> 
3858-Useless: []
3858-Constancy: [(4, 0)]
3858-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<4,6>]}
{4: ((('12', '0', 'sstore'), 2), 0), 6: ((('13', '0', 'sstore'), 2), 1)}
Storage order: [(('12', '0', 'sstore'), 2), (('13', '0', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{4: ((('12', '0', 'sstore'), 2), 0), 6: ((('13', '0', 'sstore'), 2), 1)}
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_3858 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4472
4472Instr:<<['JUMPDEST', 'POP', 'POP', 'PUSH1 0x13', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa8', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'POP', 'POP', 'POP', 'POP', 'JUMP']>> 
4472-Stack size: 10 
4472-Equals Mem:<< []>> 
4472-NonEquals Mem: << []>> 
4472-Equals Sto:<< [<5,12>]>> 
4472-NonEquals Sto: << []>> 
4472-Useless: []
4472-Constancy: []
4472-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<4,11>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('168', '255', 'shl')
{3: ((('19', 'sload0'), 1), 0), 11: ((('19', 's(6)', 'sstore'), 2), 1)}
Storage order: [(('19', 'sload0'), 1), (('19', 's(6)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('19', 'sload0'), 1)
sload0
[(('19', 'sload0'), 1), ((115792089237316195423570889601861022891927484329094684320502060868636724166655, 's(8)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{3: ((('19', 'sload0'), 1), 0), 11: ((('19', 's(6)', 'sstore'), 2), 1)}
(('19', 'sload0'), 1)
sload0
[(('19', 'sload0'), 1), ((115792089237316195423570889601861022891927484329094684320502060868636724166655, 's(8)', 'and'), 2)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4472 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4948
4948Instr:<<['JUMPDEST', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'DUP1', 'PUSH0', 'PUSH2 0x136c', 'DUP11', 'PUSH1 0x0c', 'SLOAD', 'PUSH1 0x0d', 'SLOAD', 'PUSH2 0x14b2', 'JUMP']>> 
4948-Stack size: 25 
4948-Equals Mem:<< []>> 
4948-NonEquals Mem: << []>> 
4948-Equals Sto:<< []>> 
4948-NonEquals Sto: << [<13,15>]>> 
4948-Useless: []
4948-Constancy: [(4, 0), (7, 0), (2, 0), (3, 0), (20, 0), (5, 0), (6, 0)]
4948-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<12,14>]}
{12: ((('12', 'sload0'), 1), 0), 14: ((('13', 'sload1'), 1), 1)}
Storage order: [(('12', 'sload0'), 1), (('13', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('12', 'sload0'), 1)
sload0
[(('13', 'sload1'), 1), (('12', 'sload0'), 1)]
(('13', 'sload1'), 1)
sload1
[(('13', 'sload1'), 1), (('12', 'sload0'), 1)]
{12: ((('12', 'sload0'), 1), 0), 14: ((('13', 'sload1'), 1), 1)}
(('12', 'sload0'), 1)
sload0
[(('13', 'sload1'), 1), (('12', 'sload0'), 1)]
(('13', 'sload1'), 1)
sload1
[(('13', 'sload1'), 1), (('12', 'sload0'), 1)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_4948 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5275
5275Instr:<<['JUMPDEST', 'PUSH1 0x08', 'SSTORE', 'PUSH1 0x09', 'SLOAD', 'PUSH2 0x14ab', 'SWAP1', 'DUP3', 'PUSH2 0x13ea', 'JUMP']>> 
5275-Stack size: 27 
5275-Equals Mem:<< []>> 
5275-NonEquals Mem: << []>> 
5275-Equals Sto:<< []>> 
5275-NonEquals Sto: << [<2,4>]>> 
5275-Useless: []
5275-Constancy: [(22, 0)]
5275-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
{1: ((('8', 's(1)', 'sstore'), 2), 0), 3: ((('9', 'sload0'), 1), 1)}
Storage order: [(('8', 's(1)', 'sstore'), 2), (('9', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('9', 'sload0'), 1)
sload0
[(('9', 'sload0'), 1)]
{1: ((('8', 's(1)', 'sstore'), 2), 0), 3: ((('9', 'sload0'), 1), 1)}
(('9', 'sload0'), 1)
sload0
[(('9', 'sload0'), 1)]
BLOCK 0x0088bc66027e679da5fa7bdae8ed36539d445699.sol_TRUMP_5275 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
