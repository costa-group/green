incomplete push instruction at 2258
incomplete push instruction at 75
incomplete push instruction at 76
Green Main
*************************************************************
Compilation time: 0.6626366449636407s
*************************************************************
File: DOPE
Build CFG: 1.1361394409905188s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis DOPE
Memory accesess analysis finished!


MEMRES: NOT Found read (potential optimization) -> <slot50,0> 10134_0:16 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot50,*> 10134_0:22 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot55,0> 10315_0:16 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot55,*> 10315_0:22 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transfer(address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot90,0> 4144:6 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--updateBuyFees(uint256,uint256,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot92,0> 4002:6 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--removeLimits()
MEMRES: NOT Found read (potential optimization) -> <slot93,0> 3703:6 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--setAutoLPBurnSettings(uint256,uint256,bool)
MEMRES: NOT Found read (potential optimization) -> <slot96,0> 3588:6 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--renounceOwnership()
MEMRES: NOT Found read (potential optimization) -> <slot123,0> 10134:16 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot123,*> 10134:22 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot128,0> 10315:16 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transferFrom(address,address,uint256)
MEMRES: NOT Found read (potential optimization) -> <slot128,*> 10315:22 --> 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol DOPE--transferFrom(address,address,uint256)
GASOL: Useless accesses found: {'10134_0': [16, 22], '10315_0': [16, 22], '4144': [6], '4002': [6], '3703': [6], '3588': [6], '10134': [16, 22], '10315': [16, 22]}
Free memory analyss finished


SLOTS Contract DOPE: 152
Memory read accesses ContractDOPE: 495
Memory write accesses ContractDOPE: 1058
********************************** INIT
GASOL: Adding block useless 10134_0
GASOL: Adding block useless 10315_0
GASOL: Adding block useless 4144
GASOL: Adding block useless 4002
GASOL: Adding block useless 3703
GASOL: Adding block useless 3588
GASOL: Adding block useless 10134
GASOL: Adding block useless 10315
CONTEXT: Detected context equality 13 <slot7,0> 15 <slot7,0>
CONTEXT: Detected context equality 13 <slot7,0> 16 <slot7,0>
CONTEXT: Detected context equality 13 <slot7,0> 16 <slot7,0>
CONTEXT: Detected context equality 16 <slot36,0> 18 <slot36,0>
CONTEXT: Detected context equality 16 <slot36,0> 19 <slot36,0>
CONTEXT: Detected context equality 16 <slot36,0> 19 <slot36,0>
CONTEXT: Detected context equality 20 <slot46,0> 22 <slot46,0>
CONTEXT: Detected context equality 20 <slot46,0> 22 <slot46,0>
CONTEXT: Detected context equality 20 <slot46,0> 26 <slot46,0>
CONTEXT: Detected context equality 20 <slot46,0> 26 <slot46,0>
CONTEXT: Detected context equality 22 <slot59,0> 24 <slot59,0>
CONTEXT: Detected context equality 22 <slot59,0> 25 <slot59,0>
CONTEXT: Detected context equality 22 <slot59,0> 25 <slot59,0>
CONTEXT: Detected context equality 20 <slot66,0> 22 <slot66,0>
CONTEXT: Detected context equality 20 <slot66,0> 23 <slot66,0>
CONTEXT: Detected context equality 20 <slot66,0> 23 <slot66,0>
CONTEXT: Detected context equality 20 <slot72,0> 22 <slot72,0>
CONTEXT: Detected context equality 20 <slot72,0> 23 <slot72,0>
CONTEXT: Detected context equality 20 <slot72,0> 23 <slot72,0>
CONTEXT: Detected context equality 11 <slot76,0> 13 <slot76,0>
CONTEXT: Detected context equality 11 <slot76,0> 14 <slot76,0>
CONTEXT: Detected context equality 11 <slot76,0> 14 <slot76,0>
CONTEXT: Detected context equality 17 <slot105,0> 19 <slot105,0>
CONTEXT: Detected context equality 17 <slot105,0> 20 <slot105,0>
CONTEXT: Detected context equality 17 <slot105,0> 20 <slot105,0>
CONTEXT: Detected context equality 21 <slot119,0> 23 <slot119,0>
CONTEXT: Detected context equality 21 <slot119,0> 23 <slot119,0>
CONTEXT: Detected context equality 21 <slot119,0> 27 <slot119,0>
CONTEXT: Detected context equality 21 <slot119,0> 27 <slot119,0>
CONTEXT: Detected context equality 23 <slot132,0> 25 <slot132,0>
CONTEXT: Detected context equality 23 <slot132,0> 26 <slot132,0>
CONTEXT: Detected context equality 23 <slot132,0> 26 <slot132,0>
CONTEXT: Detected context equality 21 <slot139,0> 23 <slot139,0>
CONTEXT: Detected context equality 21 <slot139,0> 24 <slot139,0>
CONTEXT: Detected context equality 21 <slot139,0> 24 <slot139,0>
CONTEXT: Detected context equality 21 <slot145,0> 23 <slot145,0>
CONTEXT: Detected context equality 21 <slot145,0> 24 <slot145,0>
CONTEXT: Detected context equality 21 <slot145,0> 24 <slot145,0>
COMPACT CLONES: True
CONTRACT: DOPE
-----
Block: 6063
6063Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
6063-Stack size: 4 
6063-Equals Mem:<< []>> 
6063-NonEquals Mem: << [<6,1>]>> 
6063-Equals Sto:<< []>> 
6063-NonEquals Sto: << []>> 
6063-Useless: []
6063-Constancy: [(0, 0)]
6063-ContextAliasing: []

.....
-----
Block: 12014_91
12014_91Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_91-Stack size: 9 
12014_91-Equals Mem:<< []>> 
12014_91-NonEquals Mem: << [<5,8>]>> 
12014_91-Equals Sto:<< []>> 
12014_91-NonEquals Sto: << []>> 
12014_91-Useless: []
12014_91-Constancy: [(5, 0)]
12014_91-ContextAliasing: []

.....
-----
Block: 6109
6109Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6109-Stack size: 4 
6109-Equals Mem:<< []>> 
6109-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
6109-Equals Sto:<< []>> 
6109-NonEquals Sto: << []>> 
6109-Useless: []
6109-Constancy: [(0, 0)]
6109-ContextAliasing: []

.....
-----
Block: 6191
6191Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x06b656e7320696e204c5', 'PUSH1 0xb4', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6191-Stack size: 4 
6191-Equals Mem:<< []>> 
6191-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6191-Equals Sto:<< []>> 
6191-NonEquals Sto: << []>> 
6191-Useless: []
6191-Constancy: [(0, 0)]
6191-ContextAliasing: []

.....
-----
Block: 6385
6385Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1915', 'SWAP2', 'SWAP1', 'PUSH2 0x2f4b', 'JUMP']>> 
6385-Stack size: 9 
6385-Equals Mem:<< [<18,6>]>> 
6385-NonEquals Mem: << []>> 
6385-Equals Sto:<< []>> 
6385-NonEquals Sto: << []>> 
6385-Useless: []
6385-Constancy: [(5, 0), (4, 0)]
6385-ContextAliasing: []

.....
-----
Block: 12014_90
12014_90Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_90-Stack size: 12 
12014_90-Equals Mem:<< []>> 
12014_90-NonEquals Mem: << [<5,8>]>> 
12014_90-Equals Sto:<< []>> 
12014_90-NonEquals Sto: << []>> 
12014_90-Useless: []
12014_90-Constancy: [(8, 0), (6, 0)]
12014_90-ContextAliasing: []

.....
-----
Block: 12064_31
12064_31Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_31-Stack size: 10 
12064_31-Equals Mem:<< []>> 
12064_31-NonEquals Mem: << [<4,7>]>> 
12064_31-Equals Sto:<< []>> 
12064_31-NonEquals Sto: << []>> 
12064_31-Useless: []
12064_31-Constancy: [(6, 0), (4, 0), (0, 0)]
12064_31-ContextAliasing: []

.....
-----
Block: 9566_7
9566_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_7-Stack size: 10 
9566_7-Equals Mem:<< []>> 
9566_7-NonEquals Mem: << [<6,1>]>> 
9566_7-Equals Sto:<< []>> 
9566_7-NonEquals Sto: << []>> 
9566_7-Useless: []
9566_7-Constancy: [(6, 0), (2, 0)]
9566_7-ContextAliasing: []

.....
-----
Block: 9604_7
9604_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_7-Stack size: 10 
9604_7-Equals Mem:<< []>> 
9604_7-NonEquals Mem: << [<6,1>]>> 
9604_7-Equals Sto:<< []>> 
9604_7-NonEquals Sto: << []>> 
9604_7-Useless: []
9604_7-Constancy: [(6, 0), (2, 0)]
9604_7-ContextAliasing: []

.....
-----
Block: 9322_9
9322_9Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_9-Stack size: 16 
9322_9-Equals Mem:<< []>> 
9322_9-NonEquals Mem: << [<6,1>]>> 
9322_9-Equals Sto:<< []>> 
9322_9-NonEquals Sto: << []>> 
9322_9-Useless: []
9322_9-Constancy: [(12, 0), (8, 0), (1, 0)]
9322_9-ContextAliasing: [(2, 15)]

.....
-----
Block: 11416_10
11416_10Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_10-Stack size: 18 
11416_10-Equals Mem:<< []>> 
11416_10-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_10-Equals Sto:<< []>> 
11416_10-NonEquals Sto: << []>> 
11416_10-Useless: []
11416_10-Constancy: [(14, 0), (10, 0), (3, 0)]
11416_10-ContextAliasing: [(4, 16)]

.....
-----
Block: 11440_10
11440_10Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_10-Stack size: 22 
11440_10-Equals Mem:<< []>> 
11440_10-NonEquals Mem: << [<11,5>]>> 
11440_10-Equals Sto:<< []>> 
11440_10-NonEquals Sto: << []>> 
11440_10-Useless: []
11440_10-Constancy: [(18, 0), (14, 0), (7, 0), (3, 0), (2, 32)]
11440_10-ContextAliasing: [(8, 16)]

.....
-----
Block: 12014_89
12014_89Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_89-Stack size: 21 
12014_89-Equals Mem:<< []>> 
12014_89-NonEquals Mem: << [<5,8>]>> 
12014_89-Equals Sto:<< []>> 
12014_89-NonEquals Sto: << []>> 
12014_89-Useless: []
12014_89-Constancy: [(17, 0), (13, 0), (6, 0), (5, 0)]
12014_89-ContextAliasing: []

.....
-----
Block: 9687_7
9687_7Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_7-Stack size: 11 
9687_7-Equals Mem:<< [<12,29>]>> 
9687_7-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_7-Equals Sto:<< [<24,31>]>> 
9687_7-NonEquals Sto: << []>> 
9687_7-Useless: []
9687_7-Constancy: [(7, 0), (3, 0)]
9687_7-ContextAliasing: []

.....
-----
Block: 12014_88
12014_88Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_88-Stack size: 20 
12014_88-Equals Mem:<< []>> 
12014_88-NonEquals Mem: << [<5,8>]>> 
12014_88-Equals Sto:<< []>> 
12014_88-NonEquals Sto: << []>> 
12014_88-Useless: []
12014_88-Constancy: [(16, 0), (12, 0), (6, 0), (5, 0)]
12014_88-ContextAliasing: []

.....
-----
Block: 9390_8
9390_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_8-Stack size: 15 
9390_8-Equals Mem:<< []>> 
9390_8-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_8-Equals Sto:<< []>> 
9390_8-NonEquals Sto: << []>> 
9390_8-Useless: []
9390_8-Constancy: [(11, 0), (7, 0), (1, 0)]
9390_8-ContextAliasing: []

.....
-----
Block: 9733_7
9733_7Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_7-Stack size: 11 
9733_7-Equals Mem:<< []>> 
9733_7-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_7-Equals Sto:<< []>> 
9733_7-NonEquals Sto: << []>> 
9733_7-Useless: []
9733_7-Constancy: [(7, 0), (3, 0)]
9733_7-ContextAliasing: []

.....
-----
Block: 6500
6500Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x19c0', 'JUMPI']>> 
6500-Stack size: 6 
6500-Equals Mem:<< [<14,26>]>> 
6500-NonEquals Mem: << [<21,14>, <21,26>]>> 
6500-Equals Sto:<< []>> 
6500-NonEquals Sto: << []>> 
6500-Useless: []
6500-Constancy: [(2, 0)]
6500-ContextAliasing: []

.....
-----
Block: 1034
1034Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1034-Stack size: 2 
1034-Equals Mem:<< []>> 
1034-NonEquals Mem: << [<7,2>]>> 
1034-Equals Sto:<< []>> 
1034-NonEquals Sto: << []>> 
1034-Useless: []
1034-Constancy: []
1034-ContextAliasing: []

.....
-----
Block: 2832
2832Instr:<<['JUMPDEST', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
2832-Stack size: 3 
2832-Equals Mem:<< []>> 
2832-NonEquals Mem: << [<3,7>]>> 
2832-Equals Sto:<< []>> 
2832-NonEquals Sto: << []>> 
2832-Useless: []
2832-Constancy: []
2832-ContextAliasing: []

.....
-----
Block: 1034_0
1034_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1034_0-Stack size: 3 
1034_0-Equals Mem:<< []>> 
1034_0-NonEquals Mem: << [<7,2>]>> 
1034_0-Equals Sto:<< []>> 
1034_0-NonEquals Sto: << []>> 
1034_0-Useless: []
1034_0-Constancy: []
1034_0-ContextAliasing: []

.....
-----
Block: 1187_0
1187_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1187_0-Stack size: 3 
1187_0-Equals Mem:<< []>> 
1187_0-NonEquals Mem: << [<5,2>]>> 
1187_0-Equals Sto:<< []>> 
1187_0-NonEquals Sto: << []>> 
1187_0-Useless: []
1187_0-Constancy: []
1187_0-ContextAliasing: []

.....
-----
Block: 5827
5827Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5827-Stack size: 3 
5827-Equals Mem:<< []>> 
5827-NonEquals Mem: << [<6,1>]>> 
5827-Equals Sto:<< []>> 
5827-NonEquals Sto: << []>> 
5827-Useless: []
5827-Constancy: []
5827-ContextAliasing: []

.....
-----
Block: 5865
5865Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5865-Stack size: 3 
5865-Equals Mem:<< []>> 
5865-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5865-Equals Sto:<< []>> 
5865-NonEquals Sto: << []>> 
5865-Useless: []
5865-Constancy: []
5865-ContextAliasing: []

.....
-----
Block: 5657
5657Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5657-Stack size: 4 
5657-Equals Mem:<< []>> 
5657-NonEquals Mem: << [<6,1>]>> 
5657-Equals Sto:<< []>> 
5657-NonEquals Sto: << []>> 
5657-Useless: []
5657-Constancy: []
5657-ContextAliasing: []

.....
-----
Block: 5695
5695Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573732073686f756c64206e6f742062652030000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5695-Stack size: 4 
5695-Equals Mem:<< []>> 
5695-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5695-Equals Sto:<< []>> 
5695-NonEquals Sto: << []>> 
5695-Useless: []
5695-Constancy: []
5695-ContextAliasing: []

.....
-----
Block: 5766
5766Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5766-Stack size: 4 
5766-Equals Mem:<< []>> 
5766-NonEquals Mem: << [<13,16>]>> 
5766-Equals Sto:<< [<21,33>]>> 
5766-NonEquals Sto: << []>> 
5766-Useless: []
5766-Constancy: []
5766-ContextAliasing: []

.....
-----
Block: 5599
5599Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5599-Stack size: 3 
5599-Equals Mem:<< []>> 
5599-NonEquals Mem: << [<6,1>]>> 
5599-Equals Sto:<< []>> 
5599-NonEquals Sto: << []>> 
5599-Useless: []
5599-Constancy: [(0, 0)]
5599-ContextAliasing: []

.....
-----
Block: 2598
2598Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2598-Stack size: 4 
2598-Equals Mem:<< [<12,27>, <17,31>]>> 
2598-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
2598-Equals Sto:<< []>> 
2598-NonEquals Sto: << []>> 
2598-Useless: []
2598-Constancy: []
2598-ContextAliasing: []

.....
-----
Block: 1187
1187Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1187-Stack size: 2 
1187-Equals Mem:<< []>> 
1187-NonEquals Mem: << [<5,2>]>> 
1187-Equals Sto:<< []>> 
1187-NonEquals Sto: << []>> 
1187-Useless: []
1187-Constancy: []
1187-ContextAliasing: []

.....
-----
Block: 5257
5257Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5257-Stack size: 4 
5257-Equals Mem:<< []>> 
5257-NonEquals Mem: << [<6,1>]>> 
5257-Equals Sto:<< []>> 
5257-NonEquals Sto: << []>> 
5257-Useless: []
5257-Constancy: [(0, 0)]
5257-ContextAliasing: []

.....
-----
Block: 12014_87
12014_87Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_87-Stack size: 10 
12014_87-Equals Mem:<< []>> 
12014_87-NonEquals Mem: << [<5,8>]>> 
12014_87-Equals Sto:<< []>> 
12014_87-NonEquals Sto: << []>> 
12014_87-Useless: []
12014_87-Constancy: [(6, 0)]
12014_87-ContextAliasing: []

.....
-----
Block: 12064_30
12064_30Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_30-Stack size: 8 
12064_30-Equals Mem:<< []>> 
12064_30-NonEquals Mem: << [<4,7>]>> 
12064_30-Equals Sto:<< []>> 
12064_30-NonEquals Sto: << []>> 
12064_30-Useless: []
12064_30-Constancy: [(4, 0), (0, 0)]
12064_30-ContextAliasing: []

.....
-----
Block: 5322
5322Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x10181718181892903a37ba30b61039bab838363c97', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5322-Stack size: 4 
5322-Equals Mem:<< []>> 
5322-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5322-Equals Sto:<< []>> 
5322-NonEquals Sto: << []>> 
5322-Useless: []
5322-Constancy: [(0, 0)]
5322-ContextAliasing: []

.....
-----
Block: 12014_86
12014_86Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_86-Stack size: 10 
12014_86-Equals Mem:<< []>> 
12014_86-NonEquals Mem: << [<5,8>]>> 
12014_86-Equals Sto:<< []>> 
12014_86-NonEquals Sto: << []>> 
12014_86-Useless: []
12014_86-Constancy: [(6, 0)]
12014_86-ContextAliasing: []

.....
-----
Block: 12064_29
12064_29Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_29-Stack size: 8 
12064_29-Equals Mem:<< []>> 
12064_29-NonEquals Mem: << [<4,7>]>> 
12064_29-Equals Sto:<< []>> 
12064_29-NonEquals Sto: << []>> 
12064_29-Useless: []
12064_29-Constancy: [(4, 0), (0, 0)]
12064_29-ContextAliasing: []

.....
-----
Block: 5464
5464Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x34', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH20 0x371018171a92903a37ba30b61039bab838363c97', 'PUSH1 0x61', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5464-Stack size: 4 
5464-Equals Mem:<< []>> 
5464-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5464-Equals Sto:<< []>> 
5464-NonEquals Sto: << []>> 
5464-Useless: []
5464-Constancy: [(0, 0)]
5464-ContextAliasing: []

.....
-----
Block: 5046
5046Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5046-Stack size: 3 
5046-Equals Mem:<< []>> 
5046-NonEquals Mem: << [<6,1>]>> 
5046-Equals Sto:<< []>> 
5046-NonEquals Sto: << []>> 
5046-Useless: []
5046-Constancy: []
5046-ContextAliasing: []

.....
-----
Block: 12014_85
12014_85Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_85-Stack size: 10 
12014_85-Equals Mem:<< []>> 
12014_85-NonEquals Mem: << [<5,8>]>> 
12014_85-Equals Sto:<< []>> 
12014_85-NonEquals Sto: << []>> 
12014_85-Useless: []
12014_85-Constancy: []
12014_85-ContextAliasing: []

.....
-----
Block: 12064_28
12064_28Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_28-Stack size: 8 
12064_28-Equals Mem:<< []>> 
12064_28-NonEquals Mem: << [<4,7>]>> 
12064_28-Equals Sto:<< []>> 
12064_28-NonEquals Sto: << []>> 
12064_28-Useless: []
12064_28-Constancy: [(0, 0)]
12064_28-ContextAliasing: []

.....
-----
Block: 12064_27
12064_27Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_27-Stack size: 7 
12064_27-Equals Mem:<< []>> 
12064_27-NonEquals Mem: << [<4,7>]>> 
12064_27-Equals Sto:<< []>> 
12064_27-NonEquals Sto: << []>> 
12064_27-Useless: []
12064_27-Constancy: [(0, 0)]
12064_27-ContextAliasing: []

.....
-----
Block: 5129
5129Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x302e3525', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5129-Stack size: 3 
5129-Equals Mem:<< []>> 
5129-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5129-Equals Sto:<< []>> 
5129-NonEquals Sto: << []>> 
5129-Useless: []
5129-Constancy: []
5129-ContextAliasing: []

.....
-----
Block: 12014_84
12014_84Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_84-Stack size: 8 
12014_84-Equals Mem:<< []>> 
12014_84-NonEquals Mem: << [<5,8>]>> 
12014_84-Equals Sto:<< []>> 
12014_84-NonEquals Sto: << []>> 
12014_84-Useless: []
12014_84-Constancy: []
12014_84-ContextAliasing: []

.....
-----
Block: 4960
4960Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4960-Stack size: 5 
4960-Equals Mem:<< []>> 
4960-NonEquals Mem: << [<6,1>]>> 
4960-Equals Sto:<< []>> 
4960-NonEquals Sto: << []>> 
4960-Useless: []
4960-Constancy: []
4960-ContextAliasing: []

.....
-----
Block: 12014_83
12014_83Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_83-Stack size: 11 
12014_83-Equals Mem:<< []>> 
12014_83-NonEquals Mem: << [<5,8>]>> 
12014_83-Equals Sto:<< []>> 
12014_83-NonEquals Sto: << []>> 
12014_83-Useless: []
12014_83-Constancy: []
12014_83-ContextAliasing: []

.....
-----
Block: 12014_82
12014_82Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_82-Stack size: 10 
12014_82-Equals Mem:<< []>> 
12014_82-NonEquals Mem: << [<5,8>]>> 
12014_82-Equals Sto:<< []>> 
12014_82-NonEquals Sto: << []>> 
12014_82-Useless: []
12014_82-Constancy: []
12014_82-ContextAliasing: []

.....
-----
Block: 4826
4826Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4826-Stack size: 4 
4826-Equals Mem:<< []>> 
4826-NonEquals Mem: << [<6,1>]>> 
4826-Equals Sto:<< []>> 
4826-NonEquals Sto: << []>> 
4826-Useless: []
4826-Constancy: []
4826-ContextAliasing: []

.....
-----
Block: 2331
2331Instr:<<['JUMPDEST', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
2331-Stack size: 3 
2331-Equals Mem:<< []>> 
2331-NonEquals Mem: << [<3,7>]>> 
2331-Equals Sto:<< []>> 
2331-NonEquals Sto: << []>> 
2331-Useless: []
2331-Constancy: []
2331-ContextAliasing: []

.....
-----
Block: 4692
4692Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4692-Stack size: 3 
4692-Equals Mem:<< []>> 
4692-NonEquals Mem: << [<6,1>]>> 
4692-Equals Sto:<< []>> 
4692-NonEquals Sto: << []>> 
4692-Useless: []
4692-Constancy: []
4692-ContextAliasing: []

.....
-----
Block: 6972_0
6972_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
6972_0-Stack size: 9 
6972_0-Equals Mem:<< []>> 
6972_0-NonEquals Mem: << [<6,1>]>> 
6972_0-Equals Sto:<< []>> 
6972_0-NonEquals Sto: << []>> 
6972_0-Useless: []
6972_0-Constancy: [(4, 0)]
6972_0-ContextAliasing: []

.....
-----
Block: 7010_0
7010_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
7010_0-Stack size: 9 
7010_0-Equals Mem:<< []>> 
7010_0-NonEquals Mem: << [<6,1>]>> 
7010_0-Equals Sto:<< []>> 
7010_0-NonEquals Sto: << []>> 
7010_0-Useless: []
7010_0-Constancy: [(4, 0)]
7010_0-ContextAliasing: []

.....
-----
Block: 7033_0
7033_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1bb9', 'JUMPI']>> 
7033_0-Stack size: 9 
7033_0-Equals Mem:<< []>> 
7033_0-NonEquals Mem: << [<11,14>]>> 
7033_0-Equals Sto:<< []>> 
7033_0-NonEquals Sto: << []>> 
7033_0-Useless: []
7033_0-Constancy: [(4, 0)]
7033_0-ContextAliasing: []

.....
-----
Block: 7068_0
7068_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7068_0-Stack size: 10 
7068_0-Equals Mem:<< []>> 
7068_0-NonEquals Mem: << [<11,14>]>> 
7068_0-Equals Sto:<< []>> 
7068_0-NonEquals Sto: << []>> 
7068_0-Useless: []
7068_0-Constancy: [(5, 0)]
7068_0-ContextAliasing: []

.....
-----
Block: 7102_0
7102_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH11 0x109b1858dadb1a5cdd1959', 'PUSH1 0xaa', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7102_0-Stack size: 9 
7102_0-Equals Mem:<< []>> 
7102_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
7102_0-Equals Sto:<< []>> 
7102_0-NonEquals Sto: << []>> 
7102_0-Useless: []
7102_0-Constancy: [(4, 0)]
7102_0-ContextAliasing: []

.....
-----
Block: 9566_6
9566_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_6-Stack size: 13 
9566_6-Equals Mem:<< []>> 
9566_6-NonEquals Mem: << [<6,1>]>> 
9566_6-Equals Sto:<< []>> 
9566_6-NonEquals Sto: << []>> 
9566_6-Useless: []
9566_6-Constancy: [(8, 0), (0, 0)]
9566_6-ContextAliasing: []

.....
-----
Block: 9604_6
9604_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_6-Stack size: 13 
9604_6-Equals Mem:<< []>> 
9604_6-NonEquals Mem: << [<6,1>]>> 
9604_6-Equals Sto:<< []>> 
9604_6-NonEquals Sto: << []>> 
9604_6-Useless: []
9604_6-Constancy: [(8, 0), (0, 0)]
9604_6-ContextAliasing: []

.....
-----
Block: 9322_8
9322_8Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_8-Stack size: 19 
9322_8-Equals Mem:<< []>> 
9322_8-NonEquals Mem: << [<6,1>]>> 
9322_8-Equals Sto:<< []>> 
9322_8-NonEquals Sto: << []>> 
9322_8-Useless: []
9322_8-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
9322_8-ContextAliasing: [(2, 18)]

.....
-----
Block: 11416_9
11416_9Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_9-Stack size: 21 
11416_9-Equals Mem:<< []>> 
11416_9-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_9-Equals Sto:<< []>> 
11416_9-NonEquals Sto: << []>> 
11416_9-Useless: []
11416_9-Constancy: [(16, 0), (8, 0), (5, 0), (3, 0)]
11416_9-ContextAliasing: [(4, 19)]

.....
-----
Block: 11440_9
11440_9Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_9-Stack size: 25 
11440_9-Equals Mem:<< []>> 
11440_9-NonEquals Mem: << [<11,5>]>> 
11440_9-Equals Sto:<< []>> 
11440_9-NonEquals Sto: << []>> 
11440_9-Useless: []
11440_9-Constancy: [(20, 0), (12, 0), (9, 0), (7, 0), (3, 0), (2, 32)]
11440_9-ContextAliasing: [(8, 19)]

.....
-----
Block: 12014_81
12014_81Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_81-Stack size: 24 
12014_81-Equals Mem:<< []>> 
12014_81-NonEquals Mem: << [<5,8>]>> 
12014_81-Equals Sto:<< []>> 
12014_81-NonEquals Sto: << []>> 
12014_81-Useless: []
12014_81-Constancy: [(19, 0), (11, 0), (8, 0), (6, 0), (5, 0), (3, 0)]
12014_81-ContextAliasing: []

.....
-----
Block: 9687_6
9687_6Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_6-Stack size: 14 
9687_6-Equals Mem:<< [<12,29>]>> 
9687_6-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_6-Equals Sto:<< [<24,31>]>> 
9687_6-NonEquals Sto: << []>> 
9687_6-Useless: []
9687_6-Constancy: [(9, 0), (1, 0)]
9687_6-ContextAliasing: []

.....
-----
Block: 12014_80
12014_80Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_80-Stack size: 23 
12014_80-Equals Mem:<< []>> 
12014_80-NonEquals Mem: << [<5,8>]>> 
12014_80-Equals Sto:<< []>> 
12014_80-NonEquals Sto: << []>> 
12014_80-Useless: []
12014_80-Constancy: [(18, 0), (10, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
12014_80-ContextAliasing: []

.....
-----
Block: 9390_7
9390_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_7-Stack size: 18 
9390_7-Equals Mem:<< []>> 
9390_7-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_7-Equals Sto:<< []>> 
9390_7-NonEquals Sto: << []>> 
9390_7-Useless: []
9390_7-Constancy: [(13, 0), (5, 0), (2, 0), (1, 0)]
9390_7-ContextAliasing: []

.....
-----
Block: 9733_6
9733_6Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_6-Stack size: 14 
9733_6-Equals Mem:<< []>> 
9733_6-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_6-Equals Sto:<< []>> 
9733_6-NonEquals Sto: << []>> 
9733_6-Useless: []
9733_6-Constancy: [(9, 0), (1, 0)]
9733_6-ContextAliasing: []

.....
-----
Block: 7319_0
7319_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x1cd1', 'JUMPI']>> 
7319_0-Stack size: 9 
7319_0-Equals Mem:<< []>> 
7319_0-NonEquals Mem: << [<10,13>]>> 
7319_0-Equals Sto:<< []>> 
7319_0-NonEquals Sto: << []>> 
7319_0-Useless: []
7319_0-Constancy: [(4, 0)]
7319_0-ContextAliasing: []

.....
-----
Block: 7350_0
7350_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
7350_0-Stack size: 10 
7350_0-Equals Mem:<< []>> 
7350_0-NonEquals Mem: << [<11,14>]>> 
7350_0-Equals Sto:<< []>> 
7350_0-NonEquals Sto: << []>> 
7350_0-Useless: []
7350_0-Constancy: [(5, 0)]
7350_0-ContextAliasing: []

.....
-----
Block: 7382_0
7382_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297', 'PUSH1 0x51', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7382_0-Stack size: 9 
7382_0-Equals Mem:<< []>> 
7382_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
7382_0-Equals Sto:<< []>> 
7382_0-NonEquals Sto: << []>> 
7382_0-Useless: []
7382_0-Constancy: [(4, 0)]
7382_0-ContextAliasing: []

.....
-----
Block: 7605_0
7605_0Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x1e49', 'JUMPI']>> 
7605_0-Stack size: 9 
7605_0-Equals Mem:<< []>> 
7605_0-NonEquals Mem: << [<4,7>]>> 
7605_0-Equals Sto:<< []>> 
7605_0-NonEquals Sto: << []>> 
7605_0-Useless: []
7605_0-Constancy: [(4, 0)]
7605_0-ContextAliasing: []

.....
-----
Block: 7626_0
7626_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7626_0-Stack size: 9 
7626_0-Equals Mem:<< []>> 
7626_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>, <33,1>]>> 
7626_0-Equals Sto:<< []>> 
7626_0-NonEquals Sto: << []>> 
7626_0-Useless: []
7626_0-Constancy: [(4, 0)]
7626_0-ContextAliasing: []

.....
-----
Block: 7753_0
7753_0Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
7753_0-Stack size: 9 
7753_0-Equals Mem:<< []>> 
7753_0-NonEquals Mem: << [<5,8>]>> 
7753_0-Equals Sto:<< []>> 
7753_0-NonEquals Sto: << []>> 
7753_0-Useless: []
7753_0-Constancy: [(4, 0)]
7753_0-ContextAliasing: []

.....
-----
Block: 7771_0
7771_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1e9a', 'JUMPI']>> 
7771_0-Stack size: 9 
7771_0-Equals Mem:<< []>> 
7771_0-NonEquals Mem: << [<11,14>]>> 
7771_0-Equals Sto:<< []>> 
7771_0-NonEquals Sto: << []>> 
7771_0-Useless: []
7771_0-Constancy: [(4, 0)]
7771_0-ContextAliasing: []

.....
-----
Block: 7805_0
7805_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7805_0-Stack size: 10 
7805_0-Equals Mem:<< []>> 
7805_0-NonEquals Mem: << [<11,14>]>> 
7805_0-Equals Sto:<< []>> 
7805_0-NonEquals Sto: << []>> 
7805_0-Useless: []
7805_0-Constancy: [(5, 0)]
7805_0-ContextAliasing: []

.....
-----
Block: 7850_0
7850_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7850_0-Stack size: 9 
7850_0-Equals Mem:<< []>> 
7850_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7850_0-Equals Sto:<< []>> 
7850_0-NonEquals Sto: << []>> 
7850_0-Useless: []
7850_0-Constancy: [(4, 0)]
7850_0-ContextAliasing: []

.....
-----
Block: 7951_0
7951_0Instr:<<['JUMPDEST', 'PUSH1 0x0a', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x1f34', 'SWAP1', 'DUP4', 'PUSH2 0x2f38', 'JUMP']>> 
7951_0-Stack size: 9 
7951_0-Equals Mem:<< []>> 
7951_0-NonEquals Mem: << [<13,17>]>> 
7951_0-Equals Sto:<< []>> 
7951_0-NonEquals Sto: << [<2,21>]>> 
7951_0-Useless: []
7951_0-Constancy: [(4, 0)]
7951_0-ContextAliasing: []

.....
-----
Block: 12014_79
12014_79Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_79-Stack size: 15 
12014_79-Equals Mem:<< []>> 
12014_79-NonEquals Mem: << [<5,8>]>> 
12014_79-Equals Sto:<< []>> 
12014_79-NonEquals Sto: << []>> 
12014_79-Useless: []
12014_79-Constancy: [(10, 0)]
12014_79-ContextAliasing: []

.....
-----
Block: 7995_0
7995_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7995_0-Stack size: 9 
7995_0-Equals Mem:<< []>> 
7995_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
7995_0-Equals Sto:<< []>> 
7995_0-NonEquals Sto: << []>> 
7995_0-Useless: []
7995_0-Constancy: [(4, 0)]
7995_0-ContextAliasing: []

.....
-----
Block: 8061_0
8061_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1fbc', 'JUMPI']>> 
8061_0-Stack size: 9 
8061_0-Equals Mem:<< []>> 
8061_0-NonEquals Mem: << [<11,14>]>> 
8061_0-Equals Sto:<< []>> 
8061_0-NonEquals Sto: << []>> 
8061_0-Useless: []
8061_0-Constancy: [(4, 0)]
8061_0-ContextAliasing: []

.....
-----
Block: 8095_0
8095_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8095_0-Stack size: 10 
8095_0-Equals Mem:<< []>> 
8095_0-NonEquals Mem: << [<11,14>]>> 
8095_0-Equals Sto:<< []>> 
8095_0-NonEquals Sto: << []>> 
8095_0-Useless: []
8095_0-Constancy: [(5, 0)]
8095_0-ContextAliasing: []

.....
-----
Block: 8140_0
8140_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x36', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x51', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
8140_0-Stack size: 9 
8140_0-Equals Mem:<< []>> 
8140_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8140_0-Equals Sto:<< []>> 
8140_0-NonEquals Sto: << []>> 
8140_0-Useless: []
8140_0-Constancy: [(4, 0)]
8140_0-ContextAliasing: []

.....
-----
Block: 8242_0
8242_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x20ba', 'JUMPI']>> 
8242_0-Stack size: 9 
8242_0-Equals Mem:<< []>> 
8242_0-NonEquals Mem: << [<11,14>]>> 
8242_0-Equals Sto:<< []>> 
8242_0-NonEquals Sto: << []>> 
8242_0-Useless: []
8242_0-Constancy: [(4, 0)]
8242_0-ContextAliasing: []

.....
-----
Block: 8274_0
8274_0Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x2076', 'SWAP1', 'DUP4', 'PUSH2 0x2f38', 'JUMP']>> 
8274_0-Stack size: 9 
8274_0-Equals Mem:<< []>> 
8274_0-NonEquals Mem: << [<12,16>]>> 
8274_0-Equals Sto:<< []>> 
8274_0-NonEquals Sto: << [<1,20>]>> 
8274_0-Useless: []
8274_0-Constancy: [(4, 0)]
8274_0-ContextAliasing: []

.....
-----
Block: 12014_78
12014_78Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_78-Stack size: 15 
12014_78-Equals Mem:<< []>> 
12014_78-NonEquals Mem: << [<5,8>]>> 
12014_78-Equals Sto:<< []>> 
12014_78-NonEquals Sto: << []>> 
12014_78-Useless: []
12014_78-Constancy: [(10, 0)]
12014_78-ContextAliasing: []

.....
-----
Block: 8317_0
8317_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
8317_0-Stack size: 9 
8317_0-Equals Mem:<< []>> 
8317_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
8317_0-Equals Sto:<< []>> 
8317_0-NonEquals Sto: << []>> 
8317_0-Useless: []
8317_0-Constancy: [(4, 0)]
8317_0-ContextAliasing: []

.....
-----
Block: 8378_0
8378_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x09', 'SLOAD', 'DUP2', 'LT', 'DUP1', 'ISZERO', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x20e5', 'JUMPI']>> 
8378_0-Stack size: 9 
8378_0-Equals Mem:<< []>> 
8378_0-NonEquals Mem: << [<5,9>]>> 
8378_0-Equals Sto:<< []>> 
8378_0-NonEquals Sto: << [<13,15>]>> 
8378_0-Useless: []
8378_0-Constancy: [(4, 0)]
8378_0-ContextAliasing: []

.....
-----
Block: 8450_0
8450_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8450_0-Stack size: 12 
8450_0-Equals Mem:<< []>> 
8450_0-NonEquals Mem: << [<11,14>]>> 
8450_0-Equals Sto:<< []>> 
8450_0-NonEquals Sto: << []>> 
8450_0-Useless: []
8450_0-Constancy: [(7, 0)]
8450_0-ContextAliasing: []

.....
-----
Block: 8486_0
8486_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8486_0-Stack size: 12 
8486_0-Equals Mem:<< []>> 
8486_0-NonEquals Mem: << [<11,14>]>> 
8486_0-Equals Sto:<< []>> 
8486_0-NonEquals Sto: << []>> 
8486_0-Useless: []
8486_0-Constancy: [(7, 0)]
8486_0-ContextAliasing: []

.....
-----
Block: 8521_0
8521_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8521_0-Stack size: 12 
8521_0-Equals Mem:<< []>> 
8521_0-NonEquals Mem: << [<11,14>]>> 
8521_0-Equals Sto:<< []>> 
8521_0-NonEquals Sto: << []>> 
8521_0-Useless: []
8521_0-Constancy: [(7, 0)]
8521_0-ContextAliasing: []

.....
-----
Block: 9813_0
9813_0Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'POP', 'PUSH0', 'PUSH1 0x1f', 'SLOAD', 'PUSH1 0x1d', 'SLOAD', 'PUSH1 0x1e', 'SLOAD', 'PUSH2 0x267a', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
9813_0-Stack size: 12 
9813_0-Equals Mem:<< []>> 
9813_0-NonEquals Mem: << [<5,9>]>> 
9813_0-Equals Sto:<< []>> 
9813_0-NonEquals Sto: << [<13,18>, <13,20>, <13,22>, <18,20>, <18,22>, <20,22>]>> 
9813_0-Useless: []
9813_0-Constancy: [(7, 0)]
9813_0-ContextAliasing: []

.....
-----
Block: 12014_77
12014_77Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_77-Stack size: 20 
12014_77-Equals Mem:<< []>> 
12014_77-NonEquals Mem: << [<5,8>]>> 
12014_77-Equals Sto:<< []>> 
12014_77-NonEquals Sto: << []>> 
12014_77-Useless: []
12014_77-Constancy: [(15, 0), (6, 0)]
12014_77-ContextAliasing: []

.....
-----
Block: 12014_76
12014_76Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_76-Stack size: 19 
12014_76-Equals Mem:<< []>> 
12014_76-NonEquals Mem: << [<5,8>]>> 
12014_76-Equals Sto:<< []>> 
12014_76-NonEquals Sto: << []>> 
12014_76-Useless: []
12014_76-Constancy: [(14, 0), (5, 0)]
12014_76-ContextAliasing: []

.....
-----
Block: 12014_75
12014_75Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_75-Stack size: 20 
12014_75-Equals Mem:<< []>> 
12014_75-NonEquals Mem: << [<5,8>]>> 
12014_75-Equals Sto:<< []>> 
12014_75-NonEquals Sto: << []>> 
12014_75-Useless: []
12014_75-Constancy: [(15, 0), (5, 0)]
12014_75-ContextAliasing: []

.....
-----
Block: 12014_74
12014_74Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_74-Stack size: 20 
12014_74-Equals Mem:<< []>> 
12014_74-NonEquals Mem: << [<5,8>]>> 
12014_74-Equals Sto:<< []>> 
12014_74-NonEquals Sto: << []>> 
12014_74-Useless: []
12014_74-Constancy: [(15, 0), (5, 0)]
12014_74-ContextAliasing: []

.....
-----
Block: 12014_73
12014_73Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_73-Stack size: 23 
12014_73-Equals Mem:<< []>> 
12014_73-NonEquals Mem: << [<5,8>]>> 
12014_73-Equals Sto:<< []>> 
12014_73-NonEquals Sto: << []>> 
12014_73-Useless: []
12014_73-Constancy: [(18, 0), (8, 0), (7, 0)]
12014_73-ContextAliasing: []

.....
-----
Block: 12064_26
12064_26Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_26-Stack size: 21 
12064_26-Equals Mem:<< []>> 
12064_26-NonEquals Mem: << [<4,7>]>> 
12064_26-Equals Sto:<< []>> 
12064_26-NonEquals Sto: << []>> 
12064_26-Useless: []
12064_26-Constancy: [(16, 0), (6, 0), (5, 0), (0, 0)]
12064_26-ContextAliasing: []

.....
-----
Block: 12064_25
12064_25Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_25-Stack size: 20 
12064_25-Equals Mem:<< []>> 
12064_25-NonEquals Mem: << [<4,7>]>> 
12064_25-Equals Sto:<< []>> 
12064_25-NonEquals Sto: << []>> 
12064_25-Useless: []
12064_25-Constancy: [(15, 0), (5, 0), (4, 0), (0, 0)]
12064_25-ContextAliasing: []

.....
-----
Block: 12014_72
12014_72Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_72-Stack size: 22 
12014_72-Equals Mem:<< []>> 
12014_72-NonEquals Mem: << [<5,8>]>> 
12014_72-Equals Sto:<< []>> 
12014_72-NonEquals Sto: << []>> 
12014_72-Useless: []
12014_72-Constancy: [(17, 0), (7, 0), (5, 0)]
12014_72-ContextAliasing: []

.....
-----
Block: 12285_2
12285_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12285_2-Stack size: 25 
12285_2-Equals Mem:<< []>> 
12285_2-NonEquals Mem: << [<5,8>]>> 
12285_2-Equals Sto:<< []>> 
12285_2-NonEquals Sto: << []>> 
12285_2-Useless: []
12285_2-Constancy: [(20, 0), (10, 0), (1, 0)]
12285_2-ContextAliasing: [(4, 22)]

.....
-----
Block: 10931_0
10931_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2ad7', 'SWAP2', 'SWAP1', 'PUSH2 0x3011', 'JUMP']>> 
10931_0-Stack size: 25 
10931_0-Equals Mem:<< [<18,6>]>> 
10931_0-NonEquals Mem: << []>> 
10931_0-Equals Sto:<< []>> 
10931_0-NonEquals Sto: << []>> 
10931_0-Useless: []
10931_0-Constancy: [(20, 0), (10, 0)]
10931_0-ContextAliasing: []

.....
-----
Block: 12285_1
12285_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12285_1-Stack size: 25 
12285_1-Equals Mem:<< []>> 
12285_1-NonEquals Mem: << [<5,8>]>> 
12285_1-Equals Sto:<< []>> 
12285_1-NonEquals Sto: << []>> 
12285_1-Useless: []
12285_1-Constancy: [(20, 0), (10, 0)]
12285_1-ContextAliasing: [(4, 22)]

.....
-----
Block: 6680_4
6680_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6680_4-Stack size: 25 
6680_4-Equals Mem:<< []>> 
6680_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6680_4-Equals Sto:<< []>> 
6680_4-NonEquals Sto: << []>> 
6680_4-Useless: []
6680_4-Constancy: [(20, 0), (10, 0), (1, 0)]
6680_4-ContextAliasing: []

.....
-----
Block: 6778_4
6778_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6778_4-Stack size: 25 
6778_4-Equals Mem:<< []>> 
6778_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6778_4-Equals Sto:<< []>> 
6778_4-NonEquals Sto: << []>> 
6778_4-Useless: []
6778_4-Constancy: [(20, 0), (10, 0), (1, 0)]
6778_4-ContextAliasing: []

.....
-----
Block: 6860_3
6860_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
6860_3-Stack size: 25 
6860_3-Equals Mem:<< [<12,27>, <17,30>]>> 
6860_3-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
6860_3-Equals Sto:<< []>> 
6860_3-NonEquals Sto: << []>> 
6860_3-Useless: []
6860_3-Constancy: [(20, 0), (10, 0), (1, 0)]
6860_3-ContextAliasing: []

.....
-----
Block: 11061_0
11061_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x2b89', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x302c', 'JUMP']>> 
11061_0-Stack size: 21 
11061_0-Equals Mem:<< []>> 
11061_0-NonEquals Mem: << [<7,2>]>> 
11061_0-Equals Sto:<< []>> 
11061_0-NonEquals Sto: << []>> 
11061_0-Useless: []
11061_0-Constancy: [(16, 0), (6, 0)]
11061_0-ContextAliasing: []

.....
-----
Block: 12332_0
12332_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
12332_0-Stack size: 30 
12332_0-Equals Mem:<< []>> 
12332_0-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
12332_0-Equals Sto:<< []>> 
12332_0-NonEquals Sto: << []>> 
12332_0-Useless: []
12332_0-Constancy: [(25, 0), (15, 0), (4, 0)]
12332_0-ContextAliasing: [(9, 26)]

.....
-----
Block: 12382_0
12382_0Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x3055', 'JUMP']>> 
12382_0-Stack size: 36 
12382_0-Equals Mem:<< []>> 
12382_0-NonEquals Mem: << [<9,1>]>> 
12382_0-Equals Sto:<< []>> 
12382_0-NonEquals Sto: << []>> 
12382_0-Useless: []
12382_0-Constancy: [(31, 0), (21, 0), (10, 0), (5, 0), (3, 32)]
12382_0-ContextAliasing: [(15, 26)]

.....
-----
Block: 12014_71
12014_71Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_71-Stack size: 24 
12014_71-Equals Mem:<< []>> 
12014_71-NonEquals Mem: << [<5,8>]>> 
12014_71-Equals Sto:<< []>> 
12014_71-NonEquals Sto: << []>> 
12014_71-Useless: []
12014_71-Constancy: [(19, 0), (9, 0), (5, 0)]
12014_71-ContextAliasing: []

.....
-----
Block: 12014_70
12014_70Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_70-Stack size: 26 
12014_70-Equals Mem:<< []>> 
12014_70-NonEquals Mem: << [<5,8>]>> 
12014_70-Equals Sto:<< []>> 
12014_70-NonEquals Sto: << []>> 
12014_70-Useless: []
12014_70-Constancy: [(21, 0), (11, 0), (6, 0)]
12014_70-ContextAliasing: []

.....
-----
Block: 12064_24
12064_24Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_24-Stack size: 24 
12064_24-Equals Mem:<< []>> 
12064_24-NonEquals Mem: << [<4,7>]>> 
12064_24-Equals Sto:<< []>> 
12064_24-NonEquals Sto: << []>> 
12064_24-Useless: []
12064_24-Constancy: [(19, 0), (9, 0), (4, 0), (0, 0)]
12064_24-ContextAliasing: []

.....
-----
Block: 12014_69
12014_69Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_69-Stack size: 27 
12014_69-Equals Mem:<< []>> 
12014_69-NonEquals Mem: << [<5,8>]>> 
12014_69-Equals Sto:<< []>> 
12014_69-NonEquals Sto: << []>> 
12014_69-Useless: []
12014_69-Constancy: [(22, 0), (12, 0), (6, 0)]
12014_69-ContextAliasing: []

.....
-----
Block: 12064_23
12064_23Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_23-Stack size: 25 
12064_23-Equals Mem:<< []>> 
12064_23-NonEquals Mem: << [<4,7>]>> 
12064_23-Equals Sto:<< []>> 
12064_23-NonEquals Sto: << []>> 
12064_23-Useless: []
12064_23-Constancy: [(20, 0), (10, 0), (4, 0), (0, 0)]
12064_23-ContextAliasing: []

.....
-----
Block: 12014_68
12014_68Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_68-Stack size: 28 
12014_68-Equals Mem:<< []>> 
12014_68-NonEquals Mem: << [<5,8>]>> 
12014_68-Equals Sto:<< []>> 
12014_68-NonEquals Sto: << []>> 
12014_68-Useless: []
12014_68-Constancy: [(23, 0), (13, 0), (6, 0)]
12014_68-ContextAliasing: []

.....
-----
Block: 12014_67
12014_67Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_67-Stack size: 27 
12014_67-Equals Mem:<< []>> 
12014_67-NonEquals Mem: << [<5,8>]>> 
12014_67-Equals Sto:<< []>> 
12014_67-NonEquals Sto: << []>> 
12014_67-Useless: []
12014_67-Constancy: [(22, 0), (12, 0), (5, 0)]
12014_67-ContextAliasing: []

.....
-----
Block: 6680_3
6680_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6680_3-Stack size: 29 
6680_3-Equals Mem:<< []>> 
6680_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6680_3-Equals Sto:<< []>> 
6680_3-NonEquals Sto: << []>> 
6680_3-Useless: []
6680_3-Constancy: [(24, 0), (1, 0)]
6680_3-ContextAliasing: []

.....
-----
Block: 6778_3
6778_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6778_3-Stack size: 29 
6778_3-Equals Mem:<< []>> 
6778_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6778_3-Equals Sto:<< []>> 
6778_3-NonEquals Sto: << []>> 
6778_3-Useless: []
6778_3-Constancy: [(24, 0), (1, 0)]
6778_3-ContextAliasing: []

.....
-----
Block: 6860_4
6860_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
6860_4-Stack size: 29 
6860_4-Equals Mem:<< [<12,27>, <17,30>]>> 
6860_4-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
6860_4-Equals Sto:<< []>> 
6860_4-NonEquals Sto: << []>> 
6860_4-Useless: []
6860_4-Constancy: [(24, 0), (1, 0)]
6860_4-ContextAliasing: []

.....
-----
Block: 11372_0
11372_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2c91', 'SWAP2', 'SWAP1', 'PUSH2 0x309b', 'JUMP']>> 
11372_0-Stack size: 30 
11372_0-Equals Mem:<< [<19,7>]>> 
11372_0-NonEquals Mem: << []>> 
11372_0-Equals Sto:<< []>> 
11372_0-NonEquals Sto: << []>> 
11372_0-Useless: []
11372_0-Constancy: [(25, 0)]
11372_0-ContextAliasing: []

.....
-----
Block: 8616_0
8616_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8616_0-Stack size: 12 
8616_0-Equals Mem:<< []>> 
8616_0-NonEquals Mem: << [<11,14>]>> 
8616_0-Equals Sto:<< []>> 
8616_0-NonEquals Sto: << []>> 
8616_0-Useless: []
8616_0-Constancy: [(7, 0)]
8616_0-ContextAliasing: []

.....
-----
Block: 12014_66
12014_66Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_66-Stack size: 16 
12014_66-Equals Mem:<< []>> 
12014_66-NonEquals Mem: << [<5,8>]>> 
12014_66-Equals Sto:<< []>> 
12014_66-NonEquals Sto: << []>> 
12014_66-Useless: []
12014_66-Constancy: [(11, 0)]
12014_66-ContextAliasing: []

.....
-----
Block: 8692_0
8692_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8692_0-Stack size: 12 
8692_0-Equals Mem:<< []>> 
8692_0-NonEquals Mem: << [<11,14>]>> 
8692_0-Equals Sto:<< []>> 
8692_0-NonEquals Sto: << []>> 
8692_0-Useless: []
8692_0-Constancy: [(7, 0)]
8692_0-ContextAliasing: []

.....
-----
Block: 10473_0
10473_0Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x290d', 'SWAP2', 'SWAP1', 'PUSH2 0x2f4b', 'JUMP']>> 
10473_0-Stack size: 18 
10473_0-Equals Mem:<< [<18,6>]>> 
10473_0-NonEquals Mem: << []>> 
10473_0-Equals Sto:<< []>> 
10473_0-NonEquals Sto: << []>> 
10473_0-Useless: []
10473_0-Constancy: [(13, 0), (5, 0), (4, 0)]
10473_0-ContextAliasing: []

.....
-----
Block: 12014_65
12014_65Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_65-Stack size: 21 
12014_65-Equals Mem:<< []>> 
12014_65-NonEquals Mem: << [<5,8>]>> 
12014_65-Equals Sto:<< []>> 
12014_65-NonEquals Sto: << []>> 
12014_65-Useless: []
12014_65-Constancy: [(16, 0), (8, 0), (6, 0)]
12014_65-ContextAliasing: []

.....
-----
Block: 12064_22
12064_22Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_22-Stack size: 19 
12064_22-Equals Mem:<< []>> 
12064_22-NonEquals Mem: << [<4,7>]>> 
12064_22-Equals Sto:<< []>> 
12064_22-NonEquals Sto: << []>> 
12064_22-Useless: []
12064_22-Constancy: [(14, 0), (6, 0), (4, 0), (0, 0)]
12064_22-ContextAliasing: []

.....
-----
Block: 9566_5
9566_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_5-Stack size: 19 
9566_5-Equals Mem:<< []>> 
9566_5-NonEquals Mem: << [<6,1>]>> 
9566_5-Equals Sto:<< []>> 
9566_5-NonEquals Sto: << []>> 
9566_5-Useless: []
9566_5-Constancy: [(14, 0), (6, 0), (2, 0)]
9566_5-ContextAliasing: []

.....
-----
Block: 9604_5
9604_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_5-Stack size: 19 
9604_5-Equals Mem:<< []>> 
9604_5-NonEquals Mem: << [<6,1>]>> 
9604_5-Equals Sto:<< []>> 
9604_5-NonEquals Sto: << []>> 
9604_5-Useless: []
9604_5-Constancy: [(14, 0), (6, 0), (2, 0)]
9604_5-ContextAliasing: []

.....
-----
Block: 9322_7
9322_7Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_7-Stack size: 25 
9322_7-Equals Mem:<< []>> 
9322_7-NonEquals Mem: << [<6,1>]>> 
9322_7-Equals Sto:<< []>> 
9322_7-NonEquals Sto: << []>> 
9322_7-Useless: []
9322_7-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
9322_7-ContextAliasing: [(2, 24)]

.....
-----
Block: 11416_8
11416_8Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_8-Stack size: 27 
11416_8-Equals Mem:<< []>> 
11416_8-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_8-Equals Sto:<< []>> 
11416_8-NonEquals Sto: << []>> 
11416_8-Useless: []
11416_8-Constancy: [(22, 0), (14, 0), (10, 0), (3, 0)]
11416_8-ContextAliasing: [(4, 25)]

.....
-----
Block: 11440_8
11440_8Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_8-Stack size: 31 
11440_8-Equals Mem:<< []>> 
11440_8-NonEquals Mem: << [<11,5>]>> 
11440_8-Equals Sto:<< []>> 
11440_8-NonEquals Sto: << []>> 
11440_8-Useless: []
11440_8-Constancy: [(26, 0), (18, 0), (14, 0), (7, 0), (3, 0), (2, 32)]
11440_8-ContextAliasing: [(8, 25)]

.....
-----
Block: 12014_64
12014_64Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_64-Stack size: 30 
12014_64-Equals Mem:<< []>> 
12014_64-NonEquals Mem: << [<5,8>]>> 
12014_64-Equals Sto:<< []>> 
12014_64-NonEquals Sto: << []>> 
12014_64-Useless: []
12014_64-Constancy: [(25, 0), (17, 0), (13, 0), (6, 0), (5, 0)]
12014_64-ContextAliasing: []

.....
-----
Block: 9687_5
9687_5Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_5-Stack size: 20 
9687_5-Equals Mem:<< [<12,29>]>> 
9687_5-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_5-Equals Sto:<< [<24,31>]>> 
9687_5-NonEquals Sto: << []>> 
9687_5-Useless: []
9687_5-Constancy: [(15, 0), (7, 0), (3, 0)]
9687_5-ContextAliasing: []

.....
-----
Block: 12014_63
12014_63Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_63-Stack size: 29 
12014_63-Equals Mem:<< []>> 
12014_63-NonEquals Mem: << [<5,8>]>> 
12014_63-Equals Sto:<< []>> 
12014_63-NonEquals Sto: << []>> 
12014_63-Useless: []
12014_63-Constancy: [(24, 0), (16, 0), (12, 0), (6, 0), (5, 0)]
12014_63-ContextAliasing: []

.....
-----
Block: 9390_6
9390_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_6-Stack size: 24 
9390_6-Equals Mem:<< []>> 
9390_6-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_6-Equals Sto:<< []>> 
9390_6-NonEquals Sto: << []>> 
9390_6-Useless: []
9390_6-Constancy: [(19, 0), (11, 0), (7, 0), (1, 0)]
9390_6-ContextAliasing: []

.....
-----
Block: 9733_5
9733_5Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_5-Stack size: 20 
9733_5-Equals Mem:<< []>> 
9733_5-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_5-Equals Sto:<< []>> 
9733_5-NonEquals Sto: << []>> 
9733_5-Useless: []
9733_5-Constancy: [(15, 0), (7, 0), (3, 0)]
9733_5-ContextAliasing: []

.....
-----
Block: 10592_0
10592_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x29bc', 'JUMPI']>> 
10592_0-Stack size: 15 
10592_0-Equals Mem:<< [<14,26>]>> 
10592_0-NonEquals Mem: << [<21,14>, <21,26>]>> 
10592_0-Equals Sto:<< []>> 
10592_0-NonEquals Sto: << []>> 
10592_0-Useless: []
10592_0-Constancy: [(10, 0), (2, 0)]
10592_0-ContextAliasing: []

.....
-----
Block: 8735_0
8735_0Instr:<<['JUMPDEST', 'PUSH1 0x05', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SWAP1', 'SWAP3', 'DIV', 'DUP3', 'AND', 'ISZERO', 'SWAP2', 'AND', 'DUP1', 'PUSH2 0x2269', 'JUMPI']>> 
8735_0-Stack size: 11 
8735_0-Equals Mem:<< []>> 
8735_0-NonEquals Mem: << [<13,16>]>> 
8735_0-Equals Sto:<< []>> 
8735_0-NonEquals Sto: << [<2,20>]>> 
8735_0-Useless: []
8735_0-Constancy: [(6, 0)]
8735_0-ContextAliasing: []

.....
-----
Block: 8782_0
8782_0Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8782_0-Stack size: 13 
8782_0-Equals Mem:<< []>> 
8782_0-NonEquals Mem: << [<11,14>]>> 
8782_0-Equals Sto:<< []>> 
8782_0-NonEquals Sto: << []>> 
8782_0-Useless: []
8782_0-Constancy: [(8, 0)]
8782_0-ContextAliasing: []

.....
-----
Block: 8825_0
8825_0Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x22a0', 'JUMPI']>> 
8825_0-Stack size: 13 
8825_0-Equals Mem:<< []>> 
8825_0-NonEquals Mem: << [<10,13>]>> 
8825_0-Equals Sto:<< []>> 
8825_0-NonEquals Sto: << []>> 
8825_0-Useless: []
8825_0-Constancy: [(8, 0), (0, 0)]
8825_0-ContextAliasing: []

.....
-----
Block: 12014_62
12014_62Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_62-Stack size: 19 
12014_62-Equals Mem:<< []>> 
12014_62-NonEquals Mem: << [<5,8>]>> 
12014_62-Equals Sto:<< []>> 
12014_62-NonEquals Sto: << []>> 
12014_62-Useless: []
12014_62-Constancy: [(14, 0), (6, 0)]
12014_62-ContextAliasing: []

.....
-----
Block: 12064_21
12064_21Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_21-Stack size: 17 
12064_21-Equals Mem:<< []>> 
12064_21-NonEquals Mem: << [<4,7>]>> 
12064_21-Equals Sto:<< []>> 
12064_21-NonEquals Sto: << []>> 
12064_21-Useless: []
12064_21-Constancy: [(12, 0), (4, 0), (0, 0)]
12064_21-ContextAliasing: []

.....
-----
Block: 12014_61
12014_61Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_61-Stack size: 19 
12014_61-Equals Mem:<< []>> 
12014_61-NonEquals Mem: << [<5,8>]>> 
12014_61-Equals Sto:<< []>> 
12014_61-NonEquals Sto: << []>> 
12014_61-Useless: []
12014_61-Constancy: [(14, 0)]
12014_61-ContextAliasing: []

.....
-----
Block: 12064_20
12064_20Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_20-Stack size: 17 
12064_20-Equals Mem:<< []>> 
12064_20-NonEquals Mem: << [<4,7>]>> 
12064_20-Equals Sto:<< []>> 
12064_20-NonEquals Sto: << []>> 
12064_20-Useless: []
12064_20-Constancy: [(12, 0), (0, 0)]
12064_20-ContextAliasing: []

.....
-----
Block: 12014_60
12014_60Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_60-Stack size: 21 
12014_60-Equals Mem:<< []>> 
12014_60-NonEquals Mem: << [<5,8>]>> 
12014_60-Equals Sto:<< []>> 
12014_60-NonEquals Sto: << []>> 
12014_60-Useless: []
12014_60-Constancy: [(16, 0), (5, 0)]
12014_60-ContextAliasing: []

.....
-----
Block: 12014_59
12014_59Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_59-Stack size: 19 
12014_59-Equals Mem:<< []>> 
12014_59-NonEquals Mem: << [<5,8>]>> 
12014_59-Equals Sto:<< []>> 
12014_59-NonEquals Sto: << []>> 
12014_59-Useless: []
12014_59-Constancy: [(14, 0)]
12014_59-ContextAliasing: []

.....
-----
Block: 12064_19
12064_19Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_19-Stack size: 17 
12064_19-Equals Mem:<< []>> 
12064_19-NonEquals Mem: << [<4,7>]>> 
12064_19-Equals Sto:<< []>> 
12064_19-NonEquals Sto: << []>> 
12064_19-Useless: []
12064_19-Constancy: [(12, 0), (0, 0)]
12064_19-ContextAliasing: []

.....
-----
Block: 12014_58
12014_58Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_58-Stack size: 21 
12014_58-Equals Mem:<< []>> 
12014_58-NonEquals Mem: << [<5,8>]>> 
12014_58-Equals Sto:<< []>> 
12014_58-NonEquals Sto: << []>> 
12014_58-Useless: []
12014_58-Constancy: [(16, 0), (5, 0)]
12014_58-ContextAliasing: []

.....
-----
Block: 12014_57
12014_57Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_57-Stack size: 19 
12014_57-Equals Mem:<< []>> 
12014_57-NonEquals Mem: << [<5,8>]>> 
12014_57-Equals Sto:<< []>> 
12014_57-NonEquals Sto: << []>> 
12014_57-Useless: []
12014_57-Constancy: [(14, 0)]
12014_57-ContextAliasing: []

.....
-----
Block: 12064_18
12064_18Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_18-Stack size: 17 
12064_18-Equals Mem:<< []>> 
12064_18-NonEquals Mem: << [<4,7>]>> 
12064_18-Equals Sto:<< []>> 
12064_18-NonEquals Sto: << []>> 
12064_18-Useless: []
12064_18-Constancy: [(12, 0), (0, 0)]
12064_18-ContextAliasing: []

.....
-----
Block: 12014_56
12014_56Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_56-Stack size: 21 
12014_56-Equals Mem:<< []>> 
12014_56-NonEquals Mem: << [<5,8>]>> 
12014_56-Equals Sto:<< []>> 
12014_56-NonEquals Sto: << []>> 
12014_56-Useless: []
12014_56-Constancy: [(16, 0), (5, 0)]
12014_56-ContextAliasing: []

.....
-----
Block: 9566_4
9566_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_4-Stack size: 17 
9566_4-Equals Mem:<< []>> 
9566_4-NonEquals Mem: << [<6,1>]>> 
9566_4-Equals Sto:<< []>> 
9566_4-NonEquals Sto: << []>> 
9566_4-Useless: []
9566_4-Constancy: [(12, 0)]
9566_4-ContextAliasing: []

.....
-----
Block: 9604_4
9604_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_4-Stack size: 17 
9604_4-Equals Mem:<< []>> 
9604_4-NonEquals Mem: << [<6,1>]>> 
9604_4-Equals Sto:<< []>> 
9604_4-NonEquals Sto: << []>> 
9604_4-Useless: []
9604_4-Constancy: [(12, 0)]
9604_4-ContextAliasing: []

.....
-----
Block: 9322_6
9322_6Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_6-Stack size: 23 
9322_6-Equals Mem:<< []>> 
9322_6-NonEquals Mem: << [<6,1>]>> 
9322_6-Equals Sto:<< []>> 
9322_6-NonEquals Sto: << []>> 
9322_6-Useless: []
9322_6-Constancy: [(18, 0), (1, 0)]
9322_6-ContextAliasing: [(2, 22)]

.....
-----
Block: 11416_7
11416_7Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_7-Stack size: 25 
11416_7-Equals Mem:<< []>> 
11416_7-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_7-Equals Sto:<< []>> 
11416_7-NonEquals Sto: << []>> 
11416_7-Useless: []
11416_7-Constancy: [(20, 0), (3, 0)]
11416_7-ContextAliasing: [(4, 23)]

.....
-----
Block: 11440_7
11440_7Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_7-Stack size: 29 
11440_7-Equals Mem:<< []>> 
11440_7-NonEquals Mem: << [<11,5>]>> 
11440_7-Equals Sto:<< []>> 
11440_7-NonEquals Sto: << []>> 
11440_7-Useless: []
11440_7-Constancy: [(24, 0), (7, 0), (3, 0), (2, 32)]
11440_7-ContextAliasing: [(8, 23)]

.....
-----
Block: 12014_48
12014_48Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_48-Stack size: 28 
12014_48-Equals Mem:<< []>> 
12014_48-NonEquals Mem: << [<5,8>]>> 
12014_48-Equals Sto:<< []>> 
12014_48-NonEquals Sto: << []>> 
12014_48-Useless: []
12014_48-Constancy: [(23, 0), (6, 0), (5, 0)]
12014_48-ContextAliasing: []

.....
-----
Block: 9687_4
9687_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_4-Stack size: 18 
9687_4-Equals Mem:<< [<12,29>]>> 
9687_4-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_4-Equals Sto:<< [<24,31>]>> 
9687_4-NonEquals Sto: << []>> 
9687_4-Useless: []
9687_4-Constancy: [(13, 0)]
9687_4-ContextAliasing: []

.....
-----
Block: 12014_47
12014_47Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_47-Stack size: 27 
12014_47-Equals Mem:<< []>> 
12014_47-NonEquals Mem: << [<5,8>]>> 
12014_47-Equals Sto:<< []>> 
12014_47-NonEquals Sto: << []>> 
12014_47-Useless: []
12014_47-Constancy: [(22, 0), (6, 0), (5, 0)]
12014_47-ContextAliasing: []

.....
-----
Block: 9390_5
9390_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_5-Stack size: 22 
9390_5-Equals Mem:<< []>> 
9390_5-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_5-Equals Sto:<< []>> 
9390_5-NonEquals Sto: << []>> 
9390_5-Useless: []
9390_5-Constancy: [(17, 0), (1, 0)]
9390_5-ContextAliasing: []

.....
-----
Block: 9733_4
9733_4Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_4-Stack size: 18 
9733_4-Equals Mem:<< []>> 
9733_4-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_4-Equals Sto:<< []>> 
9733_4-NonEquals Sto: << []>> 
9733_4-Useless: []
9733_4-Constancy: [(13, 0)]
9733_4-ContextAliasing: []

.....
-----
Block: 12014_46
12014_46Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_46-Stack size: 18 
12014_46-Equals Mem:<< []>> 
12014_46-NonEquals Mem: << [<5,8>]>> 
12014_46-Equals Sto:<< []>> 
12014_46-NonEquals Sto: << []>> 
12014_46-Useless: []
12014_46-Constancy: [(13, 0)]
12014_46-ContextAliasing: []

.....
-----
Block: 9045_0
9045_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x237d', 'JUMPI']>> 
9045_0-Stack size: 13 
9045_0-Equals Mem:<< []>> 
9045_0-NonEquals Mem: << [<11,14>]>> 
9045_0-Equals Sto:<< []>> 
9045_0-NonEquals Sto: << []>> 
9045_0-Useless: []
9045_0-Constancy: [(8, 0), (0, 0)]
9045_0-ContextAliasing: []

.....
-----
Block: 12014_55
12014_55Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_55-Stack size: 19 
12014_55-Equals Mem:<< []>> 
12014_55-NonEquals Mem: << [<5,8>]>> 
12014_55-Equals Sto:<< []>> 
12014_55-NonEquals Sto: << []>> 
12014_55-Useless: []
12014_55-Constancy: [(14, 0), (6, 0)]
12014_55-ContextAliasing: []

.....
-----
Block: 12064_17
12064_17Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_17-Stack size: 17 
12064_17-Equals Mem:<< []>> 
12064_17-NonEquals Mem: << [<4,7>]>> 
12064_17-Equals Sto:<< []>> 
12064_17-NonEquals Sto: << []>> 
12064_17-Useless: []
12064_17-Constancy: [(12, 0), (4, 0), (0, 0)]
12064_17-ContextAliasing: []

.....
-----
Block: 12014_54
12014_54Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_54-Stack size: 19 
12014_54-Equals Mem:<< []>> 
12014_54-NonEquals Mem: << [<5,8>]>> 
12014_54-Equals Sto:<< []>> 
12014_54-NonEquals Sto: << []>> 
12014_54-Useless: []
12014_54-Constancy: [(14, 0)]
12014_54-ContextAliasing: []

.....
-----
Block: 12064_16
12064_16Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_16-Stack size: 17 
12064_16-Equals Mem:<< []>> 
12064_16-NonEquals Mem: << [<4,7>]>> 
12064_16-Equals Sto:<< []>> 
12064_16-NonEquals Sto: << []>> 
12064_16-Useless: []
12064_16-Constancy: [(12, 0), (0, 0)]
12064_16-ContextAliasing: []

.....
-----
Block: 12014_53
12014_53Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_53-Stack size: 21 
12014_53-Equals Mem:<< []>> 
12014_53-NonEquals Mem: << [<5,8>]>> 
12014_53-Equals Sto:<< []>> 
12014_53-NonEquals Sto: << []>> 
12014_53-Useless: []
12014_53-Constancy: [(16, 0), (5, 0)]
12014_53-ContextAliasing: []

.....
-----
Block: 12014_52
12014_52Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_52-Stack size: 19 
12014_52-Equals Mem:<< []>> 
12014_52-NonEquals Mem: << [<5,8>]>> 
12014_52-Equals Sto:<< []>> 
12014_52-NonEquals Sto: << []>> 
12014_52-Useless: []
12014_52-Constancy: [(14, 0)]
12014_52-ContextAliasing: []

.....
-----
Block: 12064_15
12064_15Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_15-Stack size: 17 
12064_15-Equals Mem:<< []>> 
12064_15-NonEquals Mem: << [<4,7>]>> 
12064_15-Equals Sto:<< []>> 
12064_15-NonEquals Sto: << []>> 
12064_15-Useless: []
12064_15-Constancy: [(12, 0), (0, 0)]
12064_15-ContextAliasing: []

.....
-----
Block: 12014_51
12014_51Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_51-Stack size: 21 
12014_51-Equals Mem:<< []>> 
12014_51-NonEquals Mem: << [<5,8>]>> 
12014_51-Equals Sto:<< []>> 
12014_51-NonEquals Sto: << []>> 
12014_51-Useless: []
12014_51-Constancy: [(16, 0), (5, 0)]
12014_51-ContextAliasing: []

.....
-----
Block: 12014_50
12014_50Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_50-Stack size: 19 
12014_50-Equals Mem:<< []>> 
12014_50-NonEquals Mem: << [<5,8>]>> 
12014_50-Equals Sto:<< []>> 
12014_50-NonEquals Sto: << []>> 
12014_50-Useless: []
12014_50-Constancy: [(14, 0)]
12014_50-ContextAliasing: []

.....
-----
Block: 12064_14
12064_14Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_14-Stack size: 17 
12064_14-Equals Mem:<< []>> 
12064_14-NonEquals Mem: << [<4,7>]>> 
12064_14-Equals Sto:<< []>> 
12064_14-NonEquals Sto: << []>> 
12064_14-Useless: []
12064_14-Constancy: [(12, 0), (0, 0)]
12064_14-ContextAliasing: []

.....
-----
Block: 12014_49
12014_49Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_49-Stack size: 21 
12014_49-Equals Mem:<< []>> 
12014_49-NonEquals Mem: << [<5,8>]>> 
12014_49-Equals Sto:<< []>> 
12014_49-NonEquals Sto: << []>> 
12014_49-Useless: []
12014_49-Constancy: [(16, 0), (5, 0)]
12014_49-ContextAliasing: []

.....
-----
Block: 9566_3
9566_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_3-Stack size: 17 
9566_3-Equals Mem:<< []>> 
9566_3-NonEquals Mem: << [<6,1>]>> 
9566_3-Equals Sto:<< []>> 
9566_3-NonEquals Sto: << []>> 
9566_3-Useless: []
9566_3-Constancy: [(12, 0)]
9566_3-ContextAliasing: []

.....
-----
Block: 9604_3
9604_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_3-Stack size: 17 
9604_3-Equals Mem:<< []>> 
9604_3-NonEquals Mem: << [<6,1>]>> 
9604_3-Equals Sto:<< []>> 
9604_3-NonEquals Sto: << []>> 
9604_3-Useless: []
9604_3-Constancy: [(12, 0)]
9604_3-ContextAliasing: []

.....
-----
Block: 9322_5
9322_5Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_5-Stack size: 23 
9322_5-Equals Mem:<< []>> 
9322_5-NonEquals Mem: << [<6,1>]>> 
9322_5-Equals Sto:<< []>> 
9322_5-NonEquals Sto: << []>> 
9322_5-Useless: []
9322_5-Constancy: [(18, 0), (1, 0)]
9322_5-ContextAliasing: [(2, 22)]

.....
-----
Block: 11416_6
11416_6Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_6-Stack size: 25 
11416_6-Equals Mem:<< []>> 
11416_6-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_6-Equals Sto:<< []>> 
11416_6-NonEquals Sto: << []>> 
11416_6-Useless: []
11416_6-Constancy: [(20, 0), (3, 0)]
11416_6-ContextAliasing: [(4, 23)]

.....
-----
Block: 11440_6
11440_6Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_6-Stack size: 29 
11440_6-Equals Mem:<< []>> 
11440_6-NonEquals Mem: << [<11,5>]>> 
11440_6-Equals Sto:<< []>> 
11440_6-NonEquals Sto: << []>> 
11440_6-Useless: []
11440_6-Constancy: [(24, 0), (7, 0), (3, 0), (2, 32)]
11440_6-ContextAliasing: [(8, 23)]

.....
-----
Block: 12014_45
12014_45Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_45-Stack size: 28 
12014_45-Equals Mem:<< []>> 
12014_45-NonEquals Mem: << [<5,8>]>> 
12014_45-Equals Sto:<< []>> 
12014_45-NonEquals Sto: << []>> 
12014_45-Useless: []
12014_45-Constancy: [(23, 0), (6, 0), (5, 0)]
12014_45-ContextAliasing: []

.....
-----
Block: 9687_3
9687_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_3-Stack size: 18 
9687_3-Equals Mem:<< [<12,29>]>> 
9687_3-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_3-Equals Sto:<< [<24,31>]>> 
9687_3-NonEquals Sto: << []>> 
9687_3-Useless: []
9687_3-Constancy: [(13, 0)]
9687_3-ContextAliasing: []

.....
-----
Block: 12014_44
12014_44Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_44-Stack size: 27 
12014_44-Equals Mem:<< []>> 
12014_44-NonEquals Mem: << [<5,8>]>> 
12014_44-Equals Sto:<< []>> 
12014_44-NonEquals Sto: << []>> 
12014_44-Useless: []
12014_44-Constancy: [(22, 0), (6, 0), (5, 0)]
12014_44-ContextAliasing: []

.....
-----
Block: 9390_4
9390_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_4-Stack size: 22 
9390_4-Equals Mem:<< []>> 
9390_4-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_4-Equals Sto:<< []>> 
9390_4-NonEquals Sto: << []>> 
9390_4-Useless: []
9390_4-Constancy: [(17, 0), (1, 0)]
9390_4-ContextAliasing: []

.....
-----
Block: 9733_3
9733_3Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_3-Stack size: 18 
9733_3-Equals Mem:<< []>> 
9733_3-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_3-Equals Sto:<< []>> 
9733_3-NonEquals Sto: << []>> 
9733_3-Useless: []
9733_3-Constancy: [(13, 0)]
9733_3-ContextAliasing: []

.....
-----
Block: 9322_4
9322_4Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_4-Stack size: 14 
9322_4-Equals Mem:<< []>> 
9322_4-NonEquals Mem: << [<6,1>]>> 
9322_4-Equals Sto:<< []>> 
9322_4-NonEquals Sto: << []>> 
9322_4-Useless: []
9322_4-Constancy: [(9, 0), (1, 0)]
9322_4-ContextAliasing: [(2, 13)]

.....
-----
Block: 11416_5
11416_5Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_5-Stack size: 16 
11416_5-Equals Mem:<< []>> 
11416_5-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_5-Equals Sto:<< []>> 
11416_5-NonEquals Sto: << []>> 
11416_5-Useless: []
11416_5-Constancy: [(11, 0), (3, 0)]
11416_5-ContextAliasing: [(4, 14)]

.....
-----
Block: 11440_5
11440_5Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_5-Stack size: 20 
11440_5-Equals Mem:<< []>> 
11440_5-NonEquals Mem: << [<11,5>]>> 
11440_5-Equals Sto:<< []>> 
11440_5-NonEquals Sto: << []>> 
11440_5-Useless: []
11440_5-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
11440_5-ContextAliasing: [(8, 14)]

.....
-----
Block: 12014_43
12014_43Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_43-Stack size: 19 
12014_43-Equals Mem:<< []>> 
12014_43-NonEquals Mem: << [<5,8>]>> 
12014_43-Equals Sto:<< []>> 
12014_43-NonEquals Sto: << []>> 
12014_43-Useless: []
12014_43-Constancy: [(14, 0), (6, 0), (5, 0)]
12014_43-ContextAliasing: []

.....
-----
Block: 6680
6680Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6680-Stack size: 9 
6680-Equals Mem:<< []>> 
6680-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6680-Equals Sto:<< []>> 
6680-NonEquals Sto: << []>> 
6680-Useless: []
6680-Constancy: [(4, 0)]
6680-ContextAliasing: []

.....
-----
Block: 6778
6778Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6778-Stack size: 9 
6778-Equals Mem:<< []>> 
6778-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6778-Equals Sto:<< []>> 
6778-NonEquals Sto: << []>> 
6778-Useless: []
6778-Constancy: [(4, 0)]
6778-ContextAliasing: []

.....
-----
Block: 6860
6860Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
6860-Stack size: 9 
6860-Equals Mem:<< [<12,27>, <17,30>]>> 
6860-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
6860-Equals Sto:<< []>> 
6860-NonEquals Sto: << []>> 
6860-Useless: []
6860-Constancy: [(4, 0)]
6860-ContextAliasing: []

.....
-----
Block: 4380
4380Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4380-Stack size: 4 
4380-Equals Mem:<< []>> 
4380-NonEquals Mem: << [<6,1>]>> 
4380-Equals Sto:<< []>> 
4380-NonEquals Sto: << []>> 
4380-Useless: []
4380-Constancy: []
4380-ContextAliasing: []

.....
-----
Block: 4461
4461Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x39', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
4461-Stack size: 4 
4461-Equals Mem:<< []>> 
4461-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
4461-Equals Sto:<< []>> 
4461-NonEquals Sto: << []>> 
4461-Useless: []
4461-Constancy: []
4461-ContextAliasing: []

.....
-----
Block: 11936_0
11936_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
11936_0-Stack size: 8 
11936_0-Equals Mem:<< []>> 
11936_0-NonEquals Mem: << [<4,7>]>> 
11936_0-Equals Sto:<< []>> 
11936_0-NonEquals Sto: << []>> 
11936_0-Useless: []
11936_0-Constancy: [(5, 96)]
11936_0-ContextAliasing: []

.....
-----
Block: 2898
2898Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x0b7e', 'SWAP1', 'PUSH2 0x2e81', 'JUMP']>> 
2898-Stack size: 5 
2898-Equals Mem:<< [<17,12>]>> 
2898-NonEquals Mem: << [<17,24>, <24,12>]>> 
2898-Equals Sto:<< []>> 
2898-NonEquals Sto: << []>> 
2898-Useless: []
2898-Constancy: [(2, 96)]
2898-ContextAliasing: []

.....
-----
Block: 11936
11936Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
11936-Stack size: 12 
11936-Equals Mem:<< []>> 
11936-NonEquals Mem: << [<4,7>]>> 
11936-Equals Sto:<< []>> 
11936-NonEquals Sto: << []>> 
11936-Useless: []
11936-Constancy: [(9, 96)]
11936-ContextAliasing: []

.....
-----
Block: 11416
11416Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416-Stack size: 4 
11416-Equals Mem:<< []>> 
11416-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
11416-Equals Sto:<< []>> 
11416-NonEquals Sto: << []>> 
11416-Useless: []
11416-Constancy: []
11416-ContextAliasing: []

.....
-----
Block: 11440
11440Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440-Stack size: 8 
11440-Equals Mem:<< []>> 
11440-NonEquals Mem: << [<11,5>]>> 
11440-Equals Sto:<< []>> 
11440-NonEquals Sto: << []>> 
11440-Useless: []
11440-Constancy: [(3, 0), (2, 32)]
11440-ContextAliasing: []

.....
-----
Block: 4295
4295Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4295-Stack size: 3 
4295-Equals Mem:<< []>> 
4295-NonEquals Mem: << [<6,1>]>> 
4295-Equals Sto:<< []>> 
4295-NonEquals Sto: << []>> 
4295-Useless: []
4295-Constancy: []
4295-ContextAliasing: []

.....
-----
Block: 1147
1147Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1147-Stack size: 3 
1147-Equals Mem:<< []>> 
1147-NonEquals Mem: << [<12,2>]>> 
1147-Equals Sto:<< []>> 
1147-NonEquals Sto: << []>> 
1147-Useless: []
1147-Constancy: []
1147-ContextAliasing: []

.....
-----
Block: 1147_0
1147_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1147_0-Stack size: 2 
1147_0-Equals Mem:<< []>> 
1147_0-NonEquals Mem: << [<12,2>]>> 
1147_0-Equals Sto:<< []>> 
1147_0-NonEquals Sto: << []>> 
1147_0-Useless: []
1147_0-Constancy: []
1147_0-ContextAliasing: []

.....
-----
Block: 4230
4230Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4230-Stack size: 2 
4230-Equals Mem:<< []>> 
4230-NonEquals Mem: << [<6,1>]>> 
4230-Equals Sto:<< []>> 
4230-NonEquals Sto: << []>> 
4230-Useless: []
4230-Constancy: []
4230-ContextAliasing: []

.....
-----
Block: 4144
4144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4144-Stack size: 5 
4144-Equals Mem:<< []>> 
4144-NonEquals Mem: << [<6,1>]>> 
4144-Equals Sto:<< []>> 
4144-NonEquals Sto: << []>> 
4144-Useless: [6]
4144-Constancy: []
4144-ContextAliasing: []

.....
-----
Block: 12014_42
12014_42Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_42-Stack size: 11 
12014_42-Equals Mem:<< []>> 
12014_42-NonEquals Mem: << [<5,8>]>> 
12014_42-Equals Sto:<< []>> 
12014_42-NonEquals Sto: << []>> 
12014_42-Useless: []
12014_42-Constancy: []
12014_42-ContextAliasing: []

.....
-----
Block: 12014_41
12014_41Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_41-Stack size: 10 
12014_41-Equals Mem:<< []>> 
12014_41-NonEquals Mem: << [<5,8>]>> 
12014_41-Equals Sto:<< []>> 
12014_41-NonEquals Sto: << []>> 
12014_41-Useless: []
12014_41-Constancy: []
12014_41-ContextAliasing: []

.....
-----
Block: 4060
4060Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4060-Stack size: 4 
4060-Equals Mem:<< []>> 
4060-NonEquals Mem: << [<6,1>]>> 
4060-Equals Sto:<< []>> 
4060-NonEquals Sto: << []>> 
4060-Useless: []
4060-Constancy: []
4060-ContextAliasing: []

.....
-----
Block: 4083
4083Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4083-Stack size: 4 
4083-Equals Mem:<< []>> 
4083-NonEquals Mem: << [<13,16>]>> 
4083-Equals Sto:<< [<21,33>]>> 
4083-NonEquals Sto: << []>> 
4083-Useless: []
4083-Constancy: []
4083-ContextAliasing: []

.....
-----
Block: 4002
4002Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4002-Stack size: 3 
4002-Equals Mem:<< []>> 
4002-NonEquals Mem: << [<6,1>]>> 
4002-Equals Sto:<< []>> 
4002-NonEquals Sto: << []>> 
4002-Useless: [6]
4002-Constancy: [(0, 0)]
4002-ContextAliasing: []

.....
-----
Block: 3703
3703Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3703-Stack size: 5 
3703-Equals Mem:<< []>> 
3703-NonEquals Mem: << [<6,1>]>> 
3703-Equals Sto:<< []>> 
3703-NonEquals Sto: << []>> 
3703-Useless: [6]
3703-Constancy: []
3703-ContextAliasing: []

.....
-----
Block: 3737
3737Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x33', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x616e206576657279203130206d696e75746573', 'PUSH1 0x68', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
3737-Stack size: 5 
3737-Equals Mem:<< []>> 
3737-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3737-Equals Sto:<< []>> 
3737-NonEquals Sto: << []>> 
3737-Useless: []
3737-Constancy: []
3737-ContextAliasing: []

.....
-----
Block: 3857
3857Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x30', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x747765656e20302520616e6420313025', 'PUSH1 0x80', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
3857-Stack size: 5 
3857-Equals Mem:<< []>> 
3857-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3857-Equals Sto:<< []>> 
3857-NonEquals Sto: << []>> 
3857-Useless: []
3857-Constancy: []
3857-ContextAliasing: []

.....
-----
Block: 3588
3588Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3588-Stack size: 2 
3588-Equals Mem:<< []>> 
3588-NonEquals Mem: << [<6,1>]>> 
3588-Equals Sto:<< []>> 
3588-NonEquals Sto: << []>> 
3588-Useless: [6]
3588-Constancy: []
3588-ContextAliasing: []

.....
-----
Block: 1713
1713Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1713-Stack size: 3 
1713-Equals Mem:<< []>> 
1713-NonEquals Mem: << [<10,14>]>> 
1713-Equals Sto:<< []>> 
1713-NonEquals Sto: << []>> 
1713-Useless: []
1713-Constancy: []
1713-ContextAliasing: []

.....
-----
Block: 1607
1607Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'SWAP1', 'JUMP']>> 
1607-Stack size: 3 
1607-Equals Mem:<< []>> 
1607-NonEquals Mem: << [<10,13>]>> 
1607-Equals Sto:<< []>> 
1607-NonEquals Sto: << []>> 
1607-Useless: []
1607-Constancy: []
1607-ContextAliasing: []

.....
-----
Block: 3516
3516Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0bdf', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x0dad', 'SWAP1', 'DUP7', 'PUSH2 0x2497', 'JUMP']>> 
3516-Stack size: 4 
3516-Equals Mem:<< [<5,23>, <10,26>]>> 
3516-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
3516-Equals Sto:<< []>> 
3516-NonEquals Sto: << []>> 
3516-Useless: []
3516-Constancy: []
3516-ContextAliasing: []

.....
-----
Block: 12014_40
12014_40Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_40-Stack size: 18 
12014_40-Equals Mem:<< []>> 
12014_40-NonEquals Mem: << [<5,8>]>> 
12014_40-Equals Sto:<< []>> 
12014_40-NonEquals Sto: << []>> 
12014_40-Useless: []
12014_40-Constancy: [(13, 0), (6, 0), (5, 0)]
12014_40-ContextAliasing: []

.....
-----
Block: 9390_3
9390_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_3-Stack size: 13 
9390_3-Equals Mem:<< []>> 
9390_3-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_3-Equals Sto:<< []>> 
9390_3-NonEquals Sto: << []>> 
9390_3-Useless: []
9390_3-Constancy: [(8, 0), (1, 0)]
9390_3-ContextAliasing: []

.....
-----
Block: 1458
1458Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1458-Stack size: 2 
1458-Equals Mem:<< []>> 
1458-NonEquals Mem: << [<6,3>]>> 
1458-Equals Sto:<< []>> 
1458-NonEquals Sto: << []>> 
1458-Useless: []
1458-Constancy: []
1458-ContextAliasing: []

.....
-----
Block: 6972
6972Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
6972-Stack size: 10 
6972-Equals Mem:<< []>> 
6972-NonEquals Mem: << [<6,1>]>> 
6972-Equals Sto:<< []>> 
6972-NonEquals Sto: << []>> 
6972-Useless: []
6972-Constancy: [(4, 0)]
6972-ContextAliasing: []

.....
-----
Block: 7010
7010Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
7010-Stack size: 10 
7010-Equals Mem:<< []>> 
7010-NonEquals Mem: << [<6,1>]>> 
7010-Equals Sto:<< []>> 
7010-NonEquals Sto: << []>> 
7010-Useless: []
7010-Constancy: [(4, 0)]
7010-ContextAliasing: []

.....
-----
Block: 7033
7033Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1bb9', 'JUMPI']>> 
7033-Stack size: 10 
7033-Equals Mem:<< []>> 
7033-NonEquals Mem: << [<11,14>]>> 
7033-Equals Sto:<< []>> 
7033-NonEquals Sto: << []>> 
7033-Useless: []
7033-Constancy: [(4, 0)]
7033-ContextAliasing: []

.....
-----
Block: 7068
7068Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7068-Stack size: 11 
7068-Equals Mem:<< []>> 
7068-NonEquals Mem: << [<11,14>]>> 
7068-Equals Sto:<< []>> 
7068-NonEquals Sto: << []>> 
7068-Useless: []
7068-Constancy: [(5, 0)]
7068-ContextAliasing: []

.....
-----
Block: 7102
7102Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH11 0x109b1858dadb1a5cdd1959', 'PUSH1 0xaa', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7102-Stack size: 10 
7102-Equals Mem:<< []>> 
7102-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
7102-Equals Sto:<< []>> 
7102-NonEquals Sto: << []>> 
7102-Useless: []
7102-Constancy: [(4, 0)]
7102-ContextAliasing: []

.....
-----
Block: 9566_2
9566_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_2-Stack size: 14 
9566_2-Equals Mem:<< []>> 
9566_2-NonEquals Mem: << [<6,1>]>> 
9566_2-Equals Sto:<< []>> 
9566_2-NonEquals Sto: << []>> 
9566_2-Useless: []
9566_2-Constancy: [(8, 0), (0, 0)]
9566_2-ContextAliasing: []

.....
-----
Block: 9604_2
9604_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_2-Stack size: 14 
9604_2-Equals Mem:<< []>> 
9604_2-NonEquals Mem: << [<6,1>]>> 
9604_2-Equals Sto:<< []>> 
9604_2-NonEquals Sto: << []>> 
9604_2-Useless: []
9604_2-Constancy: [(8, 0), (0, 0)]
9604_2-ContextAliasing: []

.....
-----
Block: 9322_3
9322_3Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_3-Stack size: 20 
9322_3-Equals Mem:<< []>> 
9322_3-NonEquals Mem: << [<6,1>]>> 
9322_3-Equals Sto:<< []>> 
9322_3-NonEquals Sto: << []>> 
9322_3-Useless: []
9322_3-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
9322_3-ContextAliasing: [(2, 19)]

.....
-----
Block: 11416_4
11416_4Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_4-Stack size: 22 
11416_4-Equals Mem:<< []>> 
11416_4-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_4-Equals Sto:<< []>> 
11416_4-NonEquals Sto: << []>> 
11416_4-Useless: []
11416_4-Constancy: [(16, 0), (8, 0), (5, 0), (3, 0)]
11416_4-ContextAliasing: [(4, 20)]

.....
-----
Block: 11440_4
11440_4Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_4-Stack size: 26 
11440_4-Equals Mem:<< []>> 
11440_4-NonEquals Mem: << [<11,5>]>> 
11440_4-Equals Sto:<< []>> 
11440_4-NonEquals Sto: << []>> 
11440_4-Useless: []
11440_4-Constancy: [(20, 0), (12, 0), (9, 0), (7, 0), (3, 0), (2, 32)]
11440_4-ContextAliasing: [(8, 20)]

.....
-----
Block: 12014_39
12014_39Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_39-Stack size: 25 
12014_39-Equals Mem:<< []>> 
12014_39-NonEquals Mem: << [<5,8>]>> 
12014_39-Equals Sto:<< []>> 
12014_39-NonEquals Sto: << []>> 
12014_39-Useless: []
12014_39-Constancy: [(19, 0), (11, 0), (8, 0), (6, 0), (5, 0), (3, 0)]
12014_39-ContextAliasing: []

.....
-----
Block: 9687_2
9687_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_2-Stack size: 15 
9687_2-Equals Mem:<< [<12,29>]>> 
9687_2-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_2-Equals Sto:<< [<24,31>]>> 
9687_2-NonEquals Sto: << []>> 
9687_2-Useless: []
9687_2-Constancy: [(9, 0), (1, 0)]
9687_2-ContextAliasing: []

.....
-----
Block: 12014_38
12014_38Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_38-Stack size: 24 
12014_38-Equals Mem:<< []>> 
12014_38-NonEquals Mem: << [<5,8>]>> 
12014_38-Equals Sto:<< []>> 
12014_38-NonEquals Sto: << []>> 
12014_38-Useless: []
12014_38-Constancy: [(18, 0), (10, 0), (7, 0), (6, 0), (5, 0), (3, 0)]
12014_38-ContextAliasing: []

.....
-----
Block: 9390_2
9390_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_2-Stack size: 19 
9390_2-Equals Mem:<< []>> 
9390_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_2-Equals Sto:<< []>> 
9390_2-NonEquals Sto: << []>> 
9390_2-Useless: []
9390_2-Constancy: [(13, 0), (5, 0), (2, 0), (1, 0)]
9390_2-ContextAliasing: []

.....
-----
Block: 9733_2
9733_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_2-Stack size: 15 
9733_2-Equals Mem:<< []>> 
9733_2-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_2-Equals Sto:<< []>> 
9733_2-NonEquals Sto: << []>> 
9733_2-Useless: []
9733_2-Constancy: [(9, 0), (1, 0)]
9733_2-ContextAliasing: []

.....
-----
Block: 9322
9322Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322-Stack size: 15 
9322-Equals Mem:<< []>> 
9322-NonEquals Mem: << [<6,1>]>> 
9322-Equals Sto:<< []>> 
9322-NonEquals Sto: << []>> 
9322-Useless: []
9322-Constancy: [(9, 0), (1, 0)]
9322-ContextAliasing: []

.....
-----
Block: 11416_0
11416_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_0-Stack size: 17 
11416_0-Equals Mem:<< []>> 
11416_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_0-Equals Sto:<< []>> 
11416_0-NonEquals Sto: << []>> 
11416_0-Useless: []
11416_0-Constancy: [(11, 0), (3, 0)]
11416_0-ContextAliasing: []

.....
-----
Block: 11440_0
11440_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_0-Stack size: 21 
11440_0-Equals Mem:<< []>> 
11440_0-NonEquals Mem: << [<11,5>]>> 
11440_0-Equals Sto:<< []>> 
11440_0-NonEquals Sto: << []>> 
11440_0-Useless: []
11440_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
11440_0-ContextAliasing: []

.....
-----
Block: 12014_1
12014_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_1-Stack size: 20 
12014_1-Equals Mem:<< []>> 
12014_1-NonEquals Mem: << [<5,8>]>> 
12014_1-Equals Sto:<< []>> 
12014_1-NonEquals Sto: << []>> 
12014_1-Useless: []
12014_1-Constancy: [(14, 0), (6, 0), (5, 0)]
12014_1-ContextAliasing: []

.....
-----
Block: 6680_0
6680_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6680_0-Stack size: 10 
6680_0-Equals Mem:<< []>> 
6680_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6680_0-Equals Sto:<< []>> 
6680_0-NonEquals Sto: << []>> 
6680_0-Useless: []
6680_0-Constancy: [(4, 0)]
6680_0-ContextAliasing: []

.....
-----
Block: 6778_0
6778_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6778_0-Stack size: 10 
6778_0-Equals Mem:<< []>> 
6778_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6778_0-Equals Sto:<< []>> 
6778_0-NonEquals Sto: << []>> 
6778_0-Useless: []
6778_0-Constancy: [(4, 0)]
6778_0-ContextAliasing: []

.....
-----
Block: 6860_0
6860_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
6860_0-Stack size: 10 
6860_0-Equals Mem:<< [<12,27>, <17,30>]>> 
6860_0-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
6860_0-Equals Sto:<< []>> 
6860_0-NonEquals Sto: << []>> 
6860_0-Useless: []
6860_0-Constancy: [(4, 0)]
6860_0-ContextAliasing: []

.....
-----
Block: 7319
7319Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x1cd1', 'JUMPI']>> 
7319-Stack size: 10 
7319-Equals Mem:<< []>> 
7319-NonEquals Mem: << [<10,13>]>> 
7319-Equals Sto:<< []>> 
7319-NonEquals Sto: << []>> 
7319-Useless: []
7319-Constancy: [(4, 0)]
7319-ContextAliasing: []

.....
-----
Block: 7350
7350Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
7350-Stack size: 11 
7350-Equals Mem:<< []>> 
7350-NonEquals Mem: << [<11,14>]>> 
7350-Equals Sto:<< []>> 
7350-NonEquals Sto: << []>> 
7350-Useless: []
7350-Constancy: [(5, 0)]
7350-ContextAliasing: []

.....
-----
Block: 7382
7382Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297', 'PUSH1 0x51', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7382-Stack size: 10 
7382-Equals Mem:<< []>> 
7382-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
7382-Equals Sto:<< []>> 
7382-NonEquals Sto: << []>> 
7382-Useless: []
7382-Constancy: [(4, 0)]
7382-ContextAliasing: []

.....
-----
Block: 7605
7605Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x1e49', 'JUMPI']>> 
7605-Stack size: 10 
7605-Equals Mem:<< []>> 
7605-NonEquals Mem: << [<4,7>]>> 
7605-Equals Sto:<< []>> 
7605-NonEquals Sto: << []>> 
7605-Useless: []
7605-Constancy: [(4, 0)]
7605-ContextAliasing: []

.....
-----
Block: 7626
7626Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7626-Stack size: 10 
7626-Equals Mem:<< []>> 
7626-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>, <33,1>]>> 
7626-Equals Sto:<< []>> 
7626-NonEquals Sto: << []>> 
7626-Useless: []
7626-Constancy: [(4, 0)]
7626-ContextAliasing: []

.....
-----
Block: 7753
7753Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
7753-Stack size: 10 
7753-Equals Mem:<< []>> 
7753-NonEquals Mem: << [<5,8>]>> 
7753-Equals Sto:<< []>> 
7753-NonEquals Sto: << []>> 
7753-Useless: []
7753-Constancy: [(4, 0)]
7753-ContextAliasing: []

.....
-----
Block: 7771
7771Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1e9a', 'JUMPI']>> 
7771-Stack size: 10 
7771-Equals Mem:<< []>> 
7771-NonEquals Mem: << [<11,14>]>> 
7771-Equals Sto:<< []>> 
7771-NonEquals Sto: << []>> 
7771-Useless: []
7771-Constancy: [(4, 0)]
7771-ContextAliasing: []

.....
-----
Block: 7805
7805Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7805-Stack size: 11 
7805-Equals Mem:<< []>> 
7805-NonEquals Mem: << [<11,14>]>> 
7805-Equals Sto:<< []>> 
7805-NonEquals Sto: << []>> 
7805-Useless: []
7805-Constancy: [(5, 0)]
7805-ContextAliasing: []

.....
-----
Block: 7850
7850Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7850-Stack size: 10 
7850-Equals Mem:<< []>> 
7850-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7850-Equals Sto:<< []>> 
7850-NonEquals Sto: << []>> 
7850-Useless: []
7850-Constancy: [(4, 0)]
7850-ContextAliasing: []

.....
-----
Block: 7951
7951Instr:<<['JUMPDEST', 'PUSH1 0x0a', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x1f34', 'SWAP1', 'DUP4', 'PUSH2 0x2f38', 'JUMP']>> 
7951-Stack size: 10 
7951-Equals Mem:<< []>> 
7951-NonEquals Mem: << [<13,17>]>> 
7951-Equals Sto:<< []>> 
7951-NonEquals Sto: << [<2,21>]>> 
7951-Useless: []
7951-Constancy: [(4, 0)]
7951-ContextAliasing: []

.....
-----
Block: 12014_37
12014_37Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_37-Stack size: 16 
12014_37-Equals Mem:<< []>> 
12014_37-NonEquals Mem: << [<5,8>]>> 
12014_37-Equals Sto:<< []>> 
12014_37-NonEquals Sto: << []>> 
12014_37-Useless: []
12014_37-Constancy: [(10, 0)]
12014_37-ContextAliasing: []

.....
-----
Block: 7995
7995Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7995-Stack size: 10 
7995-Equals Mem:<< []>> 
7995-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
7995-Equals Sto:<< []>> 
7995-NonEquals Sto: << []>> 
7995-Useless: []
7995-Constancy: [(4, 0)]
7995-ContextAliasing: []

.....
-----
Block: 8061
8061Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1fbc', 'JUMPI']>> 
8061-Stack size: 10 
8061-Equals Mem:<< []>> 
8061-NonEquals Mem: << [<11,14>]>> 
8061-Equals Sto:<< []>> 
8061-NonEquals Sto: << []>> 
8061-Useless: []
8061-Constancy: [(4, 0)]
8061-ContextAliasing: []

.....
-----
Block: 8095
8095Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8095-Stack size: 11 
8095-Equals Mem:<< []>> 
8095-NonEquals Mem: << [<11,14>]>> 
8095-Equals Sto:<< []>> 
8095-NonEquals Sto: << []>> 
8095-Useless: []
8095-Constancy: [(5, 0)]
8095-ContextAliasing: []

.....
-----
Block: 8140
8140Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x36', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x51', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
8140-Stack size: 10 
8140-Equals Mem:<< []>> 
8140-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8140-Equals Sto:<< []>> 
8140-NonEquals Sto: << []>> 
8140-Useless: []
8140-Constancy: [(4, 0)]
8140-ContextAliasing: []

.....
-----
Block: 8242
8242Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x20ba', 'JUMPI']>> 
8242-Stack size: 10 
8242-Equals Mem:<< []>> 
8242-NonEquals Mem: << [<11,14>]>> 
8242-Equals Sto:<< []>> 
8242-NonEquals Sto: << []>> 
8242-Useless: []
8242-Constancy: [(4, 0)]
8242-ContextAliasing: []

.....
-----
Block: 8274
8274Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x2076', 'SWAP1', 'DUP4', 'PUSH2 0x2f38', 'JUMP']>> 
8274-Stack size: 10 
8274-Equals Mem:<< []>> 
8274-NonEquals Mem: << [<12,16>]>> 
8274-Equals Sto:<< []>> 
8274-NonEquals Sto: << [<1,20>]>> 
8274-Useless: []
8274-Constancy: [(4, 0)]
8274-ContextAliasing: []

.....
-----
Block: 12014_36
12014_36Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_36-Stack size: 16 
12014_36-Equals Mem:<< []>> 
12014_36-NonEquals Mem: << [<5,8>]>> 
12014_36-Equals Sto:<< []>> 
12014_36-NonEquals Sto: << []>> 
12014_36-Useless: []
12014_36-Constancy: [(10, 0)]
12014_36-ContextAliasing: []

.....
-----
Block: 8317
8317Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
8317-Stack size: 10 
8317-Equals Mem:<< []>> 
8317-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <23,1>]>> 
8317-Equals Sto:<< []>> 
8317-NonEquals Sto: << []>> 
8317-Useless: []
8317-Constancy: [(4, 0)]
8317-ContextAliasing: []

.....
-----
Block: 8378
8378Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x09', 'SLOAD', 'DUP2', 'LT', 'DUP1', 'ISZERO', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x20e5', 'JUMPI']>> 
8378-Stack size: 10 
8378-Equals Mem:<< []>> 
8378-NonEquals Mem: << [<5,9>]>> 
8378-Equals Sto:<< []>> 
8378-NonEquals Sto: << [<13,15>]>> 
8378-Useless: []
8378-Constancy: [(4, 0)]
8378-ContextAliasing: []

.....
-----
Block: 8450
8450Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8450-Stack size: 13 
8450-Equals Mem:<< []>> 
8450-NonEquals Mem: << [<11,14>]>> 
8450-Equals Sto:<< []>> 
8450-NonEquals Sto: << []>> 
8450-Useless: []
8450-Constancy: [(7, 0)]
8450-ContextAliasing: []

.....
-----
Block: 8486
8486Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8486-Stack size: 13 
8486-Equals Mem:<< []>> 
8486-NonEquals Mem: << [<11,14>]>> 
8486-Equals Sto:<< []>> 
8486-NonEquals Sto: << []>> 
8486-Useless: []
8486-Constancy: [(7, 0)]
8486-ContextAliasing: []

.....
-----
Block: 8521
8521Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8521-Stack size: 13 
8521-Equals Mem:<< []>> 
8521-NonEquals Mem: << [<11,14>]>> 
8521-Equals Sto:<< []>> 
8521-NonEquals Sto: << []>> 
8521-Useless: []
8521-Constancy: [(7, 0)]
8521-ContextAliasing: []

.....
-----
Block: 9813
9813Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'POP', 'PUSH0', 'PUSH1 0x1f', 'SLOAD', 'PUSH1 0x1d', 'SLOAD', 'PUSH1 0x1e', 'SLOAD', 'PUSH2 0x267a', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
9813-Stack size: 13 
9813-Equals Mem:<< []>> 
9813-NonEquals Mem: << [<5,9>]>> 
9813-Equals Sto:<< []>> 
9813-NonEquals Sto: << [<13,18>, <13,20>, <13,22>, <18,20>, <18,22>, <20,22>]>> 
9813-Useless: []
9813-Constancy: [(7, 0)]
9813-ContextAliasing: []

.....
-----
Block: 12014_35
12014_35Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_35-Stack size: 21 
12014_35-Equals Mem:<< []>> 
12014_35-NonEquals Mem: << [<5,8>]>> 
12014_35-Equals Sto:<< []>> 
12014_35-NonEquals Sto: << []>> 
12014_35-Useless: []
12014_35-Constancy: [(15, 0), (6, 0)]
12014_35-ContextAliasing: []

.....
-----
Block: 12014_34
12014_34Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_34-Stack size: 20 
12014_34-Equals Mem:<< []>> 
12014_34-NonEquals Mem: << [<5,8>]>> 
12014_34-Equals Sto:<< []>> 
12014_34-NonEquals Sto: << []>> 
12014_34-Useless: []
12014_34-Constancy: [(14, 0), (5, 0)]
12014_34-ContextAliasing: []

.....
-----
Block: 12014_33
12014_33Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_33-Stack size: 21 
12014_33-Equals Mem:<< []>> 
12014_33-NonEquals Mem: << [<5,8>]>> 
12014_33-Equals Sto:<< []>> 
12014_33-NonEquals Sto: << []>> 
12014_33-Useless: []
12014_33-Constancy: [(15, 0), (5, 0)]
12014_33-ContextAliasing: []

.....
-----
Block: 12014_32
12014_32Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_32-Stack size: 21 
12014_32-Equals Mem:<< []>> 
12014_32-NonEquals Mem: << [<5,8>]>> 
12014_32-Equals Sto:<< []>> 
12014_32-NonEquals Sto: << []>> 
12014_32-Useless: []
12014_32-Constancy: [(15, 0), (5, 0)]
12014_32-ContextAliasing: []

.....
-----
Block: 12014_31
12014_31Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_31-Stack size: 24 
12014_31-Equals Mem:<< []>> 
12014_31-NonEquals Mem: << [<5,8>]>> 
12014_31-Equals Sto:<< []>> 
12014_31-NonEquals Sto: << []>> 
12014_31-Useless: []
12014_31-Constancy: [(18, 0), (8, 0), (7, 0)]
12014_31-ContextAliasing: []

.....
-----
Block: 12064_13
12064_13Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_13-Stack size: 22 
12064_13-Equals Mem:<< []>> 
12064_13-NonEquals Mem: << [<4,7>]>> 
12064_13-Equals Sto:<< []>> 
12064_13-NonEquals Sto: << []>> 
12064_13-Useless: []
12064_13-Constancy: [(16, 0), (6, 0), (5, 0), (0, 0)]
12064_13-ContextAliasing: []

.....
-----
Block: 12064_12
12064_12Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_12-Stack size: 21 
12064_12-Equals Mem:<< []>> 
12064_12-NonEquals Mem: << [<4,7>]>> 
12064_12-Equals Sto:<< []>> 
12064_12-NonEquals Sto: << []>> 
12064_12-Useless: []
12064_12-Constancy: [(15, 0), (5, 0), (4, 0), (0, 0)]
12064_12-ContextAliasing: []

.....
-----
Block: 12014_30
12014_30Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_30-Stack size: 23 
12014_30-Equals Mem:<< []>> 
12014_30-NonEquals Mem: << [<5,8>]>> 
12014_30-Equals Sto:<< []>> 
12014_30-NonEquals Sto: << []>> 
12014_30-Useless: []
12014_30-Constancy: [(17, 0), (7, 0), (5, 0)]
12014_30-ContextAliasing: []

.....
-----
Block: 12285_0
12285_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12285_0-Stack size: 26 
12285_0-Equals Mem:<< []>> 
12285_0-NonEquals Mem: << [<5,8>]>> 
12285_0-Equals Sto:<< []>> 
12285_0-NonEquals Sto: << []>> 
12285_0-Useless: []
12285_0-Constancy: [(20, 0), (10, 0), (1, 0)]
12285_0-ContextAliasing: [(4, 23)]

.....
-----
Block: 10931
10931Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2ad7', 'SWAP2', 'SWAP1', 'PUSH2 0x3011', 'JUMP']>> 
10931-Stack size: 26 
10931-Equals Mem:<< [<18,6>]>> 
10931-NonEquals Mem: << []>> 
10931-Equals Sto:<< []>> 
10931-NonEquals Sto: << []>> 
10931-Useless: []
10931-Constancy: [(20, 0), (10, 0)]
10931-ContextAliasing: []

.....
-----
Block: 12285
12285Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12285-Stack size: 26 
12285-Equals Mem:<< []>> 
12285-NonEquals Mem: << [<5,8>]>> 
12285-Equals Sto:<< []>> 
12285-NonEquals Sto: << []>> 
12285-Useless: []
12285-Constancy: [(20, 0), (10, 0)]
12285-ContextAliasing: [(4, 23)]

.....
-----
Block: 6680_2
6680_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6680_2-Stack size: 26 
6680_2-Equals Mem:<< []>> 
6680_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6680_2-Equals Sto:<< []>> 
6680_2-NonEquals Sto: << []>> 
6680_2-Useless: []
6680_2-Constancy: [(20, 0), (10, 0), (1, 0)]
6680_2-ContextAliasing: []

.....
-----
Block: 6778_2
6778_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6778_2-Stack size: 26 
6778_2-Equals Mem:<< []>> 
6778_2-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6778_2-Equals Sto:<< []>> 
6778_2-NonEquals Sto: << []>> 
6778_2-Useless: []
6778_2-Constancy: [(20, 0), (10, 0), (1, 0)]
6778_2-ContextAliasing: []

.....
-----
Block: 6860_1
6860_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
6860_1-Stack size: 26 
6860_1-Equals Mem:<< [<12,27>, <17,30>]>> 
6860_1-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
6860_1-Equals Sto:<< []>> 
6860_1-NonEquals Sto: << []>> 
6860_1-Useless: []
6860_1-Constancy: [(20, 0), (10, 0), (1, 0)]
6860_1-ContextAliasing: []

.....
-----
Block: 11061
11061Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x2b89', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x302c', 'JUMP']>> 
11061-Stack size: 22 
11061-Equals Mem:<< []>> 
11061-NonEquals Mem: << [<7,2>]>> 
11061-Equals Sto:<< []>> 
11061-NonEquals Sto: << []>> 
11061-Useless: []
11061-Constancy: [(16, 0), (6, 0)]
11061-ContextAliasing: []

.....
-----
Block: 12332
12332Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
12332-Stack size: 31 
12332-Equals Mem:<< []>> 
12332-NonEquals Mem: << [<7,21>, <13,21>, <18,21>, <24,21>]>> 
12332-Equals Sto:<< []>> 
12332-NonEquals Sto: << []>> 
12332-Useless: []
12332-Constancy: [(25, 0), (15, 0), (4, 0)]
12332-ContextAliasing: [(9, 27)]

.....
-----
Block: 12382
12382Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x3055', 'JUMP']>> 
12382-Stack size: 37 
12382-Equals Mem:<< []>> 
12382-NonEquals Mem: << [<9,1>]>> 
12382-Equals Sto:<< []>> 
12382-NonEquals Sto: << []>> 
12382-Useless: []
12382-Constancy: [(31, 0), (21, 0), (10, 0), (5, 0), (3, 32)]
12382-ContextAliasing: [(15, 27)]

.....
-----
Block: 12014_29
12014_29Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_29-Stack size: 25 
12014_29-Equals Mem:<< []>> 
12014_29-NonEquals Mem: << [<5,8>]>> 
12014_29-Equals Sto:<< []>> 
12014_29-NonEquals Sto: << []>> 
12014_29-Useless: []
12014_29-Constancy: [(19, 0), (9, 0), (5, 0)]
12014_29-ContextAliasing: []

.....
-----
Block: 12014_28
12014_28Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_28-Stack size: 27 
12014_28-Equals Mem:<< []>> 
12014_28-NonEquals Mem: << [<5,8>]>> 
12014_28-Equals Sto:<< []>> 
12014_28-NonEquals Sto: << []>> 
12014_28-Useless: []
12014_28-Constancy: [(21, 0), (11, 0), (6, 0)]
12014_28-ContextAliasing: []

.....
-----
Block: 12064_11
12064_11Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_11-Stack size: 25 
12064_11-Equals Mem:<< []>> 
12064_11-NonEquals Mem: << [<4,7>]>> 
12064_11-Equals Sto:<< []>> 
12064_11-NonEquals Sto: << []>> 
12064_11-Useless: []
12064_11-Constancy: [(19, 0), (9, 0), (4, 0), (0, 0)]
12064_11-ContextAliasing: []

.....
-----
Block: 12014_27
12014_27Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_27-Stack size: 28 
12014_27-Equals Mem:<< []>> 
12014_27-NonEquals Mem: << [<5,8>]>> 
12014_27-Equals Sto:<< []>> 
12014_27-NonEquals Sto: << []>> 
12014_27-Useless: []
12014_27-Constancy: [(22, 0), (12, 0), (6, 0)]
12014_27-ContextAliasing: []

.....
-----
Block: 12064_10
12064_10Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_10-Stack size: 26 
12064_10-Equals Mem:<< []>> 
12064_10-NonEquals Mem: << [<4,7>]>> 
12064_10-Equals Sto:<< []>> 
12064_10-NonEquals Sto: << []>> 
12064_10-Useless: []
12064_10-Constancy: [(20, 0), (10, 0), (4, 0), (0, 0)]
12064_10-ContextAliasing: []

.....
-----
Block: 12014_26
12014_26Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_26-Stack size: 29 
12014_26-Equals Mem:<< []>> 
12014_26-NonEquals Mem: << [<5,8>]>> 
12014_26-Equals Sto:<< []>> 
12014_26-NonEquals Sto: << []>> 
12014_26-Useless: []
12014_26-Constancy: [(23, 0), (13, 0), (6, 0)]
12014_26-ContextAliasing: []

.....
-----
Block: 12014_25
12014_25Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_25-Stack size: 28 
12014_25-Equals Mem:<< []>> 
12014_25-NonEquals Mem: << [<5,8>]>> 
12014_25-Equals Sto:<< []>> 
12014_25-NonEquals Sto: << []>> 
12014_25-Useless: []
12014_25-Constancy: [(22, 0), (12, 0), (5, 0)]
12014_25-ContextAliasing: []

.....
-----
Block: 6680_1
6680_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6680_1-Stack size: 30 
6680_1-Equals Mem:<< []>> 
6680_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6680_1-Equals Sto:<< []>> 
6680_1-NonEquals Sto: << []>> 
6680_1-Useless: []
6680_1-Constancy: [(24, 0), (1, 0)]
6680_1-ContextAliasing: []

.....
-----
Block: 6778_1
6778_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6778_1-Stack size: 30 
6778_1-Equals Mem:<< []>> 
6778_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6778_1-Equals Sto:<< []>> 
6778_1-NonEquals Sto: << []>> 
6778_1-Useless: []
6778_1-Constancy: [(24, 0), (1, 0)]
6778_1-ContextAliasing: []

.....
-----
Block: 6860_2
6860_2Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
6860_2-Stack size: 30 
6860_2-Equals Mem:<< [<12,27>, <17,30>]>> 
6860_2-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
6860_2-Equals Sto:<< []>> 
6860_2-NonEquals Sto: << []>> 
6860_2-Useless: []
6860_2-Constancy: [(24, 0), (1, 0)]
6860_2-ContextAliasing: []

.....
-----
Block: 11372
11372Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2c91', 'SWAP2', 'SWAP1', 'PUSH2 0x309b', 'JUMP']>> 
11372-Stack size: 31 
11372-Equals Mem:<< [<19,7>]>> 
11372-NonEquals Mem: << []>> 
11372-Equals Sto:<< []>> 
11372-NonEquals Sto: << []>> 
11372-Useless: []
11372-Constancy: [(25, 0)]
11372-ContextAliasing: []

.....
-----
Block: 8616
8616Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8616-Stack size: 13 
8616-Equals Mem:<< []>> 
8616-NonEquals Mem: << [<11,14>]>> 
8616-Equals Sto:<< []>> 
8616-NonEquals Sto: << []>> 
8616-Useless: []
8616-Constancy: [(7, 0)]
8616-ContextAliasing: []

.....
-----
Block: 12014_24
12014_24Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_24-Stack size: 17 
12014_24-Equals Mem:<< []>> 
12014_24-NonEquals Mem: << [<5,8>]>> 
12014_24-Equals Sto:<< []>> 
12014_24-NonEquals Sto: << []>> 
12014_24-Useless: []
12014_24-Constancy: [(11, 0)]
12014_24-ContextAliasing: []

.....
-----
Block: 8692
8692Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8692-Stack size: 13 
8692-Equals Mem:<< []>> 
8692-NonEquals Mem: << [<11,14>]>> 
8692-Equals Sto:<< []>> 
8692-NonEquals Sto: << []>> 
8692-Useless: []
8692-Constancy: [(7, 0)]
8692-ContextAliasing: []

.....
-----
Block: 10473
10473Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x290d', 'SWAP2', 'SWAP1', 'PUSH2 0x2f4b', 'JUMP']>> 
10473-Stack size: 19 
10473-Equals Mem:<< [<18,6>]>> 
10473-NonEquals Mem: << []>> 
10473-Equals Sto:<< []>> 
10473-NonEquals Sto: << []>> 
10473-Useless: []
10473-Constancy: [(13, 0), (5, 0), (4, 0)]
10473-ContextAliasing: []

.....
-----
Block: 12014_23
12014_23Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_23-Stack size: 22 
12014_23-Equals Mem:<< []>> 
12014_23-NonEquals Mem: << [<5,8>]>> 
12014_23-Equals Sto:<< []>> 
12014_23-NonEquals Sto: << []>> 
12014_23-Useless: []
12014_23-Constancy: [(16, 0), (8, 0), (6, 0)]
12014_23-ContextAliasing: []

.....
-----
Block: 12064_9
12064_9Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_9-Stack size: 20 
12064_9-Equals Mem:<< []>> 
12064_9-NonEquals Mem: << [<4,7>]>> 
12064_9-Equals Sto:<< []>> 
12064_9-NonEquals Sto: << []>> 
12064_9-Useless: []
12064_9-Constancy: [(14, 0), (6, 0), (4, 0), (0, 0)]
12064_9-ContextAliasing: []

.....
-----
Block: 9566_1
9566_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_1-Stack size: 20 
9566_1-Equals Mem:<< []>> 
9566_1-NonEquals Mem: << [<6,1>]>> 
9566_1-Equals Sto:<< []>> 
9566_1-NonEquals Sto: << []>> 
9566_1-Useless: []
9566_1-Constancy: [(14, 0), (6, 0), (2, 0)]
9566_1-ContextAliasing: []

.....
-----
Block: 9604_1
9604_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_1-Stack size: 20 
9604_1-Equals Mem:<< []>> 
9604_1-NonEquals Mem: << [<6,1>]>> 
9604_1-Equals Sto:<< []>> 
9604_1-NonEquals Sto: << []>> 
9604_1-Useless: []
9604_1-Constancy: [(14, 0), (6, 0), (2, 0)]
9604_1-ContextAliasing: []

.....
-----
Block: 9322_2
9322_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_2-Stack size: 26 
9322_2-Equals Mem:<< []>> 
9322_2-NonEquals Mem: << [<6,1>]>> 
9322_2-Equals Sto:<< []>> 
9322_2-NonEquals Sto: << []>> 
9322_2-Useless: []
9322_2-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
9322_2-ContextAliasing: [(2, 25)]

.....
-----
Block: 11416_3
11416_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_3-Stack size: 28 
11416_3-Equals Mem:<< []>> 
11416_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_3-Equals Sto:<< []>> 
11416_3-NonEquals Sto: << []>> 
11416_3-Useless: []
11416_3-Constancy: [(22, 0), (14, 0), (10, 0), (3, 0)]
11416_3-ContextAliasing: [(4, 26)]

.....
-----
Block: 11440_3
11440_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_3-Stack size: 32 
11440_3-Equals Mem:<< []>> 
11440_3-NonEquals Mem: << [<11,5>]>> 
11440_3-Equals Sto:<< []>> 
11440_3-NonEquals Sto: << []>> 
11440_3-Useless: []
11440_3-Constancy: [(26, 0), (18, 0), (14, 0), (7, 0), (3, 0), (2, 32)]
11440_3-ContextAliasing: [(8, 26)]

.....
-----
Block: 12014_22
12014_22Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_22-Stack size: 31 
12014_22-Equals Mem:<< []>> 
12014_22-NonEquals Mem: << [<5,8>]>> 
12014_22-Equals Sto:<< []>> 
12014_22-NonEquals Sto: << []>> 
12014_22-Useless: []
12014_22-Constancy: [(25, 0), (17, 0), (13, 0), (6, 0), (5, 0)]
12014_22-ContextAliasing: []

.....
-----
Block: 9687_1
9687_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_1-Stack size: 21 
9687_1-Equals Mem:<< [<12,29>]>> 
9687_1-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_1-Equals Sto:<< [<24,31>]>> 
9687_1-NonEquals Sto: << []>> 
9687_1-Useless: []
9687_1-Constancy: [(15, 0), (7, 0), (3, 0)]
9687_1-ContextAliasing: []

.....
-----
Block: 12014_21
12014_21Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_21-Stack size: 30 
12014_21-Equals Mem:<< []>> 
12014_21-NonEquals Mem: << [<5,8>]>> 
12014_21-Equals Sto:<< []>> 
12014_21-NonEquals Sto: << []>> 
12014_21-Useless: []
12014_21-Constancy: [(24, 0), (16, 0), (12, 0), (6, 0), (5, 0)]
12014_21-ContextAliasing: []

.....
-----
Block: 9390_1
9390_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_1-Stack size: 25 
9390_1-Equals Mem:<< []>> 
9390_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_1-Equals Sto:<< []>> 
9390_1-NonEquals Sto: << []>> 
9390_1-Useless: []
9390_1-Constancy: [(19, 0), (11, 0), (7, 0), (1, 0)]
9390_1-ContextAliasing: []

.....
-----
Block: 9733_1
9733_1Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_1-Stack size: 21 
9733_1-Equals Mem:<< []>> 
9733_1-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_1-Equals Sto:<< []>> 
9733_1-NonEquals Sto: << []>> 
9733_1-Useless: []
9733_1-Constancy: [(15, 0), (7, 0), (3, 0)]
9733_1-ContextAliasing: []

.....
-----
Block: 10592
10592Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x29bc', 'JUMPI']>> 
10592-Stack size: 16 
10592-Equals Mem:<< [<14,26>]>> 
10592-NonEquals Mem: << [<21,14>, <21,26>]>> 
10592-Equals Sto:<< []>> 
10592-NonEquals Sto: << []>> 
10592-Useless: []
10592-Constancy: [(10, 0), (2, 0)]
10592-ContextAliasing: []

.....
-----
Block: 8735
8735Instr:<<['JUMPDEST', 'PUSH1 0x05', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SWAP1', 'SWAP3', 'DIV', 'DUP3', 'AND', 'ISZERO', 'SWAP2', 'AND', 'DUP1', 'PUSH2 0x2269', 'JUMPI']>> 
8735-Stack size: 12 
8735-Equals Mem:<< []>> 
8735-NonEquals Mem: << [<13,16>]>> 
8735-Equals Sto:<< []>> 
8735-NonEquals Sto: << [<2,20>]>> 
8735-Useless: []
8735-Constancy: [(6, 0)]
8735-ContextAliasing: []

.....
-----
Block: 8782
8782Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8782-Stack size: 14 
8782-Equals Mem:<< []>> 
8782-NonEquals Mem: << [<11,14>]>> 
8782-Equals Sto:<< []>> 
8782-NonEquals Sto: << []>> 
8782-Useless: []
8782-Constancy: [(8, 0)]
8782-ContextAliasing: []

.....
-----
Block: 8825
8825Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x22a0', 'JUMPI']>> 
8825-Stack size: 14 
8825-Equals Mem:<< []>> 
8825-NonEquals Mem: << [<10,13>]>> 
8825-Equals Sto:<< []>> 
8825-NonEquals Sto: << []>> 
8825-Useless: []
8825-Constancy: [(8, 0), (0, 0)]
8825-ContextAliasing: []

.....
-----
Block: 12014_20
12014_20Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_20-Stack size: 20 
12014_20-Equals Mem:<< []>> 
12014_20-NonEquals Mem: << [<5,8>]>> 
12014_20-Equals Sto:<< []>> 
12014_20-NonEquals Sto: << []>> 
12014_20-Useless: []
12014_20-Constancy: [(14, 0), (6, 0)]
12014_20-ContextAliasing: []

.....
-----
Block: 12064_8
12064_8Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_8-Stack size: 18 
12064_8-Equals Mem:<< []>> 
12064_8-NonEquals Mem: << [<4,7>]>> 
12064_8-Equals Sto:<< []>> 
12064_8-NonEquals Sto: << []>> 
12064_8-Useless: []
12064_8-Constancy: [(12, 0), (4, 0), (0, 0)]
12064_8-ContextAliasing: []

.....
-----
Block: 12014_19
12014_19Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_19-Stack size: 20 
12014_19-Equals Mem:<< []>> 
12014_19-NonEquals Mem: << [<5,8>]>> 
12014_19-Equals Sto:<< []>> 
12014_19-NonEquals Sto: << []>> 
12014_19-Useless: []
12014_19-Constancy: [(14, 0)]
12014_19-ContextAliasing: []

.....
-----
Block: 12064_7
12064_7Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_7-Stack size: 18 
12064_7-Equals Mem:<< []>> 
12064_7-NonEquals Mem: << [<4,7>]>> 
12064_7-Equals Sto:<< []>> 
12064_7-NonEquals Sto: << []>> 
12064_7-Useless: []
12064_7-Constancy: [(12, 0), (0, 0)]
12064_7-ContextAliasing: []

.....
-----
Block: 12014_18
12014_18Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_18-Stack size: 22 
12014_18-Equals Mem:<< []>> 
12014_18-NonEquals Mem: << [<5,8>]>> 
12014_18-Equals Sto:<< []>> 
12014_18-NonEquals Sto: << []>> 
12014_18-Useless: []
12014_18-Constancy: [(16, 0), (5, 0)]
12014_18-ContextAliasing: []

.....
-----
Block: 12014_17
12014_17Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_17-Stack size: 20 
12014_17-Equals Mem:<< []>> 
12014_17-NonEquals Mem: << [<5,8>]>> 
12014_17-Equals Sto:<< []>> 
12014_17-NonEquals Sto: << []>> 
12014_17-Useless: []
12014_17-Constancy: [(14, 0)]
12014_17-ContextAliasing: []

.....
-----
Block: 12064_6
12064_6Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_6-Stack size: 18 
12064_6-Equals Mem:<< []>> 
12064_6-NonEquals Mem: << [<4,7>]>> 
12064_6-Equals Sto:<< []>> 
12064_6-NonEquals Sto: << []>> 
12064_6-Useless: []
12064_6-Constancy: [(12, 0), (0, 0)]
12064_6-ContextAliasing: []

.....
-----
Block: 12014_16
12014_16Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_16-Stack size: 22 
12014_16-Equals Mem:<< []>> 
12014_16-NonEquals Mem: << [<5,8>]>> 
12014_16-Equals Sto:<< []>> 
12014_16-NonEquals Sto: << []>> 
12014_16-Useless: []
12014_16-Constancy: [(16, 0), (5, 0)]
12014_16-ContextAliasing: []

.....
-----
Block: 12014_15
12014_15Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_15-Stack size: 20 
12014_15-Equals Mem:<< []>> 
12014_15-NonEquals Mem: << [<5,8>]>> 
12014_15-Equals Sto:<< []>> 
12014_15-NonEquals Sto: << []>> 
12014_15-Useless: []
12014_15-Constancy: [(14, 0)]
12014_15-ContextAliasing: []

.....
-----
Block: 12064_5
12064_5Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_5-Stack size: 18 
12064_5-Equals Mem:<< []>> 
12064_5-NonEquals Mem: << [<4,7>]>> 
12064_5-Equals Sto:<< []>> 
12064_5-NonEquals Sto: << []>> 
12064_5-Useless: []
12064_5-Constancy: [(12, 0), (0, 0)]
12064_5-ContextAliasing: []

.....
-----
Block: 12014_14
12014_14Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_14-Stack size: 22 
12014_14-Equals Mem:<< []>> 
12014_14-NonEquals Mem: << [<5,8>]>> 
12014_14-Equals Sto:<< []>> 
12014_14-NonEquals Sto: << []>> 
12014_14-Useless: []
12014_14-Constancy: [(16, 0), (5, 0)]
12014_14-ContextAliasing: []

.....
-----
Block: 9566_0
9566_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566_0-Stack size: 18 
9566_0-Equals Mem:<< []>> 
9566_0-NonEquals Mem: << [<6,1>]>> 
9566_0-Equals Sto:<< []>> 
9566_0-NonEquals Sto: << []>> 
9566_0-Useless: []
9566_0-Constancy: [(12, 0)]
9566_0-ContextAliasing: []

.....
-----
Block: 9604_0
9604_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604_0-Stack size: 18 
9604_0-Equals Mem:<< []>> 
9604_0-NonEquals Mem: << [<6,1>]>> 
9604_0-Equals Sto:<< []>> 
9604_0-NonEquals Sto: << []>> 
9604_0-Useless: []
9604_0-Constancy: [(12, 0)]
9604_0-ContextAliasing: []

.....
-----
Block: 9322_1
9322_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_1-Stack size: 24 
9322_1-Equals Mem:<< []>> 
9322_1-NonEquals Mem: << [<6,1>]>> 
9322_1-Equals Sto:<< []>> 
9322_1-NonEquals Sto: << []>> 
9322_1-Useless: []
9322_1-Constancy: [(18, 0), (1, 0)]
9322_1-ContextAliasing: [(2, 23)]

.....
-----
Block: 11416_2
11416_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_2-Stack size: 26 
11416_2-Equals Mem:<< []>> 
11416_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_2-Equals Sto:<< []>> 
11416_2-NonEquals Sto: << []>> 
11416_2-Useless: []
11416_2-Constancy: [(20, 0), (3, 0)]
11416_2-ContextAliasing: [(4, 24)]

.....
-----
Block: 11440_2
11440_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_2-Stack size: 30 
11440_2-Equals Mem:<< []>> 
11440_2-NonEquals Mem: << [<11,5>]>> 
11440_2-Equals Sto:<< []>> 
11440_2-NonEquals Sto: << []>> 
11440_2-Useless: []
11440_2-Constancy: [(24, 0), (7, 0), (3, 0), (2, 32)]
11440_2-ContextAliasing: [(8, 24)]

.....
-----
Block: 12014_6
12014_6Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_6-Stack size: 29 
12014_6-Equals Mem:<< []>> 
12014_6-NonEquals Mem: << [<5,8>]>> 
12014_6-Equals Sto:<< []>> 
12014_6-NonEquals Sto: << []>> 
12014_6-Useless: []
12014_6-Constancy: [(23, 0), (6, 0), (5, 0)]
12014_6-ContextAliasing: []

.....
-----
Block: 9687_0
9687_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687_0-Stack size: 19 
9687_0-Equals Mem:<< [<12,29>]>> 
9687_0-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687_0-Equals Sto:<< [<24,31>]>> 
9687_0-NonEquals Sto: << []>> 
9687_0-Useless: []
9687_0-Constancy: [(13, 0)]
9687_0-ContextAliasing: []

.....
-----
Block: 12014_5
12014_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_5-Stack size: 28 
12014_5-Equals Mem:<< []>> 
12014_5-NonEquals Mem: << [<5,8>]>> 
12014_5-Equals Sto:<< []>> 
12014_5-NonEquals Sto: << []>> 
12014_5-Useless: []
12014_5-Constancy: [(22, 0), (6, 0), (5, 0)]
12014_5-ContextAliasing: []

.....
-----
Block: 9390_0
9390_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390_0-Stack size: 23 
9390_0-Equals Mem:<< []>> 
9390_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390_0-Equals Sto:<< []>> 
9390_0-NonEquals Sto: << []>> 
9390_0-Useless: []
9390_0-Constancy: [(17, 0), (1, 0)]
9390_0-ContextAliasing: []

.....
-----
Block: 9733_0
9733_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733_0-Stack size: 19 
9733_0-Equals Mem:<< []>> 
9733_0-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733_0-Equals Sto:<< []>> 
9733_0-NonEquals Sto: << []>> 
9733_0-Useless: []
9733_0-Constancy: [(13, 0)]
9733_0-ContextAliasing: []

.....
-----
Block: 12014_4
12014_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_4-Stack size: 19 
12014_4-Equals Mem:<< []>> 
12014_4-NonEquals Mem: << [<5,8>]>> 
12014_4-Equals Sto:<< []>> 
12014_4-NonEquals Sto: << []>> 
12014_4-Useless: []
12014_4-Constancy: [(13, 0)]
12014_4-ContextAliasing: []

.....
-----
Block: 9045
9045Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x237d', 'JUMPI']>> 
9045-Stack size: 14 
9045-Equals Mem:<< []>> 
9045-NonEquals Mem: << [<11,14>]>> 
9045-Equals Sto:<< []>> 
9045-NonEquals Sto: << []>> 
9045-Useless: []
9045-Constancy: [(8, 0), (0, 0)]
9045-ContextAliasing: []

.....
-----
Block: 12014_13
12014_13Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_13-Stack size: 20 
12014_13-Equals Mem:<< []>> 
12014_13-NonEquals Mem: << [<5,8>]>> 
12014_13-Equals Sto:<< []>> 
12014_13-NonEquals Sto: << []>> 
12014_13-Useless: []
12014_13-Constancy: [(14, 0), (6, 0)]
12014_13-ContextAliasing: []

.....
-----
Block: 12064_4
12064_4Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_4-Stack size: 18 
12064_4-Equals Mem:<< []>> 
12064_4-NonEquals Mem: << [<4,7>]>> 
12064_4-Equals Sto:<< []>> 
12064_4-NonEquals Sto: << []>> 
12064_4-Useless: []
12064_4-Constancy: [(12, 0), (4, 0), (0, 0)]
12064_4-ContextAliasing: []

.....
-----
Block: 12014_12
12014_12Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_12-Stack size: 20 
12014_12-Equals Mem:<< []>> 
12014_12-NonEquals Mem: << [<5,8>]>> 
12014_12-Equals Sto:<< []>> 
12014_12-NonEquals Sto: << []>> 
12014_12-Useless: []
12014_12-Constancy: [(14, 0)]
12014_12-ContextAliasing: []

.....
-----
Block: 12064_3
12064_3Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_3-Stack size: 18 
12064_3-Equals Mem:<< []>> 
12064_3-NonEquals Mem: << [<4,7>]>> 
12064_3-Equals Sto:<< []>> 
12064_3-NonEquals Sto: << []>> 
12064_3-Useless: []
12064_3-Constancy: [(12, 0), (0, 0)]
12064_3-ContextAliasing: []

.....
-----
Block: 12014_11
12014_11Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_11-Stack size: 22 
12014_11-Equals Mem:<< []>> 
12014_11-NonEquals Mem: << [<5,8>]>> 
12014_11-Equals Sto:<< []>> 
12014_11-NonEquals Sto: << []>> 
12014_11-Useless: []
12014_11-Constancy: [(16, 0), (5, 0)]
12014_11-ContextAliasing: []

.....
-----
Block: 12014_10
12014_10Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_10-Stack size: 20 
12014_10-Equals Mem:<< []>> 
12014_10-NonEquals Mem: << [<5,8>]>> 
12014_10-Equals Sto:<< []>> 
12014_10-NonEquals Sto: << []>> 
12014_10-Useless: []
12014_10-Constancy: [(14, 0)]
12014_10-ContextAliasing: []

.....
-----
Block: 12064_2
12064_2Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_2-Stack size: 18 
12064_2-Equals Mem:<< []>> 
12064_2-NonEquals Mem: << [<4,7>]>> 
12064_2-Equals Sto:<< []>> 
12064_2-NonEquals Sto: << []>> 
12064_2-Useless: []
12064_2-Constancy: [(12, 0), (0, 0)]
12064_2-ContextAliasing: []

.....
-----
Block: 12014_9
12014_9Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_9-Stack size: 22 
12014_9-Equals Mem:<< []>> 
12014_9-NonEquals Mem: << [<5,8>]>> 
12014_9-Equals Sto:<< []>> 
12014_9-NonEquals Sto: << []>> 
12014_9-Useless: []
12014_9-Constancy: [(16, 0), (5, 0)]
12014_9-ContextAliasing: []

.....
-----
Block: 12014_8
12014_8Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_8-Stack size: 20 
12014_8-Equals Mem:<< []>> 
12014_8-NonEquals Mem: << [<5,8>]>> 
12014_8-Equals Sto:<< []>> 
12014_8-NonEquals Sto: << []>> 
12014_8-Useless: []
12014_8-Constancy: [(14, 0)]
12014_8-ContextAliasing: []

.....
-----
Block: 12064_1
12064_1Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_1-Stack size: 18 
12064_1-Equals Mem:<< []>> 
12064_1-NonEquals Mem: << [<4,7>]>> 
12064_1-Equals Sto:<< []>> 
12064_1-NonEquals Sto: << []>> 
12064_1-Useless: []
12064_1-Constancy: [(12, 0), (0, 0)]
12064_1-ContextAliasing: []

.....
-----
Block: 12014_7
12014_7Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_7-Stack size: 22 
12014_7-Equals Mem:<< []>> 
12014_7-NonEquals Mem: << [<5,8>]>> 
12014_7-Equals Sto:<< []>> 
12014_7-NonEquals Sto: << []>> 
12014_7-Useless: []
12014_7-Constancy: [(16, 0), (5, 0)]
12014_7-ContextAliasing: []

.....
-----
Block: 9566
9566Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566-Stack size: 18 
9566-Equals Mem:<< []>> 
9566-NonEquals Mem: << [<6,1>]>> 
9566-Equals Sto:<< []>> 
9566-NonEquals Sto: << []>> 
9566-Useless: []
9566-Constancy: [(12, 0)]
9566-ContextAliasing: []

.....
-----
Block: 9604
9604Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604-Stack size: 18 
9604-Equals Mem:<< []>> 
9604-NonEquals Mem: << [<6,1>]>> 
9604-Equals Sto:<< []>> 
9604-NonEquals Sto: << []>> 
9604-Useless: []
9604-Constancy: [(12, 0)]
9604-ContextAliasing: []

.....
-----
Block: 9322_0
9322_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322_0-Stack size: 24 
9322_0-Equals Mem:<< []>> 
9322_0-NonEquals Mem: << [<6,1>]>> 
9322_0-Equals Sto:<< []>> 
9322_0-NonEquals Sto: << []>> 
9322_0-Useless: []
9322_0-Constancy: [(18, 0), (1, 0)]
9322_0-ContextAliasing: [(2, 23)]

.....
-----
Block: 11416_1
11416_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416_1-Stack size: 26 
11416_1-Equals Mem:<< []>> 
11416_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
11416_1-Equals Sto:<< []>> 
11416_1-NonEquals Sto: << []>> 
11416_1-Useless: []
11416_1-Constancy: [(20, 0), (3, 0)]
11416_1-ContextAliasing: [(4, 24)]

.....
-----
Block: 11440_1
11440_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440_1-Stack size: 30 
11440_1-Equals Mem:<< []>> 
11440_1-NonEquals Mem: << [<11,5>]>> 
11440_1-Equals Sto:<< []>> 
11440_1-NonEquals Sto: << []>> 
11440_1-Useless: []
11440_1-Constancy: [(24, 0), (7, 0), (3, 0), (2, 32)]
11440_1-ContextAliasing: [(8, 24)]

.....
-----
Block: 12014_3
12014_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_3-Stack size: 29 
12014_3-Equals Mem:<< []>> 
12014_3-NonEquals Mem: << [<5,8>]>> 
12014_3-Equals Sto:<< []>> 
12014_3-NonEquals Sto: << []>> 
12014_3-Useless: []
12014_3-Constancy: [(23, 0), (6, 0), (5, 0)]
12014_3-ContextAliasing: []

.....
-----
Block: 9687
9687Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687-Stack size: 19 
9687-Equals Mem:<< [<12,29>]>> 
9687-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687-Equals Sto:<< [<24,31>]>> 
9687-NonEquals Sto: << []>> 
9687-Useless: []
9687-Constancy: [(13, 0)]
9687-ContextAliasing: []

.....
-----
Block: 12014_2
12014_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_2-Stack size: 28 
12014_2-Equals Mem:<< []>> 
12014_2-NonEquals Mem: << [<5,8>]>> 
12014_2-Equals Sto:<< []>> 
12014_2-NonEquals Sto: << []>> 
12014_2-Useless: []
12014_2-Constancy: [(22, 0), (6, 0), (5, 0)]
12014_2-ContextAliasing: []

.....
-----
Block: 9390
9390Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390-Stack size: 23 
9390-Equals Mem:<< []>> 
9390-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
9390-Equals Sto:<< []>> 
9390-NonEquals Sto: << []>> 
9390-Useless: []
9390-Constancy: [(17, 0), (1, 0)]
9390-ContextAliasing: []

.....
-----
Block: 9733
9733Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733-Stack size: 19 
9733-Equals Mem:<< []>> 
9733-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
9733-Equals Sto:<< []>> 
9733-NonEquals Sto: << []>> 
9733-Useless: []
9733-Constancy: [(13, 0)]
9733-ContextAliasing: []

.....
-----
Block: 3211
3211Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3211-Stack size: 3 
3211-Equals Mem:<< []>> 
3211-NonEquals Mem: << [<6,1>]>> 
3211-Equals Sto:<< []>> 
3211-NonEquals Sto: << []>> 
3211-Useless: []
3211-Constancy: []
3211-ContextAliasing: []

.....
-----
Block: 12014_0
12014_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014_0-Stack size: 10 
12014_0-Equals Mem:<< []>> 
12014_0-NonEquals Mem: << [<5,8>]>> 
12014_0-Equals Sto:<< []>> 
12014_0-NonEquals Sto: << []>> 
12014_0-Useless: []
12014_0-Constancy: []
12014_0-ContextAliasing: []

.....
-----
Block: 12064_0
12064_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064_0-Stack size: 8 
12064_0-Equals Mem:<< []>> 
12064_0-NonEquals Mem: << [<4,7>]>> 
12064_0-Equals Sto:<< []>> 
12064_0-NonEquals Sto: << []>> 
12064_0-Useless: []
12064_0-Constancy: [(0, 0)]
12064_0-ContextAliasing: []

.....
-----
Block: 12064
12064Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064-Stack size: 7 
12064-Equals Mem:<< []>> 
12064-NonEquals Mem: << [<4,7>]>> 
12064-Equals Sto:<< []>> 
12064-NonEquals Sto: << []>> 
12064-Useless: []
12064-Constancy: [(0, 0)]
12064-ContextAliasing: []

.....
-----
Block: 3294
3294Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH15 0x6c6f776572207468616e20302e3125', 'PUSH1 0x88', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
3294-Stack size: 3 
3294-Equals Mem:<< []>> 
3294-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3294-Equals Sto:<< []>> 
3294-NonEquals Sto: << []>> 
3294-Useless: []
3294-Constancy: []
3294-ContextAliasing: []

.....
-----
Block: 12014
12014Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014-Stack size: 8 
12014-Equals Mem:<< []>> 
12014-NonEquals Mem: << [<5,8>]>> 
12014-Equals Sto:<< []>> 
12014-NonEquals Sto: << []>> 
12014-Useless: []
12014-Constancy: []
12014-ContextAliasing: []

.....
-----
Block: 3068
3068Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3068-Stack size: 3 
3068-Equals Mem:<< []>> 
3068-NonEquals Mem: << [<6,1>]>> 
3068-Equals Sto:<< []>> 
3068-NonEquals Sto: << []>> 
3068-Useless: []
3068-Constancy: []
3068-ContextAliasing: []

.....
-----
Block: 1076
1076Instr:<<['JUMPDEST', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1076-Stack size: 3 
1076-Equals Mem:<< []>> 
1076-NonEquals Mem: << [<3,7>]>> 
1076-Equals Sto:<< []>> 
1076-NonEquals Sto: << []>> 
1076-Useless: []
1076-Constancy: []
1076-ContextAliasing: []

.....
-----
Block: 3091_37
3091_37Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_37-Stack size: 5 
3091_37-Equals Mem:<< []>> 
3091_37-NonEquals Mem: << []>> 
3091_37-Equals Sto:<< []>> 
3091_37-NonEquals Sto: << []>> 
3091_37-Useless: []
3091_37-Constancy: [(1, 0)]
3091_37-ContextAliasing: []

.....
-----
Block: 3091_40
3091_40Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_40-Stack size: 11 
3091_40-Equals Mem:<< []>> 
3091_40-NonEquals Mem: << []>> 
3091_40-Equals Sto:<< []>> 
3091_40-NonEquals Sto: << []>> 
3091_40-Useless: []
3091_40-Constancy: [(7, 0), (3, 0)]
3091_40-ContextAliasing: []

.....
-----
Block: 3091_39
3091_39Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_39-Stack size: 16 
3091_39-Equals Mem:<< []>> 
3091_39-NonEquals Mem: << []>> 
3091_39-Equals Sto:<< []>> 
3091_39-NonEquals Sto: << []>> 
3091_39-Useless: []
3091_39-Constancy: [(12, 0), (8, 0), (1, 0)]
3091_39-ContextAliasing: []

.....
-----
Block: 3091_38
3091_38Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_38-Stack size: 16 
3091_38-Equals Mem:<< []>> 
3091_38-NonEquals Mem: << []>> 
3091_38-Equals Sto:<< []>> 
3091_38-NonEquals Sto: << []>> 
3091_38-Useless: []
3091_38-Constancy: [(12, 0), (8, 0), (2, 0)]
3091_38-ContextAliasing: []

.....
-----
Block: 994
994Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
994-Stack size: 2 
994-Equals Mem:<< []>> 
994-NonEquals Mem: << []>> 
994-Equals Sto:<< []>> 
994-NonEquals Sto: << []>> 
994-Useless: []
994-Constancy: []
994-ContextAliasing: []

.....
-----
Block: 994_0
994_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
994_0-Stack size: 3 
994_0-Equals Mem:<< []>> 
994_0-NonEquals Mem: << []>> 
994_0-Equals Sto:<< []>> 
994_0-NonEquals Sto: << []>> 
994_0-Useless: []
994_0-Constancy: []
994_0-ContextAliasing: []

.....
-----
Block: 994_2
994_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
994_2-Stack size: 3 
994_2-Equals Mem:<< []>> 
994_2-NonEquals Mem: << []>> 
994_2-Equals Sto:<< []>> 
994_2-NonEquals Sto: << []>> 
994_2-Useless: []
994_2-Constancy: []
994_2-ContextAliasing: []

.....
-----
Block: 3091_0
3091_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_0-Stack size: 4 
3091_0-Equals Mem:<< []>> 
3091_0-NonEquals Mem: << []>> 
3091_0-Equals Sto:<< []>> 
3091_0-NonEquals Sto: << []>> 
3091_0-Useless: []
3091_0-Constancy: []
3091_0-ContextAliasing: []

.....
-----
Block: 3091_22
3091_22Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_22-Stack size: 5 
3091_22-Equals Mem:<< []>> 
3091_22-NonEquals Mem: << []>> 
3091_22-Equals Sto:<< []>> 
3091_22-NonEquals Sto: << []>> 
3091_22-Useless: []
3091_22-Constancy: []
3091_22-ContextAliasing: []

.....
-----
Block: 3091_21
3091_21Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_21-Stack size: 4 
3091_21-Equals Mem:<< []>> 
3091_21-NonEquals Mem: << []>> 
3091_21-Equals Sto:<< []>> 
3091_21-NonEquals Sto: << []>> 
3091_21-Useless: []
3091_21-Constancy: [(1, 0)]
3091_21-ContextAliasing: []

.....
-----
Block: 3091_20
3091_20Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_20-Stack size: 6 
3091_20-Equals Mem:<< []>> 
3091_20-NonEquals Mem: << []>> 
3091_20-Equals Sto:<< []>> 
3091_20-NonEquals Sto: << []>> 
3091_20-Useless: []
3091_20-Constancy: []
3091_20-ContextAliasing: []

.....
-----
Block: 3091
3091Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091-Stack size: 10 
3091-Equals Mem:<< []>> 
3091-NonEquals Mem: << []>> 
3091-Equals Sto:<< []>> 
3091-NonEquals Sto: << []>> 
3091-Useless: []
3091-Constancy: [(5, 0)]
3091-ContextAliasing: []

.....
-----
Block: 3091_36
3091_36Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_36-Stack size: 14 
3091_36-Equals Mem:<< []>> 
3091_36-NonEquals Mem: << []>> 
3091_36-Equals Sto:<< []>> 
3091_36-NonEquals Sto: << []>> 
3091_36-Useless: []
3091_36-Constancy: [(9, 0), (1, 0)]
3091_36-ContextAliasing: []

.....
-----
Block: 3091_35
3091_35Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_35-Stack size: 19 
3091_35-Equals Mem:<< []>> 
3091_35-NonEquals Mem: << []>> 
3091_35-Equals Sto:<< []>> 
3091_35-NonEquals Sto: << []>> 
3091_35-Useless: []
3091_35-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
3091_35-ContextAliasing: []

.....
-----
Block: 3091_34
3091_34Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_34-Stack size: 19 
3091_34-Equals Mem:<< []>> 
3091_34-NonEquals Mem: << []>> 
3091_34-Equals Sto:<< []>> 
3091_34-NonEquals Sto: << []>> 
3091_34-Useless: []
3091_34-Constancy: [(14, 0), (6, 0), (3, 0), (2, 0)]
3091_34-ContextAliasing: []

.....
-----
Block: 3091_33
3091_33Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_33-Stack size: 26 
3091_33-Equals Mem:<< []>> 
3091_33-NonEquals Mem: << []>> 
3091_33-Equals Sto:<< []>> 
3091_33-NonEquals Sto: << []>> 
3091_33-Useless: []
3091_33-Constancy: [(21, 0), (11, 0), (2, 0)]
3091_33-ContextAliasing: []

.....
-----
Block: 3091_32
3091_32Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_32-Stack size: 30 
3091_32-Equals Mem:<< []>> 
3091_32-NonEquals Mem: << []>> 
3091_32-Equals Sto:<< []>> 
3091_32-NonEquals Sto: << []>> 
3091_32-Useless: []
3091_32-Constancy: [(25, 0), (2, 0)]
3091_32-ContextAliasing: []

.....
-----
Block: 12461_0
12461_0Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
12461_0-Stack size: 31 
12461_0-Equals Mem:<< []>> 
12461_0-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
12461_0-Equals Sto:<< []>> 
12461_0-NonEquals Sto: << []>> 
12461_0-Useless: []
12461_0-Constancy: [(26, 0), (2, 0), (1, 0), (0, 0)]
12461_0-ContextAliasing: []

.....
-----
Block: 3091_31
3091_31Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_31-Stack size: 20 
3091_31-Equals Mem:<< []>> 
3091_31-NonEquals Mem: << []>> 
3091_31-Equals Sto:<< []>> 
3091_31-NonEquals Sto: << []>> 
3091_31-Useless: []
3091_31-Constancy: [(15, 0), (7, 0), (3, 0)]
3091_31-ContextAliasing: []

.....
-----
Block: 3091_30
3091_30Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_30-Stack size: 25 
3091_30-Equals Mem:<< []>> 
3091_30-NonEquals Mem: << []>> 
3091_30-Equals Sto:<< []>> 
3091_30-NonEquals Sto: << []>> 
3091_30-Useless: []
3091_30-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
3091_30-ContextAliasing: []

.....
-----
Block: 3091_29
3091_29Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_29-Stack size: 25 
3091_29-Equals Mem:<< []>> 
3091_29-NonEquals Mem: << []>> 
3091_29-Equals Sto:<< []>> 
3091_29-NonEquals Sto: << []>> 
3091_29-Useless: []
3091_29-Constancy: [(20, 0), (12, 0), (8, 0), (2, 0)]
3091_29-ContextAliasing: []

.....
-----
Block: 3091_28
3091_28Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_28-Stack size: 18 
3091_28-Equals Mem:<< []>> 
3091_28-NonEquals Mem: << []>> 
3091_28-Equals Sto:<< []>> 
3091_28-NonEquals Sto: << []>> 
3091_28-Useless: []
3091_28-Constancy: [(13, 0)]
3091_28-ContextAliasing: []

.....
-----
Block: 3091_27
3091_27Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_27-Stack size: 23 
3091_27-Equals Mem:<< []>> 
3091_27-NonEquals Mem: << []>> 
3091_27-Equals Sto:<< []>> 
3091_27-NonEquals Sto: << []>> 
3091_27-Useless: []
3091_27-Constancy: [(18, 0), (1, 0)]
3091_27-ContextAliasing: []

.....
-----
Block: 3091_26
3091_26Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_26-Stack size: 23 
3091_26-Equals Mem:<< []>> 
3091_26-NonEquals Mem: << []>> 
3091_26-Equals Sto:<< []>> 
3091_26-NonEquals Sto: << []>> 
3091_26-Useless: []
3091_26-Constancy: [(18, 0), (2, 0)]
3091_26-ContextAliasing: []

.....
-----
Block: 3091_25
3091_25Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_25-Stack size: 18 
3091_25-Equals Mem:<< []>> 
3091_25-NonEquals Mem: << []>> 
3091_25-Equals Sto:<< []>> 
3091_25-NonEquals Sto: << []>> 
3091_25-Useless: []
3091_25-Constancy: [(13, 0)]
3091_25-ContextAliasing: []

.....
-----
Block: 3091_24
3091_24Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_24-Stack size: 23 
3091_24-Equals Mem:<< []>> 
3091_24-NonEquals Mem: << []>> 
3091_24-Equals Sto:<< []>> 
3091_24-NonEquals Sto: << []>> 
3091_24-Useless: []
3091_24-Constancy: [(18, 0), (1, 0)]
3091_24-ContextAliasing: []

.....
-----
Block: 3091_23
3091_23Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_23-Stack size: 23 
3091_23-Equals Mem:<< []>> 
3091_23-NonEquals Mem: << []>> 
3091_23-Equals Sto:<< []>> 
3091_23-NonEquals Sto: << []>> 
3091_23-Useless: []
3091_23-Constancy: [(18, 0), (2, 0)]
3091_23-ContextAliasing: []

.....
-----
Block: 3091_18
3091_18Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_18-Stack size: 14 
3091_18-Equals Mem:<< []>> 
3091_18-NonEquals Mem: << []>> 
3091_18-Equals Sto:<< []>> 
3091_18-NonEquals Sto: << []>> 
3091_18-Useless: []
3091_18-Constancy: [(9, 0)]
3091_18-ContextAliasing: []

.....
-----
Block: 994_1
994_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
994_1-Stack size: 3 
994_1-Equals Mem:<< []>> 
994_1-NonEquals Mem: << []>> 
994_1-Equals Sto:<< []>> 
994_1-NonEquals Sto: << []>> 
994_1-Useless: []
994_1-Constancy: []
994_1-ContextAliasing: []

.....
-----
Block: 3091_19
3091_19Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_19-Stack size: 3 
3091_19-Equals Mem:<< []>> 
3091_19-NonEquals Mem: << []>> 
3091_19-Equals Sto:<< []>> 
3091_19-NonEquals Sto: << []>> 
3091_19-Useless: []
3091_19-Constancy: []
3091_19-ContextAliasing: []

.....
-----
Block: 3091_14
3091_14Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_14-Stack size: 11 
3091_14-Equals Mem:<< []>> 
3091_14-NonEquals Mem: << []>> 
3091_14-Equals Sto:<< []>> 
3091_14-NonEquals Sto: << []>> 
3091_14-Useless: []
3091_14-Constancy: [(5, 0)]
3091_14-ContextAliasing: []

.....
-----
Block: 3091_17
3091_17Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_17-Stack size: 15 
3091_17-Equals Mem:<< []>> 
3091_17-NonEquals Mem: << []>> 
3091_17-Equals Sto:<< []>> 
3091_17-NonEquals Sto: << []>> 
3091_17-Useless: []
3091_17-Constancy: [(9, 0), (1, 0)]
3091_17-ContextAliasing: []

.....
-----
Block: 3091_16
3091_16Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_16-Stack size: 20 
3091_16-Equals Mem:<< []>> 
3091_16-NonEquals Mem: << []>> 
3091_16-Equals Sto:<< []>> 
3091_16-NonEquals Sto: << []>> 
3091_16-Useless: []
3091_16-Constancy: [(14, 0), (6, 0), (3, 0), (1, 0)]
3091_16-ContextAliasing: []

.....
-----
Block: 3091_15
3091_15Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_15-Stack size: 20 
3091_15-Equals Mem:<< []>> 
3091_15-NonEquals Mem: << []>> 
3091_15-Equals Sto:<< []>> 
3091_15-NonEquals Sto: << []>> 
3091_15-Useless: []
3091_15-Constancy: [(14, 0), (6, 0), (3, 0), (2, 0)]
3091_15-ContextAliasing: []

.....
-----
Block: 3091_2
3091_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_2-Stack size: 15 
3091_2-Equals Mem:<< []>> 
3091_2-NonEquals Mem: << []>> 
3091_2-Equals Sto:<< []>> 
3091_2-NonEquals Sto: << []>> 
3091_2-Useless: []
3091_2-Constancy: [(9, 0), (1, 0)]
3091_2-ContextAliasing: []

.....
-----
Block: 3091_1
3091_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_1-Stack size: 11 
3091_1-Equals Mem:<< []>> 
3091_1-NonEquals Mem: << []>> 
3091_1-Equals Sto:<< []>> 
3091_1-NonEquals Sto: << []>> 
3091_1-Useless: []
3091_1-Constancy: [(5, 0)]
3091_1-ContextAliasing: []

.....
-----
Block: 3091_13
3091_13Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_13-Stack size: 27 
3091_13-Equals Mem:<< []>> 
3091_13-NonEquals Mem: << []>> 
3091_13-Equals Sto:<< []>> 
3091_13-NonEquals Sto: << []>> 
3091_13-Useless: []
3091_13-Constancy: [(21, 0), (11, 0), (2, 0)]
3091_13-ContextAliasing: []

.....
-----
Block: 3091_12
3091_12Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_12-Stack size: 31 
3091_12-Equals Mem:<< []>> 
3091_12-NonEquals Mem: << []>> 
3091_12-Equals Sto:<< []>> 
3091_12-NonEquals Sto: << []>> 
3091_12-Useless: []
3091_12-Constancy: [(25, 0), (2, 0)]
3091_12-ContextAliasing: []

.....
-----
Block: 12461
12461Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
12461-Stack size: 32 
12461-Equals Mem:<< []>> 
12461-NonEquals Mem: << [<2,8>, <2,14>, <8,14>]>> 
12461-Equals Sto:<< []>> 
12461-NonEquals Sto: << []>> 
12461-Useless: []
12461-Constancy: [(26, 0), (2, 0), (1, 0), (0, 0)]
12461-ContextAliasing: []

.....
-----
Block: 3091_11
3091_11Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_11-Stack size: 21 
3091_11-Equals Mem:<< []>> 
3091_11-NonEquals Mem: << []>> 
3091_11-Equals Sto:<< []>> 
3091_11-NonEquals Sto: << []>> 
3091_11-Useless: []
3091_11-Constancy: [(15, 0), (7, 0), (3, 0)]
3091_11-ContextAliasing: []

.....
-----
Block: 3091_10
3091_10Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_10-Stack size: 26 
3091_10-Equals Mem:<< []>> 
3091_10-NonEquals Mem: << []>> 
3091_10-Equals Sto:<< []>> 
3091_10-NonEquals Sto: << []>> 
3091_10-Useless: []
3091_10-Constancy: [(20, 0), (12, 0), (8, 0), (1, 0)]
3091_10-ContextAliasing: []

.....
-----
Block: 3091_9
3091_9Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_9-Stack size: 26 
3091_9-Equals Mem:<< []>> 
3091_9-NonEquals Mem: << []>> 
3091_9-Equals Sto:<< []>> 
3091_9-NonEquals Sto: << []>> 
3091_9-Useless: []
3091_9-Constancy: [(20, 0), (12, 0), (8, 0), (2, 0)]
3091_9-ContextAliasing: []

.....
-----
Block: 3091_8
3091_8Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_8-Stack size: 19 
3091_8-Equals Mem:<< []>> 
3091_8-NonEquals Mem: << []>> 
3091_8-Equals Sto:<< []>> 
3091_8-NonEquals Sto: << []>> 
3091_8-Useless: []
3091_8-Constancy: [(13, 0)]
3091_8-ContextAliasing: []

.....
-----
Block: 3091_7
3091_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_7-Stack size: 24 
3091_7-Equals Mem:<< []>> 
3091_7-NonEquals Mem: << []>> 
3091_7-Equals Sto:<< []>> 
3091_7-NonEquals Sto: << []>> 
3091_7-Useless: []
3091_7-Constancy: [(18, 0), (1, 0)]
3091_7-ContextAliasing: []

.....
-----
Block: 3091_6
3091_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_6-Stack size: 24 
3091_6-Equals Mem:<< []>> 
3091_6-NonEquals Mem: << []>> 
3091_6-Equals Sto:<< []>> 
3091_6-NonEquals Sto: << []>> 
3091_6-Useless: []
3091_6-Constancy: [(18, 0), (2, 0)]
3091_6-ContextAliasing: []

.....
-----
Block: 3091_5
3091_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_5-Stack size: 19 
3091_5-Equals Mem:<< []>> 
3091_5-NonEquals Mem: << []>> 
3091_5-Equals Sto:<< []>> 
3091_5-NonEquals Sto: << []>> 
3091_5-Useless: []
3091_5-Constancy: [(13, 0)]
3091_5-ContextAliasing: []

.....
-----
Block: 3091_4
3091_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_4-Stack size: 24 
3091_4-Equals Mem:<< []>> 
3091_4-NonEquals Mem: << []>> 
3091_4-Equals Sto:<< []>> 
3091_4-NonEquals Sto: << []>> 
3091_4-Useless: []
3091_4-Constancy: [(18, 0), (1, 0)]
3091_4-ContextAliasing: []

.....
-----
Block: 3091_3
3091_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091_3-Stack size: 24 
3091_3-Equals Mem:<< []>> 
3091_3-NonEquals Mem: << []>> 
3091_3-Equals Sto:<< []>> 
3091_3-NonEquals Sto: << []>> 
3091_3-Useless: []
3091_3-Constancy: [(18, 0), (2, 0)]
3091_3-ContextAliasing: []

.....
-----
Block: 3953
3953Instr:<<['JUMPDEST', 'PUSH1 0x0d', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'PUSH1 0x0b', 'SSTORE', 'PUSH1 0x0c', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3953-Stack size: 5 
3953-Equals Mem:<< []>> 
3953-NonEquals Mem: << []>> 
3953-Equals Sto:<< [<10,22>]>> 
3953-NonEquals Sto: << [<5,7>, <5,10>, <5,22>, <7,10>, <7,22>]>> 
3953-Useless: []
3953-Constancy: []
3953-ContextAliasing: []

.....
-----
Block: 4025
4025Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
4025-Stack size: 3 
4025-Equals Mem:<< []>> 
4025-NonEquals Mem: << []>> 
4025-Equals Sto:<< [<4,9>]>> 
4025-NonEquals Sto: << []>> 
4025-Useless: []
4025-Constancy: [(0, 0)]
4025-ContextAliasing: []

.....
-----
Block: 4167
4167Instr:<<['JUMPDEST', 'PUSH1 0x16', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x17', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x18', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x1061', 'DUP4', 'DUP6', 'PUSH2 0x2f38', 'JUMP']>> 
4167-Stack size: 5 
4167-Equals Mem:<< []>> 
4167-NonEquals Mem: << []>> 
4167-Equals Sto:<< []>> 
4167-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
4167-Useless: []
4167-Constancy: []
4167-ContextAliasing: []

.....
-----
Block: 4253
4253Instr:<<['JUMPDEST', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'PUSH3 0xffff00', 'NOT', 'AND', 'PUSH3 0x010100', 'OR', 'SWAP1', 'SSTORE', 'TIMESTAMP', 'PUSH1 0x0e', 'SSTORE', 'JUMP']>> 
4253-Stack size: 2 
4253-Equals Mem:<< []>> 
4253-NonEquals Mem: << []>> 
4253-Equals Sto:<< [<3,10>]>> 
4253-NonEquals Sto: << [<3,13>, <10,13>]>> 
4253-Useless: []
4253-Constancy: []
4253-ContextAliasing: []

.....
-----
Block: 4318
4318Instr:<<['JUMPDEST', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH3 0x010000', 'MUL', 'PUSH3 0xff0000', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4318-Stack size: 3 
4318-Equals Mem:<< []>> 
4318-NonEquals Mem: << []>> 
4318-Equals Sto:<< [<3,19>]>> 
4318-NonEquals Sto: << []>> 
4318-Useless: []
4318-Constancy: []
4318-ContextAliasing: []

.....
-----
Block: 4983
4983Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x1b', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x1c', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x1391', 'DUP4', 'DUP6', 'PUSH2 0x2f38', 'JUMP']>> 
4983-Stack size: 5 
4983-Equals Mem:<< []>> 
4983-NonEquals Mem: << []>> 
4983-Equals Sto:<< []>> 
4983-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
4983-Useless: []
4983-Constancy: []
4983-ContextAliasing: []

.....
-----
Block: 5622
5622Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
5622-Stack size: 3 
5622-Equals Mem:<< []>> 
5622-NonEquals Mem: << []>> 
5622-Equals Sto:<< [<4,9>]>> 
5622-NonEquals Sto: << []>> 
5622-Useless: []
5622-Constancy: [(0, 0)]
5622-ContextAliasing: []

.....
-----
Block: 6086
6086Instr:<<['JUMPDEST', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x10', 'SLOAD', 'PUSH2 0x17d6', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
6086-Stack size: 4 
6086-Equals Mem:<< []>> 
6086-NonEquals Mem: << []>> 
6086-Equals Sto:<< []>> 
6086-NonEquals Sto: << [<2,4>]>> 
6086-Useless: []
6086-Constancy: [(0, 0)]
6086-ContextAliasing: []

.....
-----
Block: 8555
8555Instr:<<['PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x2185', 'PUSH2 0x2655', 'JUMP']>> 
8555-Stack size: 12 
8555-Equals Mem:<< []>> 
8555-NonEquals Mem: << []>> 
8555-Equals Sto:<< [<2,13>]>> 
8555-NonEquals Sto: << []>> 
8555-Useless: []
8555-Constancy: [(6, 0)]
8555-ContextAliasing: []

.....
-----
Block: 8581
8581Instr:<<['JUMPDEST', 'PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE']>> 
8581-Stack size: 12 
8581-Equals Mem:<< []>> 
8581-NonEquals Mem: << []>> 
8581-Equals Sto:<< [<3,10>]>> 
8581-NonEquals Sto: << []>> 
8581-Useless: []
8581-Constancy: [(6, 0)]
8581-ContextAliasing: []

.....
-----
Block: 8665
8665Instr:<<['POP', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'PUSH2 0x21e9', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
8665-Stack size: 13 
8665-Equals Mem:<< []>> 
8665-NonEquals Mem: << []>> 
8665-Equals Sto:<< []>> 
8665-NonEquals Sto: << [<2,4>]>> 
8665-Useless: []
8665-Constancy: [(7, 0)]
8665-ContextAliasing: []

.....
-----
Block: 8895
8895Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1b', 'SLOAD', 'DUP3', 'PUSH2 0x22d2', 'SWAP2', 'SWAP1', 'PUSH2 0x2f02', 'JUMP']>> 
8895-Stack size: 15 
8895-Equals Mem:<< []>> 
8895-NonEquals Mem: << []>> 
8895-Equals Sto:<< []>> 
8895-NonEquals Sto: << [<4,6>]>> 
8895-Useless: []
8895-Constancy: [(9, 0), (1, 0)]
8895-ContextAliasing: []

.....
-----
Block: 8940
8940Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1c', 'SLOAD', 'PUSH2 0x2301', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
8940-Stack size: 18 
8940-Equals Mem:<< []>> 
8940-NonEquals Mem: << []>> 
8940-Equals Sto:<< []>> 
8940-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
8940-Useless: []
8940-Constancy: [(12, 0), (1, 0)]
8940-ContextAliasing: []

.....
-----
Block: 8987
8987Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1a', 'SLOAD', 'PUSH2 0x2330', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
8987-Stack size: 18 
8987-Equals Mem:<< []>> 
8987-NonEquals Mem: << []>> 
8987-Equals Sto:<< []>> 
8987-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
8987-Useless: []
8987-Constancy: [(12, 0), (1, 0)]
8987-ContextAliasing: []

.....
-----
Block: 9116
9116Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x17', 'SLOAD', 'DUP3', 'PUSH2 0x23af', 'SWAP2', 'SWAP1', 'PUSH2 0x2f02', 'JUMP']>> 
9116-Stack size: 15 
9116-Equals Mem:<< []>> 
9116-NonEquals Mem: << []>> 
9116-Equals Sto:<< []>> 
9116-NonEquals Sto: << [<4,6>]>> 
9116-Useless: []
9116-Constancy: [(9, 0), (1, 0)]
9116-ContextAliasing: []

.....
-----
Block: 9161
9161Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'PUSH2 0x23de', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
9161-Stack size: 18 
9161-Equals Mem:<< []>> 
9161-NonEquals Mem: << []>> 
9161-Equals Sto:<< []>> 
9161-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9161-Useless: []
9161-Constancy: [(12, 0), (1, 0)]
9161-ContextAliasing: []

.....
-----
Block: 9208
9208Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x16', 'SLOAD', 'PUSH2 0x240d', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
9208-Stack size: 18 
9208-Equals Mem:<< []>> 
9208-NonEquals Mem: << []>> 
9208-Equals Sto:<< []>> 
9208-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9208-Useless: []
9208-Constancy: [(12, 0), (1, 0)]
9208-ContextAliasing: []

.....
-----
Block: 9116_0
9116_0Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x17', 'SLOAD', 'DUP3', 'PUSH2 0x23af', 'SWAP2', 'SWAP1', 'PUSH2 0x2f02', 'JUMP']>> 
9116_0-Stack size: 14 
9116_0-Equals Mem:<< []>> 
9116_0-NonEquals Mem: << []>> 
9116_0-Equals Sto:<< []>> 
9116_0-NonEquals Sto: << [<4,6>]>> 
9116_0-Useless: []
9116_0-Constancy: [(9, 0), (1, 0)]
9116_0-ContextAliasing: []

.....
-----
Block: 9161_0
9161_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'PUSH2 0x23de', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
9161_0-Stack size: 17 
9161_0-Equals Mem:<< []>> 
9161_0-NonEquals Mem: << []>> 
9161_0-Equals Sto:<< []>> 
9161_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9161_0-Useless: []
9161_0-Constancy: [(12, 0), (1, 0)]
9161_0-ContextAliasing: []

.....
-----
Block: 9208_0
9208_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x16', 'SLOAD', 'PUSH2 0x240d', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
9208_0-Stack size: 17 
9208_0-Equals Mem:<< []>> 
9208_0-NonEquals Mem: << []>> 
9208_0-Equals Sto:<< []>> 
9208_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
9208_0-Useless: []
9208_0-Constancy: [(12, 0), (1, 0)]
9208_0-ContextAliasing: []

.....
-----
Block: 8895_0
8895_0Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1b', 'SLOAD', 'DUP3', 'PUSH2 0x22d2', 'SWAP2', 'SWAP1', 'PUSH2 0x2f02', 'JUMP']>> 
8895_0-Stack size: 14 
8895_0-Equals Mem:<< []>> 
8895_0-NonEquals Mem: << []>> 
8895_0-Equals Sto:<< []>> 
8895_0-NonEquals Sto: << [<4,6>]>> 
8895_0-Useless: []
8895_0-Constancy: [(9, 0), (1, 0)]
8895_0-ContextAliasing: []

.....
-----
Block: 8940_0
8940_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1c', 'SLOAD', 'PUSH2 0x2301', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
8940_0-Stack size: 17 
8940_0-Equals Mem:<< []>> 
8940_0-NonEquals Mem: << []>> 
8940_0-Equals Sto:<< []>> 
8940_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
8940_0-Useless: []
8940_0-Constancy: [(12, 0), (1, 0)]
8940_0-ContextAliasing: []

.....
-----
Block: 8987_0
8987_0Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1a', 'SLOAD', 'PUSH2 0x2330', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
8987_0-Stack size: 17 
8987_0-Equals Mem:<< []>> 
8987_0-NonEquals Mem: << []>> 
8987_0-Equals Sto:<< []>> 
8987_0-NonEquals Sto: << [<3,7>, <3,9>, <7,9>]>> 
8987_0-Useless: []
8987_0-Constancy: [(12, 0), (1, 0)]
8987_0-ContextAliasing: []

.....
-----
Block: 8665_0
8665_0Instr:<<['POP', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'PUSH2 0x21e9', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
8665_0-Stack size: 12 
8665_0-Equals Mem:<< []>> 
8665_0-NonEquals Mem: << []>> 
8665_0-Equals Sto:<< []>> 
8665_0-NonEquals Sto: << [<2,4>]>> 
8665_0-Useless: []
8665_0-Constancy: [(7, 0)]
8665_0-ContextAliasing: []

.....
-----
Block: 8555_0
8555_0Instr:<<['PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x2185', 'PUSH2 0x2655', 'JUMP']>> 
8555_0-Stack size: 11 
8555_0-Equals Mem:<< []>> 
8555_0-NonEquals Mem: << []>> 
8555_0-Equals Sto:<< [<2,13>]>> 
8555_0-NonEquals Sto: << []>> 
8555_0-Useless: []
8555_0-Constancy: [(6, 0)]
8555_0-ContextAliasing: []

.....
-----
Block: 8581_0
8581_0Instr:<<['JUMPDEST', 'PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE']>> 
8581_0-Stack size: 11 
8581_0-Equals Mem:<< []>> 
8581_0-NonEquals Mem: << []>> 
8581_0-Equals Sto:<< [<3,10>]>> 
8581_0-NonEquals Sto: << []>> 
8581_0-Useless: []
8581_0-Constancy: [(6, 0)]
8581_0-ContextAliasing: []

.....
-----
Block: 10134_0
10134_0Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x27bb', 'JUMP']>> 
10134_0-Stack size: 25 
10134_0-Equals Mem:<< []>> 
10134_0-NonEquals Mem: << []>> 
10134_0-Equals Sto:<< []>> 
10134_0-NonEquals Sto: << []>> 
10134_0-Useless: [16, 22]
10134_0-Constancy: [(20, 0), (10, 0)]
10134_0-ContextAliasing: []

.....
-----
Block: 10315_0
10315_0Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x2870', 'JUMP']>> 
10315_0-Stack size: 25 
10315_0-Equals Mem:<< []>> 
10315_0-NonEquals Mem: << []>> 
10315_0-Equals Sto:<< []>> 
10315_0-NonEquals Sto: << []>> 
10315_0-Useless: [16, 22]
10315_0-Constancy: [(20, 0)]
10315_0-ContextAliasing: []

.....
-----
Block: 10134
10134Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x27bb', 'JUMP']>> 
10134-Stack size: 26 
10134-Equals Mem:<< []>> 
10134-NonEquals Mem: << []>> 
10134-Equals Sto:<< []>> 
10134-NonEquals Sto: << []>> 
10134-Useless: [16, 22]
10134-Constancy: [(20, 0), (10, 0)]
10134-ContextAliasing: []

.....
-----
Block: 10315
10315Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x2870', 'JUMP']>> 
10315-Stack size: 26 
10315-Equals Mem:<< []>> 
10315-NonEquals Mem: << []>> 
10315-Equals Sto:<< []>> 
10315-NonEquals Sto: << []>> 
10315-Useless: [16, 22]
10315-Constancy: [(20, 0)]
10315-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.8746387839782983s

*************************************************************
File: ERC20
Build CFG: 0.05620931199518964s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis ERC20
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract ERC20: 26
Memory read accesses ContractERC20: 86
Memory write accesses ContractERC20: 159
********************************** INIT
CONTEXT: Detected context equality 12 <slot156,0> 14 <slot156,0>
CONTEXT: Detected context equality 12 <slot156,0> 15 <slot156,0>
CONTEXT: Detected context equality 12 <slot156,0> 15 <slot156,0>
CONTEXT: Detected context equality 11 <slot160,0> 13 <slot160,0>
CONTEXT: Detected context equality 11 <slot160,0> 14 <slot160,0>
CONTEXT: Detected context equality 11 <slot160,0> 14 <slot160,0>
CONTEXT: Detected context equality 13 <slot171,0> 15 <slot171,0>
CONTEXT: Detected context equality 13 <slot171,0> 16 <slot171,0>
CONTEXT: Detected context equality 13 <slot171,0> 16 <slot171,0>
CONTEXT: Detected context equality 12 <slot174,0> 14 <slot174,0>
CONTEXT: Detected context equality 12 <slot174,0> 15 <slot174,0>
CONTEXT: Detected context equality 12 <slot174,0> 15 <slot174,0>
COMPACT CLONES: True
CONTRACT: ERC20
-----
Block: 406
406Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
406-Stack size: 4 
406-Equals Mem:<< [<12,27>, <17,31>]>> 
406-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
406-Equals Sto:<< []>> 
406-NonEquals Sto: << []>> 
406-Useless: []
406-Constancy: []
406-ContextAliasing: []

.....
-----
Block: 239
239Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
239-Stack size: 2 
239-Equals Mem:<< []>> 
239-NonEquals Mem: << [<5,2>]>> 
239-Equals Sto:<< []>> 
239-NonEquals Sto: << []>> 
239-Useless: []
239-Constancy: []
239-ContextAliasing: []

.....
-----
Block: 1186_0
1186_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1186_0-Stack size: 9 
1186_0-Equals Mem:<< []>> 
1186_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1186_0-Equals Sto:<< []>> 
1186_0-NonEquals Sto: << []>> 
1186_0-Useless: []
1186_0-Constancy: [(4, 0)]
1186_0-ContextAliasing: []

.....
-----
Block: 1286_0
1286_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1286_0-Stack size: 9 
1286_0-Equals Mem:<< []>> 
1286_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1286_0-Equals Sto:<< []>> 
1286_0-NonEquals Sto: << []>> 
1286_0-Useless: []
1286_0-Constancy: [(4, 0)]
1286_0-ContextAliasing: []

.....
-----
Block: 1566_2
1566_2Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566_2-Stack size: 15 
1566_2-Equals Mem:<< []>> 
1566_2-NonEquals Mem: << [<6,1>]>> 
1566_2-Equals Sto:<< []>> 
1566_2-NonEquals Sto: << []>> 
1566_2-Useless: []
1566_2-Constancy: [(10, 0), (1, 0)]
1566_2-ContextAliasing: [(2, 14)]

.....
-----
Block: 1712_3
1712_3Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_3-Stack size: 17 
1712_3-Equals Mem:<< []>> 
1712_3-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_3-Equals Sto:<< []>> 
1712_3-NonEquals Sto: << []>> 
1712_3-Useless: []
1712_3-Constancy: [(12, 0), (3, 0)]
1712_3-ContextAliasing: [(4, 15)]

.....
-----
Block: 1736_3
1736_3Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_3-Stack size: 21 
1736_3-Equals Mem:<< []>> 
1736_3-NonEquals Mem: << [<11,5>]>> 
1736_3-Equals Sto:<< []>> 
1736_3-NonEquals Sto: << []>> 
1736_3-Useless: []
1736_3-Constancy: [(16, 0), (7, 0), (3, 0), (2, 32)]
1736_3-ContextAliasing: [(8, 15)]

.....
-----
Block: 2041_5
2041_5Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_5-Stack size: 20 
2041_5-Equals Mem:<< []>> 
2041_5-NonEquals Mem: << [<5,8>]>> 
2041_5-Equals Sto:<< []>> 
2041_5-NonEquals Sto: << []>> 
2041_5-Useless: []
2041_5-Constancy: [(15, 0), (6, 0), (5, 0)]
2041_5-ContextAliasing: []

.....
-----
Block: 1429_0
1429_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x05c3', 'SWAP1', 'DUP3', 'PUSH2 0x064b', 'JUMP']>> 
1429_0-Stack size: 10 
1429_0-Equals Mem:<< [<12,29>]>> 
1429_0-NonEquals Mem: << [<12,16>, <16,29>]>> 
1429_0-Equals Sto:<< [<24,31>]>> 
1429_0-NonEquals Sto: << []>> 
1429_0-Useless: []
1429_0-Constancy: [(5, 0)]
1429_0-ContextAliasing: []

.....
-----
Block: 2041_4
2041_4Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_4-Stack size: 19 
2041_4-Equals Mem:<< []>> 
2041_4-NonEquals Mem: << [<5,8>]>> 
2041_4-Equals Sto:<< []>> 
2041_4-NonEquals Sto: << []>> 
2041_4-Useless: []
2041_4-Constancy: [(14, 0), (6, 0), (5, 0)]
2041_4-ContextAliasing: []

.....
-----
Block: 1634_1
1634_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634_1-Stack size: 14 
1634_1-Equals Mem:<< []>> 
1634_1-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1634_1-Equals Sto:<< []>> 
1634_1-NonEquals Sto: << []>> 
1634_1-Useless: []
1634_1-Constancy: [(9, 0), (1, 0)]
1634_1-ContextAliasing: []

.....
-----
Block: 1475_0
1475_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x0486', 'JUMP']>> 
1475_0-Stack size: 10 
1475_0-Equals Mem:<< []>> 
1475_0-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
1475_0-Equals Sto:<< []>> 
1475_0-NonEquals Sto: << []>> 
1475_0-Useless: []
1475_0-Constancy: [(5, 0)]
1475_0-ContextAliasing: []

.....
-----
Block: 219
219Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
219-Stack size: 2 
219-Equals Mem:<< []>> 
219-NonEquals Mem: << [<7,2>]>> 
219-Equals Sto:<< []>> 
219-NonEquals Sto: << []>> 
219-Useless: []
219-Constancy: []
219-ContextAliasing: []

.....
-----
Block: 1566_1
1566_1Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566_1-Stack size: 14 
1566_1-Equals Mem:<< []>> 
1566_1-NonEquals Mem: << [<6,1>]>> 
1566_1-Equals Sto:<< []>> 
1566_1-NonEquals Sto: << []>> 
1566_1-Useless: []
1566_1-Constancy: [(9, 0), (1, 0)]
1566_1-ContextAliasing: [(2, 13)]

.....
-----
Block: 1712_2
1712_2Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_2-Stack size: 16 
1712_2-Equals Mem:<< []>> 
1712_2-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_2-Equals Sto:<< []>> 
1712_2-NonEquals Sto: << []>> 
1712_2-Useless: []
1712_2-Constancy: [(11, 0), (3, 0)]
1712_2-ContextAliasing: [(4, 14)]

.....
-----
Block: 1736_2
1736_2Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_2-Stack size: 20 
1736_2-Equals Mem:<< []>> 
1736_2-NonEquals Mem: << [<11,5>]>> 
1736_2-Equals Sto:<< []>> 
1736_2-NonEquals Sto: << []>> 
1736_2-Useless: []
1736_2-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
1736_2-ContextAliasing: [(8, 14)]

.....
-----
Block: 2041_3
2041_3Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_3-Stack size: 19 
2041_3-Equals Mem:<< []>> 
2041_3-NonEquals Mem: << [<5,8>]>> 
2041_3-Equals Sto:<< []>> 
2041_3-NonEquals Sto: << []>> 
2041_3-Useless: []
2041_3-Constancy: [(14, 0), (6, 0), (5, 0)]
2041_3-ContextAliasing: []

.....
-----
Block: 889
889Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
889-Stack size: 9 
889-Equals Mem:<< []>> 
889-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
889-Equals Sto:<< []>> 
889-NonEquals Sto: << []>> 
889-Useless: []
889-Constancy: [(4, 0)]
889-ContextAliasing: []

.....
-----
Block: 992
992Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
992-Stack size: 9 
992-Equals Mem:<< []>> 
992-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
992-Equals Sto:<< []>> 
992-NonEquals Sto: << []>> 
992-Useless: []
992-Constancy: [(4, 0)]
992-ContextAliasing: []

.....
-----
Block: 1074
1074Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1074-Stack size: 9 
1074-Equals Mem:<< [<12,27>, <17,30>]>> 
1074-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
1074-Equals Sto:<< []>> 
1074-NonEquals Sto: << []>> 
1074-Useless: []
1074-Constancy: [(4, 0)]
1074-ContextAliasing: []

.....
-----
Block: 2016_0
2016_0Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2016_0-Stack size: 8 
2016_0-Equals Mem:<< []>> 
2016_0-NonEquals Mem: << [<4,7>]>> 
2016_0-Equals Sto:<< []>> 
2016_0-NonEquals Sto: << []>> 
2016_0-Useless: []
2016_0-Constancy: [(5, 96)]
2016_0-ContextAliasing: []

.....
-----
Block: 463
463Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x01fb', 'SWAP1', 'PUSH2 0x07c1', 'JUMP']>> 
463-Stack size: 5 
463-Equals Mem:<< [<17,12>]>> 
463-NonEquals Mem: << [<17,24>, <24,12>]>> 
463-Equals Sto:<< []>> 
463-NonEquals Sto: << []>> 
463-Useless: []
463-Constancy: [(2, 96)]
463-ContextAliasing: []

.....
-----
Block: 2016
2016Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2016-Stack size: 12 
2016-Equals Mem:<< []>> 
2016-NonEquals Mem: << [<4,7>]>> 
2016-Equals Sto:<< []>> 
2016-NonEquals Sto: << []>> 
2016-Useless: []
2016-Constancy: [(9, 96)]
2016-ContextAliasing: []

.....
-----
Block: 1712
1712Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712-Stack size: 4 
1712-Equals Mem:<< []>> 
1712-NonEquals Mem: << [<5,7>, <5,12>, <12,7>]>> 
1712-Equals Sto:<< []>> 
1712-NonEquals Sto: << []>> 
1712-Useless: []
1712-Constancy: []
1712-ContextAliasing: []

.....
-----
Block: 1736
1736Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736-Stack size: 8 
1736-Equals Mem:<< []>> 
1736-NonEquals Mem: << [<11,5>]>> 
1736-Equals Sto:<< []>> 
1736-NonEquals Sto: << []>> 
1736-Useless: []
1736-Constancy: [(3, 0), (2, 32)]
1736-ContextAliasing: []

.....
-----
Block: 320
320Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
320-Stack size: 3 
320-Equals Mem:<< []>> 
320-NonEquals Mem: << [<10,14>]>> 
320-Equals Sto:<< []>> 
320-NonEquals Sto: << []>> 
320-Useless: []
320-Constancy: []
320-ContextAliasing: []

.....
-----
Block: 717
717Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x025c', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x02be', 'SWAP1', 'DUP7', 'PUSH2 0x064b', 'JUMP']>> 
717-Stack size: 4 
717-Equals Mem:<< [<5,23>, <10,26>]>> 
717-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
717-Equals Sto:<< []>> 
717-NonEquals Sto: << []>> 
717-Useless: []
717-Constancy: []
717-ContextAliasing: []

.....
-----
Block: 2041_2
2041_2Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_2-Stack size: 18 
2041_2-Equals Mem:<< []>> 
2041_2-NonEquals Mem: << [<5,8>]>> 
2041_2-Equals Sto:<< []>> 
2041_2-NonEquals Sto: << []>> 
2041_2-Useless: []
2041_2-Constancy: [(13, 0), (6, 0), (5, 0)]
2041_2-ContextAliasing: []

.....
-----
Block: 1634_0
1634_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634_0-Stack size: 13 
1634_0-Equals Mem:<< []>> 
1634_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1634_0-Equals Sto:<< []>> 
1634_0-NonEquals Sto: << []>> 
1634_0-Useless: []
1634_0-Constancy: [(8, 0), (1, 0)]
1634_0-ContextAliasing: []

.....
-----
Block: 272
272Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
272-Stack size: 1 
272-Equals Mem:<< []>> 
272-NonEquals Mem: << [<5,2>]>> 
272-Equals Sto:<< []>> 
272-NonEquals Sto: << []>> 
272-Useless: []
272-Constancy: []
272-ContextAliasing: []

.....
-----
Block: 1186
1186Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1186-Stack size: 10 
1186-Equals Mem:<< []>> 
1186-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1186-Equals Sto:<< []>> 
1186-NonEquals Sto: << []>> 
1186-Useless: []
1186-Constancy: [(4, 0)]
1186-ContextAliasing: []

.....
-----
Block: 1286
1286Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1286-Stack size: 10 
1286-Equals Mem:<< []>> 
1286-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1286-Equals Sto:<< []>> 
1286-NonEquals Sto: << []>> 
1286-Useless: []
1286-Constancy: [(4, 0)]
1286-ContextAliasing: []

.....
-----
Block: 1566_0
1566_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566_0-Stack size: 16 
1566_0-Equals Mem:<< []>> 
1566_0-NonEquals Mem: << [<6,1>]>> 
1566_0-Equals Sto:<< []>> 
1566_0-NonEquals Sto: << []>> 
1566_0-Useless: []
1566_0-Constancy: [(10, 0), (1, 0)]
1566_0-ContextAliasing: [(2, 15)]

.....
-----
Block: 1712_1
1712_1Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_1-Stack size: 18 
1712_1-Equals Mem:<< []>> 
1712_1-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_1-Equals Sto:<< []>> 
1712_1-NonEquals Sto: << []>> 
1712_1-Useless: []
1712_1-Constancy: [(12, 0), (3, 0)]
1712_1-ContextAliasing: [(4, 16)]

.....
-----
Block: 1736_1
1736_1Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_1-Stack size: 22 
1736_1-Equals Mem:<< []>> 
1736_1-NonEquals Mem: << [<11,5>]>> 
1736_1-Equals Sto:<< []>> 
1736_1-NonEquals Sto: << []>> 
1736_1-Useless: []
1736_1-Constancy: [(16, 0), (7, 0), (3, 0), (2, 32)]
1736_1-ContextAliasing: [(8, 16)]

.....
-----
Block: 2041_1
2041_1Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_1-Stack size: 21 
2041_1-Equals Mem:<< []>> 
2041_1-NonEquals Mem: << [<5,8>]>> 
2041_1-Equals Sto:<< []>> 
2041_1-NonEquals Sto: << []>> 
2041_1-Useless: []
2041_1-Constancy: [(15, 0), (6, 0), (5, 0)]
2041_1-ContextAliasing: []

.....
-----
Block: 1429
1429Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x05c3', 'SWAP1', 'DUP3', 'PUSH2 0x064b', 'JUMP']>> 
1429-Stack size: 11 
1429-Equals Mem:<< [<12,29>]>> 
1429-NonEquals Mem: << [<12,16>, <16,29>]>> 
1429-Equals Sto:<< [<24,31>]>> 
1429-NonEquals Sto: << []>> 
1429-Useless: []
1429-Constancy: [(5, 0)]
1429-ContextAliasing: []

.....
-----
Block: 2041_0
2041_0Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041_0-Stack size: 20 
2041_0-Equals Mem:<< []>> 
2041_0-NonEquals Mem: << [<5,8>]>> 
2041_0-Equals Sto:<< []>> 
2041_0-NonEquals Sto: << []>> 
2041_0-Useless: []
2041_0-Constancy: [(14, 0), (6, 0), (5, 0)]
2041_0-ContextAliasing: []

.....
-----
Block: 1634
1634Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634-Stack size: 15 
1634-Equals Mem:<< []>> 
1634-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
1634-Equals Sto:<< []>> 
1634-NonEquals Sto: << []>> 
1634-Useless: []
1634-Constancy: [(9, 0), (1, 0)]
1634-ContextAliasing: []

.....
-----
Block: 1475
1475Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x0486', 'JUMP']>> 
1475-Stack size: 11 
1475-Equals Mem:<< []>> 
1475-NonEquals Mem: << [<12,26>, <12,16>, <12,29>, <16,26>, <16,29>, <29,21>, <29,26>, <21,26>]>> 
1475-Equals Sto:<< []>> 
1475-NonEquals Sto: << []>> 
1475-Useless: []
1475-Constancy: [(5, 0)]
1475-ContextAliasing: []

.....
-----
Block: 1566
1566Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566-Stack size: 15 
1566-Equals Mem:<< []>> 
1566-NonEquals Mem: << [<6,1>]>> 
1566-Equals Sto:<< []>> 
1566-NonEquals Sto: << []>> 
1566-Useless: []
1566-Constancy: [(9, 0), (1, 0)]
1566-ContextAliasing: [(2, 14)]

.....
-----
Block: 1712_0
1712_0Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712_0-Stack size: 17 
1712_0-Equals Mem:<< []>> 
1712_0-NonEquals Mem: << [<5,7>, <12,7>]>> 
1712_0-Equals Sto:<< []>> 
1712_0-NonEquals Sto: << []>> 
1712_0-Useless: []
1712_0-Constancy: [(11, 0), (3, 0)]
1712_0-ContextAliasing: [(4, 15)]

.....
-----
Block: 1736_0
1736_0Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736_0-Stack size: 21 
1736_0-Equals Mem:<< []>> 
1736_0-NonEquals Mem: << [<11,5>]>> 
1736_0-Equals Sto:<< []>> 
1736_0-NonEquals Sto: << []>> 
1736_0-Useless: []
1736_0-Constancy: [(15, 0), (7, 0), (3, 0), (2, 32)]
1736_0-ContextAliasing: [(8, 15)]

.....
-----
Block: 2041
2041Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041-Stack size: 20 
2041-Equals Mem:<< []>> 
2041-NonEquals Mem: << [<5,8>]>> 
2041-Equals Sto:<< []>> 
2041-NonEquals Sto: << []>> 
2041-Useless: []
2041-Constancy: [(14, 0), (6, 0), (5, 0)]
2041-ContextAliasing: []

.....
-----
Block: 889_0
889_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
889_0-Stack size: 10 
889_0-Equals Mem:<< []>> 
889_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
889_0-Equals Sto:<< []>> 
889_0-NonEquals Sto: << []>> 
889_0-Useless: []
889_0-Constancy: [(4, 0)]
889_0-ContextAliasing: []

.....
-----
Block: 992_0
992_0Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
992_0-Stack size: 10 
992_0-Equals Mem:<< []>> 
992_0-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
992_0-Equals Sto:<< []>> 
992_0-NonEquals Sto: << []>> 
992_0-Useless: []
992_0-Constancy: [(4, 0)]
992_0-ContextAliasing: []

.....
-----
Block: 1074_0
1074_0Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1074_0-Stack size: 10 
1074_0-Equals Mem:<< [<12,27>, <17,30>]>> 
1074_0-NonEquals Mem: << [<12,39>, <12,17>, <12,30>, <12,42>, <17,39>, <17,27>, <17,42>, <27,39>, <27,30>, <27,42>, <30,39>, <30,42>, <42,21>, <42,34>, <42,39>, <21,39>, <34,39>]>> 
1074_0-Equals Sto:<< []>> 
1074_0-NonEquals Sto: << []>> 
1074_0-Useless: []
1074_0-Constancy: [(4, 0)]
1074_0-ContextAliasing: []

.....
-----
Block: 191
191Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
191-Stack size: 2 
191-Equals Mem:<< []>> 
191-NonEquals Mem: << []>> 
191-Equals Sto:<< []>> 
191-NonEquals Sto: << []>> 
191-Useless: []
191-Constancy: []
191-ContextAliasing: []

.....
-----
Block: 968
968Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968-Stack size: 10 
968-Equals Mem:<< []>> 
968-NonEquals Mem: << []>> 
968-Equals Sto:<< []>> 
968-NonEquals Sto: << []>> 
968-Useless: []
968-Constancy: [(5, 0)]
968-ContextAliasing: []

.....
-----
Block: 968_7
968_7Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_7-Stack size: 15 
968_7-Equals Mem:<< []>> 
968_7-NonEquals Mem: << []>> 
968_7-Equals Sto:<< []>> 
968_7-NonEquals Sto: << []>> 
968_7-Useless: []
968_7-Constancy: [(10, 0), (1, 0)]
968_7-ContextAliasing: []

.....
-----
Block: 968_6
968_6Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_6-Stack size: 15 
968_6-Equals Mem:<< []>> 
968_6-NonEquals Mem: << []>> 
968_6-Equals Sto:<< []>> 
968_6-NonEquals Sto: << []>> 
968_6-Useless: []
968_6-Constancy: [(10, 0), (2, 0)]
968_6-ContextAliasing: []

.....
-----
Block: 968_5
968_5Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_5-Stack size: 14 
968_5-Equals Mem:<< []>> 
968_5-NonEquals Mem: << []>> 
968_5-Equals Sto:<< []>> 
968_5-NonEquals Sto: << []>> 
968_5-Useless: []
968_5-Constancy: [(9, 0)]
968_5-ContextAliasing: []

.....
-----
Block: 968_4
968_4Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_4-Stack size: 11 
968_4-Equals Mem:<< []>> 
968_4-NonEquals Mem: << []>> 
968_4-Equals Sto:<< []>> 
968_4-NonEquals Sto: << []>> 
968_4-Useless: []
968_4-Constancy: [(5, 0)]
968_4-ContextAliasing: []

.....
-----
Block: 968_3
968_3Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_3-Stack size: 16 
968_3-Equals Mem:<< []>> 
968_3-NonEquals Mem: << []>> 
968_3-Equals Sto:<< []>> 
968_3-NonEquals Sto: << []>> 
968_3-Useless: []
968_3-Constancy: [(10, 0), (1, 0)]
968_3-ContextAliasing: []

.....
-----
Block: 968_2
968_2Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_2-Stack size: 16 
968_2-Equals Mem:<< []>> 
968_2-NonEquals Mem: << []>> 
968_2-Equals Sto:<< []>> 
968_2-NonEquals Sto: << []>> 
968_2-Useless: []
968_2-Constancy: [(10, 0), (2, 0)]
968_2-ContextAliasing: []

.....
-----
Block: 968_1
968_1Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_1-Stack size: 15 
968_1-Equals Mem:<< []>> 
968_1-NonEquals Mem: << []>> 
968_1-Equals Sto:<< []>> 
968_1-NonEquals Sto: << []>> 
968_1-Useless: []
968_1-Constancy: [(9, 0), (1, 0)]
968_1-ContextAliasing: []

.....
-----
Block: 968_0
968_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968_0-Stack size: 11 
968_0-Equals Mem:<< []>> 
968_0-NonEquals Mem: << []>> 
968_0-Equals Sto:<< []>> 
968_0-NonEquals Sto: << []>> 
968_0-Useless: []
968_0-Constancy: [(5, 0)]
968_0-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.05257308098953217s

*************************************************************
File: Ownable
Build CFG: 0.007176043989602476s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis Ownable
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract Ownable: 6
Memory read accesses ContractOwnable: 14
Memory write accesses ContractOwnable: 15
********************************** INIT
COMPACT CLONES: True
CONTRACT: Ownable
-----
Block: 310
310Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
310-Stack size: 3 
310-Equals Mem:<< []>> 
310-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
310-Equals Sto:<< []>> 
310-NonEquals Sto: << []>> 
310-Useless: []
310-Constancy: []
310-ContextAliasing: []

.....
-----
Block: 396
396Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
396-Stack size: 3 
396-Equals Mem:<< []>> 
396-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
396-Equals Sto:<< []>> 
396-NonEquals Sto: << []>> 
396-Useless: []
396-Constancy: []
396-ContextAliasing: []

.....
-----
Block: 77
77Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
77-Stack size: 1 
77-Equals Mem:<< [<5,16>]>> 
77-NonEquals Mem: << [<15,5>, <15,16>]>> 
77-Equals Sto:<< []>> 
77-NonEquals Sto: << []>> 
77-Useless: []
77-Constancy: []
77-ContextAliasing: []

.....
-----
Block: 144
144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD']>> 
144-Stack size: 2 
144-Equals Mem:<< []>> 
144-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
144-Equals Sto:<< []>> 
144-NonEquals Sto: << []>> 
144-Useless: []
144-Constancy: []
144-ContextAliasing: []

.....
-----
Block: 211_0
211_0Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211_0-Stack size: 4 
211_0-Equals Mem:<< []>> 
211_0-NonEquals Mem: << []>> 
211_0-Equals Sto:<< []>> 
211_0-NonEquals Sto: << []>> 
211_0-Useless: []
211_0-Constancy: []
211_0-ContextAliasing: []

.....
-----
Block: 211
211Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211-Stack size: 3 
211-Equals Mem:<< []>> 
211-NonEquals Mem: << []>> 
211-Equals Sto:<< []>> 
211-NonEquals Sto: << []>> 
211-Useless: []
211-Constancy: []
211-ContextAliasing: []

.....
********************************** END
Memory Analysis: 0.004556791973300278s

*************************************************************
File: SafeMath
Build CFG: 0.0005534450174309313s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMath
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMath: 0
Memory read accesses ContractSafeMath: 0
Memory write accesses ContractSafeMath: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMath
********************************** END
Memory Analysis: 0.00019217299995943904s

*************************************************************
File: SafeMathInt
Build CFG: 0.0004457529867067933s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMathInt
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMathInt: 0
Memory read accesses ContractSafeMathInt: 0
Memory write accesses ContractSafeMathInt: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMathInt
********************************** END
Memory Analysis: 9.841000428423285e-05s

*************************************************************
File: SafeMathUint
Build CFG: 0.00048293103463947773s
Slots analysis started!
Slots analysis finished!
Constants analysis finished!
Starting offset memory analysis SafeMathUint
Memory accesess analysis finished!


GASOL: Useless accesses found: {}
Free memory analyss finished


SLOTS Contract SafeMathUint: 0
Memory read accesses ContractSafeMathUint: 0
Memory write accesses ContractSafeMathUint: 1
********************************** INIT
COMPACT CLONES: True
CONTRACT: SafeMathUint
********************************** END
Memory Analysis: 9.740900713950396e-05s

*************************************************************
FILERES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE;741;1848;123;520;420;55;2.180264780006837
FILERES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20;115;240;22;74;51;2;0.11048998800106347
FILERES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_Ownable;26;28;5;9;4;2;0.011820450017694384
FILERES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_SafeMath;1;1;0;1;0;0;0.0007578760269097984
FILERES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_SafeMathInt;1;1;0;1;0;0;0.0005540480487979949
FILERES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_SafeMathUint;1;1;0;1;0;0;0.0005901780095882714


Aux path: /tmp/0x00//ethir_1bd3bd0a24f2481aa9844085e2b78fc5
The files generated by EthIR are stored in the following directory: /tmp/0x00/costabs/
Block: 6063
6063Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
6063-Stack size: 4 
6063-Equals Mem:<< []>> 
6063-NonEquals Mem: << [<6,1>]>> 
6063-Equals Sto:<< []>> 
6063-NonEquals Sto: << []>> 
6063-Useless: []
6063-Constancy: [(0, 0)]
6063-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_6063_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6063_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6063;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6063;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.032933631038758904;1;0;0;0

Block: 6109
6109Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6109-Stack size: 4 
6109-Equals Mem:<< []>> 
6109-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
6109-Equals Sto:<< []>> 
6109-NonEquals Sto: << []>> 
6109-Useless: []
6109-Constancy: [(0, 0)]
6109-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '35035607279093380804524503552812742655539810354421932185318081150801934906216', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP

Optimized code stored in /tmp/0x00/DOPE_6109_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6109_statistics.csv

Estimated initial gas: 86
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 27
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6109;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6109;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d757374207761697420666f7220636f6f6c646f776e20746f2066696e697368 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP;86;71;27;77;97;24;9;-26;3;True;False;False;False;2.2019872469827533;1;3;0;0

Block: 6191
6191Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2a', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH10 0x06b656e7320696e204c5', 'PUSH1 0xb4', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6191-Stack size: 4 
6191-Equals Mem:<< []>> 
6191-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6191-Equals Sto:<< []>> 
6191-NonEquals Sto: << []>> 
6191-Useless: []
6191-Constancy: [(0, 0)]
6191-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('180', '31697768347443774227653', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '42', 'mstore'), 2), (('s(10)', '35000309491851471635150075513523011470886961656385422382499407754435263231087', 'mstore'), 2), (('s(12)', '48576688647857498851520605107417933417252856942702509490417846326515810172928', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_6191_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6191_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 90
Estimated size optimized in bytes: 90

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6191;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6191;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2a PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d6179206e6f74206e756b65206d6f7265207468616e20313025206f6620746f PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x06b656e7320696e204c5 PUSH1 0xb4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;90;33;104;90;33;0;0;0;True;False;False;False;2.122463350009639;2;4;0;0

Block: 6385
6385Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x1915', 'SWAP2', 'SWAP1', 'PUSH2 0x2f4b', 'JUMP']>> 
6385-Stack size: 9 
6385-Equals Mem:<< [<18,6>]>> 
6385-NonEquals Mem: << []>> 
6385-Equals Sto:<< []>> 
6385-NonEquals Sto: << []>> 
6385-Useless: []
6385-Constancy: [(5, 0), (4, 0)]
6385-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6385 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6500
6500Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x19c0', 'JUMPI']>> 
6500-Stack size: 6 
6500-Equals Mem:<< [<14,26>]>> 
6500-NonEquals Mem: << [<21,14>, <21,26>]>> 
6500-Equals Sto:<< []>> 
6500-NonEquals Sto: << []>> 
6500-Useless: []
6500-Constancy: [(2, 0)]
6500-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>]}
{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542975', '0', 'and')
[RULE]: Evaluate expression ('4294967295', '4294363881', 'and')
[RULE]: Evaluate expression ('224', '4294363881', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(30)', '115775821201098036720259286011779173902827051908138836719913898872934598967296', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('0', 'extcodesize'), 1), (('s(16)', 'iszero'), 1), (('s(17)', 'iszero'), 1), (('64', 'mload0'), 1), (('4', 's(30)', '+'), 2), (('s(29)', 's(30)', '-'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('0', 'extcodesize'), 1), (('s(16)', 'iszero'), 1), (('s(17)', 'iszero'), 1), (('64', 'mload1'), 1), (('64', 'mload0'), 1), (('4', 's(30)', '+'), 2), (('s(29)', 's(27)', '-'), 2)]
(('64', 'mload1'), 1)
mload1
[(('0', 'extcodesize'), 1), (('s(16)', 'iszero'), 1), (('s(17)', 'iszero'), 1), (('64', 'mload1'), 1), (('64', 'mload0'), 1), (('4', 's(30)', '+'), 2), (('s(29)', 's(27)', '-'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19c0 JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19c0 JUMPI

Optimized code stored in /tmp/0x00/DOPE_6500_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6500_statistics.csv

Estimated initial gas: 2718
Estimated gas optimized: 2718

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 40
Final number of instructions: 40

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6500;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6500;2;True;False;False;JUMPDEST PUSH0 PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19c0 JUMPI;JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19c0 JUMPI;2718;58;40;2718;58;40;0;0;0;True;False;False;False;2.2022812759969383;5;0;0;0

Block: 1034
1034Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1034-Stack size: 2 
1034-Equals Mem:<< []>> 
1034-NonEquals Mem: << [<7,2>]>> 
1034-Equals Sto:<< []>> 
1034-NonEquals Sto: << []>> 
1034-Useless: []
1034-Constancy: []
1034-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP

Optimized code stored in /tmp/0x00/DOPE_1034_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_1034_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 16
Estimated size optimized in bytes: 16

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_1034;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;1034;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP;39;16;12;39;16;12;0;0;0;True;False;False;False;0.050991095951758325;0;0;0;0

Block: 2832
2832Instr:<<['JUMPDEST', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
2832-Stack size: 3 
2832-Equals Mem:<< []>> 
2832-NonEquals Mem: << [<3,7>]>> 
2832-Equals Sto:<< []>> 
2832-NonEquals Sto: << []>> 
2832-Useless: []
2832-Constancy: []
2832-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '19', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
{10: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_2832 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5827
5827Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5827-Stack size: 3 
5827-Equals Mem:<< []>> 
5827-NonEquals Mem: << [<6,1>]>> 
5827-Equals Sto:<< []>> 
5827-NonEquals Sto: << []>> 
5827-Useless: []
5827-Constancy: []
5827-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_5827_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5827_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5827;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5827;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026990363956429064;1;0;0;0

Block: 5865
5865Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5865-Stack size: 3 
5865-Equals Mem:<< []>> 
5865-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5865-Equals Sto:<< []>> 
5865-NonEquals Sto: << []>> 
5865-Useless: []
5865-Constancy: []
5865-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_5865_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5865_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 86
Estimated size optimized in bytes: 86

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5865;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5865;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;86;33;104;86;33;0;0;0;True;False;False;False;2.1239670169888996;2;4;0;0

Block: 5657
5657Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5657-Stack size: 4 
5657-Equals Mem:<< []>> 
5657-NonEquals Mem: << [<6,1>]>> 
5657-Equals Sto:<< []>> 
5657-NonEquals Sto: << []>> 
5657-Useless: []
5657-Constancy: []
5657-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_5657_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5657_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5657;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5657;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02839930501068011;1;0;0;0

Block: 5695
5695Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x17', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x416464726573732073686f756c64206e6f742062652030000000000000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5695-Stack size: 4 
5695-Equals Mem:<< []>> 
5695-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>]>> 
5695-Equals Sto:<< []>> 
5695-NonEquals Sto: << []>> 
5695-Useless: []
5695-Constancy: []
5695-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '23', 'mstore'), 2), (('s(10)', '29577713123142787504895480794373437148723178677536130655709756544659574751232', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573732073686f756c64206e6f742062652030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573732073686f756c64206e6f742062652030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP

Optimized code stored in /tmp/0x00/DOPE_5695_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5695_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5695;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5695;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573732073686f756c64206e6f742062652030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573732073686f756c64206e6f742062652030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.0958916500094347;1;3;0;0

Block: 5766
5766Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
5766-Stack size: 4 
5766-Equals Mem:<< []>> 
5766-NonEquals Mem: << [<13,16>]>> 
5766-Equals Sto:<< [<21,33>]>> 
5766-NonEquals Sto: << []>> 
5766-Useless: []
5766-Constancy: []
5766-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>], 'storage_deps_eqs': [<20,32>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(5)', 's(6)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '19', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('s(5)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('s(8)', 's(9)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
(('s(5)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('s(5)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('s(8)', 's(9)', 'or'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5766 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5599
5599Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5599-Stack size: 3 
5599-Equals Mem:<< []>> 
5599-NonEquals Mem: << [<6,1>]>> 
5599-Equals Sto:<< []>> 
5599-NonEquals Sto: << []>> 
5599-Useless: []
5599-Constancy: [(0, 0)]
5599-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_5599_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5599_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5599;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5599;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027904168993700296;1;0;0;0

Block: 2598
2598Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
2598-Stack size: 4 
2598-Equals Mem:<< [<12,27>, <17,31>]>> 
2598-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
2598-Equals Sto:<< []>> 
2598-NonEquals Sto: << []>> 
2598-Useless: []
2598-Constancy: []
2598-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(11)', 'sload0'), 1)
sload0
[(('s(11)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x1 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/DOPE_2598_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_2598_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2211

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_2598;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;2598;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x1 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP;2261;42;36;2211;55;30;50;-13;6;True;False;False;False;2.128139616048429;4;2;2100;2100

Block: 1187
1187Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1187-Stack size: 2 
1187-Equals Mem:<< []>> 
1187-NonEquals Mem: << [<5,2>]>> 
1187-Equals Sto:<< []>> 
1187-NonEquals Sto: << []>> 
1187-Useless: []
1187-Constancy: []
1187-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP

Optimized code stored in /tmp/0x00/DOPE_1187_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_1187_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_1187;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;1187;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.01868861203547567;0;0;0;0

Block: 5257
5257Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5257-Stack size: 4 
5257-Equals Mem:<< []>> 
5257-NonEquals Mem: << [<6,1>]>> 
5257-Equals Sto:<< []>> 
5257-NonEquals Sto: << []>> 
5257-Useless: []
5257-Constancy: [(0, 0)]
5257-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_5257_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5257_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5257;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5257;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02809184801299125;1;0;0;0

Block: 5322
5322Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x10181718181892903a37ba30b61039bab838363c97', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5322-Stack size: 4 
5322-Equals Mem:<< []>> 
5322-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5322-Equals Sto:<< []>> 
5322-NonEquals Sto: << []>> 
5322-Useless: []
5322-Constancy: [(0, 0)]
5322-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('89', '23521556991828086685040897923368548919632285023383', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '53', 'mstore'), 2), (('s(10)', '37752893725439476050558752958547938673905001715051344239317703186210607358318', 'mstore'), 2), (('s(12)', '14559138593258486356279113354235903196806038017392445212263276791969030864896', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_5322_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5322_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 101
Estimated size optimized in bytes: 101

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5322;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5322;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f74206265206c6f776572207468616e PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x10181718181892903a37ba30b61039bab838363c97 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;101;33;104;101;33;0;0;0;True;False;False;False;2.1245484550017864;2;4;0;0

Block: 5464
5464Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x34', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH20 0x371018171a92903a37ba30b61039bab838363c97', 'PUSH1 0x61', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5464-Stack size: 4 
5464-Equals Mem:<< []>> 
5464-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5464-Equals Sto:<< []>> 
5464-NonEquals Sto: << []>> 
5464-Useless: []
5464-Constancy: [(0, 0)]
5464-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('97', '314353402875165393741808678374282470207075531927', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '52', 'mstore'), 2), (('s(10)', '37752893725439476050558752958547938673905001715051344220316404699267220138081', 'mstore'), 2), (('s(12)', '49811284979811228184086379330617010838393883170622782051169653113760140754944', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_5464_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5464_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 100
Estimated size optimized in bytes: 100

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5464;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5464;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5377617020616d6f756e742063616e6e6f742062652068696768657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x371018171a92903a37ba30b61039bab838363c97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;100;33;104;100;33;0;0;0;True;False;False;False;2.1227908579749055;2;4;0;0

Block: 5046
5046Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
5046-Stack size: 3 
5046-Equals Mem:<< []>> 
5046-NonEquals Mem: << [<6,1>]>> 
5046-Equals Sto:<< []>> 
5046-NonEquals Sto: << []>> 
5046-Useless: []
5046-Constancy: []
5046-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_5046_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5046_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5046;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5046;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02806457702536136;1;0;0;0

Block: 5129
5129Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x302e3525', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
5129-Stack size: 3 
5129-Equals Mem:<< []>> 
5129-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
5129-Equals Sto:<< []>> 
5129-NonEquals Sto: << []>> 
5129-Useless: []
5129-Constancy: []
5129-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '808334629', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '30477107189792067803313207901871713266821165230446138444013630436578330504736', 'mstore'), 2), (('s(12)', '21792658487050998905534797818903415876291501217413752893960496301360612900864', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_5129_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_5129_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5129;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;5129;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d617857616c6c6574206c6f776572207468616e20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x302e3525 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.144130718021188;2;4;0;0

Block: 4960
4960Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4960-Stack size: 5 
4960-Equals Mem:<< []>> 
4960-NonEquals Mem: << [<6,1>]>> 
4960-Equals Sto:<< []>> 
4960-NonEquals Sto: << []>> 
4960-Useless: []
4960-Constancy: []
4960-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4960_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4960_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4960;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4960;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02717773400945589;1;0;0;0

Block: 4826
4826Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4826-Stack size: 4 
4826-Equals Mem:<< []>> 
4826-NonEquals Mem: << [<6,1>]>> 
4826-Equals Sto:<< []>> 
4826-NonEquals Sto: << []>> 
4826-Useless: []
4826-Constancy: []
4826-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4826_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4826_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4826;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4826;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027923499001190066;1;0;0;0

Block: 2331
2331Instr:<<['JUMPDEST', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
2331-Stack size: 3 
2331-Equals Mem:<< []>> 
2331-NonEquals Mem: << [<3,7>]>> 
2331-Equals Sto:<< []>> 
2331-NonEquals Sto: << []>> 
2331-Useless: []
2331-Constancy: []
2331-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '34', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
{10: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_2331 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4692
4692Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4692-Stack size: 3 
4692-Equals Mem:<< []>> 
4692-NonEquals Mem: << [<6,1>]>> 
4692-Equals Sto:<< []>> 
4692-NonEquals Sto: << []>> 
4692-Useless: []
4692-Constancy: []
4692-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4692_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4692_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4692;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4692;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.028063811012543738;1;0;0;0

Block: 6680
6680Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6680-Stack size: 9 
6680-Equals Mem:<< []>> 
6680-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6680-Equals Sto:<< []>> 
6680-NonEquals Sto: << []>> 
6680-Useless: []
6680-Constancy: []
6680-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '36', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(12)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_6680_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6680_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6680;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6680;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.121108639985323;2;4;0;0

Block: 6778
6778Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
6778-Stack size: 9 
6778-Equals Mem:<< []>> 
6778-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
6778-Equals Sto:<< []>> 
6778-NonEquals Sto: << []>> 
6778-Useless: []
6778-Constancy: []
6778-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_6778_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6778_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6778;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6778;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.1254336509737186;2;4;0;0

Block: 6860
6860Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
6860-Stack size: 9 
6860-Equals Mem:<< [<12,27>, <17,30>]>> 
6860-NonEquals Mem: << [<27,39>, <30,39>, <27,42>, <30,42>, <34,39>, <12,30>, <17,27>, <42,34>, <42,39>, <12,39>, <12,42>, <17,39>, <27,30>, <17,42>, <21,39>, <12,17>, <42,21>]>> 
6860-Equals Sto:<< []>> 
6860-NonEquals Sto: << []>> 
6860-Useless: []
6860-Constancy: []
6860-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>]}
{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(22)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(8)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(8)', '+'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(8)', '+'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized code stored in /tmp/0x00/DOPE_6860_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6860_statistics.csv

Estimated initial gas: 5186
Estimated gas optimized: 5186

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 84

Initial number of instructions: 46
Final number of instructions: 46

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6860;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6860;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;5186;84;46;5186;84;46;0;0;0;True;False;False;False;2.309864165028557;4;2;5000;5000

Block: 4380
4380Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4380-Stack size: 4 
4380-Equals Mem:<< []>> 
4380-NonEquals Mem: << [<6,1>]>> 
4380-Equals Sto:<< []>> 
4380-NonEquals Sto: << []>> 
4380-Useless: []
4380-Constancy: []
4380-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4380_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4380_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4380;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4380;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027340882981661707;1;0;0;0

Block: 4461
4461Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x39', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
4461-Stack size: 4 
4461-Equals Mem:<< []>> 
4461-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
4461-Equals Sto:<< []>> 
4461-NonEquals Sto: << []>> 
4461-Useless: []
4461-Constancy: []
4461-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '57', 'mstore'), 2), (('s(10)', '38178729326665697386670742406975927714470749681894191956009561408878947560736', 'mstore'), 2), (('s(12)', '44081871025805348716541635358684624520033928842552081219183683813782855876608', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_4461_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4461_statistics.csv

Estimated initial gas: 98
Estimated gas optimized: 98

Estimated initial size in bytes: 109
Estimated size optimized in bytes: 109

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4461;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4461;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520706169722063616e6e6f742062652072656d6f7665642066726f6d20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6175746f6d617465644d61726b65744d616b6572506169727300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;98;109;31;98;109;31;0;0;0;True;False;False;False;2.1256347119924612;1;4;0;0

Block: 2898
2898Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x0b7e', 'SWAP1', 'PUSH2 0x2e81', 'JUMP']>> 
2898-Stack size: 5 
2898-Equals Mem:<< [<17,12>]>> 
2898-NonEquals Mem: << [<17,24>, <24,12>]>> 
2898-Equals Sto:<< []>> 
2898-NonEquals Sto: << []>> 
2898-Useless: []
2898-Constancy: [(2, 96)]
2898-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>]}
{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{28: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(12)', 'mstore'), 2), (('s(10)', 's(1)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('s(0)', 'sload0'), 1)
sload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
(('64', 'mload0'), 1)
mload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
{28: ((('s(0)', 'sload0'), 1), 0)}
(('s(0)', 'sload0'), 1)
sload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
(('64', 'mload0'), 1)
mload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7e SWAP1 PUSH2 0x2e81 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7e SWAP1 PUSH2 0x2e81 JUMP

Optimized code stored in /tmp/0x00/DOPE_2898_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_2898_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2206

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_2898;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;2898;2;True;False;False;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7e SWAP1 PUSH2 0x2e81 JUMP;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x0b7e SWAP1 PUSH2 0x2e81 JUMP;2206;44;34;2206;44;34;0;0;0;True;False;False;False;2.198314901033882;0;1;2100;2100

Block: 11936
11936Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
11936-Stack size: 8 
11936-Equals Mem:<< []>> 
11936-NonEquals Mem: << [<4,7>]>> 
11936-Equals Sto:<< []>> 
11936-NonEquals Sto: << []>> 
11936-Useless: []
11936-Constancy: []
11936-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '34', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_11936 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 11416
11416Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
11416-Stack size: 4 
11416-Equals Mem:<< []>> 
11416-NonEquals Mem: << [<12,7>, <5,7>]>> 
11416-Equals Sto:<< []>> 
11416-NonEquals Sto: << []>> 
11416-Useless: []
11416-Constancy: []
11416-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
{}
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/DOPE_11416_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_11416_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_11416;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;11416;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.15136463101953268;0;1;0;0

Block: 11440
11440Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x2ca7', 'JUMP']>> 
11440-Stack size: 8 
11440-Equals Mem:<< []>> 
11440-NonEquals Mem: << [<11,5>]>> 
11440-Equals Sto:<< []>> 
11440-NonEquals Sto: << []>> 
11440-Useless: []
11440-Constancy: [(2, 32), (3, 0)]
11440-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
{}
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2ca7 JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2ca7 JUMP

Optimized code stored in /tmp/0x00/DOPE_11440_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_11440_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_11440;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;11440;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2ca7 JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2ca7 JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.7053947210079059;0;0;0;0

Block: 4295
4295Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4295-Stack size: 3 
4295-Equals Mem:<< []>> 
4295-NonEquals Mem: << [<6,1>]>> 
4295-Equals Sto:<< []>> 
4295-NonEquals Sto: << []>> 
4295-Useless: []
4295-Constancy: []
4295-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4295_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4295_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4295;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4295;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027678113954607397;1;0;0;0

Block: 1147
1147Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP2', 'AND', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1147-Stack size: 2 
1147-Equals Mem:<< []>> 
1147-NonEquals Mem: << [<12,2>]>> 
1147-Equals Sto:<< []>> 
1147-NonEquals Sto: << []>> 
1147-Useless: []
1147-Constancy: []
1147-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(5)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3e2 JUMP

Optimized code stored in /tmp/0x00/DOPE_1147_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_1147_statistics.csv

Estimated initial gas: 54
Estimated gas optimized: 39

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 36

Initial number of instructions: 17
Final number of instructions: 12

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_1147;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;1147;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x03e2 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3e2 JUMP;54;24;17;39;36;12;15;-12;5;True;False;False;False;0.09627630602335557;2;0;0;0

Block: 4230
4230Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4230-Stack size: 2 
4230-Equals Mem:<< []>> 
4230-NonEquals Mem: << [<6,1>]>> 
4230-Equals Sto:<< []>> 
4230-NonEquals Sto: << []>> 
4230-Useless: []
4230-Constancy: []
4230-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4230_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4230_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4230;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4230;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02731852204306051;1;0;0;0

Block: 4144
4144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4144-Stack size: 5 
4144-Equals Mem:<< []>> 
4144-NonEquals Mem: << [<6,1>]>> 
4144-Equals Sto:<< []>> 
4144-NonEquals Sto: << []>> 
4144-Useless: [6]
4144-Constancy: []
4144-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4144_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4144_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4144;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4144;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027563948999159038;1;0;0;0

Block: 4060
4060Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4060-Stack size: 4 
4060-Equals Mem:<< []>> 
4060-NonEquals Mem: << [<6,1>]>> 
4060-Equals Sto:<< []>> 
4060-NonEquals Sto: << []>> 
4060-Useless: []
4060-Constancy: []
4060-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4060_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4060_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4060;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4060;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02733525400981307;1;0;0;0

Block: 4083
4083Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'SWAP1', 'SWAP2', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4083-Stack size: 4 
4083-Equals Mem:<< []>> 
4083-NonEquals Mem: << [<13,16>]>> 
4083-Equals Sto:<< [<21,33>]>> 
4083-NonEquals Sto: << []>> 
4083-Useless: []
4083-Constancy: []
4083-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>], 'storage_deps_eqs': [<20,32>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('s(5)', 's(6)', 'sstore'), 2)]
Storage dep: [(1, 2)]
Storage dep simplified: [(1, 2)]
Memory order: [(('0', 's(2)', 'mstore'), 2), (('32', '33', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('s(5)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('s(8)', 's(9)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{20: ((('s(5)', 'sload0'), 1), 1), 32: ((('s(5)', 's(6)', 'sstore'), 2), 2)}
(('s(5)', 'sload0'), 1)
sload0
[(('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', 'iszero'), 1), (('s(7)', 'iszero'), 1), (('s(5)', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(11)', 'and'), 2), (('s(8)', 's(9)', 'or'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4083 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4002
4002Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
4002-Stack size: 3 
4002-Equals Mem:<< []>> 
4002-NonEquals Mem: << [<6,1>]>> 
4002-Equals Sto:<< []>> 
4002-NonEquals Sto: << []>> 
4002-Useless: [6]
4002-Constancy: [(0, 0)]
4002-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_4002_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_4002_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4002;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;4002;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027560603979509324;1;0;0;0

Block: 3703
3703Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3703-Stack size: 5 
3703-Equals Mem:<< []>> 
3703-NonEquals Mem: << [<6,1>]>> 
3703-Equals Sto:<< []>> 
3703-NonEquals Sto: << []>> 
3703-Useless: [6]
3703-Constancy: []
3703-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_3703_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3703_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3703;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3703;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.027405605011153966;1;0;0;0

Block: 3737
3737Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x33', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x616e206576657279203130206d696e75746573', 'PUSH1 0x68', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
3737-Stack size: 5 
3737-Equals Mem:<< []>> 
3737-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3737-Equals Sto:<< []>> 
3737-NonEquals Sto: << []>> 
3737-Useless: []
3737-Constancy: []
3737-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('104', '2172765659612481738341636496026460771826558323', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '51', 'mstore'), 2), (('s(10)', '44951118344456592231259581011995386812224832139605867268457959274560054391912', 'mstore'), 2), (('s(12)', '44068923081008755986940236417526554713325010277242960554061263941764978311168', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_3737_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3737_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 99
Estimated size optimized in bytes: 99

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3737;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3737;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616e6e6f7420736574206275796261636b206d6f7265206f6674656e207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x616e206576657279203130206d696e75746573 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;99;33;104;99;33;0;0;0;True;False;False;False;2.126857705996372;2;4;0;0

Block: 3857
3857Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x30', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH16 0x747765656e20302520616e6420313025', 'PUSH1 0x80', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
3857-Stack size: 5 
3857-Equals Mem:<< []>> 
3857-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3857-Equals Sto:<< []>> 
3857-NonEquals Sto: << []>> 
3857-Useless: []
3857-Constancy: []
3857-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('128', '154810387396712532569077265297826721829', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '48', 'mstore'), 2), (('s(10)', '35035607279091741794714035847652857855025626984120364590021748194929308361317', 'mstore'), 2), (('s(12)', '52679245047300761501755883755669256545879678137073643618525455050910963073024', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_3857_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3857_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 96
Estimated size optimized in bytes: 96

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3857;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3857;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d75737420736574206175746f204c50206275726e2070657263656e74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x747765656e20302520616e6420313025 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;96;33;104;96;33;0;0;0;True;False;False;False;2.145052791980561;2;4;0;0

Block: 3588
3588Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3588-Stack size: 2 
3588-Equals Mem:<< []>> 
3588-NonEquals Mem: << [<6,1>]>> 
3588-Equals Sto:<< []>> 
3588-NonEquals Sto: << []>> 
3588-Useless: [6]
3588-Constancy: []
3588-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_3588_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3588_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3588;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3588;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.029196966032031924;1;0;0;0

Block: 1713
1713Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
1713-Stack size: 3 
1713-Equals Mem:<< []>> 
1713-NonEquals Mem: << [<10,14>]>> 
1713-Equals Sto:<< []>> 
1713-NonEquals Sto: << []>> 
1713-Useless: []
1713-Constancy: []
1713-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(2)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(2)', 'sload0'), 1), 1)}
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_1713 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1607
1607Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'SWAP1', 'JUMP']>> 
1607-Stack size: 3 
1607-Equals Mem:<< []>> 
1607-NonEquals Mem: << [<10,13>]>> 
1607-Equals Sto:<< []>> 
1607-NonEquals Sto: << []>> 
1607-Useless: []
1607-Constancy: []
1607-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,12>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{16: ((('s(3)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1), (('255', 's(4)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{16: ((('s(3)', 'sload0'), 1), 1)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(3)', 'sload0'), 1), (('255', 's(4)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_1607 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3516
3516Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x0bdf', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x0dad', 'SWAP1', 'DUP7', 'PUSH2 0x2497', 'JUMP']>> 
3516-Stack size: 4 
3516-Equals Mem:<< [<5,23>, <10,26>]>> 
3516-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
3516-Equals Sto:<< []>> 
3516-NonEquals Sto: << []>> 
3516-Useless: []
3516-Constancy: []
3516-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>]}
{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{28: ((('s(10)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(17)', 'sload0'), 1)
sload0
[(('s(17)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{28: ((('s(10)', 'sload0'), 1), 2)}
(('s(10)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdf SWAP2 DUP6 SWAP1 PUSH2 0x0dad SWAP1 DUP7 PUSH2 0x2497 JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdf SWAP2 DUP6 SWAP1 PUSH2 0x0dad SWAP1 DUP7 PUSH2 0x2497 JUMP

Optimized code stored in /tmp/0x00/DOPE_3516_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3516_statistics.csv

Estimated initial gas: 2275
Estimated gas optimized: 2275

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3516;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3516;2;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdf SWAP2 DUP6 SWAP1 PUSH2 0x0dad SWAP1 DUP7 PUSH2 0x2497 JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x0bdf SWAP2 DUP6 SWAP1 PUSH2 0x0dad SWAP1 DUP7 PUSH2 0x2497 JUMP;2275;53;41;2275;53;41;0;0;0;True;False;False;False;2.1775626019807532;4;2;2100;2100

Block: 1458
1458Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x03e2', 'JUMP']>> 
1458-Stack size: 2 
1458-Equals Mem:<< []>> 
1458-NonEquals Mem: << [<6,3>]>> 
1458-Equals Sto:<< []>> 
1458-NonEquals Sto: << []>> 
1458-Useless: []
1458-Constancy: []
1458-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,5>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '18', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_1458 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6972
6972Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
6972-Stack size: 9 
6972-Equals Mem:<< []>> 
6972-NonEquals Mem: << [<6,1>]>> 
6972-Equals Sto:<< []>> 
6972-NonEquals Sto: << []>> 
6972-Useless: []
6972-Constancy: [(4, 0)]
6972-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2f62 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2f62 JUMP

Optimized code stored in /tmp/0x00/DOPE_6972_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_6972_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6972;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;6972;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2f62 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2f62 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02731463499367237;1;0;0;0

Block: 7010
7010Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
7010-Stack size: 9 
7010-Equals Mem:<< []>> 
7010-NonEquals Mem: << [<6,1>]>> 
7010-Equals Sto:<< []>> 
7010-NonEquals Sto: << []>> 
7010-Useless: []
7010-Constancy: [(4, 0)]
7010-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2fa7 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2fa7 JUMP

Optimized code stored in /tmp/0x00/DOPE_7010_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_7010_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7010;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;7010;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2fa7 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2fa7 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.028618832991924137;1;0;0;0

Block: 7033
7033Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x1bb9', 'JUMPI']>> 
7033-Stack size: 9 
7033-Equals Mem:<< []>> 
7033-NonEquals Mem: << [<11,14>]>> 
7033-Equals Sto:<< []>> 
7033-NonEquals Sto: << []>> 
7033-Useless: []
7033-Constancy: [(4, 0)]
7033-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(15)', 'mstore'), 2), (('32', '19', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7033 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7068
7068Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7068-Stack size: 10 
7068-Equals Mem:<< []>> 
7068-NonEquals Mem: << [<11,14>]>> 
7068-Equals Sto:<< []>> 
7068-NonEquals Sto: << []>> 
7068-Useless: []
7068-Constancy: [(5, 0)]
7068-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '19', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7068 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7102
7102Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x0b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH11 0x109b1858dadb1a5cdd1959', 'PUSH1 0xaa', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7102-Stack size: 9 
7102-Equals Mem:<< []>> 
7102-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
7102-Equals Sto:<< []>> 
7102-NonEquals Sto: << []>> 
7102-Useless: []
7102-Constancy: [(4, 0)]
7102-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('170', '20075229043207357366868313', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '11', 'mstore'), 2), (('s(10)', '30044139639235019157633772865639075122406310005163412590591679401374842355712', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0b PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109b1858dadb1a5cdd1959 PUSH1 0xaa SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0xb PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c6973746564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP

Optimized code stored in /tmp/0x00/DOPE_7102_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_7102_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7102;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;7102;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x0b PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x109b1858dadb1a5cdd1959 PUSH1 0xaa SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0xb PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426c61636b6c6973746564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP;89;53;28;77;97;24;12;-44;4;True;False;False;False;2.101873854000587;2;3;0;0

Block: 9322
9322Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP2', 'SWAP1', 'PUSH2 0x2c98', 'JUMP']>> 
9322-Stack size: 14 
9322-Equals Mem:<< []>> 
9322-NonEquals Mem: << [<6,1>]>> 
9322-Equals Sto:<< []>> 
9322-NonEquals Sto: << []>> 
9322-Useless: []
9322-Constancy: [(1, 0)]
9322-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP2 SWAP1 PUSH2 0x2c98 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x2c98 JUMP

Optimized code stored in /tmp/0x00/DOPE_9322_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_9322_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9322;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;9322;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP2 SWAP1 PUSH2 0x2c98 JUMP;PUSH2 0xc13 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x2c98 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.07213916897308081;1;0;0;0

Block: 7319
7319Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'PUSH2 0x1cd1', 'JUMPI']>> 
7319-Stack size: 9 
7319-Equals Mem:<< []>> 
7319-NonEquals Mem: << [<10,13>]>> 
7319-Equals Sto:<< []>> 
7319-NonEquals Sto: << []>> 
7319-Useless: []
7319-Constancy: [(4, 0)]
7319-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7319 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7350
7350Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
7350-Stack size: 10 
7350-Equals Mem:<< []>> 
7350-NonEquals Mem: << [<11,14>]>> 
7350-Equals Sto:<< []>> 
7350-NonEquals Sto: << []>> 
7350-Useless: []
7350-Constancy: [(5, 0)]
7350-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(6)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7350 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7382
7382Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x16', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297', 'PUSH1 0x51', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7382-Stack size: 9 
7382-Equals Mem:<< []>> 
7382-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
7382-Equals Sto:<< []>> 
7382-NonEquals Sto: << []>> 
7382-Useless: []
7382-Constancy: [(4, 0)]
7382-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('81', '15797649203591553606597696107307749458356587061785239', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '22', 'mstore'), 2), (('s(10)', '38196372022872625555279357441270929534841710934752674889868621273811677872128', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696e67206973206e6f74206163746976652e00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP

Optimized code stored in /tmp/0x00/DOPE_7382_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_7382_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 64
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7382;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;7382;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2a3930b234b7339034b9903737ba1030b1ba34bb3297 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696e67206973206e6f74206163746976652e00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP;89;64;28;77;97;24;12;-33;4;True;False;False;False;2.0956743609858677;2;3;0;0

Block: 7605
7605Instr:<<['ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'NUMBER', 'GT', 'PUSH2 0x1e49', 'JUMPI']>> 
7605-Stack size: 9 
7605-Equals Mem:<< []>> 
7605-NonEquals Mem: << [<4,7>]>> 
7605-Equals Sto:<< []>> 
7605-NonEquals Sto: << []>> 
7605-Useless: []
7605-Constancy: [(4, 0)]
7605-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{11: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(6)', 'mstore'), 2), (('32', '18', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('number', 'number'), 0), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(3)', 's(5)', 'gt'), 2), (('origin', 'origin'), 0)]
{11: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('number', 'number'), 0), (('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('s(3)', 's(5)', 'gt'), 2), (('origin', 'origin'), 0)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7605 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7626
7626Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x49', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH9 0x1030b63637bbb2b217', 'PUSH1 0xb9', 'SHL', 'PUSH1 0x84', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0xa4', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7626-Stack size: 9 
7626-Equals Mem:<< []>> 
7626-NonEquals Mem: << [<33,1>, <6,1>, <11,1>, <16,1>, <21,1>, <26,1>]>> 
7626-Equals Sto:<< []>> 
7626-NonEquals Sto: << []>> 
7626-Useless: []
7626-Constancy: [(4, 0)]
7626-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,33>, <1,6>, <1,11>, <1,16>, <1,21>, <1,26>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,33>, <1,6>, <1,11>, <1,16>, <1,21>, <1,26>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('185', '298657957751934857751', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '73', 'mstore'), 2), (('s(10)', '43175464300754785199614199185070010317087193698741912792988322009422349034092', 'mstore'), 2), (('s(12)', '45860600759840658865901563111326240759021334497413467019838167414095995691883', 'mstore'), 2), (('s(14)', '14646143631966502206444807779315018622133502848875313473344638166890690117632', 'mstore'), 2)]
Memory dep: [(5, 6), (4, 6), (3, 6), (2, 6), (1, 6), (4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(5, 6), (4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('164', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2), (('s(3)', '132', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('164', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2), (('s(3)', '132', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_7626_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_7626_statistics.csv

Estimated initial gas: 119
Estimated gas optimized: 119

Estimated initial size in bytes: 127
Estimated size optimized in bytes: 127

Initial number of instructions: 38
Final number of instructions: 38

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7626;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;7626;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5f7472616e736665723a3a205472616e736665722044656c617920656e61626c PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65642e20204f6e6c79206f6e652070757263686173652070657220626c6f636b PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x1030b63637bbb2b217 PUSH1 0xb9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xa4 ADD PUSH2 0x0c13 JUMP;119;127;38;119;127;38;0;0;0;True;False;False;False;2.1830969320144504;2;5;0;0

Block: 7753
7753Instr:<<['JUMPDEST', 'ORIGIN', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'NUMBER', 'SWAP1', 'SSTORE']>> 
7753-Stack size: 9 
7753-Equals Mem:<< []>> 
7753-NonEquals Mem: << [<5,8>]>> 
7753-Equals Sto:<< []>> 
7753-NonEquals Sto: << []>> 
7753-Useless: []
7753-Constancy: [(4, 0)]
7753-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{13: ((('s(1)', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(1)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(0)', 'mstore'), 2), (('32', '18', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
{13: ((('s(1)', 's(2)', 'sstore'), 2), 1)}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7753 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7771
7771Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1e9a', 'JUMPI']>> 
7771-Stack size: 9 
7771-Equals Mem:<< []>> 
7771-NonEquals Mem: << [<11,14>]>> 
7771-Equals Sto:<< []>> 
7771-NonEquals Sto: << []>> 
7771-Useless: []
7771-Constancy: [(4, 0)]
7771-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '34', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7771 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7805
7805Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
7805-Stack size: 10 
7805-Equals Mem:<< []>> 
7805-NonEquals Mem: << [<11,14>]>> 
7805-Equals Sto:<< []>> 
7805-NonEquals Sto: << []>> 
7805-Useless: []
7805-Constancy: [(5, 0)]
7805-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '33', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2), (('s(3)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7805 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7850
7850Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x35', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x59', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7850-Stack size: 9 
7850-Equals Mem:<< []>> 
7850-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
7850-Equals Sto:<< []>> 
7850-NonEquals Sto: << []>> 
7850-Useless: []
7850-Constancy: [(4, 0)]
7850-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('89', '79930067009807935449057770381727092081267899316759', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '53', 'mstore'), 2), (('s(10)', '30060205099364186885976764868343247874266761512867242930847939913275692049696', 'mstore'), 2), (('s(12)', '49474315147102356744140233779948130580741947953326364317684320560628533035008', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_7850_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_7850_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 101
Estimated size optimized in bytes: 101

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7850;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;7850;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x427579207472616e7366657220616d6f756e7420657863656564732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x36b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;101;33;104;101;33;0;0;0;True;False;False;False;2.1448936360538937;2;4;0;0

Block: 7951
7951Instr:<<['JUMPDEST', 'PUSH1 0x0a', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x1f34', 'SWAP1', 'DUP4', 'PUSH2 0x2f38', 'JUMP']>> 
7951-Stack size: 9 
7951-Equals Mem:<< []>> 
7951-NonEquals Mem: << [<13,17>]>> 
7951-Equals Sto:<< []>> 
7951-NonEquals Sto: << [<2,21>]>> 
7951-Useless: []
7951-Constancy: [(4, 0)]
7951-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,20>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('10', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
Storage order: [(('10', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('10', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('s(7)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('10', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
(('10', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('s(7)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7951 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 7995
7995Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
7995-Stack size: 9 
7995-Equals Mem:<< []>> 
7995-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
7995-Equals Sto:<< []>> 
7995-NonEquals Sto: << []>> 
7995-Useless: []
7995-Constancy: [(4, 0)]
7995-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('106', '431412037265356103410419391025242695823595865', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '19', 'mstore'), 2), (('s(10)', '35000302591047163824987253156181141204538582116538717432252051161594839695360', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP

Optimized code stored in /tmp/0x00/DOPE_7995_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_7995_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 61
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_7995;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;7995;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP;89;61;28;77;97;24;12;-36;4;True;False;False;False;2.0968059659935534;2;3;0;0

Block: 8061
8061Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x1fbc', 'JUMPI']>> 
8061-Stack size: 9 
8061-Equals Mem:<< []>> 
8061-NonEquals Mem: << [<11,14>]>> 
8061-Equals Sto:<< []>> 
8061-NonEquals Sto: << []>> 
8061-Useless: []
8061-Constancy: [(4, 0)]
8061-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '34', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8061 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8095
8095Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8095-Stack size: 10 
8095-Equals Mem:<< []>> 
8095-NonEquals Mem: << [<11,14>]>> 
8095-Equals Sto:<< []>> 
8095-NonEquals Sto: << []>> 
8095-Useless: []
8095-Constancy: [(5, 0)]
8095-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '33', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(4)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8095 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8140
8140Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x36', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17', 'PUSH1 0x51', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
8140-Stack size: 9 
8140-Equals Mem:<< []>> 
8140-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
8140-Equals Sto:<< []>> 
8140-NonEquals Sto: << []>> 
8140-Useless: []
8140-Constancy: [(4, 0)]
8140-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('81', '6066240773517186288411350845187622340591967595346455', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '54', 'mstore'), 2), (('s(10)', '37721166289651317253512263202604543959880923497099808926894330830332112431205', 'mstore'), 2), (('s(12)', '14667270198207893008978170914288910866739771317397751615548152378179096412160', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_8140_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_8140_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 102
Estimated size optimized in bytes: 102

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8140;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;8140;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656c6c207472616e7366657220616d6f756e74206578636565647320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1036b0bc2a3930b739b0b1ba34b7b720b6b7bab73a17 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;102;33;104;102;33;0;0;0;True;False;False;False;2.1250382940052077;2;4;0;0

Block: 8242
8242Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'PUSH2 0x20ba', 'JUMPI']>> 
8242-Stack size: 9 
8242-Equals Mem:<< []>> 
8242-NonEquals Mem: << [<11,14>]>> 
8242-Equals Sto:<< []>> 
8242-NonEquals Sto: << []>> 
8242-Useless: []
8242-Constancy: [(4, 0)]
8242-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(5)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(7)', 'mstore'), 2), (('32', '33', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(5)', 'sload0'), 1), 1)}
(('s(5)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(5)', 'sload0'), 1), (('255', 's(6)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8242 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8274
8274Instr:<<['PUSH1 0x0a', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH2 0x2076', 'SWAP1', 'DUP4', 'PUSH2 0x2f38', 'JUMP']>> 
8274-Stack size: 9 
8274-Equals Mem:<< []>> 
8274-NonEquals Mem: << [<12,16>]>> 
8274-Equals Sto:<< []>> 
8274-NonEquals Sto: << [<1,20>]>> 
8274-Useless: []
8274-Constancy: [(4, 0)]
8274-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,16>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,20>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('10', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
Storage order: [(('10', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('10', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('s(7)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('10', 'sload0'), 1), 0), 20: ((('s(7)', 'sload1'), 1), 2)}
(('10', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('s(7)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload1'), 1), (('10', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8274 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8317
8317Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x13', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH19 0x13585e081dd85b1b195d08195e18d959591959', 'PUSH1 0x6a', 'SHL', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
8317-Stack size: 9 
8317-Equals Mem:<< []>> 
8317-NonEquals Mem: << [<23,1>, <16,1>, <11,1>, <6,1>]>> 
8317-Equals Sto:<< []>> 
8317-NonEquals Sto: << []>> 
8317-Useless: []
8317-Constancy: [(4, 0)]
8317-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,23>, <1,16>, <1,11>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('106', '431412037265356103410419391025242695823595865', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '19', 'mstore'), 2), (('s(10)', '35000302591047163824987253156181141204538582116538717432252051161594839695360', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP

Optimized code stored in /tmp/0x00/DOPE_8317_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_8317_statistics.csv

Estimated initial gas: 89
Estimated gas optimized: 77

Estimated initial size in bytes: 61
Estimated size optimized in bytes: 97

Initial number of instructions: 28
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8317;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;8317;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585e081dd85b1b195d08195e18d959591959 PUSH1 0x6a SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4d61782077616c6c657420657863656564656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP;89;61;28;77;97;24;12;-36;4;True;False;False;False;2.093860463995952;2;3;0;0

Block: 8378
8378Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0x09', 'SLOAD', 'DUP2', 'LT', 'DUP1', 'ISZERO', 'SWAP1', 'DUP2', 'SWAP1', 'PUSH2 0x20e5', 'JUMPI']>> 
8378-Stack size: 9 
8378-Equals Mem:<< []>> 
8378-NonEquals Mem: << [<5,9>]>> 
8378-Equals Sto:<< []>> 
8378-NonEquals Sto: << [<13,15>]>> 
8378-Useless: []
8378-Constancy: [(4, 0)]
8378-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<12,14>]}
{12: ((('s(6)', 'sload0'), 1), 1), 14: ((('9', 'sload1'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('9', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(21)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('9', 'sload1'), 1), (('s(7)', 's(8)', 'lt'), 2), (('s(5)', 'iszero'), 1), (('address', 'address'), 0)]
(('9', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('9', 'sload1'), 1), (('s(7)', 's(8)', 'lt'), 2), (('s(5)', 'iszero'), 1), (('address', 'address'), 0)]
{12: ((('s(6)', 'sload0'), 1), 1), 14: ((('9', 'sload1'), 1), 2)}
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('9', 'sload1'), 1), (('s(7)', 's(8)', 'lt'), 2), (('s(5)', 'iszero'), 1), (('address', 'address'), 0)]
(('9', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('9', 'sload1'), 1), (('s(7)', 's(8)', 'lt'), 2), (('s(5)', 'iszero'), 1), (('address', 'address'), 0)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8378 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8450
8450Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8450-Stack size: 12 
8450-Equals Mem:<< []>> 
8450-NonEquals Mem: << [<11,14>]>> 
8450-Equals Sto:<< []>> 
8450-NonEquals Sto: << []>> 
8450-Useless: []
8450-Constancy: [(7, 0)]
8450-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '34', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8450 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8486
8486Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8486-Stack size: 12 
8486-Equals Mem:<< []>> 
8486-NonEquals Mem: << [<11,14>]>> 
8486-Equals Sto:<< []>> 
8486-NonEquals Sto: << []>> 
8486-Useless: []
8486-Constancy: [(7, 0)]
8486-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8486 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8521
8521Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8521-Stack size: 12 
8521-Equals Mem:<< []>> 
8521-NonEquals Mem: << [<11,14>]>> 
8521-Equals Sto:<< []>> 
8521-NonEquals Sto: << []>> 
8521-Useless: []
8521-Constancy: [(7, 0)]
8521-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(5)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8521 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9813
9813Instr:<<['JUMPDEST', 'ADDRESS', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'POP', 'PUSH0', 'PUSH1 0x1f', 'SLOAD', 'PUSH1 0x1d', 'SLOAD', 'PUSH1 0x1e', 'SLOAD', 'PUSH2 0x267a', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
9813-Stack size: 12 
9813-Equals Mem:<< []>> 
9813-NonEquals Mem: << [<5,9>]>> 
9813-Equals Sto:<< []>> 
9813-NonEquals Sto: << [<13,20>, <13,22>, <18,20>, <18,22>, <20,22>, <13,18>]>> 
9813-Useless: []
9813-Constancy: [(7, 0)]
9813-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,8>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<12,19>, <12,21>, <17,19>, <17,21>, <19,21>, <12,17>]}
{12: ((('s(10)', 'sload0'), 1), 1), 17: ((('31', 'sload1'), 1), 2), 19: ((('29', 'sload2'), 1), 3), 21: ((('30', 'sload3'), 1), 4)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('31', 'sload1'), 1), (('29', 'sload2'), 1), (('30', 'sload3'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(10)', 'sload0'), 1)
sload0
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
(('31', 'sload1'), 1)
sload1
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
(('29', 'sload2'), 1)
sload2
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
(('30', 'sload3'), 1)
sload3
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
{12: ((('s(10)', 'sload0'), 1), 1), 17: ((('31', 'sload1'), 1), 2), 19: ((('29', 'sload2'), 1), 3), 21: ((('30', 'sload3'), 1), 4)}
(('s(10)', 'sload0'), 1)
sload0
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
(('31', 'sload1'), 1)
sload1
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
(('29', 'sload2'), 1)
sload2
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
(('30', 'sload3'), 1)
sload3
[(('30', 'sload3'), 1), (('29', 'sload2'), 1), (('31', 'sload1'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('address', 'address'), 0)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9813 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10931
10931Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2ad7', 'SWAP2', 'SWAP1', 'PUSH2 0x3011', 'JUMP']>> 
10931-Stack size: 25 
10931-Equals Mem:<< [<18,6>]>> 
10931-NonEquals Mem: << []>> 
10931-Equals Sto:<< []>> 
10931-NonEquals Sto: << []>> 
10931-Useless: []
10931-Constancy: [(20, 0), (10, 0)]
10931-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_10931 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 12285
12285Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x32', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12285-Stack size: 25 
12285-Equals Mem:<< []>> 
12285-NonEquals Mem: << [<5,8>]>> 
12285-Equals Sto:<< []>> 
12285-NonEquals Sto: << []>> 
12285-Useless: []
12285-Constancy: [(20, 0), (10, 0)]
12285-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '50', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_12285 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 11061
11061Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH4 0x791ac947', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'AND', 'SWAP1', 'PUSH4 0x791ac947', 'SWAP1', 'PUSH2 0x2b89', 'SWAP1', 'DUP6', 'SWAP1', 'PUSH0', 'SWAP1', 'DUP7', 'SWAP1', 'ADDRESS', 'SWAP1', 'TIMESTAMP', 'SWAP1', 'PUSH1 0x04', 'ADD', 'PUSH2 0x302c', 'JUMP']>> 
11061-Stack size: 21 
11061-Equals Mem:<< []>> 
11061-NonEquals Mem: << [<7,2>]>> 
11061-Equals Sto:<< []>> 
11061-NonEquals Sto: << []>> 
11061-Useless: []
11061-Constancy: [(16, 0), (6, 0)]
11061-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('0', '1461501637330902918203684832716283019655932542975', 'and')
[RULE]: Evaluate expression ('224', '2031798599', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(13)', '54777181867431389256758088925318348688193376272078599187764269278199109648384', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(13)', '+'), 2), (('timestamp0', 'timestamp0'), 0), (('address', 'address'), 0)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2b89 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x302c JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2b89 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x302c JUMP

Optimized code stored in /tmp/0x00/DOPE_11061_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_11061_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_11061;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;11061;2;True;False;False;JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2b89 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x302c JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x791ac947 PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH4 0x791ac947 SWAP1 PUSH2 0x2b89 SWAP1 DUP6 SWAP1 PUSH0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x04 ADD PUSH2 0x302c JUMP;102;53;34;102;53;34;0;0;0;True;False;False;False;2.140042203012854;4;0;0;0

Block: 12332
12332Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0xa0', 'DUP3', 'ADD', 'DUP8', 'DUP4', 'MSTORE', 'PUSH1 0x20', 'DUP8', 'DUP2', 'DUP6', 'ADD', 'MSTORE', 'PUSH1 0xa0', 'PUSH1 0x40', 'DUP6', 'ADD', 'MSTORE', 'DUP2', 'DUP8', 'MLOAD', 'DUP1', 'DUP5', 'MSTORE', 'PUSH1 0xc0', 'DUP7', 'ADD', 'SWAP2', 'POP', 'DUP3', 'DUP10', 'ADD', 'SWAP4', 'POP', 'PUSH0']>> 
12332-Stack size: 30 
12332-Equals Mem:<< []>> 
12332-NonEquals Mem: << [<13,21>, <7,21>, <24,21>, <18,21>]>> 
12332-Equals Sto:<< []>> 
12332-NonEquals Sto: << []>> 
12332-Useless: []
12332-Constancy: [(25, 0), (15, 0), (4, 0)]
12332-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,20>, <6,20>, <20,23>, <17,20>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(5)', 's(0)', 'mstore'), 2), (('s(15)', 's(1)', 'mstore'), 2), (('s(16)', '160', 'mstore'), 2), (('s(2)', 'mload0'), 1), (('s(17)', 's(12)', 'mstore'), 2)]
Memory dep: [(2, 4), (1, 4), (0, 4), (1, 2), (0, 2), (0, 1)]
Memory dep simplified: [(2, 4), (1, 2), (0, 1)]
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', 'mload0'), 1), (('s(5)', '192', '+'), 2), (('s(2)', '32', '+'), 2), (('s(5)', '32', '+'), 2), (('s(5)', '64', '+'), 2), (('s(5)', '160', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0

Optimized code stored in /tmp/0x00/DOPE_12332_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_12332_statistics.csv

Estimated initial gas: 102
Estimated gas optimized: 102

Estimated initial size in bytes: 41
Estimated size optimized in bytes: 41

Initial number of instructions: 36
Final number of instructions: 36

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_12332;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;12332;2;True;False;False;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;JUMPDEST PUSH0 PUSH1 0xa0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xa0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xc0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH0;102;41;36;102;41;36;0;0;0;True;False;False;False;2.266919797984883;0;3;0;0

Block: 12382
12382Instr:<<['DUP5', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'DUP4', 'MSTORE', 'SWAP4', 'DUP4', 'ADD', 'SWAP4', 'SWAP2', 'DUP4', 'ADD', 'SWAP2', 'PUSH1 0x01', 'ADD', 'PUSH2 0x3055', 'JUMP']>> 
12382-Stack size: 36 
12382-Equals Mem:<< []>> 
12382-NonEquals Mem: << [<9,1>]>> 
12382-Equals Sto:<< []>> 
12382-NonEquals Sto: << []>> 
12382-Useless: []
12382-Constancy: [(21, 0), (31, 0), (10, 0), (5, 0), (3, 32)]
12382-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,9>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(0)', 'mload0'), 1), (('s(2)', 's(9)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('s(0)', 'mload0'), 1)
mload0
[(('1', 's(4)', '+'), 2), (('s(1)', 's(2)', '+'), 2), (('s(1)', 's(0)', '+'), 2), (('s(0)', 'mload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(12)', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x3055 JUMP

Optimized sequence (basic block per line):
PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x3055 JUMP

Optimized code stored in /tmp/0x00/DOPE_12382_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_12382_statistics.csv

Estimated initial gas: 71
Estimated gas optimized: 53

Estimated initial size in bytes: 28
Estimated size optimized in bytes: 39

Initial number of instructions: 22
Final number of instructions: 16

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_12382;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;12382;2;True;True;False;DUP5 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x01 ADD PUSH2 0x3055 JUMP;PUSH1 0x1 ADD DUP4 DUP6 ADD SWAP5 MLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP4 DUP6 ADD SWAP4 MSTORE PUSH2 0x3055 JUMP;71;28;22;53;39;16;18;-11;6;True;False;False;False;2.092109625984449;2;0;0;0

Block: 11372
11372Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x2c91', 'SWAP2', 'SWAP1', 'PUSH2 0x309b', 'JUMP']>> 
11372-Stack size: 30 
11372-Equals Mem:<< [<19,7>]>> 
11372-NonEquals Mem: << []>> 
11372-Equals Sto:<< []>> 
11372-NonEquals Sto: << []>> 
11372-Useless: []
11372-Constancy: [(25, 0)]
11372-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<6,18>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(9)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(5)', 's(8)', '+'), 2), (('s(8)', '31', '+'), 2), (('s(12)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(5)', 's(11)', '+'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_11372 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8616
8616Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP5', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8616-Stack size: 12 
8616-Equals Mem:<< []>> 
8616-NonEquals Mem: << [<11,14>]>> 
8616-Equals Sto:<< []>> 
8616-NonEquals Sto: << []>> 
8616-Useless: []
8616-Constancy: [(7, 0)]
8616-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(6)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(8)', 'mstore'), 2), (('32', '34', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(6)', 'sload0'), 1), 1)}
(('s(6)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(6)', 'sload0'), 1), (('255', 's(7)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8616 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8692
8692Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'ISZERO']>> 
8692-Stack size: 12 
8692-Equals Mem:<< []>> 
8692-NonEquals Mem: << [<11,14>]>> 
8692-Equals Sto:<< []>> 
8692-NonEquals Sto: << []>> 
8692-Useless: []
8692-Constancy: [(7, 0)]
8692-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(10)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(6)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8692 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10473
10473Instr:<<['JUMPDEST', 'POP', 'POP', 'POP', 'POP', 'PUSH1 0x40', 'MLOAD', 'RETURNDATASIZE', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x1f', 'DUP3', 'ADD', 'AND', 'DUP3', 'ADD', 'DUP1', 'PUSH1 0x40', 'MSTORE', 'POP', 'DUP2', 'ADD', 'SWAP1', 'PUSH2 0x290d', 'SWAP2', 'SWAP1', 'PUSH2 0x2f4b', 'JUMP']>> 
10473-Stack size: 18 
10473-Equals Mem:<< [<18,6>]>> 
10473-NonEquals Mem: << []>> 
10473-Equals Sto:<< []>> 
10473-NonEquals Sto: << []>> 
10473-Useless: []
10473-Constancy: [(4, 0), (5, 0), (13, 0)]
10473-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [<5,17>], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(8)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('returndatasize', 'returndatasize'), 0), (('s(4)', 's(7)', '+'), 2), (('s(7)', '31', '+'), 2), (('s(11)', 115792089237316195423570985008687907853269984665640564039457584007913129639904, 'and'), 2), (('s(4)', 's(10)', '+'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_10473 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10592
10592Instr:<<['JUMPDEST', 'PUSH0', 'PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000', 'SWAP1', 'POP', 'DUP1', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH4 0xfff6cae9', 'PUSH1 0x40', 'MLOAD', 'DUP2', 'PUSH4 0xffffffff', 'AND', 'PUSH1 0xe0', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH0', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'DUP4', 'SUB', 'DUP2', 'PUSH0', 'DUP8', 'DUP1', 'EXTCODESIZE', 'ISZERO', 'DUP1', 'ISZERO', 'PUSH2 0x29bc', 'JUMPI']>> 
10592-Stack size: 15 
10592-Equals Mem:<< [<14,26>]>> 
10592-NonEquals Mem: << [<21,14>, <21,26>]>> 
10592-Equals Sto:<< []>> 
10592-NonEquals Sto: << []>> 
10592-Useless: []
10592-Constancy: [(10, 0), (2, 0)]
10592-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>]}
{'memory_deps_eqs': [<13,25>], 'memory_deps_noneqs': [<13,20>, <20,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542975', '0', 'and')
[RULE]: Evaluate expression ('4294967295', '4294363881', 'and')
[RULE]: Evaluate expression ('224', '4294363881', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(30)', '115775821201098036720259286011779173902827051908138836719913898872934598967296', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('0', 'extcodesize'), 1), (('s(16)', 'iszero'), 1), (('s(17)', 'iszero'), 1), (('64', 'mload0'), 1), (('4', 's(30)', '+'), 2), (('s(29)', 's(30)', '-'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('0', 'extcodesize'), 1), (('s(16)', 'iszero'), 1), (('s(17)', 'iszero'), 1), (('64', 'mload1'), 1), (('64', 'mload0'), 1), (('4', 's(30)', '+'), 2), (('s(29)', 's(27)', '-'), 2)]
(('64', 'mload1'), 1)
mload1
[(('0', 'extcodesize'), 1), (('s(16)', 'iszero'), 1), (('s(17)', 'iszero'), 1), (('64', 'mload1'), 1), (('64', 'mload0'), 1), (('4', 's(30)', '+'), 2), (('s(29)', 's(27)', '-'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29bc JUMPI

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29bc JUMPI

Optimized code stored in /tmp/0x00/DOPE_10592_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_10592_statistics.csv

Estimated initial gas: 2718
Estimated gas optimized: 2718

Estimated initial size in bytes: 58
Estimated size optimized in bytes: 58

Initial number of instructions: 40
Final number of instructions: 40

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_10592;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;10592;2;True;False;False;JUMPDEST PUSH0 PUSH32 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29bc JUMPI;JUMPDEST PUSH0 PUSH1 0x0000000000000000000000000000000000000000000000000000000000000000 SWAP1 POP DUP1 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB AND PUSH4 0xfff6cae9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xffffffff AND PUSH1 0xe0 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29bc JUMPI;2718;58;40;2718;58;40;0;0;0;True;False;False;False;2.198327666032128;5;0;0;0

Block: 8735
8735Instr:<<['JUMPDEST', 'PUSH1 0x05', 'SLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SWAP1', 'SWAP3', 'DIV', 'DUP3', 'AND', 'ISZERO', 'SWAP2', 'AND', 'DUP1', 'PUSH2 0x2269', 'JUMPI']>> 
8735-Stack size: 11 
8735-Equals Mem:<< []>> 
8735-NonEquals Mem: << [<13,16>]>> 
8735-Equals Sto:<< []>> 
8735-NonEquals Sto: << [<2,20>]>> 
8735-Useless: []
8735-Constancy: [(6, 0)]
8735-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<12,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,19>]}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('5', 'sload0'), 1), 0), 19: ((('s(10)', 'sload1'), 1), 2)}
Storage order: [(('5', 'sload0'), 1), (('0', '64', 'keccak2560'), 2), (('s(10)', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(20)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('5', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload1'), 1), (('255', 's(11)', 'and'), 2), (('5', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542976', '/'), 2), (('255', 's(16)', 'and'), 2), (('s(15)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('s(10)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload1'), 1), (('255', 's(11)', 'and'), 2), (('5', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542976', '/'), 2), (('255', 's(16)', 'and'), 2), (('s(15)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{1: ((('5', 'sload0'), 1), 0), 19: ((('s(10)', 'sload1'), 1), 2)}
(('5', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload1'), 1), (('255', 's(11)', 'and'), 2), (('5', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542976', '/'), 2), (('255', 's(16)', 'and'), 2), (('s(15)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('s(10)', 'sload1'), 1)
sload1
[(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload1'), 1), (('255', 's(11)', 'and'), 2), (('5', 'sload0'), 1), (('s(17)', '1461501637330902918203684832716283019655932542976', '/'), 2), (('255', 's(16)', 'and'), 2), (('s(15)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8735 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8782
8782Instr:<<['POP', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND']>> 
8782-Stack size: 13 
8782-Equals Mem:<< []>> 
8782-NonEquals Mem: << [<11,14>]>> 
8782-Equals Sto:<< []>> 
8782-NonEquals Sto: << []>> 
8782-Useless: []
8782-Constancy: [(8, 0)]
8782-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,14>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(7)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '32', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(7)', 'sload0'), 1), 1)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(7)', 'sload0'), 1), (('255', 's(8)', 'and'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8782 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8825
8825Instr:<<['PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP7', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x22a0', 'JUMPI']>> 
8825-Stack size: 13 
8825-Equals Mem:<< []>> 
8825-NonEquals Mem: << [<10,13>]>> 
8825-Equals Sto:<< []>> 
8825-NonEquals Sto: << []>> 
8825-Useless: []
8825-Constancy: [(8, 0), (0, 0)]
8825-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(10)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(16)', 'mstore'), 2), (('32', '34', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(10)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('255', 's(11)', 'and'), 2), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(10)', 'sload0'), 1), 1)}
(('s(10)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(10)', 'sload0'), 1), (('255', 's(11)', 'and'), 2), (('s(9)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8825 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9045
9045Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x20', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP1', 'ISZERO', 'PUSH2 0x237d', 'JUMPI']>> 
9045-Stack size: 13 
9045-Equals Mem:<< []>> 
9045-NonEquals Mem: << [<11,14>]>> 
9045-Equals Sto:<< []>> 
9045-NonEquals Sto: << []>> 
9045-Useless: []
9045-Constancy: [(8, 0), (0, 0)]
9045-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<10,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(11)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(11)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(17)', 'mstore'), 2), (('32', '34', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(11)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(11)', 'sload0'), 1), (('255', 's(12)', 'and'), 2), (('s(10)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(11)', 'sload0'), 1), 1)}
(('s(11)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(11)', 'sload0'), 1), (('255', 's(12)', 'and'), 2), (('s(10)', 'iszero'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9045 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9566
9566Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2f62', 'JUMP']>> 
9566-Stack size: 10 
9566-Equals Mem:<< []>> 
9566-NonEquals Mem: << [<6,1>]>> 
9566-Equals Sto:<< []>> 
9566-NonEquals Sto: << []>> 
9566-Useless: []
9566-Constancy: []
9566-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2f62 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2f62 JUMP

Optimized code stored in /tmp/0x00/DOPE_9566_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_9566_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9566;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;9566;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2f62 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2f62 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.02688094595214352;1;0;0;0

Block: 9604
9604Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2fa7', 'JUMP']>> 
9604-Stack size: 10 
9604-Equals Mem:<< []>> 
9604-NonEquals Mem: << [<6,1>]>> 
9604-Equals Sto:<< []>> 
9604-NonEquals Sto: << []>> 
9604-Useless: []
9604-Constancy: []
9604-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2fa7 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2fa7 JUMP

Optimized code stored in /tmp/0x00/DOPE_9604_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_9604_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9604;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;9604;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2fa7 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2fa7 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026506087044253945;1;0;0;0

Block: 9687
9687Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x2605', 'SWAP1', 'DUP3', 'PUSH2 0x2497', 'JUMP']>> 
9687-Stack size: 11 
9687-Equals Mem:<< [<12,29>]>> 
9687-NonEquals Mem: << [<12,16>, <16,29>]>> 
9687-Equals Sto:<< [<24,31>]>> 
9687-NonEquals Sto: << []>> 
9687-Useless: []
9687-Constancy: []
9687-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>]}
{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>], 'storage_deps_eqs': [<23,30>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(12)', 's(3)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(7)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2605 SWAP1 DUP3 PUSH2 0x2497 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x2605 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x2497 JUMP

Optimized code stored in /tmp/0x00/DOPE_9687_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_9687_statistics.csv

Estimated initial gas: 5261
Estimated gas optimized: 5122

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 60

Initial number of instructions: 37
Final number of instructions: 32

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9687;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;9687;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2605 SWAP1 DUP3 PUSH2 0x2497 JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x2605 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x2497 JUMP;5261;46;37;5122;60;32;139;-14;5;True;True;False;False;2.153571638977155;4;2;5100;5000

Block: 9390
9390Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
9390-Stack size: 13 
9390-Equals Mem:<< []>> 
9390-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
9390-Equals Sto:<< []>> 
9390-NonEquals Sto: << []>> 
9390-Useless: []
9390-Constancy: [(1, 0)]
9390-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP

Optimized code stored in /tmp/0x00/DOPE_9390_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_9390_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9390;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;9390;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x0c13 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0xc13 JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.0938733509974554;1;3;0;0

Block: 9733
9733Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x1b20', 'JUMP']>> 
9733-Stack size: 11 
9733-Equals Mem:<< []>> 
9733-NonEquals Mem: << [<12,26>, <12,29>, <16,26>, <16,29>, <21,26>, <29,21>, <29,26>, <12,16>]>> 
9733-Equals Sto:<< []>> 
9733-NonEquals Sto: << []>> 
9733-Useless: []
9733-Constancy: []
9733-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(19)', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(9)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('s(9)', '32', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('s(9)', '32', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1b20 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1b20 JUMP

Optimized code stored in /tmp/0x00/DOPE_9733_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_9733_statistics.csv

Estimated initial gas: 5149
Estimated gas optimized: 5149

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 80

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9733;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;9733;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1b20 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x1b20 JUMP;5149;80;41;5149;80;41;0;0;0;True;False;False;False;2.2364487560116686;2;2;5000;5000

Block: 3211
3211Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3211-Stack size: 3 
3211-Equals Mem:<< []>> 
3211-NonEquals Mem: << [<6,1>]>> 
3211-Equals Sto:<< []>> 
3211-NonEquals Sto: << []>> 
3211-Useless: []
3211-Constancy: []
3211-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_3211_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3211_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3211;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3211;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.026725177944172174;1;0;0;0

Block: 12064
12064Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x12', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12064-Stack size: 7 
12064-Equals Mem:<< []>> 
12064-NonEquals Mem: << [<4,7>]>> 
12064-Equals Sto:<< []>> 
12064-NonEquals Sto: << []>> 
12064-Useless: []
12064-Constancy: [(0, 0)]
12064-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_12064 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3294
3294Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x2f', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH15 0x6c6f776572207468616e20302e3125', 'PUSH1 0x88', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x0c13', 'JUMP']>> 
3294-Stack size: 3 
3294-Equals Mem:<< []>> 
3294-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
3294-Equals Sto:<< []>> 
3294-NonEquals Sto: << []>> 
3294-Useless: []
3294-Constancy: []
3294-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('136', '563028867735062715217623363464605989', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '47', 'mstore'), 2), (('s(10)', '30477107189792067803313207901871713011254496831930579880008427957178193572896', 'mstore'), 2), (('s(12)', '49046731713972004410902863804729980687630983203632429828319556206150658555904', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP

Optimized code stored in /tmp/0x00/DOPE_3294_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3294_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 95
Estimated size optimized in bytes: 95

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3294;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3294;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x2f PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616e6e6f7420736574206d61785472616e73616374696f6e416d6f756e7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6c6f776572207468616e20302e3125 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x0c13 JUMP;104;95;33;104;95;33;0;0;0;True;False;False;False;2.1203684069914743;2;4;0;0

Block: 12014
12014Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
12014-Stack size: 8 
12014-Equals Mem:<< []>> 
12014-NonEquals Mem: << [<5,8>]>> 
12014-Equals Sto:<< []>> 
12014-NonEquals Sto: << []>> 
12014-Useless: []
12014-Constancy: []
12014-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_12014 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3068
3068Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x0c13', 'SWAP1', 'PUSH2 0x2eb9', 'JUMP']>> 
3068-Stack size: 3 
3068-Equals Mem:<< []>> 
3068-NonEquals Mem: << [<6,1>]>> 
3068-Equals Sto:<< []>> 
3068-NonEquals Sto: << []>> 
3068-Useless: []
3068-Constancy: []
3068-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(4)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(4)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP

Optimized sequence (basic block per line):
PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP

Optimized code stored in /tmp/0x00/DOPE_3068_optimized.txt
Optimality results stored in /tmp/0x00/DOPE_3068_statistics.csv

Estimated initial gas: 44
Estimated gas optimized: 38

Estimated initial size in bytes: 23
Estimated size optimized in bytes: 50

Initial number of instructions: 13
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3068;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;DOPE;3068;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x0c13 SWAP1 PUSH2 0x2eb9 JUMP;PUSH2 0xc13 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x4 PUSH1 0x40 MLOAD ADD PUSH2 0x2eb9 JUMP;44;23;13;38;50;11;6;-27;2;True;False;False;False;0.0268286700011231;1;0;0;0

Block: 1076
1076Instr:<<['JUMPDEST', 'PUSH1 0x21', 'PUSH1 0x20', 'MSTORE', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'PUSH1 0xff', 'AND', 'DUP2', 'JUMP']>> 
1076-Stack size: 3 
1076-Equals Mem:<< []>> 
1076-NonEquals Mem: << [<3,7>]>> 
1076-Equals Sto:<< []>> 
1076-NonEquals Sto: << []>> 
1076-Useless: []
1076-Constancy: []
1076-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<2,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{10: ((('s(4)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('32', '33', 'mstore'), 2), (('0', 's(1)', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
{10: ((('s(4)', 'sload0'), 1), 1)}
(('s(4)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(4)', 'sload0'), 1), (('255', 's(5)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_1076 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 994
994Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
994-Stack size: 2 
994-Equals Mem:<< []>> 
994-NonEquals Mem: << []>> 
994-Equals Sto:<< []>> 
994-NonEquals Sto: << []>> 
994-Useless: []
994-Constancy: []
994-ContextAliasing: []

Block: 3091
3091Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
3091-Stack size: 3 
3091-Equals Mem:<< []>> 
3091-NonEquals Mem: << []>> 
3091-Equals Sto:<< []>> 
3091-NonEquals Sto: << []>> 
3091-Useless: []
3091-Constancy: []
3091-ContextAliasing: []

Block: 12461
12461Instr:<<['JUMPDEST', 'DUP4', 'MLOAD', 'SWAP3', 'POP', 'PUSH1 0x20', 'DUP5', 'ADD', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x40', 'DUP5', 'ADD', 'MLOAD', 'SWAP1', 'POP', 'SWAP3', 'POP', 'SWAP3', 'POP', 'SWAP3', 'JUMP']>> 
12461-Stack size: 31 
12461-Equals Mem:<< []>> 
12461-NonEquals Mem: << [<2,14>, <2,8>, <8,14>]>> 
12461-Equals Sto:<< []>> 
12461-NonEquals Sto: << []>> 
12461-Useless: []
12461-Constancy: [(1, 0), (26, 0), (2, 0), (0, 0)]
12461-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,13>, <1,7>, <7,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,13>, <1,7>, <7,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(2)', 'mload0'), 1), (('s(8)', 'mload1'), 1), (('s(6)', 'mload2'), 1)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
{}
(('s(2)', 'mload0'), 1)
mload0
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(8)', 'mload1'), 1)
mload1
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
(('s(6)', 'mload2'), 1)
mload2
[(('s(2)', '64', '+'), 2), (('s(6)', 'mload2'), 1), (('s(2)', '32', '+'), 2), (('s(8)', 'mload1'), 1), (('s(2)', 'mload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_12461 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 3953
3953Instr:<<['JUMPDEST', 'PUSH1 0x0d', 'SWAP3', 'SWAP1', 'SWAP3', 'SSTORE', 'PUSH1 0x0b', 'SSTORE', 'PUSH1 0x0c', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP2', 'ISZERO', 'ISZERO', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
3953-Stack size: 5 
3953-Equals Mem:<< []>> 
3953-NonEquals Mem: << []>> 
3953-Equals Sto:<< [<10,22>]>> 
3953-NonEquals Sto: << [<5,7>, <5,10>, <5,22>, <7,10>, <7,22>]>> 
3953-Useless: []
3953-Constancy: []
3953-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<9,21>], 'storage_deps_noneqs': [<4,6>, <4,9>, <4,21>, <6,9>, <6,21>]}
{4: ((('13', 's(0)', 'sstore'), 2), 0), 6: ((('11', 's(1)', 'sstore'), 2), 1), 9: ((('12', 'sload0'), 1), 2), 21: ((('12', 's(3)', 'sstore'), 2), 3)}
Storage order: [(('13', 's(0)', 'sstore'), 2), (('11', 's(1)', 'sstore'), 2), (('12', 'sload0'), 1), (('12', 's(3)', 'sstore'), 2)]
Storage dep: [(2, 3)]
Storage dep simplified: [(2, 3)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('12', 'sload0'), 1)
sload0
[(('s(2)', 'iszero'), 1), (('s(4)', 'iszero'), 1), (('12', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(7)', 'and'), 2), (('s(5)', 's(6)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{4: ((('13', 's(0)', 'sstore'), 2), 0), 6: ((('11', 's(1)', 'sstore'), 2), 1), 9: ((('12', 'sload0'), 1), 2), 21: ((('12', 's(3)', 'sstore'), 2), 3)}
(('12', 'sload0'), 1)
sload0
[(('s(2)', 'iszero'), 1), (('s(4)', 'iszero'), 1), (('12', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(7)', 'and'), 2), (('s(5)', 's(6)', 'or'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_3953 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4025
4025Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
4025-Stack size: 3 
4025-Equals Mem:<< []>> 
4025-NonEquals Mem: << []>> 
4025-Equals Sto:<< [<4,9>]>> 
4025-NonEquals Sto: << []>> 
4025-Useless: []
4025-Constancy: [(0, 0)]
4025-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,8>], 'storage_deps_noneqs': []}
{2: ((('17', 'sload0'), 1), 0), 8: ((('17', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('17', 'sload0'), 1), (('17', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('17', 'sload0'), 1)
sload0
[(('17', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(3)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('17', 'sload0'), 1), 0), 8: ((('17', 's(2)', 'sstore'), 2), 1)}
(('17', 'sload0'), 1)
sload0
[(('17', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(3)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4025 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4167
4167Instr:<<['JUMPDEST', 'PUSH1 0x16', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x17', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x18', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x1061', 'DUP4', 'DUP6', 'PUSH2 0x2f38', 'JUMP']>> 
4167-Stack size: 5 
4167-Equals Mem:<< []>> 
4167-NonEquals Mem: << []>> 
4167-Equals Sto:<< []>> 
4167-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
4167-Useless: []
4167-Constancy: []
4167-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,7>, <3,11>, <7,11>]}
{3: ((('22', 's(0)', 'sstore'), 2), 0), 7: ((('23', 's(1)', 'sstore'), 2), 1), 11: ((('24', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('22', 's(0)', 'sstore'), 2), (('23', 's(1)', 'sstore'), 2), (('24', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('22', 's(0)', 'sstore'), 2), 0), 7: ((('23', 's(1)', 'sstore'), 2), 1), 11: ((('24', 's(2)', 'sstore'), 2), 2)}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4167 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4253
4253Instr:<<['JUMPDEST', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'PUSH3 0xffff00', 'NOT', 'AND', 'PUSH3 0x010100', 'OR', 'SWAP1', 'SSTORE', 'TIMESTAMP', 'PUSH1 0x0e', 'SSTORE', 'JUMP']>> 
4253-Stack size: 2 
4253-Equals Mem:<< []>> 
4253-NonEquals Mem: << []>> 
4253-Equals Sto:<< [<3,10>]>> 
4253-NonEquals Sto: << [<3,13>, <10,13>]>> 
4253-Useless: []
4253-Constancy: []
4253-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,9>], 'storage_deps_noneqs': [<2,12>, <9,12>]}
{2: ((('17', 'sload0'), 1), 0), 9: ((('17', 's(0)', 'sstore'), 2), 1), 12: ((('14', 's(3)', 'sstore'), 2), 2)}
Storage order: [(('17', 'sload0'), 1), (('17', 's(0)', 'sstore'), 2), (('14', 's(3)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('17', 'sload0'), 1)
sload0
[(('17', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913112862975, 's(2)', 'and'), 2), (('65792', 's(1)', 'or'), 2), (('timestamp0', 'timestamp0'), 0)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('17', 'sload0'), 1), 0), 9: ((('17', 's(0)', 'sstore'), 2), 1), 12: ((('14', 's(3)', 'sstore'), 2), 2)}
(('17', 'sload0'), 1)
sload0
[(('17', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913112862975, 's(2)', 'and'), 2), (('65792', 's(1)', 'or'), 2), (('timestamp0', 'timestamp0'), 0)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4253 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4318
4318Instr:<<['JUMPDEST', 'PUSH1 0x11', 'DUP1', 'SLOAD', 'SWAP2', 'ISZERO', 'ISZERO', 'PUSH3 0x010000', 'MUL', 'PUSH3 0xff0000', 'NOT', 'SWAP1', 'SWAP3', 'AND', 'SWAP2', 'SWAP1', 'SWAP2', 'OR', 'SWAP1', 'SSTORE', 'JUMP']>> 
4318-Stack size: 3 
4318-Equals Mem:<< []>> 
4318-NonEquals Mem: << []>> 
4318-Equals Sto:<< [<3,19>]>> 
4318-NonEquals Sto: << []>> 
4318-Useless: []
4318-Constancy: []
4318-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,18>], 'storage_deps_noneqs': []}
{2: ((('17', 'sload0'), 1), 0), 18: ((('17', 's(1)', 'sstore'), 2), 1)}
Storage order: [(('17', 'sload0'), 1), (('17', 's(1)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('17', 'sload0'), 1)
sload0
[(('17', 'sload0'), 1), (('s(3)', 115792089237316195423570985008687907853269984665640564039457584007913112928255, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1), (('65536', 's(6)', '*'), 2), (('s(2)', 's(4)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_d644a06ed6434ecfa3235b266ad8fc5b/jsons/isolated_block_0_0_input.json --- (7, 5)
{2: ((('17', 'sload0'), 1), 0), 18: ((('17', 's(1)', 'sstore'), 2), 1)}
(('17', 'sload0'), 1)
sload0
[(('17', 'sload0'), 1), (('s(3)', 115792089237316195423570985008687907853269984665640564039457584007913112928255, 'and'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1), (('65536', 's(6)', '*'), 2), (('s(2)', 's(4)', 'or'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4318 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 4983
4983Instr:<<['JUMPDEST', 'PUSH1 0x1a', 'DUP4', 'SWAP1', 'SSTORE', 'PUSH1 0x1b', 'DUP3', 'SWAP1', 'SSTORE', 'PUSH1 0x1c', 'DUP2', 'SWAP1', 'SSTORE', 'DUP1', 'PUSH2 0x1391', 'DUP4', 'DUP6', 'PUSH2 0x2f38', 'JUMP']>> 
4983-Stack size: 5 
4983-Equals Mem:<< []>> 
4983-NonEquals Mem: << []>> 
4983-Equals Sto:<< []>> 
4983-NonEquals Sto: << [<4,8>, <4,12>, <8,12>]>> 
4983-Useless: []
4983-Constancy: []
4983-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,7>, <3,11>, <7,11>]}
{3: ((('26', 's(0)', 'sstore'), 2), 0), 7: ((('27', 's(1)', 'sstore'), 2), 1), 11: ((('28', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('26', 's(0)', 'sstore'), 2), (('27', 's(1)', 'sstore'), 2), (('28', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
{3: ((('26', 's(0)', 'sstore'), 2), 0), 7: ((('27', 's(1)', 'sstore'), 2), 1), 11: ((('28', 's(2)', 'sstore'), 2), 2)}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_4983 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 5622
5622Instr:<<['JUMPDEST', 'POP', 'PUSH1 0x14', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'NOT', 'AND', 'SWAP1', 'SSTORE', 'PUSH1 0x01', 'SWAP1', 'JUMP']>> 
5622-Stack size: 3 
5622-Equals Mem:<< []>> 
5622-NonEquals Mem: << []>> 
5622-Equals Sto:<< [<4,9>]>> 
5622-NonEquals Sto: << []>> 
5622-Useless: []
5622-Constancy: [(0, 0)]
5622-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<3,8>], 'storage_deps_noneqs': []}
{2: ((('20', 'sload0'), 1), 0), 8: ((('20', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('20', 'sload0'), 1), (('20', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('20', 'sload0'), 1)
sload0
[(('20', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(3)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('20', 'sload0'), 1), 0), 8: ((('20', 's(2)', 'sstore'), 2), 1)}
(('20', 'sload0'), 1)
sload0
[(('20', 'sload0'), 1), ((115792089237316195423570985008687907853269984665640564039457584007913129639680, 's(3)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_5622 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 6086
6086Instr:<<['JUMPDEST', 'PUSH1 0x0f', 'SLOAD', 'PUSH1 0x10', 'SLOAD', 'PUSH2 0x17d6', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
6086-Stack size: 4 
6086-Equals Mem:<< []>> 
6086-NonEquals Mem: << []>> 
6086-Equals Sto:<< []>> 
6086-NonEquals Sto: << [<2,4>]>> 
6086-Useless: []
6086-Constancy: [(0, 0)]
6086-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<1,3>]}
{1: ((('15', 'sload0'), 1), 0), 3: ((('16', 'sload1'), 1), 1)}
Storage order: [(('15', 'sload0'), 1), (('16', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('15', 'sload0'), 1)
sload0
[(('16', 'sload1'), 1), (('15', 'sload0'), 1)]
(('16', 'sload1'), 1)
sload1
[(('16', 'sload1'), 1), (('15', 'sload0'), 1)]
{1: ((('15', 'sload0'), 1), 0), 3: ((('16', 'sload1'), 1), 1)}
(('15', 'sload0'), 1)
sload0
[(('16', 'sload1'), 1), (('15', 'sload0'), 1)]
(('16', 'sload1'), 1)
sload1
[(('16', 'sload1'), 1), (('15', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_6086 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8555
8555Instr:<<['PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'OR', 'SWAP1', 'SSTORE', 'PUSH2 0x2185', 'PUSH2 0x2655', 'JUMP']>> 
8555-Stack size: 11 
8555-Equals Mem:<< []>> 
8555-NonEquals Mem: << []>> 
8555-Equals Sto:<< [<2,13>]>> 
8555-NonEquals Sto: << []>> 
8555-Useless: []
8555-Constancy: [(6, 0)]
8555-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,13>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('5', 'sload0'), 1), 0), 13: ((('5', 's(2)', 'sstore'), 2), 1)}
Storage order: [(('5', 'sload0'), 1), (('5', 's(2)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('5', 'sload0'), 1)
sload0
[(('5', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(6)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(4)', 'or'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('5', 'sload0'), 1), 0), 13: ((('5', 's(2)', 'sstore'), 2), 1)}
(('5', 'sload0'), 1)
sload0
[(('5', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(6)', 'and'), 2), (('1461501637330902918203684832716283019655932542976', 's(4)', 'or'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8555 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8581
8581Instr:<<['JUMPDEST', 'PUSH1 0x05', 'DUP1', 'SLOAD', 'PUSH1 0xff', 'PUSH1 0xa0', 'SHL', 'NOT', 'AND', 'SWAP1', 'SSTORE']>> 
8581-Stack size: 11 
8581-Equals Mem:<< []>> 
8581-NonEquals Mem: << []>> 
8581-Equals Sto:<< [<3,10>]>> 
8581-NonEquals Sto: << []>> 
8581-Useless: []
8581-Constancy: [(6, 0)]
8581-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [<2,9>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '255', 'shl')
{2: ((('5', 'sload0'), 1), 0), 9: ((('5', 's(0)', 'sstore'), 2), 1)}
Storage order: [(('5', 'sload0'), 1), (('5', 's(0)', 'sstore'), 2)]
Storage dep: [(0, 1)]
Storage dep simplified: [(0, 1)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('5', 'sload0'), 1)
sload0
[(('5', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(2)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{2: ((('5', 'sload0'), 1), 0), 9: ((('5', 's(0)', 'sstore'), 2), 1)}
(('5', 'sload0'), 1)
sload0
[(('5', 'sload0'), 1), ((115792089237316195423570984636004990333889740523700931696805413995650331181055, 's(2)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8581 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8665
8665Instr:<<['POP', 'PUSH1 0x0d', 'SLOAD', 'PUSH1 0x0e', 'SLOAD', 'PUSH2 0x21e9', 'SWAP2', 'SWAP1', 'PUSH2 0x2f38', 'JUMP']>> 
8665-Stack size: 12 
8665-Equals Mem:<< []>> 
8665-NonEquals Mem: << []>> 
8665-Equals Sto:<< []>> 
8665-NonEquals Sto: << [<2,4>]>> 
8665-Useless: []
8665-Constancy: [(7, 0)]
8665-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<2,4>]}
{1: ((('13', 'sload0'), 1), 0), 3: ((('14', 'sload1'), 1), 1)}
Storage order: [(('13', 'sload0'), 1), (('14', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('13', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('13', 'sload0'), 1)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('13', 'sload0'), 1)]
{1: ((('13', 'sload0'), 1), 0), 3: ((('14', 'sload1'), 1), 1)}
(('13', 'sload0'), 1)
sload0
[(('14', 'sload1'), 1), (('13', 'sload0'), 1)]
(('14', 'sload1'), 1)
sload1
[(('14', 'sload1'), 1), (('13', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8665 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8895
8895Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1b', 'SLOAD', 'DUP3', 'PUSH2 0x22d2', 'SWAP2', 'SWAP1', 'PUSH2 0x2f02', 'JUMP']>> 
8895-Stack size: 14 
8895-Equals Mem:<< []>> 
8895-NonEquals Mem: << []>> 
8895-Equals Sto:<< []>> 
8895-NonEquals Sto: << [<4,6>]>> 
8895-Useless: []
8895-Constancy: [(1, 0), (9, 0)]
8895-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,5>]}
{3: ((('25', 'sload0'), 1), 0), 5: ((('27', 'sload1'), 1), 1)}
Storage order: [(('25', 'sload0'), 1), (('27', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('25', 'sload0'), 1)
sload0
[(('27', 'sload1'), 1), (('25', 'sload0'), 1)]
(('27', 'sload1'), 1)
sload1
[(('27', 'sload1'), 1), (('25', 'sload0'), 1)]
{3: ((('25', 'sload0'), 1), 0), 5: ((('27', 'sload1'), 1), 1)}
(('25', 'sload0'), 1)
sload0
[(('27', 'sload1'), 1), (('25', 'sload0'), 1)]
(('27', 'sload1'), 1)
sload1
[(('27', 'sload1'), 1), (('25', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8895 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8940
8940Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1c', 'SLOAD', 'PUSH2 0x2301', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
8940-Stack size: 17 
8940-Equals Mem:<< []>> 
8940-NonEquals Mem: << []>> 
8940-Equals Sto:<< []>> 
8940-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
8940-Useless: []
8940-Constancy: [(1, 0), (12, 0)]
8940-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('25', 'sload0'), 1), 1), 7: ((('28', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('25', 'sload0'), 1), (('28', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('25', 'sload0'), 1)
sload0
[(('28', 'sload1'), 1), (('25', 'sload0'), 1)]
(('28', 'sload1'), 1)
sload1
[(('28', 'sload1'), 1), (('25', 'sload0'), 1)]
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('25', 'sload0'), 1), 1), 7: ((('28', 'sload1'), 1), 2)}
(('25', 'sload0'), 1)
sload0
[(('28', 'sload1'), 1), (('25', 'sload0'), 1)]
(('28', 'sload1'), 1)
sload1
[(('28', 'sload1'), 1), (('25', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8940 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 8987
8987Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x19', 'SLOAD', 'PUSH1 0x1a', 'SLOAD', 'PUSH2 0x2330', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
8987-Stack size: 17 
8987-Equals Mem:<< []>> 
8987-NonEquals Mem: << []>> 
8987-Equals Sto:<< []>> 
8987-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
8987-Useless: []
8987-Constancy: [(1, 0), (12, 0)]
8987-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('25', 'sload0'), 1), 1), 7: ((('26', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('25', 'sload0'), 1), (('26', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('25', 'sload0'), 1)
sload0
[(('26', 'sload1'), 1), (('25', 'sload0'), 1)]
(('26', 'sload1'), 1)
sload1
[(('26', 'sload1'), 1), (('25', 'sload0'), 1)]
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('25', 'sload0'), 1), 1), 7: ((('26', 'sload1'), 1), 2)}
(('25', 'sload0'), 1)
sload0
[(('26', 'sload1'), 1), (('25', 'sload0'), 1)]
(('26', 'sload1'), 1)
sload1
[(('26', 'sload1'), 1), (('25', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_8987 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9116
9116Instr:<<['JUMPDEST', 'SWAP1', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x17', 'SLOAD', 'DUP3', 'PUSH2 0x23af', 'SWAP2', 'SWAP1', 'PUSH2 0x2f02', 'JUMP']>> 
9116-Stack size: 14 
9116-Equals Mem:<< []>> 
9116-NonEquals Mem: << []>> 
9116-Equals Sto:<< []>> 
9116-NonEquals Sto: << [<4,6>]>> 
9116-Useless: []
9116-Constancy: [(1, 0), (9, 0)]
9116-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<3,5>]}
{3: ((('21', 'sload0'), 1), 0), 5: ((('23', 'sload1'), 1), 1)}
Storage order: [(('21', 'sload0'), 1), (('23', 'sload1'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('21', 'sload0'), 1)
sload0
[(('23', 'sload1'), 1), (('21', 'sload0'), 1)]
(('23', 'sload1'), 1)
sload1
[(('23', 'sload1'), 1), (('21', 'sload0'), 1)]
{3: ((('21', 'sload0'), 1), 0), 5: ((('23', 'sload1'), 1), 1)}
(('21', 'sload0'), 1)
sload0
[(('23', 'sload1'), 1), (('21', 'sload0'), 1)]
(('23', 'sload1'), 1)
sload1
[(('23', 'sload1'), 1), (('21', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9116 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9161
9161Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x18', 'SLOAD', 'PUSH2 0x23de', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
9161-Stack size: 17 
9161-Equals Mem:<< []>> 
9161-NonEquals Mem: << []>> 
9161-Equals Sto:<< []>> 
9161-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
9161-Useless: []
9161-Constancy: [(1, 0), (12, 0)]
9161-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('21', 'sload0'), 1), 1), 7: ((('24', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('21', 'sload0'), 1), (('24', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('21', 'sload0'), 1)
sload0
[(('24', 'sload1'), 1), (('21', 'sload0'), 1)]
(('24', 'sload1'), 1)
sload1
[(('24', 'sload1'), 1), (('21', 'sload0'), 1)]
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('21', 'sload0'), 1), 1), 7: ((('24', 'sload1'), 1), 2)}
(('21', 'sload0'), 1)
sload0
[(('24', 'sload1'), 1), (('21', 'sload0'), 1)]
(('24', 'sload1'), 1)
sload1
[(('24', 'sload1'), 1), (('21', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9161 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 9208
9208Instr:<<['JUMPDEST', 'SWAP1', 'SWAP2', 'SSTORE', 'POP', 'POP', 'PUSH1 0x15', 'SLOAD', 'PUSH1 0x16', 'SLOAD', 'PUSH2 0x240d', 'SWAP1', 'DUP4', 'PUSH2 0x2f02', 'JUMP']>> 
9208-Stack size: 17 
9208-Equals Mem:<< []>> 
9208-NonEquals Mem: << []>> 
9208-Equals Sto:<< []>> 
9208-NonEquals Sto: << [<7,9>, <3,7>, <3,9>]>> 
9208-Useless: []
9208-Constancy: [(1, 0), (12, 0)]
9208-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': []}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [], 'storage_deps_eqs': [], 'storage_deps_noneqs': [<6,8>, <2,6>, <2,8>]}
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('21', 'sload0'), 1), 1), 7: ((('22', 'sload1'), 1), 2)}
Storage order: [(('s(2)', 's(4)', 'sstore'), 2), (('21', 'sload0'), 1), (('22', 'sload1'), 1)]
Storage dep: [(0, 2), (0, 1)]
Storage dep simplified: [(0, 1), (0, 2)]
Memory order: []
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('21', 'sload0'), 1)
sload0
[(('22', 'sload1'), 1), (('21', 'sload0'), 1)]
(('22', 'sload1'), 1)
sload1
[(('22', 'sload1'), 1), (('21', 'sload0'), 1)]
{2: ((('s(2)', 's(4)', 'sstore'), 2), 0), 5: ((('21', 'sload0'), 1), 1), 7: ((('22', 'sload1'), 1), 2)}
(('21', 'sload0'), 1)
sload0
[(('22', 'sload1'), 1), (('21', 'sload0'), 1)]
(('22', 'sload1'), 1)
sload1
[(('22', 'sload1'), 1), (('21', 'sload0'), 1)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_DOPE_9208 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 10134
10134Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x27bb', 'JUMP']>> 
10134-Stack size: 25 
10134-Equals Mem:<< []>> 
10134-NonEquals Mem: << []>> 
10134-Equals Sto:<< []>> 
10134-NonEquals Sto: << []>> 
10134-Useless: [16, 22]
10134-Constancy: [(20, 0), (10, 0)]
10134-ContextAliasing: []

Block: 10315
10315Instr:<<['PUSH1 0x40', 'MLOAD', 'SWAP2', 'POP', 'PUSH1 0x1f', 'NOT', 'PUSH1 0x3f', 'RETURNDATASIZE', 'ADD', 'AND', 'DUP3', 'ADD', 'PUSH1 0x40', 'MSTORE', 'RETURNDATASIZE', 'DUP3', 'MSTORE', 'RETURNDATASIZE', 'PUSH0', 'PUSH1 0x20', 'DUP5', 'ADD', 'RETURNDATACOPY', 'PUSH2 0x2870', 'JUMP']>> 
10315-Stack size: 25 
10315-Equals Mem:<< []>> 
10315-NonEquals Mem: << []>> 
10315-Equals Sto:<< []>> 
10315-NonEquals Sto: << []>> 
10315-Useless: [16, 22]
10315-Constancy: [(20, 0)]
10315-ContextAliasing: []

Block: 406
406Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP2', 'DUP3', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP5', 'AND', 'DUP3', 'MSTORE', 'SWAP2', 'SWAP1', 'SWAP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
406-Stack size: 4 
406-Equals Mem:<< [<12,27>, <17,31>]>> 
406-NonEquals Mem: << [<12,17>, <12,31>, <17,27>, <27,31>]>> 
406-Equals Sto:<< []>> 
406-NonEquals Sto: << []>> 
406-Useless: []
406-Constancy: []
406-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>]}
{'memory_deps_eqs': [<11,26>, <16,30>], 'memory_deps_noneqs': [<11,16>, <11,30>, <16,26>, <26,30>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{32: ((('s(3)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(5)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(11)', 'sload0'), 1)
sload0
[(('s(11)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{32: ((('s(3)', 'sload0'), 1), 2)}
(('s(3)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(3)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(2)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x1 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP

Optimized code stored in /tmp/0x00/ERC20_406_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_406_statistics.csv

Estimated initial gas: 2261
Estimated gas optimized: 2211

Estimated initial size in bytes: 42
Estimated size optimized in bytes: 55

Initial number of instructions: 36
Final number of instructions: 30

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_406;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;406;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP;JUMPDEST DUP3 DUP1 SWAP2 POP POP POP DUP2 PUSH1 0x1 DUP3 SWAP3 POP PUSH1 0x20 MSTORE SWAP1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND PUSH1 0x0 PUSH1 0x40 SWAP3 POP MSTORE PUSH1 0x0 KECCAK256 DUP2 SWAP2 POP SLOAD SWAP1 JUMP;2261;42;36;2211;55;30;50;-13;6;True;False;False;False;2.12453332496807;4;2;2100;2100

Block: 239
239Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
239-Stack size: 2 
239-Equals Mem:<< []>> 
239-NonEquals Mem: << [<5,2>]>> 
239-Equals Sto:<< []>> 
239-NonEquals Sto: << []>> 
239-Useless: []
239-Constancy: []
239-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(0)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_239_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_239_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 13
Estimated size optimized in bytes: 13

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_239;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;239;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;33;13;10;33;13;10;0;0;0;True;False;False;False;0.01790504704695195;0;0;0;0

Block: 219
219Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'ISZERO', 'ISZERO', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
219-Stack size: 2 
219-Equals Mem:<< []>> 
219-NonEquals Mem: << [<7,2>]>> 
219-Equals Sto:<< []>> 
219-NonEquals Sto: << []>> 
219-Useless: []
219-Constancy: []
219-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', 's(6)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2), (('s(0)', 'iszero'), 1), (('s(5)', 'iszero'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_219_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_219_statistics.csv

Estimated initial gas: 39
Estimated gas optimized: 39

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 12
Final number of instructions: 12

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_219;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;219;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;39;15;12;39;15;12;0;0;0;True;False;False;False;0.049367786035872996;0;0;0;0

Block: 889
889Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x24', 'DUP1', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH4 0x72657373', 'PUSH1 0xe0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD']>> 
889-Stack size: 9 
889-Equals Mem:<< []>> 
889-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
889-Equals Sto:<< []>> 
889-NonEquals Sto: << []>> 
889-Useless: []
889-Constancy: [(4, 0)]
889-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('224', '1919251315', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '36', 'mstore'), 2), (('s(9)', '31354931781638678487916134672869638484047149969764982831501014746446650500196', 'mstore'), 2), (('s(11)', '51742913093258732729005998692887265601192425265805909375210916622055285719040', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(2)', '+'), 2), (('s(2)', '4', '+'), 2), (('s(2)', '36', '+'), 2), (('s(2)', '68', '+'), 2), (('s(2)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(2)', '+'), 2), (('s(2)', '4', '+'), 2), (('s(2)', '36', '+'), 2), (('s(2)', '68', '+'), 2), (('s(2)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD

Optimized code stored in /tmp/0x00/ERC20_889_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_889_statistics.csv

Estimated initial gas: 93
Estimated gas optimized: 93

Estimated initial size in bytes: 79
Estimated size optimized in bytes: 79

Initial number of instructions: 31
Final number of instructions: 31

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_889;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;889;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xe0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD;93;79;31;93;79;31;0;0;0;True;False;False;False;2.1107594090281054;2;4;0;0

Block: 992
992Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH2 0x7373', 'PUSH1 0xf0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
992-Stack size: 9 
992-Equals Mem:<< []>> 
992-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
992-Equals Sto:<< []>> 
992-NonEquals Sto: << []>> 
992-Useless: []
992-Constancy: [(4, 0)]
992-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('240', '29555', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '34', 'mstore'), 2), (('s(10)', '31354931781638678487916134672869638488806705378895508030211234510262059168357', 'mstore'), 2), (('s(12)', '52219164999525148860834357634456956735281286572158918307284071279203377479680', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_992_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_992_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 82
Estimated size optimized in bytes: 82

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_992;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;992;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a20617070726f766520746f20746865207a65726f206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xf0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;104;82;33;104;82;33;0;0;0;True;False;False;False;2.1208568410365842;2;4;0;0

Block: 1074
1074Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'SWAP5', 'DUP8', 'AND', 'DUP1', 'DUP5', 'MSTORE', 'SWAP5', 'DUP3', 'MSTORE', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'DUP6', 'SWAP1', 'SSTORE', 'SWAP1', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925', 'SWAP2', 'ADD']>> 
1074-Stack size: 9 
1074-Equals Mem:<< [<12,27>, <17,30>]>> 
1074-NonEquals Mem: << [<27,39>, <30,39>, <27,42>, <30,42>, <34,39>, <12,30>, <17,27>, <42,34>, <42,39>, <12,39>, <12,42>, <17,39>, <27,30>, <17,42>, <21,39>, <12,17>, <42,21>]>> 
1074-Equals Sto:<< []>> 
1074-NonEquals Sto: << []>> 
1074-Useless: []
1074-Constancy: [(4, 0)]
1074-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>]}
{'memory_deps_eqs': [<11,26>, <16,29>], 'memory_deps_noneqs': [<26,38>, <29,38>, <26,41>, <29,41>, <33,38>, <11,29>, <16,26>, <33,41>, <38,41>, <11,38>, <11,41>, <16,38>, <26,29>, <16,41>, <20,38>, <11,16>, <20,41>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(22)', 's(2)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(8)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(8)', '+'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{36: ((('s(22)', 's(2)', 'sstore'), 2), 2)}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(8)', '+'), 2), (('1461501637330902918203684832716283019655932542975', 's(0)', 'and'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD

Optimized code stored in /tmp/0x00/ERC20_1074_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1074_statistics.csv

Estimated initial gas: 5186
Estimated gas optimized: 5186

Estimated initial size in bytes: 84
Estimated size optimized in bytes: 84

Initial number of instructions: 46
Final number of instructions: 46

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1074;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1074;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 SWAP2 ADD;5186;84;46;5186;84;46;0;0;0;True;False;False;False;2.2706488099647686;4;2;5000;5000

Block: 463
463Instr:<<['JUMPDEST', 'DUP1', 'PUSH1 0x1f', 'ADD', 'PUSH1 0x20', 'DUP1', 'SWAP2', 'DIV', 'MUL', 'PUSH1 0x20', 'ADD', 'PUSH1 0x40', 'MLOAD', 'SWAP1', 'DUP2', 'ADD', 'PUSH1 0x40', 'MSTORE', 'DUP1', 'SWAP3', 'SWAP2', 'SWAP1', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'DUP3', 'DUP1', 'SLOAD', 'PUSH2 0x01fb', 'SWAP1', 'PUSH2 0x07c1', 'JUMP']>> 
463-Stack size: 5 
463-Equals Mem:<< [<17,12>]>> 
463-NonEquals Mem: << [<17,24>, <24,12>]>> 
463-Equals Sto:<< []>> 
463-NonEquals Sto: << []>> 
463-Useless: []
463-Constancy: [(2, 96)]
463-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>]}
{'memory_deps_eqs': [<11,16>], 'memory_deps_noneqs': [<16,23>, <11,23>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{28: ((('s(0)', 'sload0'), 1), 0)}
Storage order: [(('s(0)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('64', 's(12)', 'mstore'), 2), (('s(10)', 's(1)', 'mstore'), 2)]
Memory dep: [(0, 1)]
Memory dep simplified: [(0, 1)]
********************IT*********************
(('s(0)', 'sload0'), 1)
sload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
(('64', 'mload0'), 1)
mload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
{28: ((('s(0)', 'sload0'), 1), 0)}
(('s(0)', 'sload0'), 1)
sload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
(('64', 'mload0'), 1)
mload0
[(('s(0)', 'sload0'), 1), (('64', 'mload0'), 1), (('32', 's(10)', '+'), 2), (('31', 's(1)', '+'), 2), (('s(17)', '32', '/'), 2), (('s(16)', '32', '*'), 2), (('32', 's(15)', '+'), 2), (('s(10)', 's(14)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP

Optimized sequence (basic block per line):
JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP

Optimized code stored in /tmp/0x00/ERC20_463_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_463_statistics.csv

Estimated initial gas: 2206
Estimated gas optimized: 2206

Estimated initial size in bytes: 44
Estimated size optimized in bytes: 44

Initial number of instructions: 34
Final number of instructions: 34

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_463;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;463;2;True;False;False;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP;JUMPDEST DUP1 PUSH1 0x1f ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x01fb SWAP1 PUSH2 0x07c1 JUMP;2206;44;34;2206;44;34;0;0;0;True;False;False;False;2.1898554529761896;0;1;2100;2100

Block: 2016
2016Instr:<<['PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x22', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2016-Stack size: 8 
2016-Equals Mem:<< []>> 
2016-NonEquals Mem: << [<4,7>]>> 
2016-Equals Sto:<< []>> 
2016-NonEquals Sto: << []>> 
2016-Useless: []
2016-Constancy: []
2016-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '34', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_2016 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 1712
1712Instr:<<['JUMPDEST', 'PUSH0', 'PUSH1 0x20', 'DUP1', 'DUP4', 'MSTORE', 'DUP4', 'MLOAD', 'DUP1', 'DUP3', 'DUP6', 'ADD', 'MSTORE', 'PUSH0']>> 
1712-Stack size: 4 
1712-Equals Mem:<< []>> 
1712-NonEquals Mem: << [<12,7>, <5,7>]>> 
1712-Equals Sto:<< []>> 
1712-NonEquals Sto: << []>> 
1712-Useless: []
1712-Constancy: []
1712-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<6,11>, <4,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(1)', '32', 'mstore'), 2), (('s(0)', 'mload0'), 1), (('s(7)', 's(6)', 'mstore'), 2)]
Memory dep: [(0, 2)]
Memory dep simplified: [(0, 2)]
********************IT*********************
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
{}
(('s(0)', 'mload0'), 1)
mload0
[(('s(0)', 'mload0'), 1), (('s(1)', '32', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized sequence (basic block per line):
JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0

Optimized code stored in /tmp/0x00/ERC20_1712_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1712_statistics.csv

Estimated initial gas: 38
Estimated gas optimized: 38

Estimated initial size in bytes: 15
Estimated size optimized in bytes: 15

Initial number of instructions: 14
Final number of instructions: 14

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1712;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1712;2;False;True;True;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0;38;15;14;38;15;14;0;0;0;True;False;False;False;0.1447114939801395;0;1;0;0

Block: 1736
1736Instr:<<['DUP6', 'DUP2', 'ADD', 'DUP4', 'ADD', 'MLOAD', 'DUP6', 'DUP3', 'ADD', 'PUSH1 0x40', 'ADD', 'MSTORE', 'DUP3', 'ADD', 'PUSH2 0x06bf', 'JUMP']>> 
1736-Stack size: 8 
1736-Equals Mem:<< []>> 
1736-NonEquals Mem: << [<11,5>]>> 
1736-Equals Sto:<< []>> 
1736-NonEquals Sto: << []>> 
1736-Useless: []
1736-Constancy: [(2, 32), (3, 0)]
1736-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<5,11>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('s(10)', 'mload0'), 1), (('s(8)', 's(12)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
{}
(('s(10)', 'mload0'), 1)
mload0
[(('s(3)', 's(5)', '+'), 2), (('s(5)', 's(1)', '+'), 2), (('64', 's(9)', '+'), 2), (('s(5)', 's(0)', '+'), 2), (('s(3)', 's(11)', '+'), 2), (('s(10)', 'mload0'), 1)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP

Optimized sequence (basic block per line):
DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP

Optimized code stored in /tmp/0x00/ERC20_1736_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1736_statistics.csv

Estimated initial gas: 53
Estimated gas optimized: 53

Estimated initial size in bytes: 19
Estimated size optimized in bytes: 19

Initial number of instructions: 16
Final number of instructions: 16

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1736;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1736;2;False;True;True;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP;DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x06bf JUMP;53;19;16;53;19;16;0;0;0;True;False;False;False;0.6573080769740045;0;0;0;0

Block: 320
320Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'SWAP1', 'KECCAK256', 'SLOAD', 'SWAP1', 'JUMP']>> 
320-Stack size: 3 
320-Equals Mem:<< []>> 
320-NonEquals Mem: << [<10,14>]>> 
320-Equals Sto:<< []>> 
320-NonEquals Sto: << []>> 
320-Useless: []
320-Constancy: []
320-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<9,13>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{17: ((('s(2)', 'sload0'), 1), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(4)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
{17: ((('s(2)', 'sload0'), 1), 1)}
(('s(2)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2560'), 2), (('s(2)', 'sload0'), 1), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2)]
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_320 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 717
717Instr:<<['JUMPDEST', 'CALLER', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x01', 'PUSH1 0x20', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP4', 'KECCAK256', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP8', 'AND', 'DUP5', 'MSTORE', 'SWAP1', 'SWAP2', 'MSTORE', 'DUP2', 'KECCAK256', 'SLOAD', 'SWAP1', 'SWAP2', 'PUSH2 0x025c', 'SWAP2', 'DUP6', 'SWAP1', 'PUSH2 0x02be', 'SWAP1', 'DUP7', 'PUSH2 0x064b', 'JUMP']>> 
717-Stack size: 4 
717-Equals Mem:<< [<5,23>, <10,26>]>> 
717-NonEquals Mem: << [<5,10>, <5,26>, <10,23>, <23,26>]>> 
717-Equals Sto:<< []>> 
717-NonEquals Sto: << []>> 
717-Useless: []
717-Constancy: []
717-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>]}
{'memory_deps_eqs': [<4,22>, <9,25>], 'memory_deps_noneqs': [<4,9>, <4,25>, <9,22>, <22,25>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{28: ((('s(10)', 'sload0'), 1), 2)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(12)', 'mstore'), 2), (('32', '1', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('s(17)', 'sload0'), 1)
sload0
[(('s(17)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{28: ((('s(10)', 'sload0'), 1), 2)}
(('s(10)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(10)', 'sload0'), 1), (('caller', 'caller'), 0), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP

Optimized sequence (basic block per line):
JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP

Optimized code stored in /tmp/0x00/ERC20_717_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_717_statistics.csv

Estimated initial gas: 2275
Estimated gas optimized: 2275

Estimated initial size in bytes: 53
Estimated size optimized in bytes: 53

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_717;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;717;2;True;False;False;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP;JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x025c SWAP2 DUP6 SWAP1 PUSH2 0x02be SWAP1 DUP7 PUSH2 0x064b JUMP;2275;53;41;2275;53;41;0;0;0;True;False;False;False;2.1757686809869483;4;2;2100;2100

Block: 272
272Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'PUSH1 0x12', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'ADD', 'PUSH2 0x00bf', 'JUMP']>> 
272-Stack size: 1 
272-Equals Mem:<< []>> 
272-NonEquals Mem: << [<5,2>]>> 
272-Equals Sto:<< []>> 
272-NonEquals Sto: << []>> 
272-Useless: []
272-Constancy: []
272-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,4>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '18', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('32', 's(3)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP

Optimized code stored in /tmp/0x00/ERC20_272_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_272_statistics.csv

Estimated initial gas: 33
Estimated gas optimized: 33

Estimated initial size in bytes: 14
Estimated size optimized in bytes: 14

Initial number of instructions: 10
Final number of instructions: 10

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_272;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;272;2;False;True;True;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x00bf JUMP;JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x00bf JUMP;33;14;10;33;14;10;0;0;0;True;False;False;False;0.017898592981509864;0;0;0;0

Block: 1186
1186Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x25', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH5 0x6472657373', 'PUSH1 0xd8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1186-Stack size: 9 
1186-Equals Mem:<< []>> 
1186-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1186-Equals Sto:<< []>> 
1186-NonEquals Sto: << []>> 
1186-Useless: []
1186-Constancy: [(4, 0)]
1186-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('216', '431415980915', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '37', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859107492772550336241160036866987736981860', 'mstore'), 2), (('s(12)', '45433405612597180762055095701412804886438245671210399661410036396145969725440', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_1186_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1186_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1186;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1186;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e736665722066726f6d20746865207a65726f206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xd8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.124692370009143;2;4;0;0

Block: 1286
1286Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x23', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH3 0x657373', 'PUSH1 0xe8', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1286-Stack size: 9 
1286-Equals Mem:<< []>> 
1286-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
1286-Equals Sto:<< []>> 
1286-NonEquals Sto: << []>> 
1286-Useless: []
1286-Constancy: [(4, 0)]
1286-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('232', '6648691', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '35', 'mstore'), 2), (('s(10)', '31354931781638678607228669297131712859126084785867252355217498662940140921970', 'mstore'), 2), (('s(12)', '45887578820189300338443374388718498632482616163288499555830078344056365121536', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_1286_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1286_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 83
Estimated size optimized in bytes: 83

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1286;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1286;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303a207472616e7366657220746f20746865207a65726f2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xe8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x03c8 JUMP;104;83;33;104;83;33;0;0;0;True;False;False;False;2.1232722720014863;2;4;0;0

Block: 1429
1429Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP1', 'DUP6', 'AND', 'PUSH0', 'SWAP1', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x40', 'DUP1', 'DUP3', 'KECCAK256', 'SWAP4', 'SWAP1', 'SWAP4', 'SSTORE', 'SWAP1', 'DUP5', 'AND', 'DUP2', 'MSTORE', 'KECCAK256', 'SLOAD', 'PUSH2 0x05c3', 'SWAP1', 'DUP3', 'PUSH2 0x064b', 'JUMP']>> 
1429-Stack size: 10 
1429-Equals Mem:<< [<12,29>]>> 
1429-NonEquals Mem: << [<12,16>, <16,29>]>> 
1429-Equals Sto:<< [<24,31>]>> 
1429-NonEquals Sto: << []>> 
1429-Useless: []
1429-Constancy: [(5, 0)]
1429-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>]}
{'memory_deps_eqs': [<11,28>], 'memory_deps_noneqs': [<11,15>, <15,28>], 'storage_deps_eqs': [<23,30>], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
[OPT]: Replaced sload by its value
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(12)', 's(3)', 'sstore'), 2), (('0', '64', 'keccak2561'), 2)]
Storage dep: []
Storage dep simplified: []
[OPT]: Removed mstore mstore with KECCAK
Memory order: [(('0', 's(9)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{23: ((('s(12)', 's(3)', 'sstore'), 2), 1), 30: ((('s(7)', 'sload0'), 1), 3)}
(('s(7)', 'sload0'), 1)
sload0
[(('0', '64', 'keccak2561'), 2), (('s(7)', 'sload0'), 1), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('0', '64', 'keccak2560'), 2), (('s(1)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x05c3 SWAP1 DUP3 PUSH2 0x064b JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x5c3 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x64b JUMP

Optimized code stored in /tmp/0x00/ERC20_1429_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1429_statistics.csv

Estimated initial gas: 5261
Estimated gas optimized: 5122

Estimated initial size in bytes: 46
Estimated size optimized in bytes: 60

Initial number of instructions: 37
Final number of instructions: 32

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1429;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1429;2;True;True;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x05c3 SWAP1 DUP3 PUSH2 0x064b JUMP;JUMPDEST PUSH20 0xffffffffffffffffffffffffffffffffffffffff DUP5 AND PUSH1 0x0 PUSH1 0x20 MSTORE SWAP1 PUSH1 0x0 DUP1 DUP1 SWAP7 SWAP5 SWAP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP2 SWAP1 SSTORE PUSH2 0x5c3 SWAP2 SWAP5 POP DUP5 SWAP3 SWAP5 PUSH2 0x64b JUMP;5261;46;37;5122;60;32;139;-14;5;True;True;False;False;2.1556009689811617;4;2;5100;5000

Block: 1634
1634Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x1b', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x03c8', 'JUMP']>> 
1634-Stack size: 13 
1634-Equals Mem:<< []>> 
1634-NonEquals Mem: << [<16,1>, <11,1>, <21,1>, <6,1>]>> 
1634-Equals Sto:<< []>> 
1634-NonEquals Sto: << []>> 
1634-Useless: []
1634-Constancy: [(1, 0)]
1634-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,16>, <1,11>, <1,21>, <1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '27', 'mstore'), 2), (('s(10)', '37714057306925736537727337196910129575336924242351790113041164404516917870592', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x03c8 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x3c8 JUMP

Optimized code stored in /tmp/0x00/ERC20_1634_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1634_statistics.csv

Estimated initial gas: 83
Estimated gas optimized: 77

Estimated initial size in bytes: 71
Estimated size optimized in bytes: 97

Initial number of instructions: 26
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1634;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1634;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x03c8 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH1 0x20 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x4 ADD MSTORE PUSH1 0x1b PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH2 0x3c8 JUMP;83;71;26;77;97;24;6;-26;2;True;False;False;False;2.0940423929714598;1;3;0;0

Block: 1475
1475Instr:<<['JUMPDEST', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'DUP4', 'DUP2', 'AND', 'PUSH0', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'DUP2', 'DUP2', 'MSTORE', 'PUSH1 0x40', 'SWAP2', 'DUP3', 'SWAP1', 'KECCAK256', 'SWAP5', 'SWAP1', 'SWAP5', 'SSTORE', 'MLOAD', 'DUP5', 'DUP2', 'MSTORE', 'SWAP1', 'SWAP3', 'SWAP2', 'DUP7', 'AND', 'SWAP2', 'PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef', 'SWAP2', 'ADD', 'PUSH2 0x0486', 'JUMP']>> 
1475-Stack size: 10 
1475-Equals Mem:<< []>> 
1475-NonEquals Mem: << [<12,26>, <12,29>, <16,26>, <16,29>, <21,26>, <29,21>, <29,26>, <12,16>]>> 
1475-Equals Sto:<< []>> 
1475-NonEquals Sto: << []>> 
1475-Useless: []
1475-Constancy: [(5, 0)]
1475-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<11,25>, <11,28>, <15,25>, <15,28>, <20,25>, <20,28>, <25,28>, <11,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
Storage order: [(('0', '64', 'keccak2560'), 2), (('s(19)', 's(3)', 'sstore'), 2)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', 's(13)', 'mstore'), 2), (('32', '0', 'mstore'), 2), (('0', '64', 'keccak2560'), 2), (('64', 'mload0'), 1), (('s(9)', 's(2)', 'mstore'), 2)]
Memory dep: [(1, 2), (0, 2)]
Memory dep simplified: [(1, 2), (0, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('s(9)', '32', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
SFS with rule: isolated_block_0_0_input.json
{24: ((('s(19)', 's(3)', 'sstore'), 2), 1)}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('s(9)', '32', '+'), 2), (('s(0)', '1461501637330902918203684832716283019655932542975', 'and'), 2), (('1461501637330902918203684832716283019655932542975', 's(1)', 'and'), 2), (('0', '64', 'keccak2560'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP

Optimized code stored in /tmp/0x00/ERC20_1475_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1475_statistics.csv

Estimated initial gas: 5149
Estimated gas optimized: 5149

Estimated initial size in bytes: 80
Estimated size optimized in bytes: 80

Initial number of instructions: 41
Final number of instructions: 41

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1475;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1475;2;True;False;False;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP;JUMPDEST PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef SWAP2 ADD PUSH2 0x0486 JUMP;5149;80;41;5149;80;41;0;0;0;True;False;False;False;2.2391090340097435;2;2;5000;5000

Block: 1566
1566Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x04', 'ADD', 'PUSH2 0x03c8', 'SWAP2', 'SWAP1', 'PUSH2 0x06b0', 'JUMP']>> 
1566-Stack size: 14 
1566-Equals Mem:<< []>> 
1566-NonEquals Mem: << [<6,1>]>> 
1566-Equals Sto:<< []>> 
1566-NonEquals Sto: << []>> 
1566-Useless: []
1566-Constancy: [(1, 0)]
1566-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('4', 's(5)', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x03c8 SWAP2 SWAP1 PUSH2 0x06b0 JUMP

Optimized sequence (basic block per line):
PUSH2 0x3c8 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x6b0 JUMP

Optimized code stored in /tmp/0x00/ERC20_1566_optimized.txt
Optimality results stored in /tmp/0x00/ERC20_1566_statistics.csv

Estimated initial gas: 47
Estimated gas optimized: 41

Estimated initial size in bytes: 24
Estimated size optimized in bytes: 51

Initial number of instructions: 14
Final number of instructions: 12

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_1566;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;ERC20;1566;2;False;True;True;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x04 ADD PUSH2 0x03c8 SWAP2 SWAP1 PUSH2 0x06b0 JUMP;PUSH2 0x3c8 SWAP1 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 MLOAD MSTORE PUSH1 0x40 MLOAD PUSH1 0x4 ADD PUSH2 0x6b0 JUMP;47;24;14;41;51;12;6;-27;2;True;False;False;False;0.0703561240225099;1;0;0;0

Block: 2041
2041Instr:<<['JUMPDEST', 'PUSH4 0x4e487b71', 'PUSH1 0xe0', 'SHL', 'PUSH0', 'MSTORE', 'PUSH1 0x11', 'PUSH1 0x04', 'MSTORE', 'PUSH1 0x24', 'PUSH0', 'REVERT']>> 
2041-Stack size: 18 
2041-Equals Mem:<< []>> 
2041-NonEquals Mem: << [<5,8>]>> 
2041-Equals Sto:<< []>> 
2041-NonEquals Sto: << []>> 
2041-Useless: []
2041-Constancy: [(5, 0), (6, 0)]
2041-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<4,7>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('224', '1313373041', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('0', '35408467139433450592217433187231851964531694900788300625387963629091585785856', 'mstore'), 2), (('4', '17', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
********************IT*********************
SFS with rule: isolated_block_0_0_input.json
{}
BLOCK 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_ERC20_2041 FILTERED WITH EQUAL SFS WITH AND WITHOUT HEAP ANALYSIS INFORMATION
Block: 191
191Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'RETURN']>> 
191-Stack size: 2 
191-Equals Mem:<< []>> 
191-NonEquals Mem: << []>> 
191-Equals Sto:<< []>> 
191-NonEquals Sto: << []>> 
191-Useless: []
191-Constancy: []
191-ContextAliasing: []

Block: 968
968Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
968-Stack size: 10 
968-Equals Mem:<< []>> 
968-NonEquals Mem: << []>> 
968-Equals Sto:<< []>> 
968-NonEquals Sto: << []>> 
968-Useless: []
968-Constancy: []
968-ContextAliasing: []

Block: 310
310Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
310-Stack size: 3 
310-Equals Mem:<< []>> 
310-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
310-Equals Sto:<< []>> 
310-NonEquals Sto: << []>> 
310-Useless: []
310-Constancy: []
310-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '32', 'mstore'), 2), (('s(10)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x00d3 JUMP

Optimized sequence (basic block per line):
PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH1 0xd3 JUMP

Optimized code stored in /tmp/0x00/Ownable_310_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_310_statistics.csv

Estimated initial gas: 86
Estimated gas optimized: 77

Estimated initial size in bytes: 70
Estimated size optimized in bytes: 96

Initial number of instructions: 27
Final number of instructions: 24

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_Ownable_310;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;Ownable;310;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x00d3 JUMP;PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE ADD PUSH1 0xd3 JUMP;86;70;27;77;96;24;9;-26;3;True;False;False;False;2.1936674040043727;1;3;0;0

Block: 396
396Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x26', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH6 0x646472657373', 'PUSH1 0xd0', 'SHL', 'PUSH1 0x64', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x84', 'ADD', 'PUSH2 0x00d3', 'JUMP']>> 
396-Stack size: 3 
396-Equals Mem:<< []>> 
396-NonEquals Mem: << [<6,1>, <11,1>, <16,1>, <21,1>, <28,1>]>> 
396-Equals Sto:<< []>> 
396-NonEquals Sto: << []>> 
396-Useless: []
396-Constancy: []
396-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,11>, <1,16>, <1,21>, <1,28>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
[RULE]: Evaluate expression ('208', '110382578758515', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(3)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(6)', '32', 'mstore'), 2), (('s(8)', '38', 'mstore'), 2), (('s(10)', '35943731656364841964517558219894961445653631979235167635064085396828900499553', 'mstore'), 2), (('s(12)', '45408759099000846574684193736602357774271237157169010951590501707763511459840', 'mstore'), 2)]
Memory dep: [(4, 5), (3, 5), (2, 5), (1, 5), (3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(4, 5), (3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('132', 's(3)', '+'), 2), (('s(3)', '4', '+'), 2), (('s(3)', '36', '+'), 2), (('s(3)', '68', '+'), 2), (('s(3)', '100', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP

Optimized code stored in /tmp/0x00/Ownable_396_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_396_statistics.csv

Estimated initial gas: 104
Estimated gas optimized: 104

Estimated initial size in bytes: 85
Estimated size optimized in bytes: 85

Initial number of instructions: 33
Final number of instructions: 33

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_Ownable_396;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;Ownable;396;2;True;False;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x00d3 JUMP;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xd0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x00d3 JUMP;104;85;33;104;85;33;0;0;0;True;False;False;False;2.1194460910046473;2;4;0;0

Block: 77
77Instr:<<['JUMPDEST', 'PUSH0', 'SLOAD', 'PUSH1 0x40', 'DUP1', 'MLOAD', 'PUSH1 0x01', 'PUSH1 0x01', 'PUSH1 0xa0', 'SHL', 'SUB', 'SWAP1', 'SWAP3', 'AND', 'DUP3', 'MSTORE', 'MLOAD', 'SWAP1', 'DUP2', 'SWAP1', 'SUB', 'PUSH1 0x20', 'ADD', 'SWAP1', 'RETURN']>> 
77-Stack size: 1 
77-Equals Mem:<< [<5,16>]>> 
77-NonEquals Mem: << [<15,5>, <15,16>]>> 
77-Equals Sto:<< []>> 
77-NonEquals Sto: << []>> 
77-Useless: []
77-Constancy: []
77-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>]}
{'memory_deps_eqs': [<4,15>], 'memory_deps_noneqs': [<4,14>, <14,15>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('160', '1', 'shl')
[RULE]: Evaluate expression ('1461501637330902918203684832716283019655932542976', '1', '-')
{1: ((('0', 'sload0'), 1), 0)}
Storage order: [(('0', 'sload0'), 1)]
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(5)', 's(8)', 'mstore'), 2)]
Memory dep: []
Memory dep simplified: []
[RULE]: Simplification rule type 1: {'id': 'SUB_0', 'opcode': '03', 'disasm': 'SUB', 'inpt_sk': ['s(5)', 's(5)'], 'outpt_sk': ['s(4)'], 'push': False, 'gas': 3, 'commutative': False, 'storage': False, 'size': 1}
[RULE]: Simplification rule type 1: {'id': 'ADD_0', 'opcode': '01', 'disasm': 'ADD', 'inpt_sk': [32, 0], 'outpt_sk': ['s(3)'], 'push': False, 'gas': 3, 'commutative': True, 'storage': False, 'size': 1}
********************IT*********************
(('0', 'sload0'), 1)
sload0
[(('64', 'mload0'), 1), (('s(5)', 's(5)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('s(5)', 's(5)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
SFS with rule: isolated_block_0_0_input.json
MEJORADO: /tmp/gasol_d644a06ed6434ecfa3235b266ad8fc5b/jsons/isolated_block_0_0_input.json --- (6, 5)
{1: ((('0', 'sload0'), 1), 0)}
(('0', 'sload0'), 1)
sload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload0'), 1)
mload0
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
(('64', 'mload1'), 1)
mload1
[(('64', 'mload1'), 1), (('64', 'mload0'), 1), (('s(5)', 's(2)', '-'), 2), (('32', 's(4)', '+'), 2), (('0', 'sload0'), 1), (('s(9)', '1461501637330902918203684832716283019655932542975', 'and'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN

Optimized sequence (basic block per line):
JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN

Optimized code stored in /tmp/0x00/Ownable_77_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_77_statistics.csv

Estimated initial gas: 2166
Estimated gas optimized: 2125

Estimated initial size in bytes: 30
Estimated size optimized in bytes: 34

Initial number of instructions: 25
Final number of instructions: 11

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_Ownable_77;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;Ownable;77;2;False;True;True;JUMPDEST PUSH0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x01 PUSH1 0x01 PUSH1 0xa0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN;JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 SLOAD PUSH20 0xffffffffffffffffffffffffffffffffffffffff AND DUP2 MSTORE RETURN;2166;30;25;2125;34;11;41;-4;14;True;False;False;False;0.132086667988915;4;0;2100;2100

Block: 144
144Instr:<<['PUSH1 0x40', 'MLOAD', 'PUSH3 0x461bcd', 'PUSH1 0xe5', 'SHL', 'DUP2', 'MSTORE', 'PUSH1 0x20', 'PUSH1 0x04', 'DUP3', 'ADD', 'DUP2', 'SWAP1', 'MSTORE', 'PUSH1 0x24', 'DUP3', 'ADD', 'MSTORE', 'PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572', 'PUSH1 0x44', 'DUP3', 'ADD', 'MSTORE', 'PUSH1 0x64', 'ADD']>> 
144-Stack size: 2 
144-Equals Mem:<< []>> 
144-NonEquals Mem: << [<6,1>, <13,1>, <17,1>, <22,1>]>> 
144-Equals Sto:<< []>> 
144-NonEquals Sto: << []>> 
144-Useless: []
144-Constancy: []
144-ContextAliasing: []


ADDITIONAL EXECUTION WITH ALIASING

{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>]}
{'memory_deps_eqs': [], 'memory_deps_noneqs': [<1,6>, <1,13>, <1,17>, <1,22>], 'storage_deps_eqs': [], 'storage_deps_noneqs': []}
[RULE]: Evaluate expression ('229', '4594637', 'shl')
{}
Storage order: []
Storage dep: []
Storage dep simplified: []
Memory order: [(('64', 'mload0'), 1), (('s(2)', '3963877391197344453575983046348115674221700746820753546331534351508065746944', 'mstore'), 2), (('s(5)', '32', 'mstore'), 2), (('s(7)', '32', 'mstore'), 2), (('s(9)', '35943731656364841964516503116990081338611484598491072354577564874054038349170', 'mstore'), 2)]
Memory dep: [(3, 4), (2, 4), (1, 4), (2, 3), (1, 3), (1, 2)]
Memory dep simplified: [(3, 4), (2, 3), (1, 2)]
********************IT*********************
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(2)', '+'), 2), (('s(2)', '4', '+'), 2), (('s(2)', '36', '+'), 2), (('s(2)', '68', '+'), 2)]
SFS with rule: isolated_block_0_0_input.json
{}
(('64', 'mload0'), 1)
mload0
[(('64', 'mload0'), 1), (('100', 's(2)', '+'), 2), (('s(2)', '4', '+'), 2), (('s(2)', '36', '+'), 2), (('s(2)', '68', '+'), 2)]
Optimizing isolated_block_0_0... Timeout:2

Initial sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD

Optimized sequence (basic block per line):
PUSH1 0x40 MLOAD PUSH1 0x64 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP3 PUSH1 0x44 ADD MSTORE ADD

Optimized code stored in /tmp/0x00/Ownable_144_optimized.txt
Optimality results stored in /tmp/0x00/Ownable_144_statistics.csv

Estimated initial gas: 75
Estimated gas optimized: 66

Estimated initial size in bytes: 67
Estimated size optimized in bytes: 93

Initial number of instructions: 25
Final number of instructions: 22

GREENRES: 0x0024563cac90a35b13b5018fcc818222376a1ab0.sol_Ownable_144;0x0024563cac90a35b13b5018fcc818222376a1ab0.sol;Ownable;144;2;True;True;False;PUSH1 0x40 MLOAD PUSH3 0x461bcd PUSH1 0xe5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x04 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD;PUSH1 0x40 MLOAD PUSH1 0x64 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 ADD MSTORE PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572 DUP3 PUSH1 0x44 ADD MSTORE ADD;75;67;25;66;93;22;9;-26;3;True;False;False;False;2.1628141409601085;1;3;0;0

Block: 211
211Instr:<<['JUMPDEST', 'PUSH1 0x40', 'MLOAD', 'DUP1', 'SWAP2', 'SUB', 'SWAP1', 'REVERT']>> 
211-Stack size: 3 
211-Equals Mem:<< []>> 
211-NonEquals Mem: << []>> 
211-Equals Sto:<< []>> 
211-NonEquals Sto: << []>> 
211-Useless: []
211-Constancy: []
211-ContextAliasing: []

